<Type Name="ManipulationDeltaEventArgs" FullName="System.Windows.Input.ManipulationDeltaEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46a0a6359d8694c210dae7198d68c7ffd00aa4af" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69171214" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManipulationDeltaEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationDeltaEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDeltaEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationDeltaEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDeltaEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type ManipulationDeltaEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="99960-101">Dostarcza dane dla <see cref="E:System.Windows.UIElement.ManipulationDelta" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="99960-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99960-102"><xref:System.Windows.Input.ManipulationDeltaEventArgs> Klasa zawiera dane o zmianach w pozycji manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-102">The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class contains data about changes in the position of a manipulation.</span></span> <span data-ttu-id="99960-103">Właściwość zawiera zmiany, które wystąpiły od ostatniego <xref:System.Windows.UIElement.ManipulationDelta> wystąpienia zdarzenia. <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A></span><span class="sxs-lookup"><span data-stu-id="99960-103">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="99960-104"><xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> Właściwość zawiera wszystkie zmiany, które wystąpiły w przypadku bieżącego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-104">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="99960-105">Aby przekształcić obiekt manipulowany, należy użyć jednej z tych właściwości.</span><span class="sxs-lookup"><span data-stu-id="99960-105">You use one of those properties to transform the manipulated object.</span></span>  
  
 <span data-ttu-id="99960-106">Można zakończyć manipulowanie, wywołując <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> metodę lub wymusić manipulowanie przez <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="99960-106">You can end a manipulation by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method or force the manipulation into inertia by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99960-107">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="99960-107">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="99960-108">W przykładzie użyta <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> jest właściwość do przenoszenia, zmiany rozmiaru i <xref:System.Windows.Shapes.Rectangle>obrotu.</span><span class="sxs-lookup"><span data-stu-id="99960-108">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="99960-109">Przykład sprawdza także, czy <xref:System.Windows.UIElement.ManipulationDelta> zdarzenie wystąpiło w czasie bezwładności i czy prostokąt dotyka krawędzi okna.</span><span class="sxs-lookup"><span data-stu-id="99960-109">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="99960-110">Jeśli te przypadki mają wartość true, aplikacja przestanie działać, aby zapobiec wychodzeniu przez prostokąt widocznego obszaru aplikacji.</span><span class="sxs-lookup"><span data-stu-id="99960-110">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="99960-111">Ten przykład jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.</span><span class="sxs-lookup"><span data-stu-id="99960-111">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; bool" Usage="manipulationDeltaEventArgs.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99960-112">Anuluje manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="99960-112">Cancels the manipulation.</span></span></summary>
        <returns><span data-ttu-id="99960-113"><see langword="true" />Jeśli manipulowanie zostało pomyślnie anulowane; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="99960-113"><see langword="true" /> if the manipulation was successfully canceled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99960-114">Jeśli metoda zakończy się pomyślnie, domyślnie <xref:System.Windows.Input.TouchDevice> wysyła poprzednie zdarzenia dotknięcia jako zdarzenia myszy lub przenieś mysz do elementu, a przyszłe zdarzenia manipulowania nie wystąpią.</span><span class="sxs-lookup"><span data-stu-id="99960-114">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down or mouse move events to the element and future manipulation events do not occur.</span></span> <span data-ttu-id="99960-115">Nie można podwyższyć poziomu dotyku do <xref:System.Windows.UIElement.ManipulationCompleted> zdarzeń myszy, jeśli wystąpi zdarzenie w czasie bezwładności.</span><span class="sxs-lookup"><span data-stu-id="99960-115">Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="member this.Complete : unit -&gt; unit" Usage="manipulationDeltaEventArgs.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99960-116">Kończy manipulowanie bez bezwładności.</span><span class="sxs-lookup"><span data-stu-id="99960-116">Completes the manipulation without inertia.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99960-117">Możesz wywołać <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> metodę, aby zakończyć manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="99960-117">You can call the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method to end the manipulation.</span></span> <span data-ttu-id="99960-118">Na przykład gdy obiekt dociera do krawędzi okna, można wywołać <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> , aby uniemożliwić przechodzenie obiektu od ekranu.</span><span class="sxs-lookup"><span data-stu-id="99960-118">For example, when an object reaches the edge of a window, you can call <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> to prevent the object from going off the screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99960-119">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="99960-119">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="99960-120">Przykład sprawdza, czy <xref:System.Windows.UIElement.ManipulationDelta> zdarzenie wystąpiło w czasie bezwładności i czy prostokąt dotyka krawędzi okna.</span><span class="sxs-lookup"><span data-stu-id="99960-120">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="99960-121">Jeśli te przypadki mają wartość true, aplikacja przestanie działać, aby zapobiec wychodzeniu przez prostokąt widocznego obszaru aplikacji.</span><span class="sxs-lookup"><span data-stu-id="99960-121">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="99960-122">Ten przykład jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.</span><span class="sxs-lookup"><span data-stu-id="99960-122">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CumulativeManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta CumulativeManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta CumulativeManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CumulativeManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ CumulativeManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CumulativeManipulation : System.Windows.Input.ManipulationDelta" Usage="System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99960-123">Pobiera skumulowane zmiany bieżącego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-123">Gets the cumulated changes of the current manipulation.</span></span></summary>
        <value><span data-ttu-id="99960-124">Skumulowane zmiany bieżącego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-124">The cumulated changes of the current manipulation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99960-125"><xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> Właściwość zawiera wszystkie zmiany, które wystąpiły w przypadku bieżącego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-125">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="99960-126">Można użyć <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> , aby przekształcić obiekt manipulowany.</span><span class="sxs-lookup"><span data-stu-id="99960-126">You can use <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> to transform the manipulated object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeltaManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta DeltaManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta DeltaManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeltaManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ DeltaManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeltaManipulation : System.Windows.Input.ManipulationDelta" Usage="System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99960-127">Pobiera najnowsze zmiany bieżącego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-127">Gets the most recent changes of the current manipulation.</span></span></summary>
        <value><span data-ttu-id="99960-128">Najnowsze zmiany bieżącego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-128">The most recent changes of the current manipulation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99960-129">Właściwość zawiera zmiany, które wystąpiły od ostatniego <xref:System.Windows.UIElement.ManipulationDelta> wystąpienia zdarzenia. <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A></span><span class="sxs-lookup"><span data-stu-id="99960-129">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="99960-130">Ta właściwość służy do przekształcania manipulowanych obiektów.</span><span class="sxs-lookup"><span data-stu-id="99960-130">You can use this property to transform the manipulated object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99960-131">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="99960-131">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="99960-132">W przykładzie użyta <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> jest właściwość do przenoszenia, zmiany rozmiaru i <xref:System.Windows.Shapes.Rectangle>obrotu.</span><span class="sxs-lookup"><span data-stu-id="99960-132">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="99960-133">Ten przykład jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.</span><span class="sxs-lookup"><span data-stu-id="99960-133">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="manipulationDeltaEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInertial">
      <MemberSignature Language="C#" Value="public bool IsInertial { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInertial" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInertial As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInertial { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInertial : bool" Usage="System.Windows.Input.ManipulationDeltaEventArgs.IsInertial" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99960-134">Pobiera wartość wskazującą, czy <see cref="E:System.Windows.UIElement.ManipulationDelta" /> zdarzenie występuje w czasie bezwładności.</span><span class="sxs-lookup"><span data-stu-id="99960-134">Gets a value that indicates whether the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia.</span></span></summary>
        <value><span data-ttu-id="99960-135"><see langword="true" /><see cref="E:System.Windows.UIElement.ManipulationDelta" /> Jeśli zdarzenie występuje w czasie bezwładności; Jeśli zdarzenie występuje, gdy użytkownik skontaktuje się <see cref="T:System.Windows.UIElement" />z. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="99960-135"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia; <see langword="false" /> if the event occurs while the user has contact with the <see cref="T:System.Windows.UIElement" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99960-136">Za pomocą tej metody można określić, <xref:System.Windows.UIElement.ManipulationDelta> czy zdarzenie występuje w czasie bezwładności lub kiedy użytkownik ma kontakt z elementem, który <xref:System.Windows.UIElement.ManipulationDelta> odbiera zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="99960-136">You can use this method to determine whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurs during inertia or while the user has contact with the element that receives the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99960-137">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="99960-137">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="99960-138">Przykład sprawdza, czy <xref:System.Windows.UIElement.ManipulationDelta> zdarzenie wystąpiło w czasie bezwładności i czy prostokąt dotyka krawędzi okna.</span><span class="sxs-lookup"><span data-stu-id="99960-138">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="99960-139">Jeśli te przypadki mają wartość true, aplikacja przestanie działać, aby zapobiec wychodzeniu przez prostokąt widocznego obszaru aplikacji.</span><span class="sxs-lookup"><span data-stu-id="99960-139">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="99960-140">Ten przykład jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.</span><span class="sxs-lookup"><span data-stu-id="99960-140">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationContainer : System.Windows.IInputElement" Usage="System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99960-141">Pobiera kontener definiujący współrzędne manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-141">Gets the container that defines the coordinates for the manipulation.</span></span></summary>
        <value><span data-ttu-id="99960-142">Kontener, który definiuje współrzędne manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-142">The container that defines the coordinates for the manipulation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point ManipulationOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point ManipulationOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point ManipulationOrigin { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationOrigin : System.Windows.Point" Usage="System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99960-143">Pobiera punkt, z którego pochodzą manipulacje.</span><span class="sxs-lookup"><span data-stu-id="99960-143">Gets the point from which the manipulation originated.</span></span></summary>
        <value><span data-ttu-id="99960-144">Punkt, z którego pochodzą operacje manipulowania.</span><span class="sxs-lookup"><span data-stu-id="99960-144">The point from which the manipulation originated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Manipulators : seq&lt;System.Windows.Input.IManipulator&gt;" Usage="System.Windows.Input.ManipulationDeltaEventArgs.Manipulators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99960-145">Pobiera kolekcję obiektów reprezentujących kontakty dotykowe do manipulacji.</span><span class="sxs-lookup"><span data-stu-id="99960-145">Gets a collection of objects that represents the touch contacts for the manipulation.</span></span></summary>
        <value><span data-ttu-id="99960-146">Kolekcja obiektów, która reprezentuje kontakty dotykowe do manipulacji.</span><span class="sxs-lookup"><span data-stu-id="99960-146">A collection of objects that represents the touch contacts for the manipulation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportBoundaryFeedback">
      <MemberSignature Language="C#" Value="public void ReportBoundaryFeedback (System.Windows.Input.ManipulationDelta unusedManipulation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportBoundaryFeedback(class System.Windows.Input.ManipulationDelta unusedManipulation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportBoundaryFeedback (unusedManipulation As ManipulationDelta)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportBoundaryFeedback(System::Windows::Input::ManipulationDelta ^ unusedManipulation);" />
      <MemberSignature Language="F#" Value="member this.ReportBoundaryFeedback : System.Windows.Input.ManipulationDelta -&gt; unit" Usage="manipulationDeltaEventArgs.ReportBoundaryFeedback unusedManipulation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unusedManipulation" Type="System.Windows.Input.ManipulationDelta" />
      </Parameters>
      <Docs>
        <param name="unusedManipulation"><span data-ttu-id="99960-147">Część manipulowania, która reprezentuje przechodzenie poza granicę.</span><span class="sxs-lookup"><span data-stu-id="99960-147">The portion of the manipulation that represents moving beyond the boundary.</span></span></param>
        <summary><span data-ttu-id="99960-148">Określa, że manipulacja wykracza poza pewne granice.</span><span class="sxs-lookup"><span data-stu-id="99960-148">Specifies that the manipulation has gone beyond certain boundaries.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99960-149"><xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> Użyj metody, aby wskazać, że element został przeniesiony poza określoną granicę.</span><span class="sxs-lookup"><span data-stu-id="99960-149">Use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method to indicate that an element has moved beyond a certain boundary.</span></span>  <span data-ttu-id="99960-150">Na przykład, jeśli użytkownik przenosi element poza granicami <xref:System.Windows.Window>, można wywołać tę metodę, aby zgłosić ją do okna.</span><span class="sxs-lookup"><span data-stu-id="99960-150">For example, if a user moves an element outside of the bounds of a <xref:System.Windows.Window>, you can call this method to report that to the window.</span></span>  <span data-ttu-id="99960-151">Po wywołaniu <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> zdarzenia wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="99960-151">When you call <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>, the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event occurs.</span></span>  <span data-ttu-id="99960-152">Domyślnie <xref:System.Windows.Window> subskrybuje <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> zdarzenie, aby przekazać użytkownikowi wizualną opinię o osiągnięciu granicy.</span><span class="sxs-lookup"><span data-stu-id="99960-152">By default, the <xref:System.Windows.Window> subscribes to the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event to provide visual feedback to the user that a boundary has been reached.</span></span>  <span data-ttu-id="99960-153">Możesz subskrybować <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> , aby zaimplementować zachowanie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="99960-153">You can subscribe to <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> to implement custom behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99960-154">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia, które <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> wywołuje metodę, gdy użytkownik przesunie element na brzeg jego kontenera.</span><span class="sxs-lookup"><span data-stu-id="99960-154">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event that calls the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method when the user moves the element over the edge of its container.</span></span>  <span data-ttu-id="99960-155">Aby przetestować ten przykład, wykonaj kroki opisane w [przewodniku: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) dotykowej i zastępowanie kodu w kroku 5 tym kodem.</span><span class="sxs-lookup"><span data-stu-id="99960-155">To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 5 with this code.</span></span>  
  
 [!code-csharp[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#reportboundaryfeedback)]
 [!code-vb[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#reportboundaryfeedback)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99960-156"><paramref name="unusedManipulation" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="99960-156"><paramref name="unusedManipulation" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public void StartInertia ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartInertia() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartInertia ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartInertia();" />
      <MemberSignature Language="F#" Value="member this.StartInertia : unit -&gt; unit" Usage="manipulationDeltaEventArgs.StartInertia " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99960-157">Zaczyna od manipulacji, ignorując kolejne ruchy kontaktu i wywołując <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="99960-157">Starts inertia on the manipulation by ignoring subsequent contact movements and raising the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Velocities">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationVelocities Velocities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationVelocities Velocities" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Velocities As ManipulationVelocities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationVelocities ^ Velocities { System::Windows::Input::ManipulationVelocities ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Velocities : System.Windows.Input.ManipulationVelocities" Usage="System.Windows.Input.ManipulationDeltaEventArgs.Velocities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationVelocities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99960-158">Pobiera stawki najnowszych zmian w manipulacji.</span><span class="sxs-lookup"><span data-stu-id="99960-158">Gets the rates of the most recent changes to the manipulation.</span></span></summary>
        <value><span data-ttu-id="99960-159">Stawki najnowszych zmian w manipulacji.</span><span class="sxs-lookup"><span data-stu-id="99960-159">The rates of the most recent changes to the manipulation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
