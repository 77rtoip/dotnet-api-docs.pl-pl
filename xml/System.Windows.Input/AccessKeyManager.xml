<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AccessKeyManager.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac583c81746ba2a21682daf312c9e4e7c2d237d8b89.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83c81746ba2a21682daf312c9e4e7c2d237d8b89</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.AccessKeyManager">
          <source>Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).</source>
          <target state="translated">Obsługuje rejestrację wszystkich kluczy dostępu i obsługę poleceń klawiatury międzyoperacyjnego między formularzy systemu Windows i Win32, Windows Presentation Foundation (WPF).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.AccessKeyManager">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> object is created on demand with one per <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> Obiekt jest tworzony na żądanie z jedną na <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.AccessKeyManager">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> is attached as an event handler for <ph id="ph2">&lt;xref:System.Windows.Input.InputManager.PostProcessInput&gt;</ph> and exposes methods to <ph id="ph3">&lt;xref:System.Windows.Input.AccessKeyManager.Register%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.AccessKeyManager.Unregister%2A&gt;</ph> access keys.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> Jest dołączony jako program obsługi zdarzeń dla <ph id="ph2">&lt;xref:System.Windows.Input.InputManager.PostProcessInput&gt;</ph> i udostępnia metody <ph id="ph3">&lt;xref:System.Windows.Input.AccessKeyManager.Register%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.Windows.Input.AccessKeyManager.Unregister%2A&gt;</ph> klucze dostępu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.AccessKeyManager">
          <source>When the registered access key is pressed, the <ph id="ph1">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt;</ph> method on the target element.</source>
          <target state="translated">Gdy zostanie naciśnięty klawisz dostępu w zarejestrowany, <ph id="ph1">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> wywołania <ph id="ph2">&lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt;</ph> metody w elemencie docelowym.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.AccessKeyManager">
          <source>An element can be associated with any number of access keys.</source>
          <target state="translated">Element można skojarzyć z dowolną liczbę kluczy dostępu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /&gt;</ph> routed event.</source>
          <target state="translated">Identyfikuje <ph id="ph1">&lt;see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /&gt;</ph> kierowanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> Lub <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> nasłuchującą do tego zdarzenia.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">Program obsługi zdarzeń do dodania.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /&gt;</ph> attached event.</source>
          <target state="translated">Dodaje obsługę <ph id="ph1">&lt;see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /&gt;</ph> dołączone zdarzenia.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)">
          <source>The presentation source to query for <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Źródło prezentacji można wyszukiwać <bpt id="p1">&lt;c&gt;</bpt>klucza<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)">
          <source>The key to query.</source>
          <target state="translated">Klucz do zapytania.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)">
          <source>Indicates whether the specified key is registered as an access keys in the specified scope.</source>
          <target state="translated">Wskazuje, czy określony klucz jest zarejestrowany jako klucze dostępu w podanym zakresie.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli klucz jest zarejestrowany; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)">
          <source>The scope for the access key.</source>
          <target state="translated">Zakres klucz dostępu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)">
          <source>The access key.</source>
          <target state="translated">Klucz dostępu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)">
          <source>Indicates if <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> has multiple matches.</source>
          <target state="translated">Wskazuje, czy <bpt id="p1">&lt;c&gt;</bpt>klucz<ept id="p1">&lt;/c&gt;</ept> ma wiele dopasowań.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)">
          <source>Processes the specified access keys as if a <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> event for the key was passed to the <ph id="ph2">&lt;see cref="T:System.Windows.Input.AccessKeyManager" /&gt;</ph>.</source>
          <target state="translated">Przetwarza klucze dostępu określonego tak, jakby <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> zdarzenia dla klucza została przekazana do <ph id="ph2">&lt;see cref="T:System.Windows.Input.AccessKeyManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are more keys that match; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli istnieje więcej klucze, które odpowiadają; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)">
          <source>The access key.</source>
          <target state="translated">Klucz dostępu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)">
          <source>The element to associate <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> with.</source>
          <target state="translated">Element, aby skojarzyć <bpt id="p1">&lt;c&gt;</bpt>klucza<ept id="p1">&lt;/c&gt;</ept> z.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)">
          <source>Associates the specified access keys with the specified element.</source>
          <target state="translated">Kojarzy klucze dostępu określonego z określonego elementu.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)">
          <source>When the access keys is pressed, the  <ph id="ph1">&lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt;</ph> method of <ph id="ph2">`element`</ph> is called.</source>
          <target state="translated">Po naciśnięciu klawiszy dostępu <ph id="ph1">&lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt;</ph> metoda <ph id="ph2">`element`</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)">
          <source>An element can be associated with any number of access keys.</source>
          <target state="translated">Element można skojarzyć z dowolną liczbę kluczy dostępu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> Lub <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> nasłuchującą do tego zdarzenia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">Program obsługi zdarzeń do usunięcia.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /&gt;</ph> event handler from the specified object.</source>
          <target state="translated">Usuwa określoną <ph id="ph1">&lt;see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /&gt;</ph> obsługi zdarzeń od określonego obiektu.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)">
          <source>The access key.</source>
          <target state="translated">Klucz dostępu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)">
          <source>The element from which to disassociate <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Element, z którego może anulować skojarzenia <bpt id="p1">&lt;c&gt;</bpt>klucza<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)">
          <source>Disassociates the specified access keys from the specified element.</source>
          <target state="translated">Usuwa skojarzenie określonego dostępu klucze z określonego elementu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>