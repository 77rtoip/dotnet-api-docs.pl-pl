<Type Name="AccessKeyManager" FullName="System.Windows.Input.AccessKeyManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="73aa2290dcfffeff885dfc8482bedcfbbd9bdf15" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39920676" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AccessKeyManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AccessKeyManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.AccessKeyManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AccessKeyManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessKeyManager sealed" />
  <TypeSignature Language="F#" Value="type AccessKeyManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1e2f2-101">Obsługuje rejestrację wszystkie klucze dostępu i obsługa międzyoperacyjności klawiaturowych między Windows Forms i Win32, Windows Presentation Foundation (WPF).</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e2f2-101">Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e2f2-102"><xref:System.Windows.Input.AccessKeyManager> Obiekt zostanie utworzony na żądanie przy użyciu jednej na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="1e2f2-102">An <xref:System.Windows.Input.AccessKeyManager> object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="1e2f2-103"><xref:System.Windows.Input.AccessKeyManager> Jest dołączony jako program obsługi zdarzeń dla <xref:System.Windows.Input.InputManager.PostProcessInput> i udostępnia metody <xref:System.Windows.Input.AccessKeyManager.Register%2A> i <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> klucze dostępu.</span><span class="sxs-lookup"><span data-stu-id="1e2f2-103">The <xref:System.Windows.Input.AccessKeyManager> is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.</span></span>  
  
 <span data-ttu-id="1e2f2-104">Po naciśnięciu klawisza klawisz dostępu zarejestrowanych <xref:System.Windows.Input.AccessKeyManager> wywołania <xref:System.Windows.UIElement.OnAccessKey%2A> metody w elemencie docelowym.</span><span class="sxs-lookup"><span data-stu-id="1e2f2-104">When the registered access key is pressed, the <xref:System.Windows.Input.AccessKeyManager> calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.</span></span>  
  
 <span data-ttu-id="1e2f2-105">Element może być skojarzony z dowolnej liczby kluczy dostępu.</span><span class="sxs-lookup"><span data-stu-id="1e2f2-105">An element can be associated with any number of access keys.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.AccessKeyEventArgs" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventArgs" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="AccessKeyPressed">
      <MemberSignature Language="C#" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />
      <MemberSignature Language="VB.NET" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="F#" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" Usage="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e2f2-106">Występuje, gdy zostanie naciśnięty klawisz dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-106">Occurs when the access key is pressed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e2f2-107">To zdarzenie służy do identyfikowania elementów, które określają zakres klucze dostępu, takie jak menu klucze i klucze wyskakujących.</span><span class="sxs-lookup"><span data-stu-id="1e2f2-107">This event is used to identify elements that define a scope for access keys, such as menu keys and pop-up keys.</span></span>  
  
 <span data-ttu-id="1e2f2-108">Zdarzenia, określony przez <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent> pole nigdy nie zostaną wywołane; jest używany do identyfikowania klasy, które definiują nowe zakresy.</span><span class="sxs-lookup"><span data-stu-id="1e2f2-108">The event specified by the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent> field will never be raised; it is used to identify classes that define new scopes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyPressedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent AccessKeyPressedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyPressedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ AccessKeyPressedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccessKeyPressedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e2f2-109">Identyfikuje <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> zdarzenia trasowanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-109">Identifies the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAccessKeyPressedHandler (element As DependencyObject, handler As AccessKeyPressedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAccessKeyPressedHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::AccessKeyPressedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddAccessKeyPressedHandler : System.Windows.DependencyObject * System.Windows.Input.AccessKeyPressedEventHandler -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="1e2f2-110">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="1e2f2-111">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-111">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e2f2-112">Dodaje program obsługi <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-112">Adds a handler for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyRegistered">
      <MemberSignature Language="C#" Value="public static bool IsKeyRegistered (object scope, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyRegistered(object scope, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyRegistered (scope As Object, key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyRegistered(System::Object ^ scope, System::String ^ key);" />
      <MemberSignature Language="F#" Value="static member IsKeyRegistered : obj * string -&gt; bool" Usage="System.Windows.Input.AccessKeyManager.IsKeyRegistered (scope, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="1e2f2-113">Źródła prezentacji, aby wykonać zapytanie <c>klucz</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-113">The presentation source to query for <c>key</c>.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="1e2f2-114">Klucz do wykonywania zapytań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-114">The key to query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e2f2-115">Wskazuje, czy określony klucz jest zarejestrowany jako klucze dostępu w określonym zakresie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-115">Indicates whether the specified key is registered as an access keys in the specified scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e2f2-116">
            <see langword="true" /> Jeśli klucz został zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-116">
              <see langword="true" /> if the key is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKey">
      <MemberSignature Language="C#" Value="public static bool ProcessKey (object scope, string key, bool isMultiple);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ProcessKey(object scope, string key, bool isMultiple) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ProcessKey (scope As Object, key As String, isMultiple As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ProcessKey(System::Object ^ scope, System::String ^ key, bool isMultiple);" />
      <MemberSignature Language="F#" Value="static member ProcessKey : obj * string * bool -&gt; bool" Usage="System.Windows.Input.AccessKeyManager.ProcessKey (scope, key, isMultiple)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="isMultiple" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="1e2f2-117">Zakres klucz dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-117">The scope for the access key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="1e2f2-118">Klucz dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-118">The access key.</span>
          </span>
        </param>
        <param name="isMultiple">
          <span data-ttu-id="1e2f2-119">Wskazuje, czy <c>klucz</c> zawiera wiele odpowiedników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-119">Indicates if <c>key</c> has multiple matches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e2f2-120">Przetwarza klucze dostępu określonego tak, jakby <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzeń dla klucza został przekazany do <see cref="T:System.Windows.Input.AccessKeyManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-120">Processes the specified access keys as if a <see cref="E:System.Windows.UIElement.KeyDown" /> event for the key was passed to the <see cref="T:System.Windows.Input.AccessKeyManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e2f2-121">
            <see langword="true" /> Jeśli istnieje więcej kluczy, które odpowiadają; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-121">
              <see langword="true" /> if there are more keys that match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (key As String, element As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::String ^ key, System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Register : string * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.Register (key, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="1e2f2-122">Klucz dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-122">The access key.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="1e2f2-123">Element, aby skojarzyć <c>klucz</c> za pomocą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-123">The element to associate <c>key</c> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e2f2-124">Kojarzy klucze dostępu określonego z określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-124">Associates the specified access keys with the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e2f2-125">Po naciśnięciu klawiszy dostępu <xref:System.Windows.UIElement.OnAccessKey%2A> metoda `element` jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="1e2f2-125">When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called.</span></span>  
  
 <span data-ttu-id="1e2f2-126">Element może być skojarzony z dowolnej liczby kluczy dostępu.</span><span class="sxs-lookup"><span data-stu-id="1e2f2-126">An element can be associated with any number of access keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAccessKeyPressedHandler (element As DependencyObject, handler As AccessKeyPressedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAccessKeyPressedHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::AccessKeyPressedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveAccessKeyPressedHandler : System.Windows.DependencyObject * System.Windows.Input.AccessKeyPressedEventHandler -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="1e2f2-127">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-127">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="1e2f2-128">Program obsługi zdarzeń do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-128">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e2f2-129">Usuwa określony <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> program obsługi zdarzeń od określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-129">Removes the specified <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event handler from the specified object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (key As String, element As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ key, System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Unregister : string * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.Unregister (key, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="1e2f2-130">Klucz dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-130">The access key.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="1e2f2-131">Element, z którego ma zostać kojarzenia <c>klucz</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-131">The element from which to disassociate <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e2f2-132">Powoduje usunięcie klucze dostępu określonego z określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e2f2-132">Disassociates the specified access keys from the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>