<Type Name="CanExecuteChangedEventManager" FullName="System.Windows.Input.CanExecuteChangedEventManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3af77ae4c5a14e4e5b8bf809e7780c7ebc7ecd43" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52239042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CanExecuteChangedEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CanExecuteChangedEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteChangedEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CanExecuteChangedEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class CanExecuteChangedEventManager : System::Windows::WeakEventManager" />
  <TypeSignature Language="F#" Value="type CanExecuteChangedEventManager = class&#xA;    inherit WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dfa82-101">Udostępnia <see cref="T:System.Windows.WeakEventManager" /> implementacji, dzięki czemu można używać wzorca "odbiornik zdarzeń słabych", można dołączyć detektory <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dfa82-101">Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfa82-102">Aby uzyskać informacje o sposobie używania tej klasy, zobacz "Przy użyciu istniejących słabe zdarzeń Menedżera Class" w[słabe wzorce zdarzeń](~/docs/framework/wpf/advanced/weak-event-patterns.md).</span><span class="sxs-lookup"><span data-stu-id="dfa82-102">For information about how to use this class, see "Using an Existing Weak Event Manager Class" in[Weak Event Patterns](~/docs/framework/wpf/advanced/weak-event-patterns.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.Windows.Input.ICommand source, EventHandler&lt;EventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.Windows.Input.ICommand source, class System.EventHandler`1&lt;class System.EventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As ICommand, handler As EventHandler(Of EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::Windows::Input::ICommand ^ source, EventHandler&lt;EventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddHandler : System.Windows.Input.ICommand * EventHandler&lt;EventArgs&gt; -&gt; unit" Usage="System.Windows.Input.CanExecuteChangedEventManager.AddHandler (source, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Input.ICommand" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.EventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="dfa82-103">Źródłowy obiekt, który wywołuje <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-103">The source object that the raises the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="dfa82-104">Delegat, który obsługuje <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-104">The delegate that handles the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfa82-105">Dodaje określonego delegata jako program obsługi zdarzeń z określonego źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-105">Adds the specified delegate as an event handler of the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfa82-106">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-106">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="dfa82-107">--lub--</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-107">--or--</span>
          </span>
          <span data-ttu-id="dfa82-108">
            <paramref name="handler" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-108">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::WeakEventManager::ListenerList ^ NewListenerList();" />
      <MemberSignature Language="F#" Value="abstract member NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList&#xA;override this.NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList" Usage="canExecuteChangedEventManager.NewListenerList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="protected override bool Purge (object source, object data, bool purgeAll);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Purge(object source, object data, bool purgeAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Purge (source As Object, data As Object, purgeAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Purge(System::Object ^ source, System::Object ^ data, bool purgeAll);" />
      <MemberSignature Language="F#" Value="abstract member Purge : obj * obj * bool -&gt; bool&#xA;override this.Purge : obj * obj * bool -&gt; bool" Usage="canExecuteChangedEventManager.Purge (source, data, purgeAll)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="purgeAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="dfa82-109">Źródło zdarzenia jest wysłuchaliśmy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-109">The source for events being listened to.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="dfa82-110">Dane do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-110">The data to check.</span>
          </span>
          <span data-ttu-id="dfa82-111">Ten obiekt powinien być <see cref="T:System.Windows.WeakEventManager.ListenerList" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-111">This object is expected to be a <see cref="T:System.Windows.WeakEventManager.ListenerList" /> implementation.</span>
          </span>
        </param>
        <param name="purgeAll">
          <span data-ttu-id="dfa82-112">
            <see langword="true" /> Aby zatrzymać nasłuchiwanie <paramref name="source" />i całkowicie usunąć wszystkie wpisy z <paramref name="data" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-112">
              <see langword="true" /> to stop listening to <paramref name="source" />, and completely remove all entries from <paramref name="data" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfa82-113">Usuwa wpisy nieaktywne odbiornika z listy podane źródło danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-113">Removes inactive listener entries from the data list for the provided source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfa82-114">
            <see langword="true" /> Jeśli niektóre wpisy rzeczywiście zostały usunięte; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-114">
              <see langword="true" /> if some entries were actually removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.Windows.Input.ICommand source, EventHandler&lt;EventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.Windows.Input.ICommand source, class System.EventHandler`1&lt;class System.EventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As ICommand, handler As EventHandler(Of EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::Windows::Input::ICommand ^ source, EventHandler&lt;EventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveHandler : System.Windows.Input.ICommand * EventHandler&lt;EventArgs&gt; -&gt; unit" Usage="System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler (source, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Input.ICommand" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.EventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="dfa82-115">Źródłowy obiekt, który wywołuje <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-115">The source object that the raises the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="dfa82-116">Delegat, który obsługuje <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-116">The delegate that handles the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfa82-117">Usuwa określona procedura obsługi zdarzeń pochodzących z określonego źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-117">Removes the specified event handler from the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfa82-118">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-118">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="dfa82-119">--lub--</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-119">--or--</span>
          </span>
          <span data-ttu-id="dfa82-120">
            <paramref name="handler" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-120">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="canExecuteChangedEventManager.StartListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="dfa82-121">Obiekt ze zdarzeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-121">The object with the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfa82-122">Rozpoczyna nasłuchiwanie <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> zdarzenia w określonym źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-122">Begins listening for the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event on the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="canExecuteChangedEventManager.StopListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="dfa82-123">Obiekt źródłowy, aby zatrzymać nasłuchiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-123">The source object to stop listening for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfa82-124">Zatrzymuje nasłuchiwanie <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> zdarzenia w określonym źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfa82-124">Stops listening for the <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /> event on the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>