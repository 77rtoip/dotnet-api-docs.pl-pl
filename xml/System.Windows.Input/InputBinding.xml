<Type Name="InputBinding" FullName="System.Windows.Input.InputBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="257352587cbebd153130af2566c44f8aadc46dea" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69172595" /></Metadata><TypeSignature Language="C#" Value="public class InputBinding : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputBinding extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class InputBinding&#xA;Inherits Freezable&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputBinding : System::Windows::Freezable, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type InputBinding = class&#xA;    inherit Freezable&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.0">System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9b2f2-101">Reprezentuje powiązanie między <see cref="T:System.Windows.Input.InputGesture" /> i poleceniem.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-101">Represents a binding between an <see cref="T:System.Windows.Input.InputGesture" /> and a command.</span></span> <span data-ttu-id="9b2f2-102">Polecenie jest potencjalnie a <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-102">The command is potentially a <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b2f2-103">Możesz określić, że dane wejściowe użytkownika wywoła polecenie, tworząc <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-103">You can specify that user input invokes a command by creating a <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="9b2f2-104">Gdy użytkownik wykonuje określone dane wejściowe, <xref:System.Windows.Input.ICommand> zostanie wykonana <xref:System.Windows.Input.InputBinding.Command%2A> właściwość, która jest ustawiona na wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-104">When the user performs the specified input, the <xref:System.Windows.Input.ICommand> that is set to the <xref:System.Windows.Input.InputBinding.Command%2A> property is executed.</span></span>  
  
 <span data-ttu-id="9b2f2-105">Można <xref:System.Windows.Input.InputBinding> określić, że wywołuje polecenie, które jest zdefiniowane dla obiektu przez utworzenie powiązania <xref:System.Windows.Input.InputBinding.Command%2A>dla właściwości, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>i <xref:System.Windows.Input.InputBinding.CommandTarget%2A> .</span><span class="sxs-lookup"><span data-stu-id="9b2f2-105">You can specify that the <xref:System.Windows.Input.InputBinding> invokes a command that is defined on an object by creating a binding on the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties.</span></span> <span data-ttu-id="9b2f2-106">Umożliwia to zdefiniowanie polecenia niestandardowego i skojarzenie go z danymi wejściowymi użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-106">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="9b2f2-107">Aby uzyskać więcej informacji, zobacz drugi przykład w sekcji przykładów.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-107">For more information, see the second example in the Examples section.</span></span>  
  
 <span data-ttu-id="9b2f2-108">Można zdefiniować dla określonego obiektu lub na poziomie klasy przez <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> zarejestrowanie z użyciem <xref:System.Windows.Input.CommandManager>. <xref:System.Windows.Input.InputBinding></span><span class="sxs-lookup"><span data-stu-id="9b2f2-108">An <xref:System.Windows.Input.InputBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> with the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="9b2f2-109">Sama <xref:System.Windows.Input.InputBinding> Klasa nie obsługuje użycia XAML, ponieważ nie ujawnia publicznego konstruktora bez parametrów (istnieje Konstruktor bez parametrów, ale jest chroniony).</span><span class="sxs-lookup"><span data-stu-id="9b2f2-109">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage because it does not expose a public parameterless constructor (there is a parameterless constructor, but it is protected).</span></span> <span data-ttu-id="9b2f2-110">Jednak klasy pochodne mogą uwidaczniać Konstruktor publiczny i w związku z tym mogą ustawiać właściwości klasy pochodnej, która jest dziedziczona <xref:System.Windows.Input.InputBinding> z użyciem języka XAML.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-110">However, derived classes can expose a public constructor and therefore can set properties on the derived class that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="9b2f2-111">Dwie istniejące <xref:System.Windows.Input.InputBinding>klasy pochodne, które mogą być tworzone w języku XAML i mogą ustawiać właściwości w <xref:System.Windows.Input.KeyBinding> języku XAML i <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-111">Two existing <xref:System.Windows.Input.InputBinding>-derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9b2f2-112">Typowa właściwość w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programowaniu, która jest ustawiana w języku XAML i przyjmuje <xref:System.Windows.Input.InputBinding> jeden lub więcej <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> obiektów, jako wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-112">The typical property in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programming that is set in XAML and takes one or more <xref:System.Windows.Input.InputBinding> objects as values is the <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="xamlObjectElementUsage_InputBinding"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="9b2f2-113">Użycie elementu obiektu języka XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-113">XAML Object Element Usage</span></span>  
 <span data-ttu-id="9b2f2-114">\<*inputBindingDerivedClass…/*></span><span class="sxs-lookup"><span data-stu-id="9b2f2-114">\<*inputBindingDerivedClass…/*></span></span>  
  
<a name="xamlValues_InputBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9b2f2-115">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-115">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9b2f2-116">Klasa <xref:System.Windows.Input.InputBinding> pochodna, która obsługuje składnię elementu obiektu, taką <xref:System.Windows.Input.KeyBinding> jak <xref:System.Windows.Input.MouseBinding>lub.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-116">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9b2f2-117">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-117">See Remarks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b2f2-118">W poniższym przykładzie pokazano, jak użyć, <xref:System.Windows.Input.KeyBinding> aby <xref:System.Windows.Input.KeyGesture> powiązać <xref:System.Windows.Input.ApplicationCommands.Open%2A> z poleceniem.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-118">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span> <span data-ttu-id="9b2f2-119">Gdy gest zostanie wykonany, polecenie Otwórz jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-119">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="9b2f2-120">W poniższych przykładach pokazano, jak powiązać polecenie niestandardowe z <xref:System.Windows.Input.InputBinding> obiektami.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-120">The following examples show how to bind a custom command to <xref:System.Windows.Input.InputBinding> objects.</span></span> <span data-ttu-id="9b2f2-121">W tych przykładach można utworzyć aplikację, która umożliwia użytkownikowi zmianę koloru tła, wykonując jedną z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="9b2f2-121">These examples create an application that enables the user to change the background color by performing one of the following actions:</span></span>  
  
-   <span data-ttu-id="9b2f2-122">Kliknięcie przycisku.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-122">Clicking a button.</span></span>  
  
-   <span data-ttu-id="9b2f2-123">Naciśnij klawisze CTRL + C.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-123">Pressing CTRL+C.</span></span>  
  
-   <span data-ttu-id="9b2f2-124">Kliknięcie <xref:System.Windows.Controls.StackPanel> prawym przyciskiem myszy ( <xref:System.Windows.Controls.ListBox>poza obszarem).</span><span class="sxs-lookup"><span data-stu-id="9b2f2-124">Right-clicking a <xref:System.Windows.Controls.StackPanel> (outside the <xref:System.Windows.Controls.ListBox>).</span></span>  
  
 <span data-ttu-id="9b2f2-125">Pierwszy przykład tworzy klasę o nazwie `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-125">The first example creates a class named `SimpleDelegateCommand`.</span></span> <span data-ttu-id="9b2f2-126">Ta klasa akceptuje delegata, dzięki czemu obiekt tworzący polecenie może definiować akcję wykonywaną po wykonaniu polecenia.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-126">This class accepts a delegate so that the object creating the command can define the action that occurs when the command executes.</span></span> <span data-ttu-id="9b2f2-127">`SimpleDelegateCommand`definiuje również właściwości, które określają, jakie dane wejściowe za pomocą klawisza i myszy wywołuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-127">`SimpleDelegateCommand` also defines properties that specify what key and mouse input invokes the command.</span></span> <span data-ttu-id="9b2f2-128">`GestureKey`i `GestureModifier` Określ dane wejściowe z klawiatury; `MouseGesture` określa dane wejściowe myszy.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-128">`GestureKey` and `GestureModifier` specify the keyboard input; `MouseGesture` specifies the mouse input.</span></span>  
  
 [!code-csharp[InputCommandBinding#DelegateCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#delegatecommand)]
 [!code-vb[InputCommandBinding#DelegateCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#delegatecommand)]  
  
 <span data-ttu-id="9b2f2-129">Poniższy przykład tworzy i inicjuje `ColorChangeCommand`, czyli. `SimpleDelegateCommand`</span><span class="sxs-lookup"><span data-stu-id="9b2f2-129">The following example creates and initializes the `ColorChangeCommand`, which is a `SimpleDelegateCommand`.</span></span> <span data-ttu-id="9b2f2-130">W przykładzie zdefiniowano również metodę, która jest wykonywana, gdy polecenie jest wywoływane i `GestureKey`ustawia `GestureModifier`właściwości, `MouseGesture` , i.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-130">The example also defines the method that executes when the command is invoked and sets the `GestureKey`, `GestureModifier`, and `MouseGesture` properties.</span></span> <span data-ttu-id="9b2f2-131">Aplikacja wywoła `InitializeCommand` metodę po rozpoczęciu <xref:System.Windows.Window>działania programu, na przykład w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-131">An application would call the `InitializeCommand` method when the program begins, such as in the constructor of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[InputCommandBinding#InitializeCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#initializecommand)]
 [!code-vb[InputCommandBinding#InitializeCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#initializecommand)]  
  
 <span data-ttu-id="9b2f2-132">Na koniec Poniższy przykład tworzy interfejs użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-132">Finally, the following example creates the user interface.</span></span> <span data-ttu-id="9b2f2-133">Przykład dodaje <xref:System.Windows.Input.KeyBinding> a <xref:System.Windows.Input.MouseBinding> i <xref:System.Windows.Controls.StackPanel> doa<xref:System.Windows.Controls.ListBox>, który zawiera a i.<xref:System.Windows.Controls.Button></span><span class="sxs-lookup"><span data-stu-id="9b2f2-133">The example adds a <xref:System.Windows.Input.KeyBinding> and a <xref:System.Windows.Input.MouseBinding> to a <xref:System.Windows.Controls.StackPanel> that contains a <xref:System.Windows.Controls.Button> and a <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="9b2f2-134">Gdy użytkownik wybierze element w <xref:System.Windows.Controls.ListBox>, może zmienić kolor tła na wybrany kolor.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-134">When the user selects an item in the <xref:System.Windows.Controls.ListBox>, he or she can change the color of the background to the selected color.</span></span> <span data-ttu-id="9b2f2-135">W każdym przypadku `CommandParameter` właściwość jest powiązana z wybranym elementem <xref:System.Windows.Controls.ListBox>w, a `Command` właściwość jest powiązana `ColorChangeCommand`z.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-135">In each case, the `CommandParameter` property is bound to the selected item in the <xref:System.Windows.Controls.ListBox>, and the `Command` property is bound to the `ColorChangeCommand`.</span></span> <span data-ttu-id="9b2f2-136">Właściwości <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>i <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> sąpowiązanezodpowiednimi`SimpleDelegateCommand` właściwościami klasy.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-136">The <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, and <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> properties are bound to the corresponding properties on the `SimpleDelegateCommand` class.</span></span>  
  
 [!code-xaml[InputCommandBinding#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.InputBindings" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b2f2-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.InputBinding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-137">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b2f2-138">Zapewnia podstawową inicjalizację klas pochodnych <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-138">Provides base initialization for classes derived from <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b2f2-139"><xref:System.Windows.Input.InputBinding>nie jest technicznie klasą abstrakcyjną, ale Konstruktor bez parametrów ma świadomy dostęp do ochrony.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-139"><xref:System.Windows.Input.InputBinding> is not technically an abstract class, but the parameterless constructor is deliberately protected access.</span></span> <span data-ttu-id="9b2f2-140">Ma to wpływ na sposób tworzenia <xref:System.Windows.Input.InputBinding> klasy abstrakcyjnej dla języka XAML.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-140">This has the effect of making <xref:System.Windows.Input.InputBinding> an "abstract" class for XAML.</span></span> <span data-ttu-id="9b2f2-141">Istnieją właściwości w programie [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] , które mają użycie języka XAML, które oczekują obiektów typu <xref:System.Windows.Input.InputBinding>, <xref:System.Windows.Input.InputBinding> ale nie można określić wystąpienia w języku XAML.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-141">There are existing properties in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that have XAML usages that expect objects of type <xref:System.Windows.Input.InputBinding>, but you cannot specify an <xref:System.Windows.Input.InputBinding> instance in XAML.</span></span> <span data-ttu-id="9b2f2-142">Zamiast tego można określić jedną z klas pochodnych specyficznych <xref:System.Windows.Input.InputBinding> dla urządzenia jako wartości, na przykład <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-142">Instead, you can specify one of the device-specific <xref:System.Windows.Input.InputBinding> derived classes as values, for instance <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9b2f2-143">Jeśli zaimplementowano niestandardowe <see cref="T:System.Windows.Input.InputBinding" /> , które obsługuje użycie XAML, użyj tego konstruktora do inicjowania podstawowego.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-143">If you implement a custom <see cref="T:System.Windows.Input.InputBinding" /> that supports a XAML usage, use this constructor for base initialization.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputBinding (System.Windows.Input.ICommand command, System.Windows.Input.InputGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.InputGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As InputGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::InputGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.InputBinding : System.Windows.Input.ICommand * System.Windows.Input.InputGesture -&gt; System.Windows.Input.InputBinding" Usage="new System.Windows.Input.InputBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.InputGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="9b2f2-144">Polecenie do skojarzenia z <paramref name="gesture" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-144">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="9b2f2-145">Gest wejścia do skojarzenia <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-145">The input gesture to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="9b2f2-146">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Input.InputBinding" /> klasy z określonym poleceniem i gestem wejścia.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-146">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class with the specified command and input gesture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b2f2-147">Jeśli jesteś deweloperem oprogramowania korzystającym z istniejących klas powiązań wejściowych, zazwyczaj nie będziesz używać tego konstruktora nawet w przypadku definiowania poleceń niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-147">If you are a software developer using existing input binding classes, you generally will not use this constructor, even if you are defining custom commands.</span></span> <span data-ttu-id="9b2f2-148">Zamiast tego należy użyć konstruktorów klas pochodnych (<xref:System.Windows.Input.KeyBinding> i <xref:System.Windows.Input.MouseBinding>) lub użyć tego konstruktora jako podstawowego wystąpienia klasy niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-148">Instead, you will either use constructors of derived classes (<xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>), or you will use this constructor as the base instantiation of a custom class.</span></span> <span data-ttu-id="9b2f2-149"><xref:System.Windows.Input.InputBinding> Chociaż Klasa obsługuje różne urządzenia wejściowe, w szczególności należy wybrać urządzenie, które będzie reprezentowane przez powiązanie wejściowe.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-149">Although the <xref:System.Windows.Input.InputBinding> class supports different input devices in principle, in practice you must choose which device the input binding will represent.</span></span> <span data-ttu-id="9b2f2-150">Można ustawić tylko jedną <xref:System.Windows.Input.InputBinding.Gesture%2A> wartość w powiązaniu wejściowym, a gesty są specyficzne dla urządzenia.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-150">You only can set only one <xref:System.Windows.Input.InputBinding.Gesture%2A> value on the input binding, and gestures are device-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b2f2-151">Poniższy przykład pokazuje, jak używać tego konstruktora do skojarzenia <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.RoutedCommand>z.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-151">The following example shows how to use this constructor to associate a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#InputBindingAddingCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#inputbindingaddingcommand)]
 [!code-vb[commandlibrarysnippets#InputBindingAddingCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#inputbindingaddingcommand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9b2f2-152"><paramref name="command" />lub <paramref name="gesture" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-152"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="9b2f2-153">Obiekt, który ma zostać sklonowany.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-153">The object to clone.</span></span></param>
        <summary><span data-ttu-id="9b2f2-154">Kopiuje podstawowe (Nieanimowane) wartości właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-154">Copies the base (non-animated) values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="9b2f2-155">Obiekt, który ma zostać sklonowany.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-155">The object to clone.</span></span></param>
        <summary><span data-ttu-id="9b2f2-156">Kopiuje bieżące wartości właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-156">Copies the current values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.InputBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b2f2-157">Pobiera lub ustawia <see cref="T:System.Windows.Input.ICommand" /> skojarzenie skojarzone z tym powiązaniem wejściowym.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-157">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="9b2f2-158">Skojarzone polecenie.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-158">The associated command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b2f2-159"><xref:System.Windows.Input.InputBinding> Klasa nie obsługuje użycia XAML, ponieważ nie ujawnia publicznego konstruktora bez parametrów (ma Konstruktor bez parametrów, ale jest chroniony).</span><span class="sxs-lookup"><span data-stu-id="9b2f2-159">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public parameterless constructor (it has a parameterless constructor, but it is protected).</span></span> <span data-ttu-id="9b2f2-160">Jednak klasy pochodne mogą uwidaczniać Konstruktor publiczny i w związku z tym mogą używać właściwości, które są <xref:System.Windows.Input.InputBinding>dziedziczone z.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-160">However, derived classes can expose a public constructor and therefore, can use properties that are inherited from <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="9b2f2-161">Dwie istniejące <xref:System.Windows.Input.InputBinding> klasy pochodne, które mogą być tworzone w języku XAML i mogą ustawiać właściwości przy użyciu języka XAML <xref:System.Windows.Input.KeyBinding> , <xref:System.Windows.Input.MouseBinding>są i.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-161">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties with XAML usages are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 <span data-ttu-id="9b2f2-162"><xref:System.Windows.Input.ICommand>odwołuje się do konwertera typów, który <xref:System.Windows.Input.ICommand> umożliwia pewnym istniejącym implementacjom Określanie wartości w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-162"><xref:System.Windows.Input.ICommand> references a type converter that enables certain preexisting <xref:System.Windows.Input.ICommand> implementations to specify values in the form of a string.</span></span> <span data-ttu-id="9b2f2-163">To zachowanie konwersji typu ustawia wartość atrybutu w postaci wartości tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-163">This type conversion behavior sets the attribute value form of this property.</span></span> <span data-ttu-id="9b2f2-164">Można również powiązać <xref:System.Windows.Input.InputBinding.Command%2A>właściwości, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>i <xref:System.Windows.Input.InputBinding.CommandTarget%2A> z <xref:System.Windows.Input.ICommand> obiektem, który jest zdefiniowany w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-164">You can also bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="9b2f2-165">Umożliwia to zdefiniowanie polecenia niestandardowego i skojarzenie go z danymi wejściowymi użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-165">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="9b2f2-166">Aby uzyskać więcej informacji, zobacz drugi przykład w <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-166">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b2f2-167">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-167">XAML Attribute Usage</span></span>  
 <span data-ttu-id="9b2f2-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span><span class="sxs-lookup"><span data-stu-id="9b2f2-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span></span>  
  
<a name="xamlPropertyElementUsage_Command"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9b2f2-169">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-169">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Command>  
    <iCommandImplementation/>  
  </inputBindingDerivedClass.Command>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9b2f2-170">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-170">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9b2f2-171">Klasa <xref:System.Windows.Input.InputBinding> pochodna, która obsługuje składnię elementu obiektu, taką <xref:System.Windows.Input.KeyBinding> jak <xref:System.Windows.Input.MouseBinding>lub.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-171">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9b2f2-172">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-172">See Remarks.</span></span>  
  
 `iCommandImplementation`  
 <span data-ttu-id="9b2f2-173">Implementacja <xref:System.Windows.Input.ICommand> obiektu, która obsługuje składnię elementu obiektu (ma publiczny Konstruktor bez parametrów).</span><span class="sxs-lookup"><span data-stu-id="9b2f2-173">An object implementation of <xref:System.Windows.Input.ICommand> that supports object element syntax (has a public parameterless constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b2f2-174">W poniższym przykładzie pokazano, jak użyć, <xref:System.Windows.Input.KeyBinding> aby <xref:System.Windows.Input.KeyGesture> powiązać <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> z poleceniem.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-174">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> command.</span></span> <span data-ttu-id="9b2f2-175">Gdy gest zostanie wykonany, polecenie Otwórz jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-175">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewkeybinding)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewkeybinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9b2f2-176"><see cref="P:System.Windows.Input.InputBinding.Command" /> Wartość to<see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-176">The <see cref="P:System.Windows.Input.InputBinding.Command" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Input.InputBinding.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b2f2-177">Pobiera lub ustawia dane specyficzne dla polecenia dla danego polecenia.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-177">Gets or sets the command-specific data for a particular command.</span></span></summary>
        <value><span data-ttu-id="9b2f2-178">Dane specyficzne dla polecenia.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-178">The command-specific data.</span></span> <span data-ttu-id="9b2f2-179">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-179">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b2f2-180"><xref:System.Windows.Input.InputBinding.CommandParameter%2A> Właściwość służy do przekazywania określonych informacji do polecenia podczas jego wykonywania.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-180">The <xref:System.Windows.Input.InputBinding.CommandParameter%2A> property is used to pass specific information to the command when it is executed.</span></span> <span data-ttu-id="9b2f2-181">Typ danych jest definiowany przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-181">The type of the data is defined by the command.</span></span> <span data-ttu-id="9b2f2-182">Wiele poleceń nie oczekuje parametrów polecenia; dla tych poleceń wszystkie przesłane parametry polecenia zostaną zignorowane.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-182">Many commands do not expect command parameters; for these commands, any command parameters passed will be ignored.</span></span>  
  
 <span data-ttu-id="9b2f2-183">Jeśli polecenie, z którym jest skojarzone powiązanie <xref:System.Windows.Input.RoutedCommand>danych wejściowych <xref:System.Windows.Input.InputBinding.CommandParameter%2A> , jest, jest przesyłane do <xref:System.Windows.Input.RoutedCommand> programów obsługi za pomocą <xref:System.Windows.Input.ExecutedRoutedEventArgs> i <xref:System.Windows.Input.CanExecuteRoutedEventArgs> danych zdarzenia podczas przetwarzania polecenia.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-183">If the command that an input binding is associated with is a <xref:System.Windows.Input.RoutedCommand>, the <xref:System.Windows.Input.InputBinding.CommandParameter%2A> of the input binding is passed to the <xref:System.Windows.Input.RoutedCommand> handlers through the <xref:System.Windows.Input.ExecutedRoutedEventArgs> and the <xref:System.Windows.Input.CanExecuteRoutedEventArgs> event data when the command is processed.</span></span>  
  
 <span data-ttu-id="9b2f2-184">Typ danych i cel parametru polecenia są zdefiniowane inaczej dla każdego polecenia i mogą być `null`.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-184">The data type and purpose of the command parameter are defined differently for each command and can be `null`.</span></span> <span data-ttu-id="9b2f2-185">Można powiązać <xref:System.Windows.Input.InputBinding.Command%2A>właściwości, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>i <xref:System.Windows.Input.InputBinding.CommandTarget%2A> z <xref:System.Windows.Input.ICommand> , które są zdefiniowane dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-185">You can bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="9b2f2-186">Umożliwia to zdefiniowanie polecenia niestandardowego i skojarzenie go z danymi wejściowymi użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-186">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="9b2f2-187">Aby uzyskać więcej informacji, zobacz drugi przykład w <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-187">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
 <span data-ttu-id="9b2f2-188"><xref:System.Windows.Input.InputBinding> Klasa nie obsługuje użycia XAML, ponieważ nie ujawnia publicznego konstruktora bez parametrów (ma Konstruktor bez parametrów, ale jest chroniony).</span><span class="sxs-lookup"><span data-stu-id="9b2f2-188">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public parameterless constructor (it has a parameterless constructor, but it is protected).</span></span> <span data-ttu-id="9b2f2-189">Jednak klasy pochodne mogą uwidaczniać Konstruktor publiczny i w związku z tym mogą ustawiać właściwości dziedziczone z <xref:System.Windows.Input.InputBinding> użycia języka XAML.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-189">However, derived classes can expose a public constructor and therefore, can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with XAML usage.</span></span> <span data-ttu-id="9b2f2-190">Dwie istniejące <xref:System.Windows.Input.InputBinding> klasy pochodne, które mogą być tworzone w języku XAML i mogą ustawiać właściwości w <xref:System.Windows.Input.KeyBinding> języku XAML <xref:System.Windows.Input.MouseBinding>i.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-190">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b2f2-191">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-191">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandParameter="commandParameterString"/>  
```  
  
<a name="xamlPropertyElementUsage_CommandParameter"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9b2f2-192">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-192">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.CommandParameter>  
    <commandParameterObject/>  
  </inputBindingDerivedClass.CommandParameter>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9b2f2-193">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-193">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9b2f2-194">Klasa <xref:System.Windows.Input.InputBinding> pochodna, która obsługuje składnię elementu obiektu, taką <xref:System.Windows.Input.KeyBinding> jak <xref:System.Windows.Input.MouseBinding>lub.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-194">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9b2f2-195">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-195">See Remarks.</span></span>  
  
 `commandParameterString`  
 <span data-ttu-id="9b2f2-196">Ciąg, który jest przetwarzany przez określone polecenie.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-196">A string that is processed by a particular command.</span></span> <span data-ttu-id="9b2f2-197">Ciągi są typowym typem używanym dla parametrów poleceń, ponieważ można je łatwo ustawić w języku XAML.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-197">Strings are the common type used for command parameters because they can be easily set in XAML.</span></span> <span data-ttu-id="9b2f2-198">W oczekiwanym formacie ciągu i jego przeznaczeniu zapoznaj się z dokumentacją dotyczącą konkretnego polecenia, z którym skojarzone jest powiązanie danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-198">For the expected string format and its purpose, see the documentation for the particular command that the input binding is associated with.</span></span> <span data-ttu-id="9b2f2-199">Wiele poleceń nie oczekuje parametrów.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-199">Many commands do not expect parameters.</span></span>  
  
 `commandParameterObject`  
 <span data-ttu-id="9b2f2-200">Obiekt, który jest przetwarzany przez określone polecenie.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-200">An object that is processed by a particular command.</span></span> <span data-ttu-id="9b2f2-201">Wszystkie istniejące [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] polecenia używają ciągów.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-201">All existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commands use strings.</span></span> <span data-ttu-id="9b2f2-202">W związku z tym Składnia tego elementu właściwości jest istotna tylko dla scenariuszy poleceń niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-202">Therefore, this property element syntax is only relevant for custom command scenarios.</span></span> <span data-ttu-id="9b2f2-203">Aby można było obsługiwać tę składnię, `commandParameterObject` obiekt musi również obsługiwać składnię elementu obiektu (musi mieć publiczny Konstruktor bez parametrów).</span><span class="sxs-lookup"><span data-stu-id="9b2f2-203">In order to support this syntax, the `commandParameterObject` object must also support object element syntax (must have a public parameterless constructor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b2f2-204">Identyfikuje właściwość <see cref="P:System.Windows.Input.InputBinding.CommandParameter" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-204">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b2f2-205">Identyfikuje właściwość <see cref="P:System.Windows.Input.InputBinding.Command" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-205">Identifies the <see cref="P:System.Windows.Input.InputBinding.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Input.InputBinding.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b2f2-206">Pobiera lub ustawia element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-206">Gets or sets the target element of the command.</span></span></summary>
        <value><span data-ttu-id="9b2f2-207">Element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-207">The target of the command.</span></span> <span data-ttu-id="9b2f2-208">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-208">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b2f2-209">W systemie <xref:System.Windows.Input.InputBinding.CommandTarget%2A> poleceń Windows Presentation Foundation Właściwość <xref:System.Windows.Input.ICommandSource> obiektu <xref:System.Windows.Input.ICommand> ma zastosowanie <xref:System.Windows.Input.RoutedCommand>tylko wtedy, gdy jest to.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-209">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on an <xref:System.Windows.Input.ICommandSource> object is applicable only when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="9b2f2-210">Jeśli jest ustawiona <xref:System.Windows.Input.ICommandSource> dla i <xref:System.Windows.Input.RoutedCommand>odpowiednie polecenie nie jest, obiekt docelowy polecenia jest ignorowany. <xref:System.Windows.Input.InputBinding.CommandTarget%2A></span><span class="sxs-lookup"><span data-stu-id="9b2f2-210">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on an <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="9b2f2-211">Gdy jest używany z <xref:System.Windows.Input.RoutedCommand>, element docelowy polecenia jest obiektem, na <xref:System.Windows.Input.CommandManager.Executed> którym zdarzenia <xref:System.Windows.Input.CommandManager.CanExecute> i są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-211">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="9b2f2-212"><xref:System.Windows.Input.InputBinding.CommandTarget%2A> Jeśli właściwość nie jest ustawiona, element z fokusem klawiatury jest używany jako element docelowy.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-212">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property is not set, the element with keyboard focus is used as the target.</span></span>  
  
 <span data-ttu-id="9b2f2-213">Sama <xref:System.Windows.Input.InputBinding> Klasa nie obsługuje użycia XAML, ponieważ nie ujawnia publicznego konstruktora bez parametrów (istnieje Konstruktor bezparametrowy, ale jest chroniony).</span><span class="sxs-lookup"><span data-stu-id="9b2f2-213">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public parameterless constructor (there is a parameterless constructor, but it is protected).</span></span> <span data-ttu-id="9b2f2-214">Jednak klasy pochodne mogą uwidaczniać Konstruktor publiczny i w związku z tym mogą ustawiać właściwości dziedziczone z <xref:System.Windows.Input.InputBinding> przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-214">However, derived classes can expose a public constructor and therefore can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="9b2f2-215">Dwie istniejące <xref:System.Windows.Input.InputBinding> klasy pochodne, które mogą być tworzone w języku XAML i mogą ustawiać właściwości w <xref:System.Windows.Input.KeyBinding> języku XAML <xref:System.Windows.Input.MouseBinding>i.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-215">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandTarget"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b2f2-216">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-216">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandTarget="bindingToTarget"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9b2f2-217">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-217">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9b2f2-218">Klasa <xref:System.Windows.Input.InputBinding> pochodna, która obsługuje składnię elementu obiektu, taką <xref:System.Windows.Input.KeyBinding> jak <xref:System.Windows.Input.MouseBinding>lub.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-218">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9b2f2-219">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-219">See Remarks.</span></span>  
  
 `bindingToTarget`  
 <span data-ttu-id="9b2f2-220">Ciąg, który używa typu składni wiązania, która może zwracać odwołanie do obiektu do istniejącego nazwanego elementu.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-220">A string that uses a type of binding syntax that can return an object reference to an existing named element.</span></span> <span data-ttu-id="9b2f2-221">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-221">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b2f2-222">Identyfikuje właściwość <see cref="P:System.Windows.Input.InputBinding.CommandTarget" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-222">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="inputBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b2f2-223">Tworzy wystąpienie elementu <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-223">Creates an instance of an <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <returns><span data-ttu-id="9b2f2-224">Nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-224">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.InputBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b2f2-225">Pobiera lub ustawia <see cref="T:System.Windows.Input.InputGesture" /> skojarzenie skojarzone z tym powiązaniem wejściowym.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-225">Gets or sets the <see cref="T:System.Windows.Input.InputGesture" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="9b2f2-226">Skojarzony gest.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-226">The associated gesture.</span></span> <span data-ttu-id="9b2f2-227">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-227">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b2f2-228">Gest wejściowy jest akcją, która wywołuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-228">The input gesture is the action that invokes the command.</span></span> <span data-ttu-id="9b2f2-229">Przykłady gestów wejściowych w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programie <xref:System.Windows.Input.KeyGesture> to <xref:System.Windows.Input.MouseGesture>i.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-229">Examples of input gestures in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] are <xref:System.Windows.Input.KeyGesture> and <xref:System.Windows.Input.MouseGesture>.</span></span> <span data-ttu-id="9b2f2-230">A jest kombinacją <xref:System.Windows.Input.Key> a i zestawu <xref:System.Windows.Input.ModifierKeys>. <xref:System.Windows.Input.KeyGesture></span><span class="sxs-lookup"><span data-stu-id="9b2f2-230">A <xref:System.Windows.Input.KeyGesture> is a combination of a <xref:System.Windows.Input.Key> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="9b2f2-231">A jest kombinacją <xref:System.Windows.Input.MouseAction> a i zestawu <xref:System.Windows.Input.ModifierKeys>. <xref:System.Windows.Input.MouseGesture></span><span class="sxs-lookup"><span data-stu-id="9b2f2-231">A <xref:System.Windows.Input.MouseGesture> is a combination of a <xref:System.Windows.Input.MouseAction> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="9b2f2-232">Sama <xref:System.Windows.Input.InputBinding> Klasa nie obsługuje użycia XAML, ponieważ nie ujawnia publicznego konstruktora bez parametrów (istnieje Konstruktor bezparametrowy, ale jest chroniony).</span><span class="sxs-lookup"><span data-stu-id="9b2f2-232">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public parameterless constructor (there is a parameterless constructor, but it is protected).</span></span> <span data-ttu-id="9b2f2-233">Jednak klasy pochodne mogą uwidaczniać Konstruktor publiczny i w ten sposób mogą ustawiać właściwości dziedziczone z <xref:System.Windows.Input.InputBinding> przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-233">However, derived classes can expose a public constructor and thus can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="9b2f2-234">Dwie istniejące <xref:System.Windows.Input.InputBinding> klasy pochodne, które mogą być tworzone w języku XAML i mogą ustawiać właściwości w <xref:System.Windows.Input.KeyBinding> języku XAML <xref:System.Windows.Input.MouseBinding>i.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-234">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_gesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b2f2-235">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-235">XAML Attribute Usage</span></span>  
 <span data-ttu-id="9b2f2-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span><span class="sxs-lookup"><span data-stu-id="9b2f2-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span></span>  
  
<span data-ttu-id="9b2f2-237">—lub—</span><span class="sxs-lookup"><span data-stu-id="9b2f2-237">-or-</span></span>
  
 <span data-ttu-id="9b2f2-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span><span class="sxs-lookup"><span data-stu-id="9b2f2-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span></span>  
  
<span data-ttu-id="9b2f2-239">—lub—</span><span class="sxs-lookup"><span data-stu-id="9b2f2-239">-or-</span></span>
  
 <span data-ttu-id="9b2f2-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span><span class="sxs-lookup"><span data-stu-id="9b2f2-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span></span>  
  
<a name="xamlPropertyElementUsage_gesture"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9b2f2-241">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-241">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Gesture>  
    <inputGestureImplementation/>  
  </inputBindingDerivedClass.Gesture>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_gesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9b2f2-242">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="9b2f2-242">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9b2f2-243">Klasa <xref:System.Windows.Input.InputBinding> pochodna, która obsługuje składnię elementu obiektu, taką <xref:System.Windows.Input.KeyBinding> jak <xref:System.Windows.Input.MouseBinding>lub.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-243">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9b2f2-244">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-244">See Remarks.</span></span>  
  
 `inputGestureImplementation`  
 <span data-ttu-id="9b2f2-245">Niestandardowa Klasa <xref:System.Windows.Input.InputGesture> pochodna, która obsługuje składnię elementu obiektu.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-245">A custom derived class of <xref:System.Windows.Input.InputGesture> that supports object element syntax.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b2f2-246">Poniższy przykład pokazuje, jak użyć elementu <xref:System.Windows.Input.KeyBinding> do powiązania a. <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.RoutedCommand></span><span class="sxs-lookup"><span data-stu-id="9b2f2-246">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="9b2f2-247">Po naciśnięciu <xref:System.Windows.Input.ApplicationCommands.Close%2A> klawisza Alt + L polecenie jest wywoływane. <xref:System.Windows.Input.KeyGesture></span><span class="sxs-lookup"><span data-stu-id="9b2f2-247">When the <xref:System.Windows.Input.KeyGesture> ALT+L is pressed, the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command is invoked.</span></span>  
  
 [!code-xaml[commandlibrarysnippets#KeyBindingWithKeyAndModifiersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#keybindingwithkeyandmodifiersxaml)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="9b2f2-248">Obiekt, który ma zostać sklonowany.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-248">The object to clone.</span></span></param>
        <summary><span data-ttu-id="9b2f2-249">Sprawia, że wystąpienie ma zablokowany klon określonego <see cref="T:System.Windows.Freezable" /> przy użyciu podstawowych (nieanimowanych) wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-249">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> by using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="9b2f2-250">Obiekt, który ma zostać sklonowany.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-250">The object to clone.</span></span></param>
        <summary><span data-ttu-id="9b2f2-251">Sprawia, że bieżące wystąpienie jest zablokowanym klonem <see cref="T:System.Windows.Freezable" />określonego.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-251">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="9b2f2-252">Jeśli obiekt ma animowane właściwości zależności, ich bieżące wartości animowane są kopiowane.</span><span class="sxs-lookup"><span data-stu-id="9b2f2-252">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
