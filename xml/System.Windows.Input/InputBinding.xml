<Type Name="InputBinding" FullName="System.Windows.Input.InputBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14d4d9a5c75001e6a8938a64c047736548b4a1ed" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52248844" /></Metadata><TypeSignature Language="C#" Value="public class InputBinding : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputBinding extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class InputBinding&#xA;Inherits Freezable&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputBinding : System::Windows::Freezable, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type InputBinding = class&#xA;    inherit Freezable&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.0">System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="431f3-101">Reprezentuje powiązanie między <see cref="T:System.Windows.Input.InputGesture" /> i polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-101">Represents a binding between an <see cref="T:System.Windows.Input.InputGesture" /> and a command.</span></span> <span data-ttu-id="431f3-102">To polecenie jest potencjalnie <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-102">The command is potentially a <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="431f3-103">Można określić, że dane wejściowe użytkownika wywołuje polecenie tworząc <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-103">You can specify that user input invokes a command by creating a <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="431f3-104">Gdy użytkownik wykonuje określone dane wejściowe <xref:System.Windows.Input.ICommand> który jest skonfigurowany do <xref:System.Windows.Input.InputBinding.Command%2A> właściwości jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="431f3-104">When the user performs the specified input, the <xref:System.Windows.Input.ICommand> that is set to the <xref:System.Windows.Input.InputBinding.Command%2A> property is executed.</span></span>  
  
 <span data-ttu-id="431f3-105">Można określić, że <xref:System.Windows.Input.InputBinding> wywołuje polecenie, która jest zdefiniowana na obiekt, tworząc powiązanie na <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, i <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="431f3-105">You can specify that the <xref:System.Windows.Input.InputBinding> invokes a command that is defined on an object by creating a binding on the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties.</span></span> <span data-ttu-id="431f3-106">Dzięki temu można zdefiniować niestandardowe polecenie i skojarzyć ją z danymi wejściowymi użytkownika.</span><span class="sxs-lookup"><span data-stu-id="431f3-106">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="431f3-107">Aby uzyskać więcej informacji zobacz drugi przykład w sekcji przykładów.</span><span class="sxs-lookup"><span data-stu-id="431f3-107">For more information, see the second example in the Examples section.</span></span>  
  
 <span data-ttu-id="431f3-108"><xref:System.Windows.Input.InputBinding> Można zdefiniować określonego obiektu lub na poziomie klasy, rejestrując <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> z <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="431f3-108">An <xref:System.Windows.Input.InputBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> with the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="431f3-109"><xref:System.Windows.Input.InputBinding> Sama klasa nie obsługuje użycia XAML, ponieważ nie uwidacznia publicznego konstruktora domyślnego (Brak domyślnego konstruktora, ale jest on chroniony).</span><span class="sxs-lookup"><span data-stu-id="431f3-109">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="431f3-110">Jednak klasy pochodne mogą ujawniać Konstruktor publiczny i w związku z tym można ustawić właściwości w klasie pochodnej, która są dziedziczone z <xref:System.Windows.Input.InputBinding> z użyciem XAML.</span><span class="sxs-lookup"><span data-stu-id="431f3-110">However, derived classes can expose a public constructor and therefore can set properties on the derived class that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="431f3-111">Dwa istniejące <xref:System.Windows.Input.InputBinding>-klasy pochodne, które mogą być utworzone w XAML i właściwości można ustawić w XAML są <xref:System.Windows.Input.KeyBinding> i <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-111">Two existing <xref:System.Windows.Input.InputBinding>-derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="431f3-112">Typowe właściwości w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programowania, to znaczy w ustawach XAML i ma co najmniej jeden <xref:System.Windows.Input.InputBinding> obiektów jako wartości jest <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="431f3-112">The typical property in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programming that is set in XAML and takes one or more <xref:System.Windows.Input.InputBinding> objects as values is the <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="xamlObjectElementUsage_InputBinding"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="431f3-113">Użycie elementu obiektu języka XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-113">XAML Object Element Usage</span></span>  
 <span data-ttu-id="431f3-114">\<*inputBindingDerivedClass…/*></span><span class="sxs-lookup"><span data-stu-id="431f3-114">\<*inputBindingDerivedClass…/*></span></span>  
  
<a name="xamlValues_InputBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="431f3-115">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-115">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="431f3-116">Klasy pochodne <xref:System.Windows.Input.InputBinding> , która obsługuje składnię obiektów, takich jak <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-116">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="431f3-117">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="431f3-117">See Remarks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="431f3-118">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Input.KeyBinding> powiązać <xref:System.Windows.Input.KeyGesture> do <xref:System.Windows.Input.ApplicationCommands.Open%2A> polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-118">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span> <span data-ttu-id="431f3-119">Podczas wykonywania kluczowych gestu polecenie Otwórz, zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="431f3-119">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="431f3-120">W poniższych przykładach pokazano, jak powiązać polecenia niestandardowego do <xref:System.Windows.Input.InputBinding> obiektów.</span><span class="sxs-lookup"><span data-stu-id="431f3-120">The following examples show how to bind a custom command to <xref:System.Windows.Input.InputBinding> objects.</span></span> <span data-ttu-id="431f3-121">Te przykłady tworzenia aplikacji, która umożliwia użytkownikowi zmianę koloru tła, wykonując jedną z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="431f3-121">These examples create an application that enables the user to change the background color by performing one of the following actions:</span></span>  
  
-   <span data-ttu-id="431f3-122">Kliknięcie przycisku.</span><span class="sxs-lookup"><span data-stu-id="431f3-122">Clicking a button.</span></span>  
  
-   <span data-ttu-id="431f3-123">Naciskając klawisze CTRL + C.</span><span class="sxs-lookup"><span data-stu-id="431f3-123">Pressing CTRL+C.</span></span>  
  
-   <span data-ttu-id="431f3-124">Kliknij prawym przyciskiem myszy <xref:System.Windows.Controls.StackPanel> (poza <xref:System.Windows.Controls.ListBox>).</span><span class="sxs-lookup"><span data-stu-id="431f3-124">Right-clicking a <xref:System.Windows.Controls.StackPanel> (outside the <xref:System.Windows.Controls.ListBox>).</span></span>  
  
 <span data-ttu-id="431f3-125">Pierwszy przykład tworzy klasę o nazwie `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="431f3-125">The first example creates a class named `SimpleDelegateCommand`.</span></span> <span data-ttu-id="431f3-126">Ta klasa akceptuje delegata, tak, aby obiekt Tworzenie polecenia można określić akcję, która występuje, gdy polecenie zostanie wykonane.</span><span class="sxs-lookup"><span data-stu-id="431f3-126">This class accepts a delegate so that the object creating the command can define the action that occurs when the command executes.</span></span> <span data-ttu-id="431f3-127">`SimpleDelegateCommand` definiuje również właściwości, które określają, jakie klucza i myszy dane wejściowe wywołuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="431f3-127">`SimpleDelegateCommand` also defines properties that specify what key and mouse input invokes the command.</span></span> <span data-ttu-id="431f3-128">`GestureKey` i `GestureModifier` Określ klawiatury; `MouseGesture` określono wejście myszy.</span><span class="sxs-lookup"><span data-stu-id="431f3-128">`GestureKey` and `GestureModifier` specify the keyboard input; `MouseGesture` specifies the mouse input.</span></span>  
  
 [!code-csharp[InputCommandBinding#DelegateCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#delegatecommand)]
 [!code-vb[InputCommandBinding#DelegateCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#delegatecommand)]  
  
 <span data-ttu-id="431f3-129">Poniższy przykład tworzy i inicjuje `ColorChangeCommand`, czyli `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="431f3-129">The following example creates and initializes the `ColorChangeCommand`, which is a `SimpleDelegateCommand`.</span></span> <span data-ttu-id="431f3-130">W przykładzie zdefiniowano też metodę, która wykonuje, gdy polecenie jest wywoływany i ustawia `GestureKey`, `GestureModifier`, i `MouseGesture` właściwości.</span><span class="sxs-lookup"><span data-stu-id="431f3-130">The example also defines the method that executes when the command is invoked and sets the `GestureKey`, `GestureModifier`, and `MouseGesture` properties.</span></span> <span data-ttu-id="431f3-131">Aplikacja może wywołać `InitializeCommand` metody, gdy rozpoczyna się program, takich jak Konstruktor <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="431f3-131">An application would call the `InitializeCommand` method when the program begins, such as in the constructor of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[InputCommandBinding#InitializeCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#initializecommand)]
 [!code-vb[InputCommandBinding#InitializeCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#initializecommand)]  
  
 <span data-ttu-id="431f3-132">Na koniec poniższy przykład tworzy interfejs użytkownika.</span><span class="sxs-lookup"><span data-stu-id="431f3-132">Finally, the following example creates the user interface.</span></span> <span data-ttu-id="431f3-133">W przykładzie dodano <xref:System.Windows.Input.KeyBinding> i <xref:System.Windows.Input.MouseBinding> do <xref:System.Windows.Controls.StackPanel> zawierający <xref:System.Windows.Controls.Button> i <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="431f3-133">The example adds a <xref:System.Windows.Input.KeyBinding> and a <xref:System.Windows.Input.MouseBinding> to a <xref:System.Windows.Controls.StackPanel> that contains a <xref:System.Windows.Controls.Button> and a <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="431f3-134">Gdy użytkownik wybierze element <xref:System.Windows.Controls.ListBox>, użytkownik można zmienić kolor tła wybranego koloru.</span><span class="sxs-lookup"><span data-stu-id="431f3-134">When the user selects an item in the <xref:System.Windows.Controls.ListBox>, he or she can change the color of the background to the selected color.</span></span> <span data-ttu-id="431f3-135">W każdym przypadku `CommandParameter` właściwość jest powiązana z wybranym elemencie <xref:System.Windows.Controls.ListBox>i `Command` właściwość jest powiązana z `ColorChangeCommand`.</span><span class="sxs-lookup"><span data-stu-id="431f3-135">In each case, the `CommandParameter` property is bound to the selected item in the <xref:System.Windows.Controls.ListBox>, and the `Command` property is bound to the `ColorChangeCommand`.</span></span> <span data-ttu-id="431f3-136"><xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, I <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> właściwości są powiązane z odpowiednich właściwości `SimpleDelegateCommand` klasy.</span><span class="sxs-lookup"><span data-stu-id="431f3-136">The <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, and <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> properties are bound to the corresponding properties on the `SimpleDelegateCommand` class.</span></span>  
  
 [!code-xaml[InputCommandBinding#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.InputBindings" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="431f3-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.InputBinding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="431f3-137">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="431f3-138">Udostępnia inicjowania podstawowa dla klasy pochodne <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-138">Provides base initialization for classes derived from <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="431f3-139"><xref:System.Windows.Input.InputBinding> nie jest technicznie klasę abstrakcyjną, ale domyślny konstruktor jest celowo chronionego dostępu.</span><span class="sxs-lookup"><span data-stu-id="431f3-139"><xref:System.Windows.Input.InputBinding> is not technically an abstract class, but the default constructor is deliberately protected access.</span></span> <span data-ttu-id="431f3-140">Ma to wpływ podejmowanie <xref:System.Windows.Input.InputBinding> klasę "abstrakcyjnego" dla XAML.</span><span class="sxs-lookup"><span data-stu-id="431f3-140">This has the effect of making <xref:System.Windows.Input.InputBinding> an "abstract" class for XAML.</span></span> <span data-ttu-id="431f3-141">Istnieją istniejących właściwości w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] użycia XAML, które oczekują obiektów tego typu, które mają <xref:System.Windows.Input.InputBinding>, ale nie można określić <xref:System.Windows.Input.InputBinding> wystąpienia w XAML.</span><span class="sxs-lookup"><span data-stu-id="431f3-141">There are existing properties in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that have XAML usages that expect objects of type <xref:System.Windows.Input.InputBinding>, but you cannot specify an <xref:System.Windows.Input.InputBinding> instance in XAML.</span></span> <span data-ttu-id="431f3-142">Zamiast tego można określić jeden z określonych urządzeń <xref:System.Windows.Input.InputBinding> klasy pochodne jako wartości, na przykład <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-142">Instead, you can specify one of the device-specific <xref:System.Windows.Input.InputBinding> derived classes as values, for instance <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="431f3-143">W przypadku zaimplementowania niestandardowego <see cref="T:System.Windows.Input.InputBinding" /> użycia XAML, która obsługuje, należy użyć tego konstruktora podstawowego inicjowania.</span><span class="sxs-lookup"><span data-stu-id="431f3-143">If you implement a custom <see cref="T:System.Windows.Input.InputBinding" /> that supports a XAML usage, use this constructor for base initialization.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputBinding (System.Windows.Input.ICommand command, System.Windows.Input.InputGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.InputGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As InputGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::InputGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.InputBinding : System.Windows.Input.ICommand * System.Windows.Input.InputGesture -&gt; System.Windows.Input.InputBinding" Usage="new System.Windows.Input.InputBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.InputGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="431f3-144">Polecenie, aby skojarzyć z <paramref name="gesture" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-144">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="431f3-145">Wejściowy gestu do skojarzenia z <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-145">The input gesture to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="431f3-146">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.InputBinding" /> klasy przy użyciu określonego polecenia i zdecydować danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="431f3-146">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class with the specified command and input gesture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="431f3-147">Jeśli jesteś programistą przy użyciu istniejących danych wejściowych wiązania klasy, na ogólnie nie będzie używać tego konstruktora, nawet jeśli są Definiowanie niestandardowych poleceń.</span><span class="sxs-lookup"><span data-stu-id="431f3-147">If you are a software developer using existing input binding classes, you generally will not use this constructor, even if you are defining custom commands.</span></span> <span data-ttu-id="431f3-148">Zamiast tego albo użyje konstruktory klas pochodnych (<xref:System.Windows.Input.KeyBinding> i <xref:System.Windows.Input.MouseBinding>), lub jako podstawowego podczas tworzenia wystąpienia klasy niestandardowej będzie użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="431f3-148">Instead, you will either use constructors of derived classes (<xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>), or you will use this constructor as the base instantiation of a custom class.</span></span> <span data-ttu-id="431f3-149">Mimo że <xref:System.Windows.Input.InputBinding> klasy obsługuje różne urządzenia wejściowego w zasadzie w praktyce należy wybrać urządzenia, które będzie reprezentować powiązania danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="431f3-149">Although the <xref:System.Windows.Input.InputBinding> class supports different input devices in principle, in practice you must choose which device the input binding will represent.</span></span> <span data-ttu-id="431f3-150">Tylko można ustawić tylko jeden <xref:System.Windows.Input.InputBinding.Gesture%2A> wartość powiązania danych wejściowych i gestów są specyficzne dla urządzenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-150">You only can set only one <xref:System.Windows.Input.InputBinding.Gesture%2A> value on the input binding, and gestures are device-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="431f3-151">Poniższy przykład pokazuje, jak użyć tego konstruktora, aby skojarzyć <xref:System.Windows.Input.KeyGesture> z <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="431f3-151">The following example shows how to use this constructor to associate a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#InputBindingAddingComand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#inputbindingaddingcomand)]
 [!code-vb[commandlibrarysnippets#InputBindingAddingComand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#inputbindingaddingcomand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="431f3-152"><paramref name="command" /> lub <paramref name="gesture" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-152"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="431f3-153">Obiekt do klonowania.</span><span class="sxs-lookup"><span data-stu-id="431f3-153">The object to clone.</span></span></param>
        <summary><span data-ttu-id="431f3-154">Kopiuje podstawowej (bez animowane) wartości właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="431f3-154">Copies the base (non-animated) values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="431f3-155">Obiekt do klonowania.</span><span class="sxs-lookup"><span data-stu-id="431f3-155">The object to clone.</span></span></param>
        <summary><span data-ttu-id="431f3-156">Kopiuje bieżące wartości właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="431f3-156">Copies the current values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.InputBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="431f3-157">Pobiera lub ustawia <see cref="T:System.Windows.Input.ICommand" /> skojarzony z tym powiązaniem danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="431f3-157">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="431f3-158">Polecenie skojarzone.</span><span class="sxs-lookup"><span data-stu-id="431f3-158">The associated command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="431f3-159"><xref:System.Windows.Input.InputBinding> Klasa nie obsługuje użycia XAML, ponieważ nie uwidacznia publicznego konstruktora domyślnego (ma domyślnego konstruktora, ale jest on chroniony).</span><span class="sxs-lookup"><span data-stu-id="431f3-159">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</span></span> <span data-ttu-id="431f3-160">Jednak klasy pochodne mogą ujawniać Konstruktor publiczny i w związku z tym, można użyć właściwości, które są dziedziczone z <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-160">However, derived classes can expose a public constructor and therefore, can use properties that are inherited from <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="431f3-161">Dwa istniejące <xref:System.Windows.Input.InputBinding> klasy pochodne mogą być utworzone w XAML, które można ustawić właściwości z użycia XAML są <xref:System.Windows.Input.KeyBinding> i <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-161">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties with XAML usages are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 <span data-ttu-id="431f3-162"><xref:System.Windows.Input.ICommand> odwołuje się do konwerter typu, który umożliwia pewne istniejący wcześniej <xref:System.Windows.Input.ICommand> implementacji, aby określić wartości w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="431f3-162"><xref:System.Windows.Input.ICommand> references a type converter that enables certain preexisting <xref:System.Windows.Input.ICommand> implementations to specify values in the form of a string.</span></span> <span data-ttu-id="431f3-163">To zachowanie konwersji typu Ustawia atrybut formularza wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="431f3-163">This type conversion behavior sets the attribute value form of this property.</span></span> <span data-ttu-id="431f3-164">Możesz również powiązać <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, i <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwości <xref:System.Windows.Input.ICommand> zdefiniowanego w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="431f3-164">You can also bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="431f3-165">Dzięki temu można zdefiniować niestandardowe polecenie i skojarzyć ją z danymi wejściowymi użytkownika.</span><span class="sxs-lookup"><span data-stu-id="431f3-165">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="431f3-166">Aby uzyskać więcej informacji, zobacz drugi przykład w <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-166">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="431f3-167">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-167">XAML Attribute Usage</span></span>  
 <span data-ttu-id="431f3-168"><`inputBindingDerivedClass` `Command`= "<xref:System.Windows.Input.ICommand>" / ></span><span class="sxs-lookup"><span data-stu-id="431f3-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span></span>  
  
<a name="xamlPropertyElementUsage_Command"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="431f3-169">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-169">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Command>  
    <iCommandImplementation/>  
  </inputBindingDerivedClass.Command>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="431f3-170">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-170">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="431f3-171">Klasy pochodne <xref:System.Windows.Input.InputBinding> , która obsługuje składnię obiektów, takich jak <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-171">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="431f3-172">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="431f3-172">See Remarks.</span></span>  
  
 `iCommandImplementation`  
 <span data-ttu-id="431f3-173">Implementacja obiektu <xref:System.Windows.Input.ICommand> , która obsługuje składnia elementu obiektu (nie ma publicznego konstruktora domyślnego).</span><span class="sxs-lookup"><span data-stu-id="431f3-173">An object implementation of <xref:System.Windows.Input.ICommand> that supports object element syntax (has a public default constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="431f3-174">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Input.KeyBinding> powiązać <xref:System.Windows.Input.KeyGesture> do <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-174">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> command.</span></span> <span data-ttu-id="431f3-175">Podczas wykonywania kluczowych gestu polecenie Otwórz, zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="431f3-175">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewkeybinding)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewkeybinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="431f3-176"><see cref="P:System.Windows.Input.InputBinding.Command" /> Wartość <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-176">The <see cref="P:System.Windows.Input.InputBinding.Command" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Input.InputBinding.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="431f3-177">Pobiera lub ustawia dane specyficzne dla polecenia dotyczącą danego polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-177">Gets or sets the command-specific data for a particular command.</span></span></summary>
        <value><span data-ttu-id="431f3-178">Dane specyficzne dla danego polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-178">The command-specific data.</span></span> <span data-ttu-id="431f3-179">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-179">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="431f3-180"><xref:System.Windows.Input.InputBinding.CommandParameter%2A> Właściwość jest używana do przekazania do polecenia szczegółowe informacje, gdy jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="431f3-180">The <xref:System.Windows.Input.InputBinding.CommandParameter%2A> property is used to pass specific information to the command when it is executed.</span></span> <span data-ttu-id="431f3-181">Typ danych jest definiowany przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="431f3-181">The type of the data is defined by the command.</span></span> <span data-ttu-id="431f3-182">Wiele poleceń nie oczekuje parametrów polecenia; dla tych poleceń wszystkie parametry polecenia przekazywane będą ignorowane.</span><span class="sxs-lookup"><span data-stu-id="431f3-182">Many commands do not expect command parameters; for these commands, any command parameters passed will be ignored.</span></span>  
  
 <span data-ttu-id="431f3-183">Czy polecenie, które powiązania danych wejściowych usługi skojarzono z <xref:System.Windows.Input.RoutedCommand>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A> powiązania danych wejściowych jest przekazywany do <xref:System.Windows.Input.RoutedCommand> obsługi za pomocą <xref:System.Windows.Input.ExecutedRoutedEventArgs> i <xref:System.Windows.Input.CanExecuteRoutedEventArgs> danych zdarzenia podczas przetwarzania polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-183">If the command that an input binding is associated with is a <xref:System.Windows.Input.RoutedCommand>, the <xref:System.Windows.Input.InputBinding.CommandParameter%2A> of the input binding is passed to the <xref:System.Windows.Input.RoutedCommand> handlers through the <xref:System.Windows.Input.ExecutedRoutedEventArgs> and the <xref:System.Windows.Input.CanExecuteRoutedEventArgs> event data when the command is processed.</span></span>  
  
 <span data-ttu-id="431f3-184">Typ danych i celem parametr polecenia są zdefiniowane w różny sposób dla każdego polecenia i może być `null`.</span><span class="sxs-lookup"><span data-stu-id="431f3-184">The data type and purpose of the command parameter are defined differently for each command and can be `null`.</span></span> <span data-ttu-id="431f3-185">Możesz powiązać <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, i <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwości <xref:System.Windows.Input.ICommand> zdefiniowanego w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="431f3-185">You can bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="431f3-186">Dzięki temu można zdefiniować niestandardowe polecenie i skojarzyć ją z danymi wejściowymi użytkownika.</span><span class="sxs-lookup"><span data-stu-id="431f3-186">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="431f3-187">Aby uzyskać więcej informacji, zobacz drugi przykład w <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-187">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
 <span data-ttu-id="431f3-188"><xref:System.Windows.Input.InputBinding> Klasa nie obsługuje użycia XAML, ponieważ nie uwidacznia publicznego konstruktora domyślnego (ma domyślnego konstruktora, ale jest on chroniony).</span><span class="sxs-lookup"><span data-stu-id="431f3-188">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</span></span> <span data-ttu-id="431f3-189">Jednak klasy pochodne mogą ujawniać Konstruktor publiczny i w związku z tym, można ustawić właściwości, które są dziedziczone z <xref:System.Windows.Input.InputBinding> z użyciem XAML.</span><span class="sxs-lookup"><span data-stu-id="431f3-189">However, derived classes can expose a public constructor and therefore, can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with XAML usage.</span></span> <span data-ttu-id="431f3-190">Dwa istniejące <xref:System.Windows.Input.InputBinding> klas pochodnych, które mogą być utworzone w XAML i właściwości można ustawić w XAML są <xref:System.Windows.Input.KeyBinding> i <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-190">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="431f3-191">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-191">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandParameter="commandParameterString"/>  
```  
  
<a name="xamlPropertyElementUsage_CommandParameter"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="431f3-192">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-192">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.CommandParameter>  
    <commandParameterObject/>  
  </inputBindingDerivedClass.CommandParameter>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="431f3-193">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-193">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="431f3-194">Klasy pochodne <xref:System.Windows.Input.InputBinding> , która obsługuje składnię obiektów, takich jak <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-194">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="431f3-195">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="431f3-195">See Remarks.</span></span>  
  
 `commandParameterString`  
 <span data-ttu-id="431f3-196">Ciąg, który jest przetwarzany przez określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-196">A string that is processed by a particular command.</span></span> <span data-ttu-id="431f3-197">Ciągi są wspólny typ używany do parametrów polecenia, ponieważ można je łatwo skonfigurować w XAML.</span><span class="sxs-lookup"><span data-stu-id="431f3-197">Strings are the common type used for command parameters because they can be easily set in XAML.</span></span> <span data-ttu-id="431f3-198">Dla formatu oczekiwany ciąg i jego przeznaczenie zobacz dokumentację dla określonego polecenia, które powiązania danych wejściowych jest skojarzona z.</span><span class="sxs-lookup"><span data-stu-id="431f3-198">For the expected string format and its purpose, see the documentation for the particular command that the input binding is associated with.</span></span> <span data-ttu-id="431f3-199">Wiele poleceń nie powinna mieć parametrów.</span><span class="sxs-lookup"><span data-stu-id="431f3-199">Many commands do not expect parameters.</span></span>  
  
 `commandParameterObject`  
 <span data-ttu-id="431f3-200">Obiekt, który jest przetwarzany przez określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-200">An object that is processed by a particular command.</span></span> <span data-ttu-id="431f3-201">Wszystkie istniejące [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] polecenia użyć ciągów.</span><span class="sxs-lookup"><span data-stu-id="431f3-201">All existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commands use strings.</span></span> <span data-ttu-id="431f3-202">W związku z tym ta składnia elementu właściwości ma zastosowanie tylko w scenariuszach polecenie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="431f3-202">Therefore, this property element syntax is only relevant for custom command scenarios.</span></span> <span data-ttu-id="431f3-203">Aby można było obsługuje tej składni `commandParameterObject` obiektu również musi obsługiwać składnia elementu obiektu (musi mieć publicznego konstruktora domyślnego).</span><span class="sxs-lookup"><span data-stu-id="431f3-203">In order to support this syntax, the `commandParameterObject` object must also support object element syntax (must have a public default constructor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="431f3-204">Identyfikuje <see cref="P:System.Windows.Input.InputBinding.CommandParameter" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="431f3-204">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="431f3-205">Identyfikuje <see cref="P:System.Windows.Input.InputBinding.Command" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="431f3-205">Identifies the <see cref="P:System.Windows.Input.InputBinding.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Input.InputBinding.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="431f3-206">Pobiera lub ustawia element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-206">Gets or sets the target element of the command.</span></span></summary>
        <value><span data-ttu-id="431f3-207">Obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-207">The target of the command.</span></span> <span data-ttu-id="431f3-208">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-208">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="431f3-209">W programie Windows Presentation Foundation, polecenia systemowe <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwość <xref:System.Windows.Input.ICommandSource> obiekt jest stosowane tylko wtedy, gdy <xref:System.Windows.Input.ICommand> jest <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="431f3-209">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on an <xref:System.Windows.Input.ICommandSource> object is applicable only when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="431f3-210">Jeśli <xref:System.Windows.Input.InputBinding.CommandTarget%2A> jest ustawiona na <xref:System.Windows.Input.ICommandSource> i odpowiednie polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, jest ignorowana w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-210">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on an <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="431f3-211">Gdy jest używane z <xref:System.Windows.Input.RoutedCommand>, element docelowy polecenia jest obiekt, dla którego <xref:System.Windows.Input.CommandManager.Executed> i <xref:System.Windows.Input.CommandManager.CanExecute> zdarzenia są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="431f3-211">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="431f3-212">Jeśli <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwość nie jest ustawiona, element z fokusem klawiatury jest używany jako element docelowy.</span><span class="sxs-lookup"><span data-stu-id="431f3-212">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property is not set, the element with keyboard focus is used as the target.</span></span>  
  
 <span data-ttu-id="431f3-213"><xref:System.Windows.Input.InputBinding> Sama klasa nie obsługuje użycia XAML, ponieważ nie uwidacznia publicznego konstruktora domyślnego (Brak domyślnego konstruktora, ale jest on chroniony).</span><span class="sxs-lookup"><span data-stu-id="431f3-213">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="431f3-214">Jednak klasy pochodne mogą ujawniać Konstruktor publiczny i w związku z tym można ustawić właściwości, które są dziedziczone z <xref:System.Windows.Input.InputBinding> z użyciem XAML.</span><span class="sxs-lookup"><span data-stu-id="431f3-214">However, derived classes can expose a public constructor and therefore can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="431f3-215">Dwa istniejące <xref:System.Windows.Input.InputBinding> klas pochodnych, które mogą być utworzone w XAML i właściwości można ustawić w XAML są <xref:System.Windows.Input.KeyBinding> i <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-215">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandTarget"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="431f3-216">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-216">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandTarget="bindingToTarget"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="431f3-217">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-217">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="431f3-218">Klasy pochodne <xref:System.Windows.Input.InputBinding> , która obsługuje składnię obiektów, takich jak <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-218">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="431f3-219">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="431f3-219">See Remarks.</span></span>  
  
 `bindingToTarget`  
 <span data-ttu-id="431f3-220">Ciąg, który korzysta z typu składnia powiązania, który może zwrócić odwołanie do obiektu do istniejącej nazwy elementu.</span><span class="sxs-lookup"><span data-stu-id="431f3-220">A string that uses a type of binding syntax that can return an object reference to an existing named element.</span></span> <span data-ttu-id="431f3-221">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="431f3-221">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="431f3-222">Identyfikuje <see cref="P:System.Windows.Input.InputBinding.CommandTarget" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="431f3-222">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="inputBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="431f3-223">Tworzy wystąpienie <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-223">Creates an instance of an <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <returns><span data-ttu-id="431f3-224">Nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="431f3-224">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.InputBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="431f3-225">Pobiera lub ustawia <see cref="T:System.Windows.Input.InputGesture" /> skojarzony z tym powiązaniem danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="431f3-225">Gets or sets the <see cref="T:System.Windows.Input.InputGesture" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="431f3-226">Gest skojarzone.</span><span class="sxs-lookup"><span data-stu-id="431f3-226">The associated gesture.</span></span> <span data-ttu-id="431f3-227">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-227">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="431f3-228">Gest danych wejściowych jest akcja, która wywołuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="431f3-228">The input gesture is the action that invokes the command.</span></span> <span data-ttu-id="431f3-229">Przykłady danych wejściowych gestów w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] są <xref:System.Windows.Input.KeyGesture> i <xref:System.Windows.Input.MouseGesture>.</span><span class="sxs-lookup"><span data-stu-id="431f3-229">Examples of input gestures in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] are <xref:System.Windows.Input.KeyGesture> and <xref:System.Windows.Input.MouseGesture>.</span></span> <span data-ttu-id="431f3-230">A <xref:System.Windows.Input.KeyGesture> jest kombinacją <xref:System.Windows.Input.Key> oraz zestaw <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="431f3-230">A <xref:System.Windows.Input.KeyGesture> is a combination of a <xref:System.Windows.Input.Key> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="431f3-231">A <xref:System.Windows.Input.MouseGesture> jest kombinacją <xref:System.Windows.Input.MouseAction> oraz zestaw <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="431f3-231">A <xref:System.Windows.Input.MouseGesture> is a combination of a <xref:System.Windows.Input.MouseAction> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="431f3-232"><xref:System.Windows.Input.InputBinding> Sama klasa nie obsługuje użycia XAML, ponieważ nie uwidacznia publicznego konstruktora domyślnego (Brak domyślnego konstruktora, ale jest on chroniony).</span><span class="sxs-lookup"><span data-stu-id="431f3-232">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="431f3-233">Jednak klasy pochodne mogą ujawniać Konstruktor publiczny i związku z tym można ustawić właściwości, które są dziedziczone z <xref:System.Windows.Input.InputBinding> z użyciem XAML.</span><span class="sxs-lookup"><span data-stu-id="431f3-233">However, derived classes can expose a public constructor and thus can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="431f3-234">Dwa istniejące <xref:System.Windows.Input.InputBinding> klas pochodnych, które mogą być utworzone w XAML i właściwości można ustawić w XAML są <xref:System.Windows.Input.KeyBinding> i <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-234">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_gesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="431f3-235">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-235">XAML Attribute Usage</span></span>  
 <span data-ttu-id="431f3-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`= "<xref:System.Windows.Input.KeyGesture>" / ></span><span class="sxs-lookup"><span data-stu-id="431f3-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span></span>  
  
 <span data-ttu-id="431f3-237">\- lub —</span><span class="sxs-lookup"><span data-stu-id="431f3-237">\- or -</span></span>  
  
 <span data-ttu-id="431f3-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`= "<xref:System.Windows.Input.MouseGesture>" / ></span><span class="sxs-lookup"><span data-stu-id="431f3-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span></span>  
  
 <span data-ttu-id="431f3-239">\- lub —</span><span class="sxs-lookup"><span data-stu-id="431f3-239">\- or -</span></span>  
  
 <span data-ttu-id="431f3-240"><`inputBindingDerivedClass` `Gesture`= "<xref:System.Windows.Input.InputGesture>" / ></span><span class="sxs-lookup"><span data-stu-id="431f3-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span></span>  
  
<a name="xamlPropertyElementUsage_gesture"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="431f3-241">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-241">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Gesture>  
    <inputGestureImplementation/>  
  </inputBindingDerivedClass.Gesture>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_gesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="431f3-242">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="431f3-242">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="431f3-243">Klasy pochodne <xref:System.Windows.Input.InputBinding> , która obsługuje składnię obiektów, takich jak <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="431f3-243">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="431f3-244">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="431f3-244">See Remarks.</span></span>  
  
 `inputGestureImplementation`  
 <span data-ttu-id="431f3-245">Niestandardowy pochodne klasy <xref:System.Windows.Input.InputGesture> , która obsługuje składnię obiektów.</span><span class="sxs-lookup"><span data-stu-id="431f3-245">A custom derived class of <xref:System.Windows.Input.InputGesture> that supports object element syntax.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="431f3-246">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Input.KeyBinding> powiązać <xref:System.Windows.Input.KeyGesture> do <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="431f3-246">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="431f3-247">Gdy <xref:System.Windows.Input.KeyGesture> wciśnięto ALT + L, <xref:System.Windows.Input.ApplicationCommands.Close%2A> wywoływania polecenia.</span><span class="sxs-lookup"><span data-stu-id="431f3-247">When the <xref:System.Windows.Input.KeyGesture> ALT+L is pressed, the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command is invoked.</span></span>  
  
 [!code-xaml[commandlibrarysnippets#KeyBindingWithKeyAndModifiersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#keybindingwithkeyandmodifiersxaml)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="431f3-248">Obiekt do klonowania.</span><span class="sxs-lookup"><span data-stu-id="431f3-248">The object to clone.</span></span></param>
        <summary><span data-ttu-id="431f3-249">Sprawia, że wystąpienie zamrożone klonowania określonego <see cref="T:System.Windows.Freezable" /> przy użyciu wartości podstawowej (bez animowane) właściwości.</span><span class="sxs-lookup"><span data-stu-id="431f3-249">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> by using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="431f3-250">Obiekt do klonowania.</span><span class="sxs-lookup"><span data-stu-id="431f3-250">The object to clone.</span></span></param>
        <summary><span data-ttu-id="431f3-251">Sprawia, że bieżące wystąpienie zamrożone klonowania określonego <see cref="T:System.Windows.Freezable" />.</span><span class="sxs-lookup"><span data-stu-id="431f3-251">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="431f3-252">Jeśli obiekt ma właściwości animowany zależności, są kopiowane ich bieżącymi wartościami animowany.</span><span class="sxs-lookup"><span data-stu-id="431f3-252">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>