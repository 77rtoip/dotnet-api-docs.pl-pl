<Type Name="MouseGesture" FullName="System.Windows.Input.MouseGesture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa5427c66218c3380f88d1d8f4b5698423c45bfa" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69170461" /></Metadata><TypeSignature Language="C#" Value="public class MouseGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseGesture : System::Windows::Input::InputGesture" />
  <TypeSignature Language="F#" Value="type MouseGesture = class&#xA;    inherit InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.MouseGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.MouseGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje gest wprowadzania myszy, którego można użyć do wywołania polecenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przeciwieństwie <xref:System.Windows.Input.KeyGesture>do, <xref:System.Windows.Input.MouseAction> a nie musi być sparowany z <xref:System.Windows.Input.ModifierKeys> , aby był prawidłowy <xref:System.Windows.Input.MouseGesture>.  
  
 <xref:System.Windows.Input.MouseGesture> Można powiązać <xref:System.Windows.Input.ICommand> z (lub <xref:System.Windows.Input.MouseGesture> innymiimplementacjami)zapomocąpolecenia,abypoleceniezostałowywołanepowystąpieniu.<xref:System.Windows.Input.MouseBinding> <xref:System.Windows.Input.RoutedCommand>  
  
 W <xref:System.Windows.Input.MouseGesture> przypadku [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] użycia atrybutów właściwość, która jest zwykle ustawiona w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] to <xref:System.Windows.Input.MouseBinding.Gesture%2A>, w przypadkach, gdy gest może reprezentować akcję myszy i jeden lub więcej klawisza modyfikującego. Możesz również ustawić <xref:System.Windows.Input.MouseBinding.Gesture%2A> właściwość jako tylko akcję myszy. Ogólnie rzecz biorąc zaleca się użycie tylko <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu z [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a nie ustawienie <xref:System.Windows.Input.MouseBinding.MouseAction%2A>, nawet jeśli nie określisz modyfikatorów. Pozwoli to uniknąć niejednoznaczności, zapewnia najbardziej ulepszoną składnię i zapewnia najbardziej prostą reprezentację serializacji.  
  
 <xref:System.Windows.Input.MouseGesture>Użycie elementów obiektu jest możliwe, ale nietypowe, ponieważ można zwykle <xref:System.Windows.Input.MouseBinding.Gesture%2A> ustawić właściwość <xref:System.Windows.Input.MouseBinding> śródwierszowego bez użycia składni elementu właściwości. [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]  
  
<a name="xamlAttributeUsage_MouseGesture"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="mouseAction"/>  
- or -  
<object property="oneOrMoreModifierKeys+mouseAction"/>  
```  
  
<a name="xamlValues_MouseGesture"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 `mouseAction`  
 <xref:System.Windows.Input.MouseAction>  
  
 Pojedyncza Akcja myszy.  
  
 `oneOrMoreModifierKeys`  
 Co najmniej jeden klawisz modyfikujący, zdefiniowany przez <xref:System.Windows.Input.ModifierKeys> Wyliczenie. Jeśli podano więcej niż jeden klawisz modyfikujący, każdy klawisz modyfikujący jest rozdzielany znakiem "+".  
  
   
  
## Examples  
 Poniższy przykład pokazuje, aby utworzyć <xref:System.Windows.Input.MouseGesture> i skojarzyć go <xref:System.Windows.Input.RoutedCommand> z <xref:System.Windows.Input.MouseBinding>.  Po kliknięciu kółka myszy podczas <xref:System.Windows.Input.ModifierKeys.Control> naciskania <xref:System.Windows.Input.ApplicationCommands.Open%2A> klawisza jest wywoływana.  
  
 [!code-xaml[commandlibrarysnippets#MouseBindingMouseGestureXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#mousebindingmousegesturexaml)]  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.MouseGesture" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.MouseGesture" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture (System.Windows.Input.MouseAction mouseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.MouseAction mouseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture(System::Windows::Input::MouseAction mouseAction);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseGesture : System.Windows.Input.MouseAction -&gt; System.Windows.Input.MouseGesture" Usage="new System.Windows.Input.MouseGesture mouseAction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mouseAction" Type="System.Windows.Input.MouseAction" />
      </Parameters>
      <Docs>
        <param name="mouseAction">Akcja skojarzona z tym gestem.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Input.MouseGesture" /> klasy przy użyciu określonego <see cref="T:System.Windows.Input.MouseAction" />elementu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="mouseAction" />nie jest prawidłową <see cref="T:System.Windows.Input.MouseAction" /> wartością.</exception>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture (System.Windows.Input.MouseAction mouseAction, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.MouseAction mouseAction, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture(System::Windows::Input::MouseAction mouseAction, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseGesture : System.Windows.Input.MouseAction * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.MouseGesture" Usage="new System.Windows.Input.MouseGesture (mouseAction, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouseAction" Type="System.Windows.Input.MouseAction" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="mouseAction">Akcja skojarzona z tym gestem.</param>
        <param name="modifiers">Modyfikatory skojarzone z tym gestem.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Input.MouseGesture" /> klasy przy użyciu określonych <see cref="T:System.Windows.Input.MouseAction" /> elementów i <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="mouseAction" />nie jest prawidłową <see cref="T:System.Windows.Input.MouseAction" /> wartością 
—lub— 
 <paramref name="modifiers" />nie jest prawidłową <see cref="T:System.Windows.Input.ModifierKeys" /> wartością.</exception>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberSignature Language="F#" Value="override this.Matches : obj * System.Windows.Input.InputEventArgs -&gt; bool" Usage="mouseGesture.Matches (targetElement, inputEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement">Element docelowy.</param>
        <param name="inputEventArgs">Dane wejściowe zdarzenia do porównania z tym gestem.</param>
        <summary>Określa, <see cref="T:System.Windows.Input.MouseGesture" /> czy pasuje do danych wejściowych skojarzonych z <see cref="T:System.Windows.Input.InputEventArgs" /> określonym obiektem.</summary>
        <returns><see langword="true" />Jeśli dane zdarzenia pasują <see cref="T:System.Windows.Input.MouseGesture" />do siebie; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak sprawdzić, czy <xref:System.Windows.Input.MouseGesture> pasuje do danych wejściowych skojarzonych z wystąpieniem. <xref:System.Windows.Input.InputEventArgs> Program obsługi <xref:System.Windows.Input.MouseGesture> <xref:System.Windows.Input.MouseGesture.Matches%2A> zdarzeń porównuje dane zdarzenia z przy użyciu metody. <xref:System.Windows.UIElement.MouseDown>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlermousegesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlermousegesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.MouseGesture.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klawisze modyfikujące skojarzone z tym <see cref="T:System.Windows.Input.MouseGesture" />elementem.</summary>
        <value>Klawisze modyfikujące skojarzone z tym gestem. Wartość domyślna to <see cref="F:System.Windows.Input.ModifierKeys.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przeciwieństwie <xref:System.Windows.Input.KeyGesture>do, <xref:System.Windows.Input.MouseAction> a nie musi być sparowany z <xref:System.Windows.Input.ModifierKeys> , aby była prawidłowa <xref:System.Windows.Input.MouseGesture>.  
  
 <xref:System.Windows.Input.ModifierKeys>jest wyliczeniem pól bitowych, dzięki czemu możliwe jest naciśnięcie wielu klawiszy modyfikujących w tym samym czasie. Użyj operacji bitowych do określenia dokładnego zestawu klawiszy modyfikujących.  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreModifierKeys*  
 Co najmniej jeden klawisz modyfikujący, zdefiniowany przez <xref:System.Windows.Input.ModifierKeys> Wyliczenie, rozdzielany znakiem "+".  
  
   
  
## Examples  
 Poniższy przykład pokazuje, aby utworzyć <xref:System.Windows.Input.MouseGesture> i skojarzyć go <xref:System.Windows.Input.RoutedCommand> z <xref:System.Windows.Input.MouseBinding>.  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="MouseAction">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseAction MouseAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseAction MouseAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseGesture.MouseAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseAction As MouseAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseAction MouseAction { System::Windows::Input::MouseAction get(); void set(System::Windows::Input::MouseAction value); };" />
      <MemberSignature Language="F#" Value="member this.MouseAction : System.Windows.Input.MouseAction with get, set" Usage="System.Windows.Input.MouseGesture.MouseAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Input.MouseAction" /> skojarzoną z tym gestem.</summary>
        <value>Akcja myszy skojarzona z tym gestem. Wartość domyślna to <see cref="F:System.Windows.Input.MouseAction.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przeciwieństwie <xref:System.Windows.Input.KeyGesture>do, <xref:System.Windows.Input.MouseAction> a nie musi być sparowany z <xref:System.Windows.Input.ModifierKeys> , aby była prawidłowa <xref:System.Windows.Input.MouseGesture>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, aby utworzyć <xref:System.Windows.Input.MouseGesture> i skojarzyć go <xref:System.Windows.Input.RoutedCommand> z <xref:System.Windows.Input.MouseBinding>.  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>
