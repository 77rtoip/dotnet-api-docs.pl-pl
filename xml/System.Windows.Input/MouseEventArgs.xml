<Type Name="MouseEventArgs" FullName="System.Windows.Input.MouseEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7411546598fbaf40959962f80f94539098f4fb83" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36505900" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseEventArgs : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type MouseEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dane dotyczące myszy kierowane zdarzenia, które nie specjalnie obejmują przycisków myszy i kółka myszy, na przykład <see cref="E:System.Windows.UIElement.MouseMove" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa danych zdarzenia jest używany z następujących dołączone zdarzenia.  
  
-   <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType>  
  
 Ta klasa danych zdarzenia jest używany z następujących kierowane zdarzenia. Te kierowane zdarzenia przekazywania wymienione wcześniej dołączone zdarzenia, aby nadać im dostęp do modelu elementu ogólne w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].  
  
-   <xref:System.Windows.UIElement.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=nameWithType>  
  
 Dołączone zdarzenia i zdarzenia element base kierowane udostępniać swoje dane zdarzeń i propagacji i tunelowania wersji kierowane zdarzenia również udostępniać dane zdarzenia. Może to wpłynąć na obsługiwany właściwości zdarzenia, podczas przekazywania trasy zdarzenia. Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 Inne niż <xref:System.Windows.RoutedEventArgs> właściwości, które są odpowiednie dla wszystkich zdarzeń routingiem najbardziej interesujące właściwości <xref:System.Windows.Input.MouseEventArgs> używanego w <xref:System.Windows.Input.MouseEventHandler> wdrożenia są kilka właściwości, które udostępniają bieżący stan przycisku (na przykład <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) i <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>). <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> przydaje się zwłaszcza, ponieważ można sprawdzić <xref:System.Windows.Input.MouseDevice.Captured%2A> na nim.  
  
 Należy pamiętać, że zdarzenia, które w szczególności postępowania w przypadku zdarzeń przycisk myszy używanie klasy danych zdarzeń, <xref:System.Windows.Input.MouseButtonEventArgs>. Właściwości przycisku myszy, są dostępne na <xref:System.Windows.Input.MouseEventArgs> w przypadku, gdy istnieją trybami danych wejściowych lub interakcji, obejmujących przycisków, nawet jeśli są Obsługa zdarzeń z systemem innym niż przycisku.  
  
 <xref:System.Windows.Input.Mouse> Klasa udostępnia dodatkowe właściwości i metod określania stanu myszy.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseEventHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.MouseEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseEventArgs : System.Windows.Input.MouseDevice * int -&gt; System.Windows.Input.MouseEventArgs" Usage="new System.Windows.Input.MouseEventArgs (mouse, timestamp)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse">Urządzenie myszy skojarzonego z tym zdarzeniem.</param>
        <param name="timestamp">Godzina wystąpienia danych wejściowych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.MouseEventArgs" /> przy użyciu określonego <see cref="T:System.Windows.Input.MouseDevice" /> i sygnatura czasowa</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.StylusDevice stylusDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, class System.Windows.Input.StylusDevice stylusDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::StylusDevice ^ stylusDevice);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.StylusDevice -&gt; System.Windows.Input.MouseEventArgs" Usage="new System.Windows.Input.MouseEventArgs (mouse, timestamp, stylusDevice)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="stylusDevice" Type="System.Windows.Input.StylusDevice" />
      </Parameters>
      <Docs>
        <param name="mouse">Urządzenie myszy skojarzonego z tym zdarzeniem.</param>
        <param name="timestamp">Godzina wystąpienia danych wejściowych.</param>
        <param name="stylusDevice">Urządzenie logiczne pióro skojarzonego z tym zdarzeniem.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.MouseEventArgs" /> przy użyciu określonego <see cref="T:System.Windows.Input.MouseDevice" />, timestamp, i <see cref="T:System.Windows.Input.StylusDevice" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="mouseEventArgs.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Element do użycia jako układ odniesienia obliczeniem pozycji wskaźnik myszy.</param>
        <summary>Zwraca pozycję wskaźnika myszy względem określonego elementu.</summary>
        <returns>- Współrzędnych x i y położenia wskaźnika myszy względem określonego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Punkt (0,0) jest lewego górnego rogu układ odniesienia.  
  
 Statycznych <xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=nameWithType> metody można również uzyskać położenie kursora myszy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">Ogólny program obsługi do wywołania w sposób określonego typu.</param>
        <param name="genericTarget">Element docelowy może wywołać programu obsługi.</param>
        <summary>Wywołuje procedury obsługi zdarzeń w sposób określonego typu, co może zwiększyć wydajność systemu zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja rzutuje obsługi ogólnej jako <xref:System.Windows.Input.MouseEventHandler> , a następnie wywołuje go. Szczegółowe informacje dotyczące tego wzorca implementacji i przyczyny, zobacz <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> i [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseEventArgs.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseEventArgs.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan lewego przycisku myszy.</summary>
        <value>Bieżący stan lewego przycisku myszy, który może być <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> lub <see cref="F:System.Windows.Input.MouseButtonState.Released" />.  Nie ma żadnej wartości domyślnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse> Klasa udostępnia dodatkowe właściwości i metod określania stanu myszy.  
  
   
  
## Examples  
 Poniższy przykład wyświetla komunikat, jeśli stan <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A> jest właściwość <xref:System.Windows.Input.MouseButtonState.Pressed>.  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsLeftButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsleftbuttondown)]
 [!code-vb[mousesnippetsample#MouseEventArgsLeftButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsleftbuttondown)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseEventArgs.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseEventArgs.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan środkowego przycisku myszy.</summary>
        <value>Bieżący stan środkowego przycisku myszy, który może być <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> lub <see cref="F:System.Windows.Input.MouseButtonState.Released" />. Nie ma żadnej wartości domyślnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse> Klasa udostępnia dodatkowe właściwości i metod określania stanu myszy.  
  
   
  
## Examples  
 Poniższy przykład wyświetla komunikat, jeśli stan <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> jest właściwość <xref:System.Windows.Input.MouseButtonState.Pressed>.  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsmiddlebuttondown)]
 [!code-vb[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsmiddlebuttondown)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseDevice MouseDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.MouseDevice MouseDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseEventArgs.MouseDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseDevice ^ MouseDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MouseDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.MouseEventArgs.MouseDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera urządzenie myszy skojarzonego z tym zdarzeniem.</summary>
        <value>Urządzenie myszy skojarzonego z tym zdarzeniem.  Nie ma żadnej wartości domyślnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse> Klasa udostępnia dodatkowe właściwości i metod określania stanu myszy.  
  
   
  
## Examples  
 Poniższy przykład pobiera <xref:System.Windows.Input.MouseDevice> skojarzone ze zdarzeniem wejściowego.  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsMouseDevice](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsmousedevice)]
 [!code-vb[mousesnippetsample#MouseEventArgsMouseDevice](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsmousedevice)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseEventArgs.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseEventArgs.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan prawym przyciskiem myszy.</summary>
        <value>Bieżący stan prawym przyciskiem myszy, który może być <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> lub <see cref="F:System.Windows.Input.MouseButtonState.Released" />.  Nie ma żadnej wartości domyślnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse> Klasa udostępnia dodatkowe właściwości i metod określania stanu myszy.  
  
   
  
## Examples  
 Poniższy przykład wyświetla komunikat, jeśli stan <xref:System.Windows.Input.MouseEventArgs.RightButton%2A> jest właściwość <xref:System.Windows.Input.MouseButtonState.Pressed>.  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsRightButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsrightbuttondown)]
 [!code-vb[mousesnippetsample#MouseEventArgsRightButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsrightbuttondown)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusDevice StylusDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusDevice StylusDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseEventArgs.StylusDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StylusDevice As StylusDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusDevice ^ StylusDevice { System::Windows::Input::StylusDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StylusDevice : System.Windows.Input.StylusDevice" Usage="System.Windows.Input.MouseEventArgs.StylusDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera urządzenia pióro skojarzonego z tym zdarzeniem.</summary>
        <value>Pióro skojarzonego z tym zdarzeniem.  Nie ma żadnej wartości domyślnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób pobrać <xref:System.Windows.Input.StylusDevice> skojarzone ze zdarzeniem.  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsStylusDevice](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsstylusdevice)]
 [!code-vb[mousesnippetsample#MouseEventArgsStylusDevice](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsstylusdevice)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseEventArgs.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseEventArgs.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan przycisku myszy rozszerzonej pierwszej.</summary>
        <value>Bieżący stan przycisku myszy rozszerzonej pierwszej jest <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> lub <see cref="F:System.Windows.Input.MouseButtonState.Released" />.  Nie ma żadnej wartości domyślnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse> Klasa udostępnia dodatkowe właściwości i metod określania stanu myszy.  
  
   
  
## Examples  
 Poniższy przykład wyświetla komunikat, jeśli stan <xref:System.Windows.Input.MouseEventArgs.XButton1%2A> jest właściwość <xref:System.Windows.Input.MouseButtonState.Pressed>.  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsxbutton1buttondown)]
 [!code-vb[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsxbutton1buttondown)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseEventArgs.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseEventArgs.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan drugiego przycisku myszy rozszerzonej.</summary>
        <value>Bieżący stan przycisku myszy rozszerzonej drugiej, który może być <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> lub <see cref="F:System.Windows.Input.MouseButtonState.Released" />.  Nie ma żadnej wartości domyślnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse> Klasa udostępnia dodatkowe właściwości i metod określania stanu myszy.  
  
   
  
## Examples  
 Poniższy przykład wyświetla komunikat, jeśli stan <xref:System.Windows.Input.MouseEventArgs.XButton2%2A> jest właściwość <xref:System.Windows.Input.MouseButtonState.Pressed>.  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsxbutton2buttondown)]
 [!code-vb[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsxbutton2buttondown)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>