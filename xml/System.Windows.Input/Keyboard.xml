<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdef40b3d99434c0b95ddc285db36b2b9727360b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69171971" /></Metadata><TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9d4d8-101">Reprezentuje urządzenie klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-101">Represents the keyboard device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-102"><xref:System.Windows.Input.Keyboard> Klasa zawiera zdarzenia, metody i właściwości dotyczące klawiatury, które zawierają informacje dotyczące stanu klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-102">The <xref:System.Windows.Input.Keyboard> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</span></span>  
  
 <span data-ttu-id="9d4d8-103">Wszystkie zdarzenia, które <xref:System.Windows.Input.Keyboard> definiuje jako dołączone zdarzenie, są również ponownie uwidaczniane przez klasy <xref:System.Windows.UIElement> elementów podstawowych i <xref:System.Windows.ContentElement> jako nowe zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-103">Each of the events that <xref:System.Windows.Input.Keyboard> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="9d4d8-104">Ogólnie rzecz biorąc, bardziej wygodne jest obsłużenie zdarzeń klawiatury dla aplikacji <xref:System.Windows.UIElement> <xref:System.Windows.Input.Keyboard> , <xref:System.Windows.ContentElement>a nie przy użyciu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-104">Generally, it is more convenient to handle keyboard events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Keyboard> events.</span></span> <span data-ttu-id="9d4d8-105">Aby uzyskać szczegółowe informacje, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-106">Aby element mógł odbierać dane wejściowe z klawiatury, element musi być skoncentrowany.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-106">In order for an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="9d4d8-107">Większość <xref:System.Windows.UIElement> obiektów pochodnych jest domyślnie skoncentrowana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-107">Most <xref:System.Windows.UIElement> derived objects are focusable by default.</span></span> <span data-ttu-id="9d4d8-108">W przeciwnym razie, aby można było skupić element, należy <xref:System.Windows.UIElement.Focusable%2A> ustawić właściwość elementu podstawowego na. `true`</span><span class="sxs-lookup"><span data-stu-id="9d4d8-108">Otherwise, to make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="9d4d8-109">Aby uzyskać więcej informacji na temat elementów podstawowych, zobacz [Omówienie elementów podstawowych](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-109">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-110"><xref:System.Windows.Controls.Panel>klasy, takie jak <xref:System.Windows.Controls.StackPanel> i <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.UIElement.Focusable%2A> mają ustawioną wartość domyślną równą `false`.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-110"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`.</span></span> <span data-ttu-id="9d4d8-111">W związku z tym dla tych obiektów Aby uzyskać fokus <xref:System.Windows.UIElement.Focusable%2A> klawiatury, należy `true`ustawić wartość.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-111">Therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="9d4d8-112">Fokus klawiatury odwołuje się do obiektu, który otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-112">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="9d4d8-113">Element z fokusem klawiatury ma <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> `true`ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-113">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="9d4d8-114">Na całym pulpicie może istnieć tylko jeden element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-114">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="9d4d8-115">Fokus logiczny odnosi się do obiektu w zakresie fokusu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-115">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="9d4d8-116">Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie koncentracji uwagi](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-116">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-117">Statyczny element członkowski <xref:System.Windows.Input.Keyboard> klasy delegowany do podstawowego <xref:System.Windows.Input.KeyboardDevice> wątku wywołującego, więc nie są zawsze bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-117">The static members of the <xref:System.Windows.Input.Keyboard> class delegate to the primary <xref:System.Windows.Input.KeyboardDevice> of the calling thread, so they are not necessarily thread-safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-118">Poniższy przykład pokazuje, <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> jak używać metody w celu ustalenia, czy klucz jest w stanie przełączenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-118">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine if a key is in the toggled state.</span></span> <span data-ttu-id="9d4d8-119">W przypadku przełączenia do <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> przełącznika zostanie zmieniony tło przycisku. <xref:System.Windows.Input.Key></span><span class="sxs-lookup"><span data-stu-id="9d4d8-119">If the <xref:System.Windows.Input.Key> passed to <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> is toggled, the background of a button is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-120"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-120">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-121">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-121">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-122">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-122">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-123">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-123">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-124"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-125">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-125">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-126">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-126">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-127">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-127">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-128"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-129">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-129">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-130">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-130">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-131">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-131">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-132"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-132">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-133">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-133">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-134">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-134">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-135">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-135">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-136"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-136">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-137">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-137">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-138">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-138">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-139">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-139">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-140"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-141">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-141">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-142">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-142">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-143">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-143">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-144"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-144">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-145">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-145">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-146">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-146">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-147">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-147">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-148"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-148">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-149">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-149">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-150">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-150">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-151">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-151">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-152"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-153">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-153">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-154">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-154">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-155">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-155">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-156"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-156">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-157">Procedura obsługi zdarzeń, która ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-157">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9d4d8-158">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-158">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-159">Ta metoda zapewnia metody dostępu dołączone do kodu i [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przetwarzania <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> atrybutów dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-159">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberSignature Language="F#" Value="static member ClearFocus : unit -&gt; unit" Usage="System.Windows.Input.Keyboard.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d4d8-160">Czyści fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-160">Clears focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-161">Jeśli fokus znajduje się w oknie Win32, WPF wywołuje <xref:System.Windows.Input.Keyboard.ClearFocus%2A> metodę na przywracanie fokusu, gdy menu jest zamknięte.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-161">If focus is within a Win32 window, WPF calls the <xref:System.Windows.Input.Keyboard.ClearFocus%2A> method on restoration of focus when a menu is closed.</span></span>  
  
 <span data-ttu-id="9d4d8-162">W przypadku opuszczania trybu menu fokus Win32 jest zwracany do hostowanego elementu podrzędnego HWND, a żaden element nie ma fokusu WPF.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-162">When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-163">Pobiera lub ustawia zachowanie [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] podczas przywracania fokusu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-163">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span></span></summary>
        <value><span data-ttu-id="9d4d8-164">Wartość wyliczenia, która określa zachowanie [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] podczas przywracania fokusu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-164">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span></span> <span data-ttu-id="9d4d8-165">Wartość domyślna w <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-165">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Focus : System.Windows.IInputElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.Focus element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-166">Element, dla którego ma zostać ustawiony fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-166">The element on which to set keyboard focus.</span></span></param>
        <summary><span data-ttu-id="9d4d8-167">Ustawia fokus klawiatury dla określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-167">Sets keyboard focus on the specified element.</span></span></summary>
        <returns><span data-ttu-id="9d4d8-168">Element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-168">The element with keyboard focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-169">Aby element otrzymywał dane wejściowe z klawiatury, element musi być skoncentrowany.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-169">For an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="9d4d8-170">Aby można było skupić element, należy ustawić <xref:System.Windows.UIElement.Focusable%2A> właściwość elementu podstawowego na. `true`</span><span class="sxs-lookup"><span data-stu-id="9d4d8-170">To make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="9d4d8-171">Aby uzyskać więcej informacji na temat elementów podstawowych, zobacz [Omówienie elementów podstawowych](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-171">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  <span data-ttu-id="9d4d8-172"><xref:System.Windows.Controls.Panel>klasy, takie jak <xref:System.Windows.Controls.StackPanel> i <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.UIElement.Focusable%2A> mają ustawioną wartość domyślną równą `false`; w związku z tym obiekty, które mają mieć <xref:System.Windows.UIElement.Focusable%2A> fokus klawiatury, muszą `true`być ustawione na.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-172"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`; therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="9d4d8-173">Fokus klawiatury odwołuje się do obiektu, który otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-173">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="9d4d8-174">Element z fokusem klawiatury ma <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> `true`ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-174">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="9d4d8-175">Na całym pulpicie może istnieć tylko jeden element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-175">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="9d4d8-176">Fokus logiczny odnosi się do obiektu w zakresie fokusu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-176">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="9d4d8-177">Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie koncentracji uwagi](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-177">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-178">Element z fokusem klawiatury ma także fokus logiczny dla zakresu fokusu, do którego należy element.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-178">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="9d4d8-179">Element z fokusem logicznym może mieć fokus klawiatury lub nie może go.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-179">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-180">Poniższy przykład pokazuje <xref:System.Windows.FrameworkElement.Loaded> procedurę obsługi zdarzeń, która ustawia fokus klawiatury <xref:System.Windows.Controls.Button>na.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-180">The following example shows a <xref:System.Windows.FrameworkElement.Loaded> event handler that sets keyboard focus on a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-181">Pobiera element, który ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-181">Gets the element that has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="9d4d8-182">Element z fokusem.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-182">The focused element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-183">Fokus klawiatury odwołuje się do obiektu, który otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-183">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="9d4d8-184">Element z fokusem klawiatury ma <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> `true`ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-184">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="9d4d8-185">Na całym pulpicie może istnieć tylko jeden element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-185">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="9d4d8-186">Fokus logiczny odnosi się do obiektu w zakresie fokusu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-186">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="9d4d8-187">Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie koncentracji uwagi](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-187">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-188">Element z fokusem klawiatury ma także fokus logiczny dla zakresu fokusu, do którego należy element.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-188">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="9d4d8-189">Element z fokusem logicznym może mieć fokus klawiatury lub nie może go.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-189">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-190">Poniższy przykład pobiera element z fokusem klawiatury i rzutuje go na <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-190">The following example gets the element with keyboard focus and casts it to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="9d4d8-191">Jeśli element z fokusem klawiatury jest <xref:System.Windows.Controls.Control>, tło elementu jest zmieniane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-191">If the element with keyboard focus is a <xref:System.Windows.Controls.Control>, the background of the element is changed.</span></span>  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member GetKeyStates : System.Windows.Input.Key -&gt; System.Windows.Input.KeyStates" Usage="System.Windows.Input.Keyboard.GetKeyStates key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9d4d8-192">Określony klucz.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-192">The specified key.</span></span></param>
        <summary><span data-ttu-id="9d4d8-193">Pobiera zestaw najważniejszych Stanów dla określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-193">Gets the set of key states for the specified key.</span></span></summary>
        <returns><span data-ttu-id="9d4d8-194">Bitowa kombinacja <see cref="T:System.Windows.Input.KeyStates" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-194">A bitwise combination of the <see cref="T:System.Windows.Input.KeyStates" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-195"><xref:System.Windows.Input.KeyStates>to Wyliczenie pola bitowego; w związku z tym, istnieje możliwość, aby klucz był w wielu stanach.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-195"><xref:System.Windows.Input.KeyStates> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</span></span>  <span data-ttu-id="9d4d8-196">Na przykład klucz może być w stanie naciśniętym, a także w stanie przełączenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-196">For example, a key could be in the pressed state as well as in the toggled state.</span></span>  <span data-ttu-id="9d4d8-197">Użyj operacji porównywania bitowego, aby określić dokładny stan lub Stany, w których znajduje się klucz.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-197">Use bit comparison operations to determine the exact state or states the key is in.</span></span>  
  
 <span data-ttu-id="9d4d8-198"><xref:System.Windows.Input.Keyboard> Klasa zawiera wiele metod statycznych, które mogą być również używane do uzyskiwania informacji o stanie klucza.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-198">The <xref:System.Windows.Input.Keyboard> class provides a number of static methods which can also be used to obtain key state information.</span></span>  <span data-ttu-id="9d4d8-199">Metody to: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, i <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-199">The methods are: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, and <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-200">Poniższy przykład pokazuje, <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> jak używać metody, aby określić, <xref:System.Windows.Input.Key.Return> czy klucz jest w <xref:System.Windows.Input.KeyStates.Down> stanie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-200">The following example shows how to use the <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method to determine if the <xref:System.Windows.Input.Key.Return> key is in the <xref:System.Windows.Input.KeyStates.Down> state.</span></span>  <span data-ttu-id="9d4d8-201">Bit i operacja są używane do porównywania <xref:System.Windows.Input.KeyStates> zwróconych z <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> i <xref:System.Windows.Input.Key.Down> stanu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-201">A bit AND operation is used to compare the <xref:System.Windows.Input.KeyStates> returned from <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> and the <xref:System.Windows.Input.Key.Down> state.</span></span> <span data-ttu-id="9d4d8-202">Jeśli klucz nie działa, tło <xref:System.Windows.Controls.Button> jest zmieniane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-202">If the key is down, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" Usage="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-203">Występuje, gdy element otrzymuje fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-203">Occurs when an element receives keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-204">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-204">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-205">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-205">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-206">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-206">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-207">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-207">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-208">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-208">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-209">Fokus klawiatury odwołuje się do obiektu, który otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-209">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="9d4d8-210">Element z fokusem klawiatury ma <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> `true`ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-210">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="9d4d8-211">Na całym pulpicie może istnieć tylko jeden element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-211">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="9d4d8-212">Fokus logiczny odnosi się do obiektu w zakresie fokusu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-212">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="9d4d8-213">Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie koncentracji uwagi](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-213">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-214"><xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> Jeśli zdarzenie<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> lub zdarzenie jest obsługiwane, fokus klawiatury zmienia się.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-214">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does change.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocusEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-215">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-215">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-216">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-216">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.GotKeyboardFocusEvent>|  
|<span data-ttu-id="9d4d8-217">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-217">Routing strategy</span></span>|<span data-ttu-id="9d4d8-218">Propagacja</span><span class="sxs-lookup"><span data-stu-id="9d4d8-218">Bubbling</span></span>|  
|<span data-ttu-id="9d4d8-219">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-219">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="9d4d8-220">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-220">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-221">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> i dołącza programy obsługi zdarzeń <xref:System.Windows.UIElement.GotKeyboardFocus> dla zdarzenia i <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-221">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="9d4d8-222">Gdy klawiatura <xref:System.Windows.Controls.TextBox> uzyskuje fokus, kolor tła jest zmieniany, a tekst jest wyczyszczony. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="9d4d8-222">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="9d4d8-223"><xref:System.Windows.Controls.TextBlock> Gdy utraci fokus klawiatury, kolor tła zostanie zmieniony i wywoływana jest metoda, która resetuje zmienne używane w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-223">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called which resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-224"><see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-224">Identifies the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-225">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-226">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-227">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyDown : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyDown key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9d4d8-228">Określony klucz.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-228">The specified key.</span></span></param>
        <summary><span data-ttu-id="9d4d8-229">Określa, czy określony klucz został naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-229">Determines whether the specified key is pressed.</span></span></summary>
        <returns><span data-ttu-id="9d4d8-230"><see langword="true" />Jeśli <paramref name="key" /> jest w stanie down; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-230"><see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-231"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> Metoda może służyć do określenia zestawu Stanów określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-231">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-232">Poniższy przykład pokazuje, <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> jak używać metody do określenia stanu określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-232">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="9d4d8-233">Klucz jest przesyłany <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> do metody. <xref:System.Windows.Input.Key.Return></span><span class="sxs-lookup"><span data-stu-id="9d4d8-233">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method.</span></span>  <span data-ttu-id="9d4d8-234">Jeśli metoda zwraca `true`, tło <xref:System.Windows.Controls.Button> jest zmieniane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-234">If the method returns `true`, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyToggled : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyToggled key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9d4d8-235">Określony klucz.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-235">The specified key.</span></span></param>
        <summary><span data-ttu-id="9d4d8-236">Określa, czy określony klucz jest przełączany.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-236">Determines whether the specified key is toggled.</span></span></summary>
        <returns><span data-ttu-id="9d4d8-237"><see langword="true" />Jeśli <paramref name="key" /> jest w stanie przełączenia; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-237"><see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-238"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> Metoda może służyć do określenia zestawu Stanów określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-238">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-239">Poniższy przykład pokazuje, <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> jak używać metody do określenia stanu określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-239">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine the state of a specific key.</span></span> <span data-ttu-id="9d4d8-240">Klucz jest przesyłany <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> do metody. <xref:System.Windows.Input.Key.Return></span><span class="sxs-lookup"><span data-stu-id="9d4d8-240">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method.</span></span>  <span data-ttu-id="9d4d8-241">Jeśli metoda zwraca `true`, tło <xref:System.Windows.Controls.Button> jest zmieniane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-241">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyUp : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyUp key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9d4d8-242">Klucz do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-242">The key to check.</span></span></param>
        <summary><span data-ttu-id="9d4d8-243">Określa, czy określony klucz jest wydawany.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-243">Determines whether the specified key is released.</span></span></summary>
        <returns><span data-ttu-id="9d4d8-244"><see langword="true" />Jeśli <paramref name="key" /> jest w stanie up; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-244"><see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-245"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> Metoda może służyć do określenia zestawu Stanów określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-245">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-246">Poniższy przykład pokazuje, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> jak używać metody do określenia stanu określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-246">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="9d4d8-247">Klucz jest przesyłany <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> do metody. <xref:System.Windows.Input.Key.Return></span><span class="sxs-lookup"><span data-stu-id="9d4d8-247">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method.</span></span>  <span data-ttu-id="9d4d8-248">Jeśli metoda zwraca `true`, tło <xref:System.Windows.Controls.Button> jest zmieniane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-248">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" Usage="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-249">Występuje, gdy dostawca wejściowy klawiatury uzyska fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-249">Occurs when the keyboard input provider acquires focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-250">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-250">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-251">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-251">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-252">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-252">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-253">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-253">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-254">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-254">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-255">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-256">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-256">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="9d4d8-257">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-257">Routing strategy</span></span>|<span data-ttu-id="9d4d8-258">Propagacja</span><span class="sxs-lookup"><span data-stu-id="9d4d8-258">Bubbling</span></span>|  
|<span data-ttu-id="9d4d8-259">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-259">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="9d4d8-260">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-260">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-261"><see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-261">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-262">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-262">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-263">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-264">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-264">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" Usage="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-265">Występuje po naciśnięciu klawisza na klawiaturze.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-265">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-266">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-266">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-267">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-267">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-268">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-268">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-269">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-269">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-270">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-270">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-271">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-271">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-272">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-272">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyDownEvent>|  
|<span data-ttu-id="9d4d8-273">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-273">Routing strategy</span></span>|<span data-ttu-id="9d4d8-274">Propagacja</span><span class="sxs-lookup"><span data-stu-id="9d4d8-274">Bubbling</span></span>|  
|<span data-ttu-id="9d4d8-275">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-275">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="9d4d8-276">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-276">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-277">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> , który dołącza procedurę obsługi zdarzeń <xref:System.Windows.UIElement.KeyDown> dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-277">The following example creates <xref:System.Windows.Controls.TextBox> that attaches an event handler for the <xref:System.Windows.UIElement.KeyDown> event.</span></span>  <span data-ttu-id="9d4d8-278">Po naciśnięciu klawisza, program obsługi zdarzeń wyświetla tekst <xref:System.Windows.Controls.TextBox> w <xref:System.Windows.Controls.TextBlock>. <xref:System.Windows.Input.Key.Return></span><span class="sxs-lookup"><span data-stu-id="9d4d8-278">When the <xref:System.Windows.Input.Key.Return> is pressed, the event handler displays the text in the <xref:System.Windows.Controls.TextBox> in a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
 [!code-xml[keydown#KeyDownUI](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml#keydownui)]  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-279"><see cref="E:System.Windows.Input.Keyboard.KeyDown" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-279">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-280">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-280">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-281">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-281">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-282">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-282">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" Usage="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-283">Występuje, gdy zostanie wydaną klawisz na klawiaturze.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-283">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-284">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-284">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-285">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-285">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-286">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-286">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-287">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-287">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-288">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-288">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-289">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-290">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-290">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyUpEvent>|  
|<span data-ttu-id="9d4d8-291">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-291">Routing strategy</span></span>|<span data-ttu-id="9d4d8-292">Propagacja</span><span class="sxs-lookup"><span data-stu-id="9d4d8-292">Bubbling</span></span>|  
|<span data-ttu-id="9d4d8-293">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-293">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="9d4d8-294">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-294">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-295"><see cref="E:System.Windows.Input.Keyboard.KeyUp" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-295">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-296">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-296">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-297">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-298">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-298">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" Usage="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-299">Występuje, gdy element utraci fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-299">Occurs when an element loses keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-300">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-300">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-301">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-301">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-302">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-302">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-303">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-303">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-304">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-304">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-305">Fokus klawiatury odwołuje się do obiektu, który otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-305">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="9d4d8-306">Element z fokusem klawiatury ma <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> `true`ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-306">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="9d4d8-307">Na całym pulpicie może istnieć tylko jeden element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-307">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="9d4d8-308">Fokus logiczny odnosi się do obiektu w zakresie fokusu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-308">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="9d4d8-309">Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie koncentracji uwagi](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-309">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-310"><xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> Jeśli zdarzenie<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> lub zdarzenie jest obsługiwane, fokus klawiatury nie jest zmieniany.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-310">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-311">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-312">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-312">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.LostKeyboardFocusEvent>|  
|<span data-ttu-id="9d4d8-313">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-313">Routing strategy</span></span>|<span data-ttu-id="9d4d8-314">Propagacja</span><span class="sxs-lookup"><span data-stu-id="9d4d8-314">Bubbling</span></span>|  
|<span data-ttu-id="9d4d8-315">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-315">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="9d4d8-316">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-316">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-317">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> i dołącza programy obsługi zdarzeń <xref:System.Windows.UIElement.GotKeyboardFocus> dla zdarzenia i <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-317">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="9d4d8-318">Gdy klawiatura <xref:System.Windows.Controls.TextBox> uzyskuje fokus, kolor tła jest zmieniany, a tekst jest wyczyszczony. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="9d4d8-318">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="9d4d8-319"><xref:System.Windows.Controls.TextBlock> Gdy utraci fokus klawiatury, kolor tła zostanie zmieniony i wywoływana jest metoda, która resetuje zmienne używane w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-319">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called that resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-320"><see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-320">Identifies the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-321">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-321">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-322">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-322">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-323">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-323">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.Keyboard.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-324">Pobiera zestaw <see cref="T:System.Windows.Input.ModifierKeys" /> , który jest obecnie wcionięty.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-324">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed.</span></span></summary>
        <value><span data-ttu-id="9d4d8-325">Bitowa kombinacja <see cref="T:System.Windows.Input.ModifierKeys" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-325">A bitwise combination of the <see cref="T:System.Windows.Input.ModifierKeys" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-326"><xref:System.Windows.Input.ModifierKeys>jest wyliczeniem pól bitowych, dzięki czemu możliwe jest naciśnięcie wielu klawiszy modyfikujących w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-326"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span>  <span data-ttu-id="9d4d8-327">Użyj operacji bitowych do określenia dokładnego zestawu klawiszy modyfikujących.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-327">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d4d8-328">W poniższym przykładzie zastosowano bit i porównanie, aby określić, <xref:System.Windows.Input.ModifierKeys.Control> czy klawisz modyfikujący został naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-328">The following example uses a bit AND comparison to determine if the <xref:System.Windows.Input.ModifierKeys.Control> modifier key is pressed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" Usage="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-329">Występuje, gdy element jest w trakcie uzyskiwania fokusu klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-329">Occurs when an element is in the process of acquiring keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-330">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-330">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-331">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-331">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-332">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-332">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-333">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-333">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-334">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-334">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-335"><xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> Jeśli zdarzenie<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> lub zdarzenie jest obsługiwane, fokus klawiatury nie jest zmieniany.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-335">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="9d4d8-336">Fokus klawiatury odwołuje się do obiektu, który otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-336">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="9d4d8-337">Element z fokusem klawiatury ma <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> `true`ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-337">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="9d4d8-338">Na całym pulpicie może istnieć tylko jeden element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-338">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="9d4d8-339">Fokus logiczny odnosi się do obiektu w zakresie fokusu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-339">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="9d4d8-340">Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie koncentracji uwagi](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-340">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyborad"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-341">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-342">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-342">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="9d4d8-343">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-343">Routing strategy</span></span>|<span data-ttu-id="9d4d8-344">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="9d4d8-344">Tunneling</span></span>|  
|<span data-ttu-id="9d4d8-345">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-345">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="9d4d8-346">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-346">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-347"><see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-347">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-348">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-348">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-349">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-350">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-350">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" Usage="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-351">Występuje, gdy dostawca wejściowy klawiatury jest w trakcie uzyskiwania fokusu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-351">Occurs when the keyboard input provider is in the process of acquiring focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-352">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-352">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-353">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-353">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-354">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-354">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-355">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-355">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-356">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-356">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-357">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-358">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-358">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="9d4d8-359">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-359">Routing strategy</span></span>|<span data-ttu-id="9d4d8-360">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="9d4d8-360">Tunneling</span></span>|  
|<span data-ttu-id="9d4d8-361">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-361">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="9d4d8-362">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-362">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-363"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-363">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-364">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-364">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-365">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-365">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-366">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-366">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" Usage="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-367">Występuje po naciśnięciu klawisza na klawiaturze.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-367">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-368">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-369">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-369">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-370">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-370">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-371">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-371">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-372">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-372">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-373">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-374">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-374">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyDownEvent>|  
|<span data-ttu-id="9d4d8-375">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-375">Routing strategy</span></span>|<span data-ttu-id="9d4d8-376">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="9d4d8-376">Tunneling</span></span>|  
|<span data-ttu-id="9d4d8-377">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-377">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="9d4d8-378">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Keyboard.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-378">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-379"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-379">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-380">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-380">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-381">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-382">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-382">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" Usage="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-383">Występuje, gdy zostanie wydaną klawisz na klawiaturze.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-383">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-384">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-384">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-385">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-385">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-386">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-386">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-387">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-388">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-389">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-390">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-390">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyUpEvent>|  
|<span data-ttu-id="9d4d8-391">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-391">Routing strategy</span></span>|<span data-ttu-id="9d4d8-392">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="9d4d8-392">Tunneling</span></span>|  
|<span data-ttu-id="9d4d8-393">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-393">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="9d4d8-394">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Keyboard.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-394">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-395"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-395">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-396">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-396">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-397">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-397">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-398">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-398">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" Usage="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d4d8-399">Występuje, gdy element jest w trakcie utraty fokusu klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-399">Occurs when an element is in the process of losing keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-400">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-400">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="9d4d8-401">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-401">implements attached events as routed events.</span></span> <span data-ttu-id="9d4d8-402">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-402">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="9d4d8-403">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-403">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="9d4d8-404">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-404">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="9d4d8-405"><xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> Jeśli zdarzenie<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> lub zdarzenie jest obsługiwane, fokus klawiatury nie jest zmieniany.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-405">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="9d4d8-406">Fokus klawiatury odwołuje się do obiektu, który otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-406">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="9d4d8-407">Element z fokusem klawiatury ma <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> `true`ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-407">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="9d4d8-408">Na całym pulpicie może istnieć tylko jeden element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-408">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="9d4d8-409">Fokus logiczny odnosi się do obiektu w zakresie fokusu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-409">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="9d4d8-410">Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie koncentracji uwagi](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9d4d8-410">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="9d4d8-411">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="9d4d8-411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d4d8-412">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="9d4d8-412">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="9d4d8-413">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="9d4d8-413">Routing strategy</span></span>|<span data-ttu-id="9d4d8-414">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="9d4d8-414">Tunneling</span></span>|  
|<span data-ttu-id="9d4d8-415">Delegate</span><span class="sxs-lookup"><span data-stu-id="9d4d8-415">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="9d4d8-416">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-416">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-417"><see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-417">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-418">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-418">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="9d4d8-419">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="9d4d8-420">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-420">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d4d8-421">Pobiera urządzenie wejściowe klawiatury podstawowej.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-421">Gets the primary keyboard input device.</span></span></summary>
        <value><span data-ttu-id="9d4d8-422">Urządzenie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-422">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-423">Ta właściwość obsługuje [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-423">This property supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-424"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-424">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-425">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-425">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-426">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-426">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-427">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-427">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-428"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-428">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-429">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-429">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-430">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-430">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-431">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-431">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-432"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-432">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-433">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-433">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-434">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-434">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-435">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-435">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-436"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-437">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-437">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-438">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-438">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-439">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-439">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-440"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-440">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-441">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-441">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-442">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-442">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-443">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-443">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-444"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-444">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-445">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-445">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-446">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-446">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-447">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-447">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-448"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-449">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-449">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-450">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-450">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-451">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-451">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-452"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-452">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-453">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-453">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-454">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-454">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-455">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-455">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-456"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-456">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-457">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-457">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-458">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-458">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-459">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-459">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9d4d8-460"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9d4d8-461">Procedura obsługi zdarzeń, która ma zostać usunięta.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-461">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9d4d8-462">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-462">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d4d8-463">Ta metoda zapewnia dostęp do dołączonych właściwości dla dostępu kodu do <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9d4d8-463">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
