<Type Name="CommandConverter" FullName="System.Windows.Input.CommandConverter">
  <TypeSignature Language="C#" Value="public sealed class CommandConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d335d-101">Konwertuje <see cref="T:System.Windows.Input.ICommand" /> do i z innych typów obiektów.</span><span class="sxs-lookup"><span data-stu-id="d335d-101">Converts an <see cref="T:System.Windows.Input.ICommand" /> object to and from other types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d335d-102"><xref:System.Windows.Input.CommandConverter> Klasy konwertuje tylko wystąpienia <xref:System.Windows.Input.ICommand> do i z <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="d335d-102">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span>  
 
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d335d-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d335d-103">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d335d-104">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="d335d-104">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="sourceType"><span data-ttu-id="d335d-105">Typ oceniane pod kątem konwersji.</span><span class="sxs-lookup"><span data-stu-id="d335d-105">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="d335d-106">Określa, czy obiekt określonego typu można przekonwertować na wystąpienie <see cref="T:System.Windows.Input.ICommand" />, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d335d-106">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d335d-107"><see langword="true" /> Jeśli <paramref name="sourceType" /> jest typu <see cref="T:System.String" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d335d-107"><see langword="true" /> if <paramref name="sourceType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d335d-108">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="d335d-108">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d335d-109">Typ oceniane pod kątem konwersji.</span><span class="sxs-lookup"><span data-stu-id="d335d-109">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="d335d-110">Określa, czy wystąpienie <see cref="T:System.Windows.Input.ICommand" /> można przekonwertować na określony typ, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d335d-110">Determines whether an instance of <see cref="T:System.Windows.Input.ICommand" /> can be converted to the specified type, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d335d-111"><see langword="true" /> Jeśli <paramref name="destinationType" /> jest typu <see cref="T:System.String" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d335d-111"><see langword="true" /> if <paramref name="destinationType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d335d-112">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="d335d-112">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d335d-113">Określone informacje o ustawieniach kulturowych.</span><span class="sxs-lookup"><span data-stu-id="d335d-113">Culture specific information.</span></span></param>
        <param name="source"><span data-ttu-id="d335d-114">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="d335d-114">The object to convert.</span></span></param>
        <summary><span data-ttu-id="d335d-115">Próbuje przekonwertować określony obiekt do <see cref="T:System.Windows.Input.ICommand" />, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d335d-115">Attempts to convert the specified object to an <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d335d-116">Przekonwertowany obiekt lub <see langword="null" /> Jeśli <paramref name="source" /> jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="d335d-116">The converted object, or <see langword="null" /> if <paramref name="source" /> is an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d335d-117"><xref:System.Windows.Input.CommandConverter> Klasy konwertuje tylko wystąpienia <xref:System.Windows.Input.ICommand> do i z <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="d335d-117">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span> <span data-ttu-id="d335d-118">Ponadto polecenia musi być istniejącego polecenia lub musi być przypisany do publicznej statycznej właściwości lub pola statycznego publicznego.</span><span class="sxs-lookup"><span data-stu-id="d335d-118">Also, the command must be an existing command, or must be assigned to a public static property or public static field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d335d-119"><paramref name="source" /> Nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="d335d-119"><paramref name="source" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d335d-120">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="d335d-120">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d335d-121">Określone informacje o ustawieniach kulturowych.</span><span class="sxs-lookup"><span data-stu-id="d335d-121">Culture specific information.</span></span></param>
        <param name="value"><span data-ttu-id="d335d-122">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="d335d-122">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d335d-123">Typ docelowy konwersji obiektu do.</span><span class="sxs-lookup"><span data-stu-id="d335d-123">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="d335d-124">Próbuje przekonwertować <see cref="T:System.Windows.Input.ICommand" /> na określony typ przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d335d-124">Attempts to convert an <see cref="T:System.Windows.Input.ICommand" /> to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d335d-125">Przekonwertowany obiekt lub pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="d335d-125">The converted object, or an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d335d-126"><xref:System.Windows.Input.CommandConverter> Klasy konwertuje tylko wystąpienia <xref:System.Windows.Input.ICommand> do i z <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="d335d-126">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span> <span data-ttu-id="d335d-127">Może być zwracany wyłącznie istniejącego polecenia (standardowych).</span><span class="sxs-lookup"><span data-stu-id="d335d-127">Only existing (noncustom) commands can be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d335d-128"><paramref name="destinationType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d335d-128"><paramref name="destinationType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d335d-129"><paramref name="value" /> Nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="d335d-129"><paramref name="value" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>