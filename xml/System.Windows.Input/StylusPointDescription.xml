<Type Name="StylusPointDescription" FullName="System.Windows.Input.StylusPointDescription">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13745e5c7d9673df696c8d398f60e4eefadddf0a" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399973" /></Metadata><TypeSignature Language="C#" Value="public class StylusPointDescription" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StylusPointDescription extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.StylusPointDescription" />
  <TypeSignature Language="VB.NET" Value="Public Class StylusPointDescription" />
  <TypeSignature Language="C++ CLI" Value="public ref class StylusPointDescription" />
  <TypeSignature Language="F#" Value="type StylusPointDescription = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa właściwości, które znajdują się <see cref="T:System.Windows.Input.StylusPoint" />w.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa, które właściwości są skojarzone <xref:System.Windows.Input.StylusPoint>z. <xref:System.Windows.Input.StylusPointDescription> Dla każdej właściwości w <xref:System.Windows.Input.StylusPoint> <xref:System.Windows.Input.StylusPointDescription> , zawiera <xref:System.Windows.Input.StylusPointPropertyInfo> obiekt, który określa ograniczenia, takie jak minimum i maksimum wartości właściwości. Użyj metod <xref:System.Windows.Input.StylusPointDescription.GetPropertyInfo%2A> <xref:System.Windows.Input.StylusPointDescription>i, aby sprawdzić te właściwości w. <xref:System.Windows.Input.StylusPointDescription.HasProperty%2A>  
  
 Wszystkie <xref:System.Windows.Input.StylusPoint> obiekty <xref:System.Windows.Input.StylusPointDescription>w elemencie muszą mieć tę samą wartość. <xref:System.Windows.Input.StylusPointCollection> Jeśli spróbujesz dodać <xref:System.Windows.Input.StylusPoint> <xref:System.Windows.Input.StylusPointCollection> do, który ma inny <xref:System.Windows.Input.StylusPointDescription>, zostanie zgłoszony wyjątek.  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.Input.StylusPointDescription> przykład pobiera <xref:System.Windows.Input.StylusPointCollection> dla a i pobiera <xref:System.Windows.Input.StylusPointDescription>informacje dla każdego z nich <xref:System.Windows.Input.StylusPointPropertyInfo> w.  
  
 [!code-csharp[PacketSpy#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#2)]
 [!code-vb[PacketSpy#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#2)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.StylusPointDescription" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPointDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPointDescription.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPointDescription();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.StylusPointDescription" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.StylusPointDescription> Konstruktor bez parametrów tworzy, który zawiera informacje dla właściwości <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>i <xref:System.Windows.Input.StylusPointProperties.NormalPressure>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Input.StylusPointDescription> obiekt i używa go do <xref:System.Windows.Input.StylusPoint>utworzenia.  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPointDescription (System.Collections.Generic.IEnumerable&lt;System.Windows.Input.StylusPointPropertyInfo&gt; stylusPointPropertyInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.StylusPointPropertyInfo&gt; stylusPointPropertyInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPointDescription.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Input.StylusPointPropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stylusPointPropertyInfos As IEnumerable(Of StylusPointPropertyInfo))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPointDescription(System::Collections::Generic::IEnumerable&lt;System::Windows::Input::StylusPointPropertyInfo ^&gt; ^ stylusPointPropertyInfos);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPointDescription : seq&lt;System.Windows.Input.StylusPointPropertyInfo&gt; -&gt; System.Windows.Input.StylusPointDescription" Usage="new System.Windows.Input.StylusPointDescription stylusPointPropertyInfos" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stylusPointPropertyInfos" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Input.StylusPointPropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="stylusPointPropertyInfos">Ogólny typ IEnumerable typu <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> , który określa właściwości <see cref="T:System.Windows.Input.StylusPointDescription" />w.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Input.StylusPointDescription" /> klasy z określonymi <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> obiektami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy przekazać <xref:System.Windows.Input.StylusPointPropertyInfo> obiekty dla właściwości <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.X>, i <xref:System.Windows.Input.StylusPointProperties.NormalPressure>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Input.StylusPointDescription> obiekt i używa go do <xref:System.Windows.Input.StylusPoint>utworzenia.  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreCompatible">
      <MemberSignature Language="C#" Value="public static bool AreCompatible (System.Windows.Input.StylusPointDescription stylusPointDescription1, System.Windows.Input.StylusPointDescription stylusPointDescription2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreCompatible(class System.Windows.Input.StylusPointDescription stylusPointDescription1, class System.Windows.Input.StylusPointDescription stylusPointDescription2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPointDescription.AreCompatible(System.Windows.Input.StylusPointDescription,System.Windows.Input.StylusPointDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreCompatible (stylusPointDescription1 As StylusPointDescription, stylusPointDescription2 As StylusPointDescription) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreCompatible(System::Windows::Input::StylusPointDescription ^ stylusPointDescription1, System::Windows::Input::StylusPointDescription ^ stylusPointDescription2);" />
      <MemberSignature Language="F#" Value="static member AreCompatible : System.Windows.Input.StylusPointDescription * System.Windows.Input.StylusPointDescription -&gt; bool" Usage="System.Windows.Input.StylusPointDescription.AreCompatible (stylusPointDescription1, stylusPointDescription2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointDescription1" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="stylusPointDescription2" Type="System.Windows.Input.StylusPointDescription" />
      </Parameters>
      <Docs>
        <param name="stylusPointDescription1">Pierwszy <see cref="T:System.Windows.Input.StylusPointDescription" /> do sprawdzenia.</param>
        <param name="stylusPointDescription2">Sekunda <see cref="T:System.Windows.Input.StylusPointDescription" /> do sprawdzenia.</param>
        <summary>Zwraca wartość wskazującą, czy określone <see cref="T:System.Windows.Input.StylusPointDescription" /> obiekty są identyczne.</summary>
        <returns><see langword="true" />Jeśli obiekty są identyczne; <see langword="false" />w przeciwnym razie. <see cref="T:System.Windows.Input.StylusPointDescription" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Windows.Input.StylusPointDescription> obiekty są zgodne, jeśli zawierają te same <xref:System.Windows.Input.StylusPointPropertyInfo> obiekty w tej samej kolejności.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy dwa <xref:System.Windows.Input.StylusPointDescription> obiekty są zgodne.  
  
 [!code-csharp[PacketSpy#22](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#22)]
 [!code-vb[PacketSpy#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#22)]  
[!code-csharp[PacketSpy#23](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#23)]
[!code-vb[PacketSpy#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommonDescription">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.StylusPointDescription GetCommonDescription (System.Windows.Input.StylusPointDescription stylusPointDescription, System.Windows.Input.StylusPointDescription stylusPointDescriptionPreserveInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.StylusPointDescription GetCommonDescription(class System.Windows.Input.StylusPointDescription stylusPointDescription, class System.Windows.Input.StylusPointDescription stylusPointDescriptionPreserveInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPointDescription.GetCommonDescription(System.Windows.Input.StylusPointDescription,System.Windows.Input.StylusPointDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::StylusPointDescription ^ GetCommonDescription(System::Windows::Input::StylusPointDescription ^ stylusPointDescription, System::Windows::Input::StylusPointDescription ^ stylusPointDescriptionPreserveInfo);" />
      <MemberSignature Language="F#" Value="static member GetCommonDescription : System.Windows.Input.StylusPointDescription * System.Windows.Input.StylusPointDescription -&gt; System.Windows.Input.StylusPointDescription" Usage="System.Windows.Input.StylusPointDescription.GetCommonDescription (stylusPointDescription, stylusPointDescriptionPreserveInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointDescription" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="stylusPointDescriptionPreserveInfo" Type="System.Windows.Input.StylusPointDescription" />
      </Parameters>
      <Docs>
        <param name="stylusPointDescription">Pierwszy <see cref="T:System.Windows.Input.StylusPointDescription" /> do przecięcia.</param>
        <param name="stylusPointDescriptionPreserveInfo">Sekunda <see cref="T:System.Windows.Input.StylusPointDescription" /> do przecięcia.</param>
        <summary>Zwraca część wspólną określonych <see cref="T:System.Windows.Input.StylusPointDescription" /> obiektów.</summary>
        <returns>A <see cref="T:System.Windows.Input.StylusPointDescription" /> , który zawiera właściwości, które są obecne w przypadku obu określonych <see cref="T:System.Windows.Input.StylusPointDescription" /> obiektów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `StylusPointDescription1`i `stylusPointDescriptionPreserveInfo` może mieć wspólną właściwość, ale ograniczenia określone w odpowiednich <xref:System.Windows.Input.StylusPointPropertyInfo> obiektach różnią się. Jeśli ograniczenia różnią się, <xref:System.Windows.Input.StylusPointDescription.GetCommonDescription%2A> Metoda <xref:System.Windows.Input.StylusPointPropertyInfo> używa metody from `stylusPointDescriptionPreserveInfo`.  
  
   
  
## Examples  
 Poniższy przykład ilustruje, jak znaleźć wspólne <xref:System.Windows.Input.StylusPointDescription> z dwóch różnych <xref:System.Windows.Input.StylusPointDescription> obiektów.  
  
 [!code-csharp[PacketSpy#26](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#26)]
 [!code-vb[PacketSpy#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointPropertyInfo GetPropertyInfo (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.StylusPointPropertyInfo GetPropertyInfo(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPointDescription.GetPropertyInfo(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::StylusPointPropertyInfo ^ GetPropertyInfo(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyInfo : System.Windows.Input.StylusPointProperty -&gt; System.Windows.Input.StylusPointPropertyInfo" Usage="stylusPointDescription.GetPropertyInfo stylusPointProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointPropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">Określa właściwość żądanego <see cref="T:System.Windows.Input.StylusPointPropertyInfo" />elementu. <see cref="T:System.Windows.Input.StylusPointProperty" /></param>
        <summary><see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> Pobiera dla określonej właściwości.</summary>
        <returns><see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> Dla określonego<see cref="T:System.Windows.Input.StylusPointProperty" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje, jak uzyskać informacje o właściwości z <xref:System.Windows.Input.StylusPointDescription>. W <xref:System.Windows.UIElement.StylusMove> tym przykładzie przyjęto założenie, że zdarzenie zostało połączone z programem obsługi zdarzeń poniżej.  
  
 [!code-csharp[PacketSpy#21](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#21)]
 [!code-vb[PacketSpy#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylusPointProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Input.StylusPointPropertyInfo&gt; GetStylusPointProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Input.StylusPointPropertyInfo&gt; GetStylusPointProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPointDescription.GetStylusPointProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStylusPointProperties () As ReadOnlyCollection(Of StylusPointPropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Input::StylusPointPropertyInfo ^&gt; ^ GetStylusPointProperties();" />
      <MemberSignature Language="F#" Value="member this.GetStylusPointProperties : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Input.StylusPointPropertyInfo&gt;" Usage="stylusPointDescription.GetStylusPointProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Input.StylusPointPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wszystkie właściwości <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
        <returns>Kolekcja zawierająca wszystkie <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> obiekty <see cref="T:System.Windows.Input.StylusPointDescription" />w.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pobiera <xref:System.Windows.Input.StylusPointDescription> dla a <xref:System.Windows.Input.StylusPointCollection> wraz z <xref:System.Windows.Input.StylusPointDescription>informacjami dla każdej z nich <xref:System.Windows.Input.StylusPointPropertyInfo> w.  
  
 [!code-csharp[PacketSpy#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#2)]
 [!code-vb[PacketSpy#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#2)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPointDescription.HasProperty(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasProperty(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberSignature Language="F#" Value="member this.HasProperty : System.Windows.Input.StylusPointProperty -&gt; bool" Usage="stylusPointDescription.HasProperty stylusPointProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty"><see cref="T:System.Windows.Input.StylusPointProperty" /> Do sprawdzenia <see cref="T:System.Windows.Input.StylusPointDescription" />w.</param>
        <summary>Zwraca wartość wskazującą, czy bieżący <see cref="T:System.Windows.Input.StylusPointDescription" /> element ma określoną właściwość.</summary>
        <returns><see langword="true" />Jeśli ma określony <see cref="T:System.Windows.Input.StylusPointProperty" />; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Windows.Input.StylusPointDescription" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje, jak uzyskać informacje o właściwości z <xref:System.Windows.Input.StylusPointDescription>. W <xref:System.Windows.UIElement.StylusMove> tym przykładzie przyjęto założenie, że zdarzenie zostało połączone z programem obsługi zdarzeń.  
  
 [!code-csharp[PacketSpy#21](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#21)]
 [!code-vb[PacketSpy#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Windows.Input.StylusPointDescription stylusPointDescriptionSuperset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Windows.Input.StylusPointDescription stylusPointDescriptionSuperset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPointDescription.IsSubsetOf(System.Windows.Input.StylusPointDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (stylusPointDescriptionSuperset As StylusPointDescription) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Windows::Input::StylusPointDescription ^ stylusPointDescriptionSuperset);" />
      <MemberSignature Language="F#" Value="member this.IsSubsetOf : System.Windows.Input.StylusPointDescription -&gt; bool" Usage="stylusPointDescription.IsSubsetOf stylusPointDescriptionSuperset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointDescriptionSuperset" Type="System.Windows.Input.StylusPointDescription" />
      </Parameters>
      <Docs>
        <param name="stylusPointDescriptionSuperset">, <see cref="T:System.Windows.Input.StylusPointDescription" /> Dla którego chcesz sprawdzić, czy bieżący <see cref="T:System.Windows.Input.StylusPointDescription" /> jest podzestawem.</param>
        <summary>Zwraca wartość wskazującą, czy bieżąca <see cref="T:System.Windows.Input.StylusPointDescription" /> jest podzbiorem określonego <see cref="T:System.Windows.Input.StylusPointDescription" />elementu.</summary>
        <returns><see langword="true" />Jeśli bieżąca <see cref="T:System.Windows.Input.StylusPointDescription" /> jest podzbiorem określonego <see cref="T:System.Windows.Input.StylusPointDescription" />; w przeciwnym razie, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład sprawdza, czy `description2` jest `description1`podzbiorem.  
  
 [!code-csharp[PacketSpy#22](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#22)]
 [!code-vb[PacketSpy#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#22)]  
[!code-csharp[PacketSpy#24](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#24)]
[!code-vb[PacketSpy#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPointDescription.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyCount : int" Usage="System.Windows.Input.StylusPointDescription.PropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę właściwości w <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
        <value>Liczba właściwości w <see cref="T:System.Windows.Input.StylusPointDescription" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak uzyskać właściwości każdej z nich <xref:System.Windows.Input.StylusPoint>. <xref:System.Windows.Input.StylusPointCollection> W tym przykładzie założono, <xref:System.Windows.Controls.TextBlock> że `packetOutput`występuje wywołanie.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>