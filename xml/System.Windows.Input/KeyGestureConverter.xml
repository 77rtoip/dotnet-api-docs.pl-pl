<Type Name="KeyGestureConverter" FullName="System.Windows.Input.KeyGestureConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c2034e07d46b6387551e3d0c4f9e2076ee1069b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30708440" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyGestureConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGestureConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGestureConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyGestureConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyGestureConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konwertuje <see cref="T:System.Windows.Input.KeyGesture" /> do i z innych typów obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.KeyGestureConverter> Klasy konwertuje tylko wystąpienia <xref:System.Windows.Input.KeyGesture> do i z <xref:System.String>.  
  
 <xref:System.Windows.Input.KeyGestureConverter> Konwertuje do i z <xref:System.String> przy użyciu znaku "+" jako ogranicznik między klawisze modyfikujące i klucza.  Na przykład ciąg `Control+A` może zostać przekształcone <xref:System.Windows.Input.KeyGesture> z <xref:System.Windows.Input.KeyGesture.Modifiers%2A> równa właściwości <xref:System.Windows.Input.ModifierKeys.Control> i <xref:System.Windows.Input.KeyGesture.Key%2A> równa właściwości <xref:System.Windows.Input.Key.A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGestureConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGestureConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.KeyGesture" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</param>
        <param name="sourceType">Typ oceniane pod kątem konwersji.</param>
        <summary>Określa, czy obiekt określonego typu można przekonwertować na wystąpienie <see cref="T:System.Windows.Input.KeyGesture" />, używając określonego kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="sourceType" /> jest typem <see cref="T:System.String" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</param>
        <param name="destinationType">Typ oceniane pod kątem konwersji.</param>
        <summary>Określa, czy wystąpienie <see cref="T:System.Windows.Input.KeyGesture" /> można przekonwertować na określony typ, używając określonego kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="destinationType" /> jest typem <see cref="T:System.String" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</param>
        <param name="culture">Określone informacje o ustawieniach kulturowych.</param>
        <param name="source">Obiekt do przekonwertowania.</param>
        <summary>Próbuje przekonwertować określony obiekt do <see cref="T:System.Windows.Input.KeyGesture" />, używając określonego kontekstu.</summary>
        <returns>Przekonwertowany obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.KeyGestureConverter> Konwertuje do i z <xref:System.String> przy użyciu klucza "+" jako ogranicznik między klawisze modyfikujące i klucza.  Na przykład ciąg `Control+A` może zostać przekształcone <xref:System.Windows.Input.KeyGesture> z <xref:System.Windows.Input.KeyGesture.Modifiers%2A> równa właściwości <xref:System.Windows.Input.ModifierKeys.Control> i <xref:System.Windows.Input.KeyGesture.Key%2A> równa właściwości <xref:System.Windows.Input.Key.A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="source" /> Nie można przekonwertować.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</param>
        <param name="culture">Określone informacje o ustawieniach kulturowych.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <param name="destinationType">Typ docelowy konwersji obiektu do.</param>
        <summary>Próbuje przekonwertować <see cref="T:System.Windows.Input.KeyGesture" /> na określony typ przy użyciu określonego kontekstu.</summary>
        <returns>Przekonwertowany obiekt lub ciąg pusty Jeśli <paramref name="value" /> jest <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `destinationType` musi być <xref:System.String>.  
  
 <xref:System.Windows.Input.KeyGestureConverter> Konwertuje do i z <xref:System.String> przy użyciu klucza "+" jako ogranicznik między klawisze modyfikujące i klucza. Na przykład <xref:System.Windows.Input.KeyGesture> z <xref:System.Windows.Input.KeyGesture.Modifiers%2A> równa właściwości <xref:System.Windows.Input.ModifierKeys.Control> i <xref:System.Windows.Input.KeyGesture.Key%2A> równa właściwości <xref:System.Windows.Input.Key.A> będzie można przekonwertować na ciąg `Control+A`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> Nie można przekonwertować.</exception>
      </Docs>
    </Member>
  </Members>
</Type>