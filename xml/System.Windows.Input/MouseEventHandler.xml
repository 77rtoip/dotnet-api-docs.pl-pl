<Type Name="MouseEventHandler" FullName="System.Windows.Input.MouseEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34a7f4b2b96b85b2734c4ced50e8aa613b5cec71" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69170482" /></Metadata><TypeSignature Language="C#" Value="public delegate void MouseEventHandler(object sender, MouseEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MouseEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub MouseEventHandler(sender As Object, e As MouseEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void MouseEventHandler(System::Object ^ sender, MouseEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type MouseEventHandler = delegate of obj * MouseEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Obiekt, do którego jest dołączona procedura obsługi zdarzeń.</param>
    <param name="e">Dane dotyczące zdarzenia.</param>
    <summary>Reprezentuje metodę, która będzie obsługiwać zdarzenia powiązane z myszą, które nie obejmują żadnych przycisków myszy ani kółka myszy; na przykład <see cref="E:System.Windows.UIElement.MouseMove" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten delegat jest używany z następującymi dołączonymi zdarzeniami:  
  
-   <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType>  
  
 Ten delegat jest używany z następującymi zdarzeniami kierowanymi. Te zdarzenia są przesyłane dalej wcześniej wymienionymi zdarzeniami, aby uczynić je bardziej dostępnymi dla ogólnego modelu [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]elementów w.  
  
-   <xref:System.Windows.UIElement.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=nameWithType>  
  
 Załączone zdarzenia i elementy bazowe są zdarzeniami, które współdzielą dane zdarzenia, a także w wersjach propagacji i tunelowania zdarzeń kierowanych również współdzielą dane zdarzeń. Może to mieć wpływ na obsługiwane charakterystyki zdarzenia w miarę podróży trasy zdarzeń. Aby uzyskać szczegółowe informacje, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
 Oprócz właściwości, które są istotne dla wszystkich zdarzeń kierowanych, najbardziej interesujące <xref:System.Windows.Input.MouseEventArgs> właściwości, których <xref:System.Windows.Input.MouseEventHandler> można użyć w implementacji, to kilka właściwości, które uwidaczniają bieżący stan przycisku, np. <xref:System.Windows.RoutedEventArgs> <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A> i .<xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>jest szczególnie przydatne, ponieważ można je <xref:System.Windows.Input.MouseDevice.Captured%2A> zaewidencjonować.  
  
 Należy zauważyć, że zdarzenia, które w odróżnieniu od zdarzeń przycisków myszy <xref:System.Windows.Input.MouseButtonEventHandler>używają innego delegata,. Właściwości przycisku myszy są dostępne <xref:System.Windows.Input.MouseEventArgs> w przypadku, gdy istnieją tryby wejściowe lub interakcje, które obejmują przyciski, nawet jeśli obsługują zdarzenia niebędące przyciskami.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
</Type>
