<Type Name="RoutedUICommand" FullName="System.Windows.Input.RoutedUICommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9523c17417449d5ec0dd40448bedb9448d63f02d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30708356" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoutedUICommand : System.Windows.Input.RoutedCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedUICommand extends System.Windows.Input.RoutedCommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.RoutedUICommand" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedUICommand&#xA;Inherits RoutedCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedUICommand : System::Windows::Input::RoutedCommand" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.RoutedCommand</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje <see cref="T:System.Windows.Input.ICommand" /> jest kierowany przez element drzewa i zawiera właściwość text.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Różnica między <xref:System.Windows.Input.RoutedUICommand> i <xref:System.Windows.Input.RoutedCommand> jest to, że <xref:System.Windows.Input.RoutedUICommand> obejmuje <xref:System.Windows.Input.RoutedUICommand.Text%2A> właściwości.  
  
 <xref:System.Windows.Input.RoutedCommand.Execute%2A> i <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metod <xref:System.Windows.Input.RoutedCommand> nie zawierają logiki polecenia w poleceniu, tak jak w przypadku dla typowego <xref:System.Windows.Input.ICommand>.  Te metody wywoływanie zdarzeń, które przechodzenia drzewa element wyszukiwania dla obiektu o <xref:System.Windows.Input.CommandBinding>.  Programy obsługi zdarzeń jest dołączony do <xref:System.Windows.Input.CommandBinding> zawierają logikę polecenia.  
  
 <xref:System.Windows.Input.RoutedCommand.Execute%2A> Metoda zgłasza <xref:System.Windows.Input.CommandManager.PreviewExecuted> i <xref:System.Windows.Input.CommandManager.Executed> zdarzenia.  <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> Metoda zgłasza <xref:System.Windows.Input.CommandManager.PreviewCanExecute> i <xref:System.Windows.Input.CommandManager.CanExecute> zdarzenia.  
  
<a name="xamlAttributeUsage_RoutedUICommand"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="predefinedCommandName"/>  
- or -  
<object property="predefinedClassName.predefinedCommandName"/>  
- or -  
<object property="{x:Static customClassName.customCommandName}"/>  
  
```  
  
<a name="xamlValues_RoutedUICommand"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *predefinedClassName*  
 Jedną z klas wstępnie zdefiniowanego polecenia.  
  
 *predefinedCommandName*  
 Jeden z wstępnie zdefiniowanych poleceń.  
  
 *prefix*  
 `xlmns` Prefiks, który mapuje *customClassName*.* customCommandName* do [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] klasy.  Aby uzyskać więcej informacji, zobacz [przestrzeń nazw XAML i Namespace mapowanie WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 *customClassName*  
 Klasa niestandardowej, która zawiera polecenia niestandardowych.  
  
 *customCommandName*  
 Polecenia niestandardowych.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.RoutedUICommand" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedUICommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedUICommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedUICommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.RoutedUICommand" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedUICommand (string text, string name, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string name, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, name As String, ownerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedUICommand(System::String ^ text, System::String ^ name, Type ^ ownerType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="text">Tekst opisu polecenia.</param>
        <param name="name">Zadeklarowana nazwa polecenia do serializacji.</param>
        <param name="ownerType">Typ, który rejestruje polecenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.RoutedUICommand" /> przy użyciu określony tekst opisowy, zadeklarowany nazwę i typ właściciela.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ownerType" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedUICommand (string text, string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string name, class System.Type ownerType, class System.Windows.Input.InputGestureCollection inputGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, name As String, ownerType As Type, inputGestures As InputGestureCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedUICommand(System::String ^ text, System::String ^ name, Type ^ ownerType, System::Windows::Input::InputGestureCollection ^ inputGestures);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="inputGestures" Type="System.Windows.Input.InputGestureCollection" />
      </Parameters>
      <Docs>
        <param name="text">Tekst opisu polecenia.</param>
        <param name="name">Zadeklarowana nazwa polecenia do serializacji.</param>
        <param name="ownerType">Typ, który rejestruje polecenia.</param>
        <param name="inputGestures">Kolekcja gestów do skojarzenia z poleceniem.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.RoutedUICommand" /> przy użyciu określony tekst opisowy, zadeklarowana nazwa, typ właściciela i gestów wejściowego.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ownerType" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedUICommand.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który opisuje tego polecenia.</summary>
        <value>Tekst opisujący polecenia.  Wartość domyślna to ciąg pusty.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>