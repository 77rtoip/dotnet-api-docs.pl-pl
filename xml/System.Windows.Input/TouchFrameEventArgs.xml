<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f8a73bf3528e7919a4848c6e83a24d799005ff38" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39892466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TouchFrameEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Input.Touch.FrameReported" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Touch.FrameReported> Zdarzenia znajduje się w [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] do obsługi zgodności z programu Silverlight. Jeśli nie masz do zapewnienia zgodności z programu Silverlight, użyj zdarzenia dotykowe, takich jak <xref:System.Windows.UIElement.TouchDown> i <xref:System.Windows.UIElement.TouchMove>na <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, lub <xref:System.Windows.ContentElement>.  
  
 Użyj <xref:System.Windows.Input.TouchFrameEventArgs> można pobrać <xref:System.Windows.Input.TouchPoint> wartości, które mają zastosowanie do zdarzenia touch. Z <xref:System.Windows.Input.TouchPoint>, możesz uzyskać <xref:System.Windows.Input.TouchPoint.Position%2A> z jednym naciśnięciem i określić, czy <xref:System.Windows.Input.TouchAction> został <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, lub <xref:System.Windows.Input.TouchAction.Up> akcji. Można również użyć <xref:System.Windows.Input.TouchPoint> można pobrać <xref:System.Windows.Input.TouchDevice>. Z <xref:System.Windows.Input.TouchDevice>, można określić urządzenie <xref:System.Windows.Input.TouchDevice.Id%2A> i uzyskać informacje na temat elementu, który jest korzystał z usług.  
  
   
  
## Examples  
 Następujące uchwyty przykład <xref:System.Windows.Input.Touch.FrameReported> zdarzeń i uzyskuje dostęp do danych touch <xref:System.Windows.Input.TouchFrameEventArgs>. Po naciśnięciu dotykowego <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> są przechwytywane do <xref:System.Windows.Controls.Canvas>. Po naciśnięciu zostało zniesione, <xref:System.Windows.Input.TouchDevice> wydaniu. Kiedy touch porusza się między <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> jest zaznaczone. Jeśli przeniesienie pochodzi z pierwszym touch, rejestrowana jest jego lokalizacji. Jeśli przeniesienie pochodzi z drugiego touch, od pozycji pierwszej touch jest rysowana linia do położenia drugi touch.  
  
 W tym przykładzie jest częścią większego przykładu, który jest dostępny w <xref:System.Windows.Input.Touch> klasa — Przegląd.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchFrameEventArgs.GetPrimaryTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Element, który definiuje przestrzeni współrzędnych. Aby używać współrzędnych bezwzględnych WPF, należy określić <c>relativeTo</c> jako <see langword="null" />.</param>
        <summary>Zwraca bieżący punkt touch urządzenia podstawowego touch względem określonego elementu.</summary>
        <returns>Bieżącego położenia obiektu podstawowego <see cref="T:System.Windows.Input.TouchDevice" /> względem określonego elementu; lub <see langword="null" /> Jeśli podstawowy <see cref="T:System.Windows.Input.TouchDevice" /> nie jest aktywny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W zestawie active touch urządzeń, pierwsze urządzenie musi być <xref:System.Windows.Input.TouchDevice.Activated> jest urządzeniem podstawowym touch. Na przykład jeśli dwóch palców są dotykanie ekranu, finger pierwszy, która nie działa jest reprezentowany przez urządzenia dotykowe podstawowego. Finger pierwszy zostało zniesione, podczas gdy drugi finger działa nadal, urządzeń dotykowych podstawowy staje się `null`.  
  
   
  
## Examples  
 Poniższy kod przetwarza punkty dotykowe, które są pobierane z <xref:System.Windows.Input.TouchFrameEventArgs>. Po naciśnięciu dotykowego <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> są przechwytywane do <xref:System.Windows.Controls.Canvas>. Po naciśnięciu zostało zniesione, <xref:System.Windows.Input.TouchDevice> wydaniu. Kiedy touch porusza się między <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> jest zaznaczone. Jeśli <xref:System.Windows.Input.TouchDevice.Id%2A> odpowiada <xref:System.Windows.Input.TouchDevice.Id%2A> punktu głównej touch, wskazujący pierwszy touch lokalizacji są rejestrowane. Jeśli przeniesienie pochodzi z drugiego touch, od pozycji pierwszej touch jest rysowana linia do położenia drugi touch.  
  
 W tym przykładzie jest częścią większego przykładu, który jest dostępny w <xref:System.Windows.Input.Touch> klasa — Przegląd.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchFrameEventArgs.GetTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Element, który definiuje przestrzeni współrzędnych. Aby używać współrzędnych bezwzględnych WPF, należy określić <c>relativeTo</c> jako <see langword="null" />.</param>
        <summary>Zwraca kolekcję, która zawiera bieżący punkt touch dla poszczególnych urządzeń dotykowych active względem określonego elementu.</summary>
        <returns>Kolekcja, która zawiera bieżącą <see cref="T:System.Windows.Input.TouchPoint" /> dla każdej aktywnej <see cref="T:System.Windows.Input.TouchDevice" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod procesy punkty dotykowe pobierane <xref:System.Windows.Input.TouchFrameEventArgs>. Po naciśnięciu dotykowego na kanwie, <xref:System.Windows.Input.TouchDevice> są przechwytywane do kanwy. Gdy zostanie wywołane dotykowego, <xref:System.Windows.Input.TouchDevice> wydaniu. Gdy touch porusza się na kanwie, <xref:System.Windows.Input.TouchDevice.Id%2A> jest zaznaczone. Jeśli <xref:System.Windows.Input.TouchDevice.Id%2A> odpowiada <xref:System.Windows.Input.TouchDevice.Id%2A> punktu głównej touch, wskazujący pierwszy touch lokalizacji są rejestrowane. Jeśli przeniesienie pochodzi z drugiego touch, od pozycji pierwszej touch jest rysowana linia do położenia drugi touch.  
  
 W tym przykładzie jest częścią większego przykładu, który jest dostępny w <xref:System.Windows.Input.Touch> klasa — Przegląd.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberSignature Language="F#" Value="member this.SuspendMousePromotionUntilTouchUp : unit -&gt; unit" Usage="touchFrameEventArgs.SuspendMousePromotionUntilTouchUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ten element członkowski nie jest zaimplementowana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapewnia zgodność programu Silverlight. Ze względu na różnice implementacji urządzenia jego nie jest zaimplementowana w WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int" Usage="System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera sygnaturę czasową dla tego zdarzenia.</summary>
        <value>Sygnatura czasowa dla tego zdarzenia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>