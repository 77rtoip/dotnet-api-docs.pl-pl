<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExecutedRoutedEventArgs.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5df8e779196cfe272739ecbac85415d9856b088d5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df8e779196cfe272739ecbac85415d9856b088d5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandManager.Executed" /&gt;</ph> and <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" /&gt;</ph> routed events.</source>
          <target state="translated">Udostępnia dane dla <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandManager.Executed" /&gt;</ph> i <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" /&gt;</ph> kierowane zdarzenia.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventArgs">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> represents the method that implements the command logic of a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> reprezentuje metodę, która implementuje logiki polecenia <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventArgs">
          <source>Separating the implementation logic from the command allows the command to be invoked from different sources and types and enables the centralization of command logic.</source>
          <target state="translated">Oddzielanie logika implementacji polecenia umożliwia polecenie do wywołania z różnych źródeł i typów i umożliwia centralizacji logiki polecenia.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventArgs">
          <source>This event data class is also used for <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta klasa danych zdarzenia służy także do <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventArgs">
          <source>But most practical handlers will handle the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> events from a particular <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, rather than work at the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> level.</source>
          <target state="translated">Ale obsługi najbardziej praktyczne będzie obsługiwać <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> zdarzenia z określonego <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, zamiast niż działania na <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> poziom.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventArgs">
          <source>For more information on commanding, see <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na wydawanie poleceń, zobacz <bpt id="p1">[</bpt>droższe omówienie<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventArgs">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> that opens a <ph id="ph2">&lt;xref:System.Windows.MessageBox&gt;</ph> when the command is executed.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> który otwiera <ph id="ph2">&lt;xref:System.Windows.MessageBox&gt;</ph> Jeśli polecenie zostanie wykonane.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Command">
          <source>Gets the command that was invoked.</source>
          <target state="translated">Pobiera polecenie został wywołany.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Command">
          <source>The command associated with this event.</source>
          <target state="translated">Polecenie skojarzone z tym zdarzeniem.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Command">
          <source>The command associated with the event can be cast to the specific implementation of <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, if the type is known.</source>
          <target state="translated">Polecenie skojarzone ze zdarzeniem mogą być rzutowane na określonej implementacji <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, takich jak <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, jeśli typ jest znany.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Command">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> that handles multiple commands.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> obsługująca wielu poleceń.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Command">
          <source>The handler checks the <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph> to determine which method to call.</source>
          <target state="translated">Program obsługi kontroli <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</ph> właściwości <ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph> do określenia, którą metodę do wywołania.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>Gets data parameter of the command.</source>
          <target state="translated">Pobiera dane parametru polecenia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>The command-specific data.</source>
          <target state="translated">Dane specyficzne dla danego polecenia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>This property represents a generic data parameter that is defined by the particular command.</source>
          <target state="translated">Ta właściwość reprezentuje parametr danych typu ogólnego, który jest definiowana za pomocą określonego polecenia.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>If this parameter is not needed, <ph id="ph1">`null`</ph> can be passed.</source>
          <target state="translated">Jeśli ten parametr nie jest potrzebny, <ph id="ph1">`null`</ph> mogą zostać przekazane.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>Normally, the <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> is used to pass specific information to the command when it is executed.</source>
          <target state="translated">Zwykle <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> używany do przekazywania określonych informacji do polecenia podczas jej wykonywania.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>The type of the data is defined by the command.</source>
          <target state="translated">Typ danych jest zdefiniowany przez polecenie.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> for a custom <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> niestandardowych <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter">
          <source>The handler updates a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> with the current time and the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Controls.Slider&gt;</ph> control that is passed to the handler through the <ph id="ph4">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Program obsługi aktualizacji <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> przy użyciu bieżącego czasu i <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> właściwość <ph id="ph3">&lt;xref:System.Windows.Controls.Slider&gt;</ph> formant, który jest przekazywane do programu obsługi, za pośrednictwem <ph id="ph4">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>