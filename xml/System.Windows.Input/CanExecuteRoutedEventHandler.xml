<Type Name="CanExecuteRoutedEventHandler" FullName="System.Windows.Input.CanExecuteRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40314ee81839ebd0b1ef25f5f831b2e68f2b0ad5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void CanExecuteRoutedEventHandler(object sender, CanExecuteRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CanExecuteRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CanExecuteRoutedEventHandler(sender As Object, e As CanExecuteRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CanExecuteRoutedEventHandler(System::Object ^ sender, CanExecuteRoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="27b43-101">Element docelowy polecenia, który wywołuje program obsługi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27b43-101">The command target that is invoking the handler.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="27b43-102">Dane dotyczące zdarzenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27b43-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="27b43-103">Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27b43-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27b43-104"><xref:System.Windows.Input.CanExecuteRoutedEventHandler> Określa, czy polecenie skojarzone z źródłem zdarzenia jest można wykonać na elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="27b43-104">The <xref:System.Windows.Input.CanExecuteRoutedEventHandler> determines if the command associated with the event source is able to execute on the command target.</span></span> <span data-ttu-id="27b43-105">Jeśli polecenie ma źródło polecenia określająca element docelowy, a następnie informacje można uzyskać za pośrednictwem `sender`.</span><span class="sxs-lookup"><span data-stu-id="27b43-105">If the command has a command source that specifies a target, then the target information can be obtained through `sender`.</span></span> <span data-ttu-id="27b43-106">Jeśli <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> nie jest ustawiona, element z fokusem klawiatury jest element docelowy i również można uzyskać za pośrednictwem `sender`.</span><span class="sxs-lookup"><span data-stu-id="27b43-106">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set, the element with keyboard focus is the target, and can also be obtained through `sender`.</span></span>  <span data-ttu-id="27b43-107">Jeśli okaże się, że polecenie można wykonać na elemencie docelowym, a następnie <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType> powinien mieć ustawioną właściwość `true`; w przeciwnym razie ustaw ją na `false`.</span><span class="sxs-lookup"><span data-stu-id="27b43-107">If it is determined that the command can execute on the target, then the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType> property should be set to `true`; otherwise, set it to `false`.</span></span>  
  
 <span data-ttu-id="27b43-108">Nie należy polegać na dane zdarzeń, aby określić polecenie, źródłowych i docelowych.</span><span class="sxs-lookup"><span data-stu-id="27b43-108">You do not need to rely on event data to determine the command, source, and target.</span></span> <span data-ttu-id="27b43-109">Można ograniczyć użycie obsługi wywołań znane polecenia możliwe, chociaż jest trudne do wykonania, jeśli często strukturę polecenia zależy routing poleceń do wykonania tego samego polecenia na kolejnych potencjalnymi celami w zdarzeniu trasa.</span><span class="sxs-lookup"><span data-stu-id="27b43-109">You can limit the usage of the handler to known possible command invocations, although this is more difficult to accomplish if your command structure relies extensively on the command routing to execute the same command on successive potential targets in an event route.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27b43-110">W poniższym przykładzie przedstawiono <xref:System.Windows.Input.CanExecuteRoutedEventHandler> stanowiąca <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="27b43-110">The following example shows a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> that sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  </Docs>
</Type>