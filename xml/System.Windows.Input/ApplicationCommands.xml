<Type Name="ApplicationCommands" FullName="System.Windows.Input.ApplicationCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf66b79fc1cec88750cfac56370df060e703ed1e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69174163" /></Metadata><TypeSignature Language="C#" Value="public static class ApplicationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApplicationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ApplicationCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type ApplicationCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera standardowy zestaw poleceń związanych z aplikacjami.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Polecenia <xref:System.Windows.Input.ApplicationCommands> klasy i poleceń w innych klasach bibliotek poleceń, takich jak <xref:System.Windows.Input.ComponentCommands> i <xref:System.Windows.Input.NavigationCommands>, są przeznaczone do reprezentowania zestawu typowych poleceń, które programiści aplikacji często napotykają.  Polecenia reprezentują tylko wystąpienie <xref:System.Windows.Input.RoutedCommand> logiki implementacji dla polecenia i nie. Logika implementacji jest powiązana z poleceniem <xref:System.Windows.Input.CommandBinding>. Na przykład jeśli <xref:System.Windows.Input.ApplicationCommands.Close%2A> polecenie jest wykonywane na kontrolce, logika, która <xref:System.Windows.Input.ApplicationCommands.Close%2A> wykonuje polecenie, może nie być dostarczana przez formant, więc moduł zapisujący aplikacji będzie odpowiedzialny za zapisanie logiki, która określa sposób, w jaki formant będzie Obsłuż polecenie.  
  
 Wiele formantów udostępnia logikę implementacji wielu poleceń w bibliotece poleceń.  Na przykład <xref:System.Windows.Controls.TextBox> Klasa zawiera logikę <xref:System.Windows.Input.ApplicationCommands.Paste%2A>dla poleceń, <xref:System.Windows.Input.ApplicationCommands.Cut%2A>, <xref:System.Windows.Input.ApplicationCommands.Copy%2A>, <xref:System.Windows.Input.ApplicationCommands.Undo%2A>i <xref:System.Windows.Input.ApplicationCommands.Redo%2A> .  
  
 Aby uzyskać więcej informacji na temat poleceń i poleceń, zobacz [Omówienie poleceń](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <Member MemberName="CancelPrint">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CancelPrint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CancelPrint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CancelPrint As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CancelPrint { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelPrint : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie Cancel Print.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Nie zdefiniowano gestu.  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Anuluj drukowanie  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar anulowania zadania drukowania.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_CancelPrint"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="CancelPrint"/>>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Close { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Close" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Close As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Close { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Close : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Close" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie Close.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Nie zdefiniowano gestu.  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Zamknięcie  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar zamknięcia elementu (zazwyczaj pliku).  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Close"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Close"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ContextMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextMenu As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ContextMenu { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie menu kontekstowego.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Shift+F10  
  
 Korzysta  
  
 </description></item><item><term> Gest myszy  
  
 </term><description> Gest myszy nie jest dołączony do tego polecenia, ale większość aplikacji korzysta z gestu kliknięcia prawym przyciskiem myszy, aby wywołać menu kontekstowe.  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Menu kontekstowe  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia menu kontekstowego.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_ContextMenu"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="ContextMenu"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Copy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Copy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Copy As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Copy { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Copy : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Copy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie copy.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+C  
  
 Ctrl+Insert  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Kopiuj  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar kopiowania zaznaczenia do Schowka.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Copy"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Copy"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="CorrectionList">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectionList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectionList As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectionList { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectionList : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie listy poprawek.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Nie zdefiniowano gestu.  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Lista poprawek  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia listy poprawek.  
  
 Lista poprawek różni się w zależności od kontekstu. Na przykład, przy [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] użyciu danych wejściowych lista korekt identyfikuje opcje konwersji.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_CorrectionList"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="CorrectionList"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Cut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Cut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cut As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Cut { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cut : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Cut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość reprezentującą polecenie Wytnij.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+X  
  
 Shift+Delete  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Wytnij  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar wycinania zaznaczenia do Schowka.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Cut"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Cut"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie Delete.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Usunięcie  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Usuwanie  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar usunięcia zaznaczenia.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Delete"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Find" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Find" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Find As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Find { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Find : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Find" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie find.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+F  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Znajdowanie  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia dedykowanego okna dialogowego znajdowania.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Find"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Find"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Help" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Help As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Help { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie pomocy.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> F1  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Help  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia okna dialogowego pomocy (okno).  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Help"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Help"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand New { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand New" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.New" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property New As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ New { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.New : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.New" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość reprezentującą nowe polecenie.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+N  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> New  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar tworzenia nowego elementu.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_New"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="New"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="NotACommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NotACommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NotACommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotACommand As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NotACommand { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotACommand : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje polecenie, które jest zawsze ignorowane.</summary>
        <value>Polecenie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie jest zawsze ignorowane i nie obsługuje zdarzenia wejściowego, które go spowodowało.  Dzięki temu można wyłączyć powiązanie danych wejściowych wbudowane w istniejący formant.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_NotACommand"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="NotACommand"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Open { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Open" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Open" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Open As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Open { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Open : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Open" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość reprezentującą polecenie otwarte.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+O  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Otwarcie  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia elementu (zazwyczaj pliku).  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Open"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Open"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Paste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Paste" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Paste As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Paste { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paste : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Paste" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie wklejenia.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+V  
  
 Shift + Insert  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Wklej  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar wklejenia zaznaczenia do Schowka.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Paste"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Paste"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Print { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Print" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Print" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Print As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Print { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Print : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Print" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie Print.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+P  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Drukuj  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar drukowania bieżącego elementu.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Print"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Print"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PrintPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PrintPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrintPreview As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ PrintPreview { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintPreview : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość reprezentującą polecenie podglądu wydruku.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+F2  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Podgląd wydruku  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia okna dialogowego podglądu wydruku.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_PrintPreview"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="PrintPreview"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Properties { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie Właściwości.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> F4  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Właściwości  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia okna dialogowego właściwości.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Properties"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Properties"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Redo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Redo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Redo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Redo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Redo : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Redo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie ponownie.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+Y  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Wykonaj ponownie  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar ponownego wykonania ostatniej akcji.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Redo"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Redo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Replace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Replace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Replace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Replace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Replace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Replace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Replace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość reprezentującą polecenie Replace.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+H  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Replace  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia okna dialogowego zamiany.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Replace"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Replace"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Save { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Save" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Save" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Save As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Save { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Save : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Save" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie Zapisz.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+S  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Zapisanie  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar zapisania bieżącego elementu.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Save"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Save"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SaveAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SaveAs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SaveAs As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SaveAs { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SaveAs : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie Zapisz jako.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Nie zdefiniowano gestu.  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Zapisz jako  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar otwarcia okna dialogowego Zapisz jako.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_SaveAs"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="SaveAs"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectAll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectAll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectAll As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectAll { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectAll : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość reprezentującą polecenie SELECT ALL.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl+A  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Zaznacz wszystko  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar wyboru wszystkich elementów.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_SelectAll"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="SelectAll"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Stop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Stop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Stop As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Stop { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Stop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość reprezentującą polecenie zatrzymania.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Esc  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Zatrzymywanie  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar zatrzymania przetwarzania.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Stop"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Stop"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Undo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Undo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Undo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Undo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Undo : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Undo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która reprezentuje polecenie Cofnij.</summary>
        <value>Polecenie.  
  
 <list type="table"><listheader><term> Wartości domyślne  
  
 </term><description></description></listheader><item><term> Gest klawisza  
  
 </term><description> Ctrl-Z  
  
 </description></item><item><term> Tekst interfejsu użytkownika  
  
 </term><description> Cofnij  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie wskazuje zamiar cofania ostatniej akcji.  
  
 Nie jest konieczna implementacja polecenia dla danego obiektu; w wielu przypadkach implementacja polecenia jest odpowiedzialna za moduł zapisujący aplikacji.  
  
<a name="xamlAttributeUsage_Undo"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="Undo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>
