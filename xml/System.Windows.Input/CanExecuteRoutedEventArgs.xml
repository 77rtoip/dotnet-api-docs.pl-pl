<Type Name="CanExecuteRoutedEventArgs" FullName="System.Windows.Input.CanExecuteRoutedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbec0a81b7258d70c24d1eb064a0edbead2570ab" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69174206" /></Metadata><TypeSignature Language="C#" Value="public sealed class CanExecuteRoutedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CanExecuteRoutedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CanExecuteRoutedEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CanExecuteRoutedEventArgs sealed : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type CanExecuteRoutedEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bd990-101">Dostarcza dane dla <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> zdarzeń i <see cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" /> .</span><span class="sxs-lookup"><span data-stu-id="bd990-101">Provides data for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> and <see cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" /> routed events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd990-102">Zazwyczaj źródło poleceń, takie jak <xref:System.Windows.Controls.MenuItem>, wywoła <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metodę w <xref:System.Windows.Input.RoutedCommand> celu ustalenia, czy polecenie może być wykonane lub nie można wykonać na bieżącym obiekcie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="bd990-102">Typically, a command source, such a <xref:System.Windows.Controls.MenuItem>, will call the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> to determine if the command can or cannot execute on the current command target.</span></span>  <span data-ttu-id="bd990-103">Jeśli <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> jest ustawiona na `false` z programu obsługi zdarzeń, źródło polecenia spowoduje wyłączenie samego siebie.</span><span class="sxs-lookup"><span data-stu-id="bd990-103">If <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is set to `false` from an event handler, the command source will disable itself.</span></span>  <span data-ttu-id="bd990-104">Na przykład jeśli <xref:System.Windows.Controls.MenuItem> działa jako źródło poleceń dla polecenia i nie można wykonać polecenia na bieżącym obiekcie docelowym polecenia, spowoduje to <xref:System.Windows.Controls.MenuItem> szare.</span><span class="sxs-lookup"><span data-stu-id="bd990-104">For example, if a <xref:System.Windows.Controls.MenuItem> is acting as the command source for a command and the command cannot execute on the current command target, then the <xref:System.Windows.Controls.MenuItem> will gray itself out.</span></span>  
  
 <span data-ttu-id="bd990-105"><xref:System.Windows.Input.ICommand.CanExecuteChanged> Zdarzenie powiadamia źródło polecenia, gdy możliwość wykonania polecenia mogła ulec zmianie.</span><span class="sxs-lookup"><span data-stu-id="bd990-105">The <xref:System.Windows.Input.ICommand.CanExecuteChanged> event notifies a command source when the ability of a command to execute may have changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd990-106">W poniższym przykładzie jest tworzona <xref:System.Windows.Input.CanExecuteRoutedEventHandler> funkcja, `true` która zwraca tylko wtedy, gdy obiektem docelowym polecenia jest formant.</span><span class="sxs-lookup"><span data-stu-id="bd990-106">The follow example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> that returns `true` only if the command target is a control.</span></span>  <span data-ttu-id="bd990-107">Po pierwsze <xref:System.Windows.RoutedEventArgs.Source%2A> , jest rzutowany <xref:System.Windows.Controls.Control>na.</span><span class="sxs-lookup"><span data-stu-id="bd990-107">First, <xref:System.Windows.RoutedEventArgs.Source%2A> is cast to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="bd990-108">Jeśli <xref:System.Windows.RoutedEventArgs.Source%2A> `false`jest, jestustawiona`true`na; w przeciwnym razie jest ustawiona na. <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> <xref:System.Windows.Controls.Control></span><span class="sxs-lookup"><span data-stu-id="bd990-108">If <xref:System.Windows.RoutedEventArgs.Source%2A> is a <xref:System.Windows.Controls.Control>, <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is set to `true`; otherwise, it is set to `false`.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCanExecute](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcanexecute)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCanExecute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcanexecute)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanExecute" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Property CanExecute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanExecute { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanExecute : bool with get, set" Usage="System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd990-109">Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Input.RoutedCommand" /> skojarzona z tym zdarzeniem może być wykonywana na obiekcie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="bd990-109">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Input.RoutedCommand" /> associated with this event can be executed on the command target.</span></span></summary>
        <value><span data-ttu-id="bd990-110"><see langword="true" />Jeśli zdarzenie można wykonać na obiekcie docelowym polecenia; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="bd990-110"><see langword="true" /> if the event can be executed on the command target; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="bd990-111">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bd990-111">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd990-112">Wiele źródeł poleceń, takich jak <xref:System.Windows.Controls.MenuItem> i <xref:System.Windows.Controls.Button>, jest wyłączonych <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> , `false` gdy jest i włączone <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> , `true`gdy jest.</span><span class="sxs-lookup"><span data-stu-id="bd990-112">Many command sources, such as <xref:System.Windows.Controls.MenuItem> and <xref:System.Windows.Controls.Button>, are disabled when <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is `false` and enabled when the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd990-113">W poniższym przykładzie jest tworzony <xref:System.Windows.Input.CanExecuteRoutedEventHandler> element, który zwraca wartość true tylko wtedy, gdy obiektem docelowym polecenia jest formant.</span><span class="sxs-lookup"><span data-stu-id="bd990-113">The follow example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> that only returns true if the command target is a control.</span></span>  <span data-ttu-id="bd990-114"><xref:System.Windows.Controls.Control>Najpierw dane <xref:System.Windows.RoutedEventArgs.Source%2A> zdarzenia są rzutowane na.</span><span class="sxs-lookup"><span data-stu-id="bd990-114">First the <xref:System.Windows.RoutedEventArgs.Source%2A> event data is cast to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="bd990-115">Jeśli jest <xref:System.Windows.Controls.Control>, <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> jest ustawiona na `true`; w przeciwnym razie jest ustawiona na `false`.</span><span class="sxs-lookup"><span data-stu-id="bd990-115">If it is a <xref:System.Windows.Controls.Control>, <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is set to `true`; otherwise, it is set to `false`.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCanExecute](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcanexecute)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCanExecute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcanexecute)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.CanExecuteRoutedEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd990-116">Pobiera polecenie skojarzone z tym zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="bd990-116">Gets the command associated with this event.</span></span></summary>
        <value><span data-ttu-id="bd990-117">Polecenie.</span><span class="sxs-lookup"><span data-stu-id="bd990-117">The command.</span></span> <span data-ttu-id="bd990-118">Jeśli polecenie nie jest poleceniem niestandardowym, zwykle <see cref="T:System.Windows.Input.RoutedCommand" />jest to.</span><span class="sxs-lookup"><span data-stu-id="bd990-118">Unless the command is a custom command, this is generally a <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span> <span data-ttu-id="bd990-119">Nie ma żadnej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="bd990-119">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd990-120">Aby uzyskać więcej informacji na temat poleceń, zobacz [Omówienie poleceń](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="bd990-120">For more information on commanding, see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd990-121">Poniższy przykład tworzy <xref:System.Windows.Input.CanExecuteRoutedEventHandler> , który obsługuje wiele poleceń.</span><span class="sxs-lookup"><span data-stu-id="bd990-121">The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which handles multiple commands.</span></span>  <span data-ttu-id="bd990-122">`false` <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> `IsPlaying` <xref:System.Windows.Input.MediaCommands.Play%2A> `true` `false`Jeśli właściwość jest równa poleceniu, a Metoda<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> zwraca wartość, jest ustawiona na; w przeciwnym razie jest ustawiona na. <xref:System.Windows.Input.CanExecuteRoutedEventArgs.Command%2A></span><span class="sxs-lookup"><span data-stu-id="bd990-122">If the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.Command%2A> property is equal to the <xref:System.Windows.Input.MediaCommands.Play%2A> command and the method `IsPlaying` returns `false`, <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is set to `true`; otherwise, <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is set to `false`.</span></span>  <span data-ttu-id="bd990-123">`true` <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> `IsPlaying` <xref:System.Windows.Input.MediaCommands.Stop%2A> `true` `false`Jeśli właściwość jest równa poleceniu, a Metoda<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> zwraca wartość, jest ustawiona na; w przeciwnym razie jest ustawiona na. <xref:System.Windows.Input.CanExecuteRoutedEventArgs.Command%2A></span><span class="sxs-lookup"><span data-stu-id="bd990-123">If the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.Command%2A> property is equal to the <xref:System.Windows.Input.MediaCommands.Stop%2A> command and the method `IsPlaying` returns `true`, <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is set to `true`; otherwise, <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> is set to `false`.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewMultipleCanExecute](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewmultiplecanexecute)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewMultipleCanExecute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewmultiplecanexecute)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ContinueRouting">
      <MemberSignature Language="C#" Value="public bool ContinueRouting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContinueRouting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CanExecuteRoutedEventArgs.ContinueRouting" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueRouting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContinueRouting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ContinueRouting : bool with get, set" Usage="System.Windows.Input.CanExecuteRoutedEventArgs.ContinueRouting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd990-124">Określa, czy wejściowe zdarzenie, które wywołało polecenie, powinno nadal być kierowane przez drzewo elementów.</span><span class="sxs-lookup"><span data-stu-id="bd990-124">Determines whether the input routed event that invoked the command should continue to route through the element tree.</span></span></summary>
        <value><span data-ttu-id="bd990-125"><see langword="true" />Jeśli zdarzenie kierowane powinno nadal być kierowane przez drzewo elementów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="bd990-125"><see langword="true" /> if the routed event should continue to route through element tree; otherwise, <see langword="false" />.</span></span>   <span data-ttu-id="bd990-126">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bd990-126">The default value is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CanExecuteRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="canExecuteRoutedEventArgs.InvokeEventHandler (genericHandler, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public object Parameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameter : obj" Usage="System.Windows.Input.CanExecuteRoutedEventArgs.Parameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd990-127">Pobiera dane specyficzne dla polecenia.</span><span class="sxs-lookup"><span data-stu-id="bd990-127">Gets the command specific data.</span></span></summary>
        <value><span data-ttu-id="bd990-128">Dane polecenia.</span><span class="sxs-lookup"><span data-stu-id="bd990-128">The command data.</span></span>  <span data-ttu-id="bd990-129">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bd990-129">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd990-130">Parametr polecenia służy do przekazywania określonych informacji do polecenia podczas jego wykonywania.</span><span class="sxs-lookup"><span data-stu-id="bd990-130">The command parameter is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="bd990-131">Typ danych jest definiowany przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="bd990-131">The type of the data is defined by the command.</span></span>  
  
 <span data-ttu-id="bd990-132"><xref:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter%2A>może być `null`.</span><span class="sxs-lookup"><span data-stu-id="bd990-132"><xref:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter%2A> can be `null`.</span></span> <span data-ttu-id="bd990-133">Wiele poleceń nie przetwarza ani nie oczekuje parametrów polecenia.</span><span class="sxs-lookup"><span data-stu-id="bd990-133">Many commands do not process or expect command parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd990-134">Poniższy przykład pokazuje, aby użyć <xref:System.Windows.Controls.Button> jako źródła poleceń polecenia niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="bd990-134">The following example shows up to use a <xref:System.Windows.Controls.Button> as the command source for a custom command.</span></span>  <span data-ttu-id="bd990-135"><xref:System.Windows.Input.RoutedCommand> <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> <xref:System.Windows.Controls.Slider> Właściwość obiektu jest ustawiona na niestandardową <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> , a służy do przekazywania wartości właściwości formantu. `customCommand` <xref:System.Windows.Input.ICommandSource.Command%2A> <xref:System.Windows.Controls.Button></span><span class="sxs-lookup"><span data-stu-id="bd990-135">The <xref:System.Windows.Input.ICommandSource.Command%2A> property of the <xref:System.Windows.Controls.Button> is set to the custom <xref:System.Windows.Input.RoutedCommand> called `customCommand` and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass the value of the <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> property of a <xref:System.Windows.Controls.Slider> control.</span></span>  <span data-ttu-id="bd990-136">Jest to realizowane za pomocą wiązania z danymi, aby <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> powiązać <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> z właściwością.</span><span class="sxs-lookup"><span data-stu-id="bd990-136">This is accomplishment by using databinding to bind the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> to the <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> property.</span></span>  <span data-ttu-id="bd990-137">Konwerter w wyrażeniu powiązania jest niestandardowym <xref:System.Windows.Data.IValueConverter> , który <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> jest konwertowany <xref:System.Int32> na element przed powiązaniem <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>go z.</span><span class="sxs-lookup"><span data-stu-id="bd990-137">The converter in the binding expression is a custom <xref:System.Windows.Data.IValueConverter> which converts <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> into an <xref:System.Int32> before binding it to the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 [!code-xaml[invalidaterequerywithdispatchertimer#InvalidateSampleSliderCommandParameter](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml#invalidatesampleslidercommandparameter)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>
