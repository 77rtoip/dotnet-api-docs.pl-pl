<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyGesture.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50502ad4878935fe7a08def19c5e36b616ab6ce52.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0502ad4878935fe7a08def19c5e36b616ab6ce52</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyGesture">
          <source>Defines a keyboard combination that can be used to invoke a command.</source>
          <target state="translated">Określa kombinację klawiszy, który może służyć do wywołania polecenia.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">W większości przypadków <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi być skojarzony z co najmniej jednego <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">Wyjątek od tej reguły są klawiszy funkcyjnych i klucze numerycznej, które mogą być prawidłowym <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> samodzielnie.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>For example, you can create a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by using only the F12 key, but to use the X key in a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> it must be paired with a modifier key.</source>
          <target state="translated">Na przykład można utworzyć <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> przy użyciu tylko klawisz F12, ale umożliwia X klucza w <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> go muszą łączyć się z klawisz modyfikujący.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>In general, you can</source>
          <target state="translated">Ogólnie rzecz biorąc można</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>You can use a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> to bind a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to an <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, so that the command is invoked when the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> occurs.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> powiązać <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> do <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, dzięki czemu polecenie jest wywoływane, gdy <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> występuje.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usages, the property that is generally set in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>, in cases where the gesture represents both a standard key and a modifier key.</source>
          <target state="translated">Dla <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> użycia, właściwości, które zwykle są ustawione w <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> jest <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>, w przypadku której gestu reprezentuje zarówno klucz standard, jak i klucz modyfikujący.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>You can also set the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> property to be just a function key, or just a modifier key combination.</source>
          <target state="translated">Można również ustawić <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> właściwości właśnie klucza funkcji lub po prostu modyfikujący kombinacja klucza.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>However, it is more common to set the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> property if the intended command binding is a function key with no modifiers, or <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> if the intended command binding is for modifier keys only.</source>
          <target state="translated">Jednak częściej można ustawić są <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> właściwości powiązania danego polecenia jest kluczem funkcji z brak modyfikatorów lub <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> Jeśli powiązanie zamierzone polecenie dotyczy tylko klawisze modyfikujące.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>XAML Attribute Usage</source>
          <target state="translated">Użycie atrybutu języka XAML</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>XAML Values</source>
          <target state="translated">Wartości XAML</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>A single key value, which must be one of the function keys (F1-12) or numeric keypad keys.</source>
          <target state="translated">Jednego klucza wartość, która musi być jedną z klawiszy funkcyjnych (F1 – 12) lub klucze numerycznej.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>One or more modifier keys, defined by the <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> enumeration, delimited with a "+" character.</source>
          <target state="translated">Klawisze modyfikujące, zdefiniowane przez <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> wyliczenie rozdzielone znakiem "+".</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>A single key value.</source>
          <target state="translated">Pojedynczą wartość klucza.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>The following example shows how to bind the <ph id="ph1">&lt;xref:System.Windows.Input.ApplicationCommands.Close%2A&gt;</ph> command to a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> using a <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia sposób powiązania <ph id="ph1">&lt;xref:System.Windows.Input.ApplicationCommands.Close%2A&gt;</ph> polecenie <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> przy użyciu <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> w <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>Note that the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage does not directly declare a <ph id="ph2">`&lt;KeyGesture&gt;`</ph> element.</source>
          <target state="translated">Należy pamiętać, że <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> użycie bezpośrednio nie deklaruje <ph id="ph2">`&lt;KeyGesture&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>That object element usage is not possible because <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> does not expose a public default constructor.</source>
          <target state="translated">Użycie elementu obiektu nie jest możliwe ponieważ <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> nie ujawniać publicznego konstruktora domyślnego.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>Instead, the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage uses the typeconverter behavior to declare an entire <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> inline as the <ph id="ph3">`Gesture`</ph> attribute value.</source>
          <target state="translated">Zamiast tego <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> użycia używa zachowanie typeconverter do deklarowania cały <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> wbudowanego jako <ph id="ph3">`Gesture`</ph> wartość atrybutu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyGesture">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>The key associated with this gesture.</source>
          <target state="translated">Klucz skojarzony z tym gestu.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> klasy z określonym <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">W większości przypadków <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi być skojarzony z co najmniej jednego <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">Wyjątek od tej reguły są klawiszy funkcyjnych i klucze numerycznej, które mogą być prawidłowym <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> samodzielnie.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>The following example shows how to use this constructor to create a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and associate it with a <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</source>
          <target state="translated">Poniższy przykład pokazuje, jak używać ten konstruktor do tworzenia <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> i skojarz ją z <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> is then added to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> Jest dodawane do <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> z <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> nie jest prawidłową <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> nie jest prawidłową <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The key associated with the gesture.</source>
          <target state="translated">Klucz skojarzony z gestu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The modifier keys associated with the gesture.</source>
          <target state="translated">Klawisze modyfikujące skojarzone z gestu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> klasy z określonym <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> i <ph id="ph3">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">W większości przypadków <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi być skojarzony z co najmniej jednego <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">Wyjątek od tej reguły są klawiszy funkcyjnych i klucze numerycznej, które mogą być prawidłowym <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> samodzielnie.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The following example shows how to use this constructor to create a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and associate it with a <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</source>
          <target state="translated">Poniższy przykład pokazuje, jak używać ten konstruktor do tworzenia <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> i skojarz ją z <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> is then added to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> Jest dodawane do <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> z <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;paramref name="modifiers" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="modifiers" /&gt;</ph> nie jest prawidłowy <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> nie jest prawidłową <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> and <ph id="ph2">&lt;paramref name="modifiers" /&gt;</ph> do not form a valid <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> i <ph id="ph2">&lt;paramref name="modifiers" /&gt;</ph> nie tworzą prawidłową <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>The key associated with the gesture.</source>
          <target state="translated">Klucz skojarzony z gestu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>The modifier keys associated with the gesture.</source>
          <target state="translated">Klawisze modyfikujące skojarzone z gestu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>A string representation of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Reprezentacja ciągu <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>, and display string.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> klasy z określonym <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>, a ciąg wyświetlany.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.DisplayString%2A&gt;</ph> property is set to the <ph id="ph2">`displayString`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.DisplayString%2A&gt;</ph> Właściwość jest ustawiona na <ph id="ph2">`displayString`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source><ph id="ph1">&lt;paramref name="modifiers" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="modifiers" /&gt;</ph> nie jest prawidłowy <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> nie jest prawidłową <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source><ph id="ph1">&lt;paramref name="displayString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="displayString" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> and <ph id="ph2">&lt;paramref name="modifiers" /&gt;</ph> do not form a valid <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> i <ph id="ph2">&lt;paramref name="modifiers" /&gt;</ph> nie tworzą prawidłową <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>Gets a string representation of this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Pobiera reprezentację ciągu tego <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>The display string for this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Ciąg wyświetlany w tym <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>If a display string was not set in the constructor, an empty string is returned.</source>
          <target state="translated">Jeśli nie ustawiono ciągu wyświetlanego w konstruktorze, zwracany jest pustym ciągiem.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>If this property is empty, the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A&gt;</ph> method returns a string created from the <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph>.</source>
          <target state="translated">Jeśli ta właściwość jest pusta, <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A&gt;</ph> metoda zwraca ciąg utworzony na podstawie <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
          <source>The culture specific information.</source>
          <target state="translated">Informacje specyficzne dla kultury.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
          <source>Returns a string that can be used to display the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Zwraca wartość typu ciąg, który może służyć do wyświetlenia <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
          <source>The string to display</source>
          <target state="translated">Ciąg wyświetlany</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
          <source>If the display string was set by the constructor, that string is returned; otherwise, a string is created from the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph> with any necessary conversions being governed by the specified <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">Jeśli ciąg wyświetlany została ustawiona przez konstruktora, który jest zwracany ciąg; w przeciwnym razie wartość ciągu jest tworzona na podstawie <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph> z jakiejkolwiek konwersji konieczne jest regulowane przez określony <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>Gets the key associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Pobiera klucz skojarzony z tym <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>The key associated with the gesture.</source>
          <target state="translated">Klucz skojarzony z gestu.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">W większości przypadków <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi być skojarzony z co najmniej jednego <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">Wyjątek od tej reguły są klawiszy funkcyjnych i klucze numerycznej, które mogą być prawidłowym <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> samodzielnie.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>The target.</source>
          <target state="translated">Element docelowy.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>The input event data to compare this gesture to.</source>
          <target state="translated">Dane wejściowe zdarzenia do porównania z tym gestu do.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>Determines whether this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> matches the input associated with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.InputEventArgs" /&gt;</ph> object.</source>
          <target state="translated">Określa, czy to <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> odpowiada wejścia skojarzonego z określonym <ph id="ph2">&lt;see cref="T:System.Windows.Input.InputEventArgs" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event data matches this <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dane zdarzenia odpowiada to <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source><ph id="ph1">`targetElement`</ph> can be used to make a more specific decision on whether a command should be invoked on a specific element.</source>
          <target state="translated"><ph id="ph1">`targetElement`</ph> może służyć do bardziej szczegółowych decyzji na Określa, czy polecenie powinna być wywoływana dla określonego elementu.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>The following example shows how to test whether a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> matches the input associated with an instance of an <ph id="ph2">&lt;xref:System.Windows.Input.InputEventArgs&gt;</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia sposób test czy <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> odpowiada wejścia skojarzonego z wystąpieniem <ph id="ph2">&lt;xref:System.Windows.Input.InputEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> event handler is created that compares the event data with the <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by using the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture.Matches%2A&gt;</ph> method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> tworzony jest program obsługi zdarzeń, który porównuje dane zdarzeń z <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> przy użyciu <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture.Matches%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>Gets the modifier keys associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Pobiera klawisze modyfikujące skojarzony z tym <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>The modifier keys associated with the gesture.</source>
          <target state="translated">Klawisze modyfikujące skojarzone z gestu.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">W większości przypadków <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi być skojarzony z co najmniej jednego <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">Wyjątek od tej reguły są klawiszy funkcyjnych i klucze numerycznej, które mogą być prawidłowym <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> samodzielnie.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>For example, you can create a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by using only the F12 key, but to use the X key in a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> it must be paired with a modifier key.</source>
          <target state="translated">Na przykład można utworzyć <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> przy użyciu tylko klawisz F12, ale umożliwia X klucza w <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> go muszą łączyć się z klawisz modyfikujący.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>