<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e7060feb6bd9cc789b91cd51b75c1f71d708b5f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30705881" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Obiekt, w którym jest umocowana Obsługa zdarzeń.</param>
    <param name="e">Dane dotyczące zdarzenia.</param>
    <summary>Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Windows.Input.CommandBinding.Executed" /> i <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> zdarzenia rozsyłane, a także powiązane dołączone zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten delegat zawiera logikę implementacji <xref:System.Windows.Input.RoutedCommand>.  Oddzielanie logika implementacji polecenia umożliwia polecenie do wywołania z różnych źródeł i typów i umożliwia centralizacji logiki polecenia.  
  
 Ten delegat jest również używane do <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> i <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, które są dołączone zdarzenia na <xref:System.Windows.Input.CommandManager> klasy, która implementuje wiele sterująca infrastruktury. Ale obsługi najbardziej praktyczne będzie obsługiwać <xref:System.Windows.Input.CommandBinding.Executed> zdarzenia z określonego <xref:System.Windows.Input.CommandBinding>, zamiast niż działania na <xref:System.Windows.Input.CommandManager> poziom.  
  
 W ramach <xref:System.Windows.Input.ExecutedRoutedEventArgs>, następujące właściwości są zazwyczaj przydatne podczas pisania program obsługi zdarzeń dla zdarzenia routingiem, będącą wynikiem wykonanego polecenia:  
  
-   <xref:System.Windows.RoutedEventArgs.Source%2A> Raport docelowy, gdy polecenie zostało wykonane. Po wykonaniu polecenia, można również traktować <xref:System.Windows.RoutedEventArgs.Source%2A> więcej zazwyczaj w kierowane zdarzenia warunków, jako obiekt, który wywołał kierowanego zdarzenia.  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> Raporty polecenie wykonane. Ta właściwość jest przydatna, jeśli używasz polecenia wiązania i podczas pisania obsług, które potencjalnie obsłużyć wielu poleceń.  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> raportuje wszystkie parametry specyficzne dla danego polecenia, które zostały przekazane przez wykonywanego polecenia. Nie wszystkie polecenia użyj lub oczekiwane parametry specyficzne dla danego polecenia.  
  
-   <xref:System.Windows.RoutedEventArgs.Handled%2A> Raporty, czy kierowanego zdarzenia, który spowodował wykonanie polecenia już został obsłużony przez inny element wzdłuż trasy. Dla programów obsługi kierowanego zdarzenia, jest zalecanym rozwiązaniem ma obsługi, które pracy przydatne podczas obsługi zdarzeń, aby ustawić <xref:System.Windows.RoutedEventArgs.Handled%2A> do `true`. Zapobiega to typowe programy obsługi dla zdarzenia obsługi zdarzenia ponownie dalej w tym samym trasy. Aby uzyskać więcej informacji dotyczących obsługi kierowane zdarzenia, zobacz [oznaczenie kierowane zdarzenia jako Handled i obsługa klasy](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Ten delegat reprezentuje również obsługę <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> i <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, które są dołączone zdarzenia na <xref:System.Windows.Input.CommandManager> klasy, która implementuje wiele sterująca infrastruktury. Ale obsługi najbardziej praktyczne będzie obsługiwać <xref:System.Windows.Input.CommandBinding.Executed> zdarzenia z określonego <xref:System.Windows.Input.CommandBinding>, zamiast niż działania na <xref:System.Windows.Input.CommandManager> poziom.  
  
 Aby uzyskać więcej informacji na wydawanie poleceń, zobacz [droższe omówienie](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
   
  
## Examples  
 Ten przykład tworzy <xref:System.Windows.Input.ExecutedRoutedEventHandler> stanowiąca visual właściwości w elemencie docelowym podczas wykonywania polecenia. Zawiera również przykład <xref:System.Windows.Input.CanExecuteRoutedEventHandler> dla tego samego polecenia.  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>