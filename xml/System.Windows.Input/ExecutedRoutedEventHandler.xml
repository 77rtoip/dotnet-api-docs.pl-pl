<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e128fe4824481b4e3dc209fbcdd4599518ff8ebd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69172904" /></Metadata><TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="19996-101">Obiekt, do którego jest dołączona procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="19996-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="19996-102">Dane dotyczące zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="19996-102">The event data.</span></span></param>
    <summary><span data-ttu-id="19996-103">Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Windows.Input.CommandBinding.Executed" /> zdarzenia kierowane i, a <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> także powiązane zdarzenia dołączone.</span><span class="sxs-lookup"><span data-stu-id="19996-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> routed events, as well as related attached events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19996-104">Ten delegat zawiera logikę implementacji dla elementu <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="19996-104">This delegate contains the implementation logic for a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="19996-105">Oddzielenie logiki implementacji z polecenia umożliwia wywoływanie polecenia z różnych źródeł i typów oraz umożliwia scentralizowanie logiki poleceń.</span><span class="sxs-lookup"><span data-stu-id="19996-105">Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="19996-106">Ten delegat jest również używany dla <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> i <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, które <xref:System.Windows.Input.CommandManager> są dołączone zdarzenia w klasie, która implementuje większość infrastruktury poleceń.</span><span class="sxs-lookup"><span data-stu-id="19996-106">This delegate is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="19996-107">Jednak większość praktycznych programów obsługi będzie obsługiwać <xref:System.Windows.Input.CommandBinding.Executed> zdarzenia z określonego <xref:System.Windows.Input.CommandBinding>, <xref:System.Windows.Input.CommandManager> a nie na poziomie.</span><span class="sxs-lookup"><span data-stu-id="19996-107">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="19996-108">W <xref:System.Windows.Input.ExecutedRoutedEventArgs>programie następujące właściwości są zazwyczaj przydatne podczas pisania obsługi zdarzeń dla zdarzenia kierowanego, które wynikają z wykonanego polecenia:</span><span class="sxs-lookup"><span data-stu-id="19996-108">Within <xref:System.Windows.Input.ExecutedRoutedEventArgs>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</span></span>  
  
-   <span data-ttu-id="19996-109"><xref:System.Windows.RoutedEventArgs.Source%2A>raportuje element docelowy, w którym wykonano polecenie.</span><span class="sxs-lookup"><span data-stu-id="19996-109"><xref:System.Windows.RoutedEventArgs.Source%2A> reports the target where the command was executed.</span></span> <span data-ttu-id="19996-110">Po wykonaniu polecenia można także <xref:System.Windows.RoutedEventArgs.Source%2A> określić bardziej ogólnie w przypadku rozesłanych terminów zdarzeń jako obiekt, który spowodował zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="19996-110">Once the command is executed, you can also think of the <xref:System.Windows.RoutedEventArgs.Source%2A> more generally in routed event terms, as the object that raised a routed event.</span></span>  
  
-   <span data-ttu-id="19996-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>raportuje wykonywane polecenie.</span><span class="sxs-lookup"><span data-stu-id="19996-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> reports the command that executed.</span></span> <span data-ttu-id="19996-112">Ta właściwość jest przydatna, jeśli używasz powiązań poleceń i w przypadku pisania programów obsługi, które potencjalnie obsługują wiele poleceń.</span><span class="sxs-lookup"><span data-stu-id="19996-112">This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</span></span>  
  
-   <span data-ttu-id="19996-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>raportuje wszystkie parametry specyficzne dla polecenia, które zostały przesłane przez wykonywanie polecenia.</span><span class="sxs-lookup"><span data-stu-id="19996-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> reports any command-specific parameters that were passed by the executing command.</span></span> <span data-ttu-id="19996-114">Nie wszystkie polecenia używają lub oczekują parametrów specyficznych dla polecenia.</span><span class="sxs-lookup"><span data-stu-id="19996-114">Not all commands use or expect command-specific parameters.</span></span>  
  
-   <span data-ttu-id="19996-115"><xref:System.Windows.RoutedEventArgs.Handled%2A>informuje, czy zdarzenie trasowane, które spowodowało wykonanie wykonanego polecenia, zostało już obsłużone przez inny element wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="19996-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</span></span> <span data-ttu-id="19996-116">W przypadku obsługi zdarzeń kierowanych jest zalecanym sposobem posiadania programów obsługi, które wykonują znaczącą użyteczność podczas obsługi zdarzenia, <xref:System.Windows.RoutedEventArgs.Handled%2A> aby `true`ustawić wartość.</span><span class="sxs-lookup"><span data-stu-id="19996-116">For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true`.</span></span> <span data-ttu-id="19996-117">Uniemożliwia to typowym programom obsługi zdarzenia ponowne obsługiwanie zdarzenia na trasie.</span><span class="sxs-lookup"><span data-stu-id="19996-117">This prevents typical handlers for the event from handling the event again further along the route.</span></span> <span data-ttu-id="19996-118">Aby uzyskać więcej informacji na temat obsługi zdarzeń kierowanych, zobacz [oznaczanie zdarzeń kierowanych jako obsłużone i obsługa klas](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="19996-118">For more information on handling routed events, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="19996-119">Ten delegat reprezentuje również programy obsługi dla <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> i <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, które <xref:System.Windows.Input.CommandManager> są dołączone zdarzenia w klasie, która implementuje większość infrastruktury poleceń.</span><span class="sxs-lookup"><span data-stu-id="19996-119">This delegate also represents handlers for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="19996-120">Jednak większość praktycznych programów obsługi będzie obsługiwać <xref:System.Windows.Input.CommandBinding.Executed> zdarzenia z określonego <xref:System.Windows.Input.CommandBinding>, <xref:System.Windows.Input.CommandManager> a nie na poziomie.</span><span class="sxs-lookup"><span data-stu-id="19996-120">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="19996-121">Aby uzyskać więcej informacji na temat poleceń, zobacz [Omówienie poleceń](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="19996-121">For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19996-122">Ten przykład tworzy <xref:System.Windows.Input.ExecutedRoutedEventHandler> obiekt, który ustawia właściwość wizualną w miejscu docelowym, gdy polecenie jest wykonywane.</span><span class="sxs-lookup"><span data-stu-id="19996-122">This example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that sets a visual property on the target when the command is executed.</span></span> <span data-ttu-id="19996-123">Przykład zawiera <xref:System.Windows.Input.CanExecuteRoutedEventHandler> również dla tego samego polecenia.</span><span class="sxs-lookup"><span data-stu-id="19996-123">The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.</span></span>  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>
