<Type Name="ICommand" FullName="System.Windows.Input.ICommand">
  <TypeSignature Language="C#" Value="public interface ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommand" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommand" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6bd14-101">Definiuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="6bd14-101">Defines a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd14-102"><xref:System.Windows.Input.RoutedCommand> i <xref:System.Windows.Input.RoutedUICommand> są dwa implementacje <xref:System.Windows.Input.ICommand> interfejsu w [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6bd14-102"><xref:System.Windows.Input.RoutedCommand> and <xref:System.Windows.Input.RoutedUICommand> are two implementations of the <xref:System.Windows.Input.ICommand> interface in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span></span>  
  
## <a name="icommand-in-windows-runtime-apps"></a><span data-ttu-id="6bd14-103">ICommand w systemie Windows aplikacji środowiska wykonawczego</span><span class="sxs-lookup"><span data-stu-id="6bd14-103">ICommand in Windows Runtime apps</span></span>  
 <span data-ttu-id="6bd14-104"><xref:System.Windows.Input.ICommand> Interfejs jest kontraktu kodu dla poleceń, które są zapisywane w aplikacjach dla systemu Windows środowisko uruchomieniowe platformy .NET.</span><span class="sxs-lookup"><span data-stu-id="6bd14-104">The <xref:System.Windows.Input.ICommand> interface is the code contract for commands that are written in .NET for Windows Runtime apps.</span></span> <span data-ttu-id="6bd14-105">Te polecenia podaj sterująca zachowanie dla elementów interfejsu użytkownika, takich jak XAML środowiska wykonawczego systemu Windows `Button` w szczególności `AppBarButton`.</span><span class="sxs-lookup"><span data-stu-id="6bd14-105">These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML `Button` and in particular an `AppBarButton`.</span></span> <span data-ttu-id="6bd14-106">Jeśli definiujesz poleceń środowiska wykonawczego systemu Windows użyjesz zasadniczo te same techniki, którego używasz do definiowania polecenia dla aplikacji .NET.</span><span class="sxs-lookup"><span data-stu-id="6bd14-106">If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app.</span></span> <span data-ttu-id="6bd14-107">Wykonania polecenia, definiując klasę, która implementuje <xref:System.Windows.Input.ICommand> i wdrożyć w szczególności <xref:System.Windows.Input.ICommand.Execute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6bd14-107">Implement the command by defining a class that implements <xref:System.Windows.Input.ICommand> and specifically implement the <xref:System.Windows.Input.ICommand.Execute%2A> method.</span></span>  
  
 <span data-ttu-id="6bd14-108">XAML za dla środowiska wykonawczego systemu Windows nie obsługuje x`:Static`, więc nie próbują użyć `x:Static` rozszerzenie znaczników, jeśli polecenie jest używany z XAML środowiska wykonawczego systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="6bd14-108">XAML for Windows Runtime does not support x`:Static`, so don't attempt to use the `x:Static` markup extension if the command is used from Windows Runtime XAML.</span></span> <span data-ttu-id="6bd14-109">Ponadto środowiska uruchomieniowego systemu Windows nie ma żadnych bibliotek wstępnie zdefiniowanego polecenia tak naprawdę nie ma zastosowania w przypadku, gdy w przypadku implementowania interfejsu oraz definiowania polecenia dotyczące użycia środowiska wykonawczego systemu Windows składni języka XAML, pokazano poniżej.</span><span class="sxs-lookup"><span data-stu-id="6bd14-109">Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.</span></span>  
  
<a name="xamlTextUsage_ICommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6bd14-110">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="6bd14-110">XAML Attribute Usage</span></span>  
 <span data-ttu-id="6bd14-111">\<*Obiekt właściwości*= "*predefinedCommandName*" / ></span><span class="sxs-lookup"><span data-stu-id="6bd14-111">\<*object property*="*predefinedCommandName*"/></span></span>  
  
 <span data-ttu-id="6bd14-112">\- lub -</span><span class="sxs-lookup"><span data-stu-id="6bd14-112">\- or -</span></span>  
  
 <span data-ttu-id="6bd14-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="6bd14-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span></span>  
  
 <span data-ttu-id="6bd14-114">\- lub -</span><span class="sxs-lookup"><span data-stu-id="6bd14-114">\- or -</span></span>  
  
 <span data-ttu-id="6bd14-115">\<*object property*="{ *customClassName.customCommandName*}"/></span><span class="sxs-lookup"><span data-stu-id="6bd14-115">\<*object property*="{ *customClassName.customCommandName*}"/></span></span>  
  
<a name="xamlValues_ICommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6bd14-116">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="6bd14-116">XAML Values</span></span>  
 <span data-ttu-id="6bd14-117">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="6bd14-117">*predefinedClassName*</span></span>  
 <span data-ttu-id="6bd14-118">Jedną z klas wstępnie zdefiniowanego polecenia.</span><span class="sxs-lookup"><span data-stu-id="6bd14-118">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="6bd14-119">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="6bd14-119">*predefinedCommandName*</span></span>  
 <span data-ttu-id="6bd14-120">Jeden z wstępnie zdefiniowanych poleceń.</span><span class="sxs-lookup"><span data-stu-id="6bd14-120">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="6bd14-121">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="6bd14-121">*customClassName*</span></span>  
 <span data-ttu-id="6bd14-122">Klasa niestandardowej, która zawiera polecenia niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="6bd14-122">A custom class that contains the custom command.</span></span> <span data-ttu-id="6bd14-123">Niestandardowe klasy wymagają `xlmns` przedrostkowe mapowanie; zobacz [przestrzeń nazw XAML i Namespace mapowanie dla WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="6bd14-123">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="6bd14-124">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="6bd14-124">*customCommandName*</span></span>  
 <span data-ttu-id="6bd14-125">Polecenia niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="6bd14-125">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="6bd14-126">Dane używane przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="6bd14-126">Data used by the command.</span></span>  <span data-ttu-id="6bd14-127">Jeśli polecenie nie wymaga przekazywania danych, ten obiekt może mieć wartości <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6bd14-127">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6bd14-128">Definiuje metodę, która określa, czy polecenie można wykonać w jego bieżącym stanie.</span><span class="sxs-lookup"><span data-stu-id="6bd14-128">Defines the method that determines whether the command can execute in its current state.</span></span></summary>
        <returns>
          <span data-ttu-id="6bd14-129"><see langword="true" /> Jeśli to polecenie może być wykonywane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6bd14-129"><see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd14-130">Zazwyczaj wywołuje źródło polecenia <xref:System.Windows.Input.ICommand.CanExecute%2A> metody podczas <xref:System.Windows.Input.ICommand.CanExecuteChanged> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="6bd14-130">Typically, a command source calls the <xref:System.Windows.Input.ICommand.CanExecute%2A> method when the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.ICommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanExecuteChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bd14-131">Występuje, gdy zmian wpływających na czy polecenie powinno być wykonane.</span><span class="sxs-lookup"><span data-stu-id="6bd14-131">Occurs when changes occur that affect whether or not the command should execute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd14-132">Zazwyczaj wymaga źródło polecenia <xref:System.Windows.Input.ICommand.CanExecute%2A> polecenie po wystąpieniu tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="6bd14-132">Normally, a command source calls <xref:System.Windows.Input.ICommand.CanExecute%2A> on the command when this event occurs.</span></span>  
  
 <span data-ttu-id="6bd14-133">Zwykle jeśli nie można wykonać polecenia, źródło polecenia się wyłączy.</span><span class="sxs-lookup"><span data-stu-id="6bd14-133">Normally, if the command cannot execute, the command source disables itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="6bd14-134">Dane używane przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="6bd14-134">Data used by the command.</span></span>  <span data-ttu-id="6bd14-135">Jeśli polecenie nie wymaga przekazywania danych, ten obiekt może mieć wartości <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6bd14-135">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6bd14-136">Definiuje metodę, która ma być wywoływana po wywołaniu polecenia.</span><span class="sxs-lookup"><span data-stu-id="6bd14-136">Defines the method to be called when the command is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>