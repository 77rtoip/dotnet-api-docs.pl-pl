<Type Name="ICommand" FullName="System.Windows.Input.ICommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="914509cdd6dc311257f257a95145cd897d9eeb02" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69172867" /></Metadata><TypeSignature Language="C#" Value="public interface ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommand" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommand" />
  <TypeSignature Language="F#" Value="type ICommand = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c6d71-101">Definiuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="c6d71-101">Defines a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6d71-102"><xref:System.Windows.Input.RoutedCommand>i <xref:System.Windows.Input.RoutedUICommand> są dwoma implementacjami <xref:System.Windows.Input.ICommand> interfejsu w programie [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c6d71-102"><xref:System.Windows.Input.RoutedCommand> and <xref:System.Windows.Input.RoutedUICommand> are two implementations of the <xref:System.Windows.Input.ICommand> interface in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span></span>  
  
## <a name="icommand-in-windows-runtime-apps"></a><span data-ttu-id="c6d71-103">Interfejs ICommand w aplikacjach środowisko wykonawcze systemu Windows</span><span class="sxs-lookup"><span data-stu-id="c6d71-103">ICommand in Windows Runtime apps</span></span>  
 <span data-ttu-id="c6d71-104"><xref:System.Windows.Input.ICommand> Interfejs jest kontraktem kodu dla poleceń, które są zapisywane w programie .NET dla aplikacji środowisko wykonawcze systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="c6d71-104">The <xref:System.Windows.Input.ICommand> interface is the code contract for commands that are written in .NET for Windows Runtime apps.</span></span> <span data-ttu-id="c6d71-105">Te polecenia zapewniają zachowanie polecenia dla elementów interfejsu użytkownika, takich jak środowisko wykonawcze systemu Windows XAML `Button` i w `AppBarButton`szczególności.</span><span class="sxs-lookup"><span data-stu-id="c6d71-105">These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML `Button` and in particular an `AppBarButton`.</span></span> <span data-ttu-id="c6d71-106">Jeśli definiujesz polecenia dla środowisko wykonawcze systemu Windows aplikacji korzystasz z tych samych metod, które są używane do definiowania poleceń dla aplikacji .NET.</span><span class="sxs-lookup"><span data-stu-id="c6d71-106">If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app.</span></span> <span data-ttu-id="c6d71-107">Zaimplementuj polecenie poprzez zdefiniowanie klasy implementującej <xref:System.Windows.Input.ICommand> i wymagającej <xref:System.Windows.Input.ICommand.Execute%2A> implementacji metody.</span><span class="sxs-lookup"><span data-stu-id="c6d71-107">Implement the command by defining a class that implements <xref:System.Windows.Input.ICommand> and specifically implement the <xref:System.Windows.Input.ICommand.Execute%2A> method.</span></span>  
  
 <span data-ttu-id="c6d71-108">Język XAML dla środowisko wykonawcze systemu Windows nie obsługuje x`:Static`, więc nie próbuj `x:Static` użyć rozszerzenia znacznika, jeśli polecenie jest używane z środowisko wykonawcze systemu Windows XAML.</span><span class="sxs-lookup"><span data-stu-id="c6d71-108">XAML for Windows Runtime does not support x`:Static`, so don't attempt to use the `x:Static` markup extension if the command is used from Windows Runtime XAML.</span></span> <span data-ttu-id="c6d71-109">Ponadto środowisko wykonawcze systemu Windows nie ma żadnych wstępnie zdefiniowanych bibliotek poleceń, więc pokazana tutaj składnia języka XAML nie dotyczy przypadku, w którym implementujesz interfejs, i definiowania polecenia do środowisko wykonawcze systemu Windows użycia.</span><span class="sxs-lookup"><span data-stu-id="c6d71-109">Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.</span></span>  
  
<a name="xamlTextUsage_ICommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c6d71-110">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="c6d71-110">XAML Attribute Usage</span></span>  
 <span data-ttu-id="c6d71-111">\<*Object Property*= "*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="c6d71-111">\<*object property*="*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="c6d71-112">—lub—</span><span class="sxs-lookup"><span data-stu-id="c6d71-112">-or-</span></span>
  
 <span data-ttu-id="c6d71-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="c6d71-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="c6d71-114">—lub—</span><span class="sxs-lookup"><span data-stu-id="c6d71-114">-or-</span></span>
  
 <span data-ttu-id="c6d71-115">\<*object property*="{ *customClassName.customCommandName*}"/></span><span class="sxs-lookup"><span data-stu-id="c6d71-115">\<*object property*="{ *customClassName.customCommandName*}"/></span></span>  
  
<a name="xamlValues_ICommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6d71-116">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="c6d71-116">XAML Values</span></span>  
 <span data-ttu-id="c6d71-117">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="c6d71-117">*predefinedClassName*</span></span>  
 <span data-ttu-id="c6d71-118">Jedna ze wstępnie zdefiniowanych klas poleceń.</span><span class="sxs-lookup"><span data-stu-id="c6d71-118">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="c6d71-119">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="c6d71-119">*predefinedCommandName*</span></span>  
 <span data-ttu-id="c6d71-120">Jedno ze wstępnie zdefiniowanych poleceń.</span><span class="sxs-lookup"><span data-stu-id="c6d71-120">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="c6d71-121">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="c6d71-121">*customClassName*</span></span>  
 <span data-ttu-id="c6d71-122">Klasa niestandardowa, która zawiera polecenie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="c6d71-122">A custom class that contains the custom command.</span></span> <span data-ttu-id="c6d71-123">Klasy niestandardowe zazwyczaj wymagają `xlmns` mapowania prefiksów; zobacz [przestrzenie nazw XAML i mapowanie przestrzeni nazw dla języka XAML WPF](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="c6d71-123">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="c6d71-124">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="c6d71-124">*customCommandName*</span></span>  
 <span data-ttu-id="c6d71-125">Polecenie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="c6d71-125">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : obj -&gt; bool" Usage="iCommand.CanExecute parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="c6d71-126">Dane używane przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="c6d71-126">Data used by the command.</span></span>  <span data-ttu-id="c6d71-127">Jeśli polecenie nie wymaga przekazywania danych, ten obiekt może być ustawiony na <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c6d71-127">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c6d71-128">Definiuje metodę, która określa, czy polecenie może zostać wykonane w jego bieżącym stanie.</span><span class="sxs-lookup"><span data-stu-id="c6d71-128">Defines the method that determines whether the command can execute in its current state.</span></span></summary>
        <returns><span data-ttu-id="c6d71-129"><see langword="true" />Jeśli to polecenie można wykonać; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="c6d71-129"><see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6d71-130">Zazwyczaj źródło polecenia wywołuje metodę, <xref:System.Windows.Input.ICommand.CanExecute%2A> <xref:System.Windows.Input.ICommand.CanExecuteChanged> gdy zdarzenie jest zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="c6d71-130">Typically, a command source calls the <xref:System.Windows.Input.ICommand.CanExecute%2A> method when the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.ICommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanExecuteChanged;" />
      <MemberSignature Language="F#" Value="member this.CanExecuteChanged : EventHandler " Usage="member this.CanExecuteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6d71-131">Występuje, gdy nastąpią zmiany, które mają wpływ na to, czy polecenie ma zostać wykonane.</span><span class="sxs-lookup"><span data-stu-id="c6d71-131">Occurs when changes occur that affect whether or not the command should execute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6d71-132">Normalnie, źródło polecenia wywołuje <xref:System.Windows.Input.ICommand.CanExecute%2A> polecenie w przypadku wystąpienia tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c6d71-132">Normally, a command source calls <xref:System.Windows.Input.ICommand.CanExecute%2A> on the command when this event occurs.</span></span>  
  
 <span data-ttu-id="c6d71-133">Zwykle Jeśli polecenie nie może zostać wykonane, źródło polecenia wyłącza samo.</span><span class="sxs-lookup"><span data-stu-id="c6d71-133">Normally, if the command cannot execute, the command source disables itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Execute : obj -&gt; unit" Usage="iCommand.Execute parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="c6d71-134">Dane używane przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="c6d71-134">Data used by the command.</span></span>  <span data-ttu-id="c6d71-135">Jeśli polecenie nie wymaga przekazywania danych, ten obiekt może być ustawiony na <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c6d71-135">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c6d71-136">Definiuje metodę, która ma być wywoływana, gdy polecenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="c6d71-136">Defines the method to be called when the command is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>
