<Type Name="DialogPropertyValueEditor" FullName="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b670f12ecf4dc921e6de88a5df630def102b2bb" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63925337" /></Metadata><TypeSignature Language="C#" Value="public class DialogPropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogPropertyValueEditor extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogPropertyValueEditor&#xA;Inherits PropertyValueEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DialogPropertyValueEditor : System::Activities::Presentation::PropertyEditing::PropertyValueEditor" />
  <TypeSignature Language="F#" Value="type DialogPropertyValueEditor = class&#xA;    inherit PropertyValueEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Kontener dla wszystkich edycji okno dialogowe logikę <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> klasy, aby wyświetlić wbudowany edytor, który może mieć skojarzone okno dialogowe edytora.  
  
 <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> Klasy może zawierać albo <xref:System.Windows.DataTemplate> dla okna dialogowego pole edytora lub logikę niestandardową, która jest wywoływana, gdy jest wywoływana w oknie dialogowym.  
  
 Użyj <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> w swojej <xref:System.Windows.DataTemplate> do wywoływania niestandardowego <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> klasy.  
  
 Możesz podać <xref:System.Windows.DataTemplate> który jest wyświetlany w oknie dialogowym hosta lub mogą zastąpić <xref:System.Windows.Forms.Form.ShowDialog> metody, która umożliwia ponowne użycie istniejącej lub systemu, okno dialogowe.  
  
 Na poniższej liście przedstawiono zasady określające czy <xref:System.Windows.DataTemplate> lub <xref:System.Windows.Forms.Form.ShowDialog> metoda jest używana.  
  
 Jeśli <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> właściwość nie jest odwołaniem do wartości null (Nothing w języku Visual Basic), który <xref:System.Windows.DataTemplate> znajduje się w oknie dialogowym specyficzne dla hosta, oferujący style hosta. <xref:System.Windows.Forms.Form.ShowDialog> Nie zostanie wywołana.  
  
 Jeśli <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> właściwość jest odwołaniem do wartości null (Nothing w języku Visual Basic), wirtualnego <xref:System.Windows.Forms.Form.ShowDialog> metoda jest wywoływana i mogą przesłaniać tę metodę, aby pokazać dowolne okno dialogowe.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> klasie z atrybutem nie określone szablony.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor (System.Windows.DataTemplate dialogEditorTemplate, System.Windows.DataTemplate inlineEditorTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DataTemplate dialogEditorTemplate, class System.Windows.DataTemplate inlineEditorTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogEditorTemplate As DataTemplate, inlineEditorTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor(System::Windows::DataTemplate ^ dialogEditorTemplate, System::Windows::DataTemplate ^ inlineEditorTemplate);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" Usage="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor (dialogEditorTemplate, inlineEditorTemplate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dialogEditorTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="inlineEditorTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="dialogEditorTemplate">A <see cref="T:System.Windows.DataTemplate" /> , znajduje się w przeglądarce chrome wybranego hosta, a ma jego <see cref="P:System.Activities.ActivityContext.DataContext" /> równa <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> odnosi się do właściwości edytowany.</param>
        <param name="inlineEditorTemplate">A <see cref="T:System.Windows.DataTemplate" /> używanego do obsługi interfejsu użytkownika wbudowanego edytora. Jeśli używane, jego <see cref="P:System.Activities.ActivityContext.DataContext" /> ustawiono <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> odnosi się do właściwości edytowany.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> klasy za pomocą edytora okien dialogowych określonego i wbudowane szablony edytora.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogEditorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate DialogEditorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate DialogEditorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogEditorTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ DialogEditorTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DialogEditorTemplate : System.Windows.DataTemplate with get, set" Usage="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.DataTemplate" /> która jest hostowana przez okno dialogowe konkretnego hosta i ma jego <see cref="P:System.Activities.ActivityContext.DataContext" /> równa <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />.</summary>
        <value><see cref="T:System.Windows.DataTemplate" /> Obiektu, który jest obsługiwany przez okno dialogowe specyficzne dla hosta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość zwraca `null`, <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A> zamiast tego zostanie wywołana metoda.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual void ShowDialog (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, System.Windows.IInputElement commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class System.Windows.IInputElement commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog(System.Activities.Presentation.PropertyEditing.PropertyValue,System.Windows.IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowDialog(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue, System::Windows::IInputElement ^ commandSource);" />
      <MemberSignature Language="F#" Value="abstract member ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit&#xA;override this.ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit" Usage="dialogPropertyValueEditor.ShowDialog (propertyValue, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
        <Parameter Name="commandSource" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="propertyValue"><see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" /> Właściwości edytowany.</param>
        <param name="commandSource"><see cref="T:System.Windows.IInputElement" /> Który może służyć jako źródło do wykonywania <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" />.</param>
        <summary>Wywoływane, gdy <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> ma wartość null i okno dialogowe zostało wywołane przez użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ polecenia Pobierz obsługiwane przez hosta, a ponieważ niestandardowych okien dialogowych nie mają być częścią tego drzewa wizualnego `commandSource` udostępnia <xref:System.Windows.IInputElement> który jest częścią drzewa wizualnego hosta i, w związku z tym, może służyć do wykonywania poleceń w Edycja właściwości taki sposób, że są one obsługiwane poprawnie. Zastąpienie tej metody pozwala na zaimplementowanie dowolnej logiki niestandardowe okno dialogowe, takich jak wywoływanie istniejący system okien dialogowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>