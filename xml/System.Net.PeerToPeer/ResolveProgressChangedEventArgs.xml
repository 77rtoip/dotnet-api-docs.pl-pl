<Type Name="ResolveProgressChangedEventArgs" FullName="System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47679a8bd112b7155c50da9c8e00affc093817fc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37477290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveProgressChangedEventArgs extends System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveProgressChangedEventArgs&#xA;Inherits ProgressChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveProgressChangedEventArgs : System::ComponentModel::ProgressChangedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveProgressChangedEventArgs = class&#xA;    inherit ProgressChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ProgressChangedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Używany w połączeniu z sygnalizowanie <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> zdarzeń.  Zostanie zasygnalizowane zawsze wtedy, gdy <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> obiekt znajduje się w odpowiedzi na <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operacji na określonym <see cref="T:System.Net.PeerToPeer.PeerName" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieje wiele obiektów rekordu nazwy elementów równorzędnych w chmur, którego dotyczy kwerenda, to zdarzenie jest sygnalizowane jeden raz dla każdego rekordu można odnaleźć obiektu. <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Zdarzenie jest zgłaszane tylko raz, kiedy zostały znalezione wszystkie punkty końcowe.  
  
 Ukończenia standardowego procesu oznacza, że obiekt rozpoznawania osiągnął koniec chmur do kwerendy dla nazwy elementów równorzędnych lub osiągnęła maksymalną liczbę wpisów rejestrowania dla elementu równorzędnego Nazwa kolekcji rekordów, który konstruuje go.  
  
 Wszystkie odwołania do tego wystąpienia programu rozpoznawania nazw są koordynowane za pomocą tokenu userState <xref:System.Object>, który jest unikatowy identyfikator dla tego żądania asynchronicznego rozwiązania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveProgressChangedEventArgs (System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveProgressChangedEventArgs(System::Net::PeerToPeer::PeerNameRecord ^ peerNameRecord, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs : System.Net.PeerToPeer.PeerNameRecord * obj -&gt; System.Net.PeerToPeer.ResolveProgressChangedEventArgs" Usage="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs (peerNameRecord, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecord">
          <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> Obiekt ma zostać odnaleziona.</param>
        <param name="userToken">Dostarczony obiekt stanu unikatowych użytkowników, gdy <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> uruchomiono operację.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa rozwiązania elementu równorzędnego jest dostępny za pośrednictwem <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> właściwości.  
  
 Stan użytkownika jest dziedziczony z <xref:System.ComponentModel.AsyncCompletedEventArgs>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecord">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecord PeerNameRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecord PeerNameRecord" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecord As PeerNameRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecord ^ PeerNameRecord { System::Net::PeerToPeer::PeerNameRecord ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecord : System.Net.PeerToPeer.PeerNameRecord" Usage="System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> obiekt do rozpoznania.</summary>
        <value>Obiekt rekordu nazwy elementów równorzędnych znaleziono w odpowiedzi na <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operacji na określonym <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.  Chyba że jawnie określone, jest wartością domyślną dla wszystkich właściwości <see langword="null" /> dla typów odwołań i zero (0) dla właściwości typu <see langword="int" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy elementów równorzędnych niezabezpieczony można zarejestrować jednocześnie przez różnych użytkowników w tej samej <xref:System.Net.PeerToPeer.Cloud>i skojarzonych z różnych punktów końcowych. W związku z tym <xref:System.Net.PeerToPeer.PeerNameResolver> klasa jest używana do rozpoznawania nazw równorzędnych do chmury lub nazwy do elementu równorzędnego rekordy nazwy elementów równorzędnych. Zdarzenia w celu raportowania postępu jest podnoszony, nazwa elementu równorzędnego zostanie znaleziony, podczas gdy program rozpoznawania nazw jest badanie chmur dla <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>