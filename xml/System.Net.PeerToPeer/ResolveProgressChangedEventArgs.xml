<Type Name="ResolveProgressChangedEventArgs" FullName="System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cba627e47b9f13149c7e9bd7dc9120737de727a9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36550308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveProgressChangedEventArgs extends System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveProgressChangedEventArgs&#xA;Inherits ProgressChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveProgressChangedEventArgs : System::ComponentModel::ProgressChangedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveProgressChangedEventArgs = class&#xA;    inherit ProgressChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ProgressChangedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Używane w połączeniu z sygnalizowania <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> zdarzeń.  Zostanie zasygnalizowane zawsze, gdy <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> obiektu zostanie znaleziony w odpowiedzi na <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operacji na określonym <see cref="T:System.Net.PeerToPeer.PeerName" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieje wiele obiektów rekordów nazw elementów równorzędnych w chmur, której dotyczy zapytanie, to zdarzenie jest sygnalizowane raz dla każdego rekordu znaleziono obiektu. <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Zdarzenie jest wywoływane tylko raz, jeśli wszystkie punkty końcowe zostały znalezione.  
  
 Ukończenia standardowego procesu oznacza, że obiekt rozpoznawania osiągnął koniec chmur zapytania dotyczące nazw elementów równorzędnych lub osiągnęła maksymalną liczbę rekordów wpisy dla elementu równorzędnego nazwę kolekcji rekordów, który konstruuje go.  
  
 Wszystkie odwołania do tego wystąpienia programu rozpoznawania nazw są powiązane z tokenu wartości parametru userState <xref:System.Object>, który jest unikatowy identyfikator dla tego żądania asynchroniczne rozwiązanie.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveProgressChangedEventArgs (System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveProgressChangedEventArgs(System::Net::PeerToPeer::PeerNameRecord ^ peerNameRecord, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs : System.Net.PeerToPeer.PeerNameRecord * obj -&gt; System.Net.PeerToPeer.ResolveProgressChangedEventArgs" Usage="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs (peerNameRecord, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecord">
          <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> Obiekt ma zostać odnaleziona.</param>
        <param name="userToken">Dostarczony obiekt stanu unikatowego użytkownika, kiedy <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operacja została uruchomiona.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa rozpoznać elementu równorzędnego jest dostępny za pośrednictwem <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> właściwości.  
  
 Stan użytkownika jest odziedziczone <xref:System.ComponentModel.AsyncCompletedEventArgs>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecord">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecord PeerNameRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecord PeerNameRecord" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecord As PeerNameRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecord ^ PeerNameRecord { System::Net::PeerToPeer::PeerNameRecord ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecord : System.Net.PeerToPeer.PeerNameRecord" Usage="System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> obiekt do rozpoznania.</summary>
        <value>Znaleziono obiekt rekordu nazwa elementu równorzędnego w odpowiedzi na <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operacji na określonym <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.  Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest <see langword="null" /> dla typów referencyjnych i zero (0) dla właściwości typu <see langword="int" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy elementów równorzędnych niezabezpieczona może być jednocześnie zarejestrowany przez różnych użytkowników w tej samej <xref:System.Net.PeerToPeer.Cloud>wraz ze skojarzonymi z różnych punktów końcowych. W rezultacie <xref:System.Net.PeerToPeer.PeerNameResolver> klasa jest używana do rozpoznawania nazw równorzędnych do chmury lub nazwy rekordów nazwa elementu równorzędnego elementów równorzędnych. Zdarzenia w celu raportowania postępu jest wywoływane każdorazowo, gdy program rozpoznawania nazw pyta chmur dla znajduje się nazwa elementu równorzędnego <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>