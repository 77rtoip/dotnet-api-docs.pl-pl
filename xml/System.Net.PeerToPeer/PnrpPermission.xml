<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e328c8189ac2301239f619fca6508a9aa666004" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53291109" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b3e3-101">Określa wartości, które są używane w <see cref="N:System.Net.PeerToPeer" /> obiekt uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3e3-102">Uprawnienia domyślne zezwalają na wszystkie lokalne i aplikacje strefy Intranet na dostęp do usług protokołu PNRP.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="2b3e3-103">Jeśli domyślne uprawnienia nie są zmieniane, wszystkie połączenia lokalnego i lokalne aplikacje mają dostęp do usług Peer-to-Peer, ale aplikacje globalne (internet) nie mają dostępu.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="2b3e3-104">Tego typu wystąpieniom mają dwa stany uprawnień: one albo nie mają dostępu do zasobów chronionych przez uprawnienia lub mają one nieograniczony pełny dostęp do tych zasobów.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="2b3e3-105">Interfejs API dostawcy Namespace PNRP</span><span class="sxs-lookup"><span data-stu-id="2b3e3-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="2b3e3-106">Jedna z wartości w <see cref="T:System.Security.Permissions.PermissionState" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="2b3e3-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> klasy ze stanem podane uprawnienia początkowe.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3e3-108">Tego typu wystąpieniom mają dwa stany uprawnień: one albo nie mają dostępu do zasobów chronionych przez uprawnienia lub mają one nieograniczony pełny dostęp do tych zasobów.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="2b3e3-109">Jeśli `state` jest nieograniczony, wystąpienie PnrpPermission przekazuje wszystkie żądania.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="2b3e3-110">Jeśli `state` zawiera jakąkolwiek inną wartość, wystąpienie PnrpPermission wszystkich potrzeb zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b3e3-111">Tworzy i zwraca identyczną kopię bieżącego <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="2b3e3-112">Obiekt z interfejsem interfejsu IPermission, w których wystąpienie zawiera kopię bieżącego wystąpienia <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3e3-113">Kopiuj uprawnienia reprezentuje taki sam dostęp do zasobów jako uprawnienie oryginalne.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="2b3e3-114">Tego typu wystąpieniom mają dwa stany uprawnień: one albo nie mają dostępu do zasobów chronionych przez uprawnienia lub mają one nieograniczony pełny dostęp do tych zasobów.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b3e3-115">— Parametr nie jest prawidłowym <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="2b3e3-116">Numer wersji parametr nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-116">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3e3-117">Parametr jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2b3e3-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="2b3e3-118">Interfejs API dostawcy Namespace PNRP</span><span class="sxs-lookup"><span data-stu-id="2b3e3-118">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2b3e3-119">Kodowanie XML na potrzeby rekonstrukcji uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-119">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="2b3e3-120">Rekonstruuje obiektu zabezpieczeń przy użyciu określonego stanu z Kodowanie XML.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-120">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3e3-121">Reprezentuje model obiektów XML do kodowania obiektów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="2b3e3-122">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="2b3e3-123">Ta klasa ma być uproszczone wykonania prostego modelu obiektów XML do użycia w ramach systemu zabezpieczeń, a nie do użytku jako ogólne model obiektów XML.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b3e3-124">— Parametr nie jest prawidłowym <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="2b3e3-125">Numer wersji parametr nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-125">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3e3-126">Parametr jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2b3e3-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2b3e3-127">Uprawnienia do <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> z uprawnieniami bieżącego.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="2b3e3-128">Należy się tego samego typu jak bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="2b3e3-129">Tworzy i zwraca uprawnienia, które jest częścią bieżącego wspólną <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="2b3e3-130">Nowe uprawnienia, które reprezentuje część wspólną bieżącego <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="2b3e3-131">Jest to nowe uprawnienie <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic) jeżeli wspólną jest pusta.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3e3-132">Część wspólną dwóch uprawnień jest uprawnień, który opisuje zestaw operacji, które opisują one zarówno we wspólnych.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="2b3e3-133">Żądanie, który przekazuje zarówno pierwotnych uprawnień zostaną spełnione część wspólną.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="2b3e3-134">Poniższe instrukcje muszą być `true` dla wszystkich implementacji metody Intersect.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="2b3e3-135">Reprezentują X i Y <xref:System.Security.IPermission> odwołania do obiektów, które nie są `null` odwołania (Nothing w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2b3e3-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="2b3e3-136">X.Intersect(X) zwraca wartość równa X.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="2b3e3-137">X.Intersect(Y) zwraca taką samą wartość jak Y.Intersect(X).</span><span class="sxs-lookup"><span data-stu-id="2b3e3-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="2b3e3-138">X.Intersect ( `null` odwołania (`Nothing` w języku Visual Basic)) zwraca `null` odwołania (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2b3e3-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b3e3-139">Parametr docelowy nie jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic) i nie jest wystąpieniem tej samej klasy jako bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2b3e3-140">Uprawnienia, które ma zostać przetestowana dla relacji podzbioru.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-140">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="2b3e3-141">To uprawnienie musi być tego samego typu jak bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-141">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="2b3e3-142">Określa, czy bieżący <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> jest podzbiorem określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="2b3e3-143"><see langword="true" /> Jeśli bieżący <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> jest podzbiorem określone uprawnienie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-143"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3e3-144">Bieżący <xref:System.Net.PeerToPeer.PnrpPermission> jest podzbiorem określonego uprawnienia, jeśli bieżące uprawnienia określa zestaw operacji, który jest całkowicie zawarty w określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="2b3e3-145">Na przykład reprezentującą dostępu do uprawnienia "*C:\example.txt*"stanowią podzbiór zestawu uprawnień, która reprezentuje dostęp do "*C:\\*".</span><span class="sxs-lookup"><span data-stu-id="2b3e3-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="2b3e3-146">Jeśli ta metoda zwraca `true`, bieżące uprawnienia reprezentuje nie uzyskać dostęp do chronionych zasobów niż określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="2b3e3-147">Poniższe instrukcje muszą być `true` dla wszystkich implementacjach issubsetof — metoda.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="2b3e3-148">Reprezentują X, Y i Z <xref:System.Security.IPermission> obiekty, które nie są `null` odwołania (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2b3e3-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="2b3e3-149">Zwraca X.IsSubsetOf(X) `true`.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-149">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="2b3e3-150">X.IsSubsetOf(Y) zwraca taką samą wartość jak Y.IsSubsetOf(X) tylko wtedy, gdy X i Y reprezentują ten sam zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-150">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="2b3e3-151">Jeśli X.IsSubsetOf(Y) i Y.IsSubsetOf(Z) oba zwracają `true`, zwraca X.IsSubsetOf(Z) `true`.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-151">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="2b3e3-152">Jeśli X reprezentuje pustego obiektu interfejsu IPermission ze stanem uprawnień *Brak* i Y reprezentuje obiekt interfejsu IPermission `null` odwołania (`Nothing` w języku Visual Basic), zwraca X.IsSubsetOf(Y) `true`.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-152">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="2b3e3-153">Jeśli Z również jest pusty uprawnień, operacja X.Union(Z) ustawienia złożony. Zwraca także IsSubsetOf(Y) `true` ponieważ <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> dwa uprawnienia puste jest pusty uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-153">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b3e3-154">Parametr docelowy nie jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic) i nie jest wystąpieniem tej samej klasy jako bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b3e3-155">Zwraca wartość określająca czy bieżący <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> jest nieograniczony.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="2b3e3-156"><see langword="true" /> Jeśli bieżący uprawnienie jest nieograniczony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-156"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3e3-157">Nieograniczone uprawnienia reprezentuje dostęp do wszystkich zasobów chronionych przez uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b3e3-158">Tworzy XML kodowanie <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i bieżącego stanu.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="2b3e3-159">A <see cref="T:System.Security.SecurityElement" /> obiekt, który zawiera kodowanie XML uprawnień, w tym wszelkich informacji o stanie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2b3e3-160">Uprawnienie do łączenia z uprawnieniami bieżącego.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-160">A permission to combine with the current permission.</span></span> <span data-ttu-id="2b3e3-161">Należy się tego samego typu jak bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-161">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="2b3e3-162">Tworzy uprawnienia, które sumę bieżącą <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="2b3e3-163">Nowe uprawnienie, który reprezentuje <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> bieżącego <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3e3-164">Wynik wywołania <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> uprawnienia, który reprezentuje wszystkie operacje, które są reprezentowane przez oba bieżącą <xref:System.Net.PeerToPeer.PnrpPermission> i określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="2b3e3-165">Wszelkie żądania spełniającą albo uprawnienie przekazuje ich Unii.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="2b3e3-166">Poniższe instrukcje muszą być `true` dla wszystkich implementacji metody Unii.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="2b3e3-167">Reprezentują X i Y <xref:System.Security.IPermission> obiekty, które nie są `null` odwołania (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2b3e3-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="2b3e3-168">X.Union(X) zwraca obiekt, który ma taką samą wartość jak X.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="2b3e3-169">X.Union(Y) zwraca obiekt, który ma taką samą wartość jak obiektu zwróconego przez Y.Union(X).</span><span class="sxs-lookup"><span data-stu-id="2b3e3-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="2b3e3-170">X.Union ( `null` odwołania (`Nothing` w języku Visual Basic)) zwraca obiekt, który ma taką samą wartość jak X.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b3e3-171"><paramref name="target" /> parametr jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="2b3e3-171"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>