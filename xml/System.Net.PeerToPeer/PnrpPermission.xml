<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ddf0a-101">Określa wartości, które są używane w <see cref="N:System.Net.PeerToPeer" /> obiekt uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf0a-102">Domyślne uprawnienia Zezwalaj na wszystkie lokalne i strefy Intranet aplikacjom dostęp do usługi PNRP.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="ddf0a-103">Jeśli domyślne uprawnienia nie są zmieniane, wszystkie połączenia lokalnego i lokalne aplikacje mają dostęp do usług Peer-to-Peer, ale aplikacje globalne (internet) nie mają dostępu.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="ddf0a-104">Wystąpień tego typu mają dwa stany uprawnienie: one albo nie mają dostępu do zasobów chronionych przez uprawnienia lub ich mają nieograniczony dostęp do tych zasobów.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="ddf0a-105">Jedna z wartości w <see cref="T:System.Security.Permissions.PermissionState" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-105">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="ddf0a-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> klasy ze stanem podane uprawnienia początkowej.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf0a-107">Wystąpień tego typu mają dwa stany uprawnienie: one albo nie mają dostępu do zasobów chronionych przez uprawnienia lub ich mają nieograniczony dostęp do tych zasobów.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-107">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="ddf0a-108">Jeśli `state` jest bez ograniczeń, wystąpienie PnrpPermission przekazuje wszystkich potrzeb.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-108">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="ddf0a-109">Jeśli `state` zawiera inne wartości wystąpienia PnrpPermission wszystkich potrzeb zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-109">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddf0a-110">Tworzy i zwraca identyczne kopię bieżącego <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-110">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="ddf0a-111">Obiekt przy użyciu interfejsu IPermission, których wystąpienie zawiera kopię bieżące wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-111">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf0a-112">Kopię uprawnienie reprezentuje takie same prawa dostępu do zasobów oryginalnego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-112">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="ddf0a-113">Wystąpień tego typu mają dwa stany uprawnienie: one albo nie mają dostępu do zasobów chronionych przez uprawnienia lub ich mają nieograniczony dostęp do tych zasobów.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-113">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <span data-ttu-id="ddf0a-114">Parametr nie jest prawidłową <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-114">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
-   <span data-ttu-id="ddf0a-115">Parametr numer wersji nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-115">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ddf0a-116">Parametr jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ddf0a-116">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ddf0a-117">Kodowanie XML na potrzeby rekonstrukcji uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-117">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="ddf0a-118">Rekonstruuje obiektu zabezpieczeń o określonym stanie kodowania XML.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-118">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf0a-119">Reprezentuje model obiektów XML do kodowania obiektów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-119">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="ddf0a-120">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-120">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="ddf0a-121">Ta klasa ma być lekkie wykonania prostego modelu obiektu XML do użycia w ramach systemu zabezpieczeń, a nie do użytku jako ogólne modelu obiektu XML.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-121">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <span data-ttu-id="ddf0a-122">Parametr nie jest prawidłową <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-122">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
-   <span data-ttu-id="ddf0a-123">Parametr numer wersji nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-123">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ddf0a-124">Parametr jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ddf0a-124">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ddf0a-125">Uprawnienia do <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> z uprawnieniami bieżącego.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-125">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="ddf0a-126">Należy tego samego typu co bieżący uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-126">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ddf0a-127">Tworzy i zwraca uprawnienia, które jest przecięcia bieżącego <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-127">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="ddf0a-128">Nowe uprawnienia, które reprezentuje część wspólną bieżącego <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-128">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="ddf0a-129">Jest to nowe uprawnienie <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic), jeśli część wspólną jest pusta.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-129">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf0a-130">Część wspólną dwóch uprawnień jest uprawnienia, które opisano zestaw działań, które opisują one zarówno wspólnych.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-130">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="ddf0a-131">Tylko zażąda przekazuje oba oryginalnego uprawnienia zostaną spełnione przecięcie.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-131">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="ddf0a-132">Poniższe instrukcje muszą być `true` dla wszystkich implementacji metody Intersect.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-132">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="ddf0a-133">Reprezentuje X i Y <xref:System.Security.IPermission> odwołania do obiektów, które nie są `null` odwołania (Nothing w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ddf0a-133">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="ddf0a-134">X.Intersect(X) zwróciło wartość X.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-134">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="ddf0a-135">X.Intersect(Y) zwraca taką samą wartość jak Y.Intersect(X).</span><span class="sxs-lookup"><span data-stu-id="ddf0a-135">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="ddf0a-136">X.Intersect ( `null` odwołania (`Nothing` w języku Visual Basic)) zwraca `null` odwołania (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ddf0a-136">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ddf0a-137">Parametr docelowy nie jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic), a nie wystąpienia tej samej klasy bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-137">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ddf0a-138">Uprawnienia, które ma być sprawdzane pod kątem relacji podzbioru.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-138">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="ddf0a-139">To uprawnienie musi być tego samego typu co bieżący uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-139">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ddf0a-140">Określa, czy bieżący <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> jest podzbiorem określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-140">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns>
          <span data-ttu-id="ddf0a-141"><see langword="True" /> Jeśli bieżący <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> jest podzbiorem określonego uprawnienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-141"><see langword="True" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf0a-142">Bieżący <xref:System.Net.PeerToPeer.PnrpPermission> jest podzbiorem określonego uprawnienia, jeśli uprawnienia bieżącego określa zestaw operacji jest całkowicie zawarty w określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-142">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="ddf0a-143">Na przykład uprawnienia, które reprezentuje dostęp do "*C:\example.txt*"stanowią podzbiór zestawu uprawnień, który reprezentuje dostęp do"*C:\\*".</span><span class="sxs-lookup"><span data-stu-id="ddf0a-143">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="ddf0a-144">Jeśli ta metoda zwraca `true`, bieżący uprawnienie reprezentuje nie uzyskać dostęp do chronionych zasobów niż określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-144">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="ddf0a-145">Poniższe instrukcje muszą być `true` dla wszystkich implementacji metody IsSubsetOf.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-145">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="ddf0a-146">Reprezentuje X, Y i Z <xref:System.Security.IPermission> obiektów, które nie są `null` odwołania (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ddf0a-146">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="ddf0a-147">Zwraca X.IsSubsetOf(X) `true`.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-147">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="ddf0a-148">X.IsSubsetOf(Y) zwraca taką samą wartość jak Y.IsSubsetOf(X) tylko wtedy, gdy X i Y reprezentują ten sam zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-148">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="ddf0a-149">Jeśli X.IsSubsetOf(Y) i Y.IsSubsetOf(Z) zwrócą `true`, zwraca X.IsSubsetOf(Z) `true`.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-149">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="ddf0a-150">Jeśli X reprezentuje pusty obiekt IPermission ze stanem uprawnienia *Brak* i Y reprezentuje obiekt IPermission `null` odwołania (`Nothing` w języku Visual Basic), zwraca X.IsSubsetOf(Y) `true`.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-150">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="ddf0a-151">Jeśli Z również jest pusty uprawnień, operacja X.Union(Z) ustawienia związku. Zwraca także IsSubsetOf(Y) `true` ponieważ <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> dwa puste uprawnień jest pusty uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-151">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ddf0a-152">Parametr docelowy nie jest <see langword="null" /> odwołania (<see langword="Nothing" /> w języku Visual Basic), a nie wystąpienia tej samej klasy bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-152">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddf0a-153">Zwraca wartość określająca czy bieżące <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> jest nieograniczony.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-153">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns>
          <span data-ttu-id="ddf0a-154"><see langword="True" /> Jeśli bieżący uprawnienie jest nieograniczony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-154"><see langword="True" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf0a-155">Nieograniczone uprawnienia reprezentuje dostęp do wszystkich zasobów chronionych przez uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-155">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddf0a-156">Tworzy XML kodowanie <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i swojego bieżącego stanu.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-156">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="ddf0a-157">A <see cref="T:System.Security.SecurityElement" /> obiekt, który zawiera kodowanie XML uprawnienia, łącznie z żadnych informacji o stanie.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-157">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ddf0a-158">Uprawnienie do łączenia z uprawnieniami bieżącego.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-158">A permission to combine with the current permission.</span></span> <span data-ttu-id="ddf0a-159">Należy tego samego typu co bieżący uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-159">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ddf0a-160">Tworzy uprawnienia, które jest Unii bieżącego <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-160">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="ddf0a-161">Nowe uprawnienie, który reprezentuje <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> bieżącego <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-161">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf0a-162">Wynik wywołania <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> jest uprawnienia, które reprezentuje wszystkie operacje reprezentowany przez oba bieżącego <xref:System.Net.PeerToPeer.PnrpPermission> i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-162">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="ddf0a-163">Wszelkie żądania, który przekazuje albo uprawnienie przekazuje ich union.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-163">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="ddf0a-164">Poniższe instrukcje muszą być `true` dla wszystkich implementacji metody Union.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-164">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="ddf0a-165">Reprezentuje X i Y <xref:System.Security.IPermission> obiektów, które nie są `null` odwołania (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ddf0a-165">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="ddf0a-166">X.Union(X) zwraca obiekt, który ma taką samą wartość jak X.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-166">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="ddf0a-167">X.Union(Y) zwraca obiekt, który ma taką samą wartość jak dla obiektu zwrócony przez Y.Union(X).</span><span class="sxs-lookup"><span data-stu-id="ddf0a-167">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="ddf0a-168">X.Union ( `null` odwołania (`Nothing` w języku Visual Basic)) zwraca obiekt, który ma taką samą wartość jak X.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-168">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ddf0a-169"><paramref name="target" /> parametr jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="ddf0a-169"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>