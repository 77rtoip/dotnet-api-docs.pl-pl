<Type Name="ResolveCompletedEventArgs" FullName="System.Net.PeerToPeer.ResolveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb8d300c8d83189282dddde3e76716923e00b8c2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveCompletedEventArgs&#xA;Inherits AsyncCompletedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveCompletedEventArgs : System::ComponentModel::AsyncCompletedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveCompletedEventArgs = class&#xA;    inherit AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Używane w połączeniu z <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> zdarzenie, które zostanie zasygnalizowane podczas żądania rozpoznania dla określonego <see cref="T:System.Net.PeerToPeer.PeerName" /> zostało ukończone.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby użyć obiektu ResolveCompletedEventArgs, Utwórz wystąpienie <xref:System.Net.PeerToPeer.PeerNameResolver> obiektu i korzystać z jednej z metod Resolve. Przetwarzanie asynchroniczne, można użyć <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> metody.  
  
 Gdy program rozpoznawania nazw osiągnął koniec chmur można wyszukiwać <xref:System.Net.PeerToPeer.PeerName>, lub została osiągnięta maksymalna liczba rekordów wpisów dla <xref:System.Net.PeerToPeer.PeerNameRecordCollection> go konstruuje, wywoływane jest zdarzenie, aby ukończyć proces rozpoznawania i skojarzone delegata powoduje, że ResolveAsync zakończyć. Zdarzenie jest wywoływane w taki sposób, nietypowe ukończenia mogą, które niezwracanie kolekcji.  
  
 To zdarzenie jest wywoływane tylko raz, jeśli wszystkie punkty końcowe zostały znalezione.  
  
 Wszystkie odwołania do tego wystąpienia obiektu programu rozpoznawania nazw są skoordynowany sposób z tokenem podany jest unikatowy, określić developer identyfikator dla tego żądania rozpoznania asynchroniczne.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveCompletedEventArgs (System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, Exception error, bool canceled, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, class System.Exception error, bool canceled, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveCompletedEventArgs(System::Net::PeerToPeer::PeerNameRecordCollection ^ peerNameRecordCollection, Exception ^ error, bool canceled, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveCompletedEventArgs : System.Net.PeerToPeer.PeerNameRecordCollection * Exception * bool * obj -&gt; System.Net.PeerToPeer.ResolveCompletedEventArgs" Usage="new System.Net.PeerToPeer.ResolveCompletedEventArgs (peerNameRecordCollection, error, canceled, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecordCollection" Type="System.Net.PeerToPeer.PeerNameRecordCollection" />
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="canceled" Type="System.Boolean" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecordCollection">Kolekcja skojarzony z nazwą elementu równorzędnego, który został rozwiązany.</param>
        <param name="error">Zwraca wyjątek, jeśli wystąpił błąd.</param>
        <param name="canceled">
          <see langword="True" /> Jeśli <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operacja została anulowana, w przeciwnym razie <see langword="False" />.</param>
        <param name="userToken">Określony token użytkownika, kiedy <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operacja została uruchomiona.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecordCollection">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecordCollection As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecordCollection ^ PeerNameRecordCollection { System::Net::PeerToPeer::PeerNameRecordCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecordCollection : System.Net.PeerToPeer.PeerNameRecordCollection" Usage="System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> obiekt do rozpoznania.</summary>
        <value>
          <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> Obiekt do rozpoznania jest znalezionego w odpowiedzi na <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operacji na określonym <see cref="T:System.Net.PeerToPeer.PeerName" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane po sprawdzeniu wszystkich chmur dla tej nazwy elementu równorzędnego lub maksymalną liczbę rekordów nazwa elementu równorzędnego zostały pobrane. Jest wywoływane przez umieszczenie kolekcji rekordów nazwa elementu równorzędnego do <xref:System.Net.PeerToPeer.ResolveCompletedEventArgs> argument zdarzenia, dla którego metoda OnResolveCompleted oczekuje.  Zmiany w stanie awakens procesu.  
  
 Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest `null` dla typów referencyjnych i zero (0) dla właściwości typu `int`. Jeśli nie znaleziono rekordów, `null` jest zwracany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>