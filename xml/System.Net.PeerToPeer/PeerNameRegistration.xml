<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="71f80762376562e4dfa706dcf515c1e3fbd7eca6" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399383" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Rejestruje<see cref="T:System.Net.PeerToPeer.Cloud" /> w lub zestawie chmur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rejestracja tworzy (lub aktualizuje) wszystkie informacje, które są skojarzone z usługą <xref:System.Net.PeerToPeer.PeerName> w chmurze lub chmurami równorzędnymi.  
  
 Możliwe jest posiadanie wielu <xref:System.Net.PeerToPeer.PeerNameRegistration> obiektów dla tej samej nazwy elementu równorzędnego. W takim przypadku, jeśli nazwa elementu równorzędnego jest zabezpieczona, każde wystąpienie reprezentuje <xref:System.Net.PeerToPeer.PeerNameRegistration> inną chmurę. Jeśli jednak nazwa elementu równorzędnego nie jest zabezpieczona, może być zarejestrowana w tej samej chmurze wiele razy, co oznacza, że każda Rejestracja jest w innym procesie.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> domyślne klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca nowe wystąpienie domyślne typu <xref:System.Net.PeerToPeer.PeerNameRegistration>. Podczas konstruowania nie jest przeprowadzana Rejestracja nazw elementów równorzędnych.  
  
 Po utworzeniu wystąpienia obiektu za pomocą tego konstruktora wywołujący powinien wypełnić odpowiednie pola w wystąpieniu przed wywołaniem <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> lub. <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Net.PeerToPeer.PeerName" /> Obiekt do zarejestrowania.</param>
        <param name="port">Wartość całkowita, która określa numer portu do zarejestrowania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy z określoną nazwą i numerem portu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tego konstruktora tworzy wystąpienie, które zostanie użyte do zarejestrowania wszystkich adresów źródłowych (zarówno IPv6and IPv4), jak i podanego portu dla wszystkich chmur, w których uczestniczy element równorzędny.  Jeśli obiekt został skonstruowany pomyślnie, określony <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> i <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> zostanie wypełniony.  
  
 Jeśli nazwa elementu równorzędnego jest zabezpieczona i została wcześniej zarejestrowana <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> w elemencie <xref:System.Net.PeerToPeer.PeerToPeerException> równorzędnym, w programie jest zgłaszany.  
  
 Ten konstruktor tworzy <xref:System.Net.PeerToPeer.PeerNameRegistration> tylko wystąpienie; nie przeprowadza rejestracji. Po utworzeniu wystąpienia obiektu rejestracji za pomocą tego konstruktora i wypełniania pól, aplikacja musi wywołać <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> , aby przeprowadzić rzeczywistą rejestrację.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być <see langword="null" />. <paramref name="name" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony numer portu jest mniejszy od zera.  Numery portów muszą być większe lub równe zero i mniejsze niż 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="T:System.Net.PeerToPeer.PeerName" /> -Określony element został już zarejestrowany na tym hoście.  
  
-Zdalny element równorzędny nie jest własnością <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> dla podanego <see cref="T:System.Net.PeerToPeer.PeerName" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Odwołanie do obiektu, który przechowuje dane, które są konieczne do deserializacji tego wystąpienia.</param>
        <param name="context">Kontekst, który zapewnia metodę deserializacji danych. Nazywane także źródłem serializowanych danych.</param>
        <summary>Inicjuje nowy obiekt możliwy <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> do serializacji.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Net.PeerToPeer.PeerName" /> Obiekt do zarejestrowania.</param>
        <param name="port">Wartość całkowita, która określa numer portu do zarejestrowania.</param>
        <param name="cloud"><see cref="T:System.Net.PeerToPeer.Cloud" />, w którym ma zostać zarejestrowana nazwa elementu równorzędnego.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy z określoną nazwą elementu równorzędnego, numerem portu i <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tego konstruktora tworzy wystąpienie, które zostanie użyte do zarejestrowania wszystkich adresów źródłowych (adresów IPv6 i IPv4), podanego portu i określonego <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  Jeśli obiekt został pomyślnie skonstruowany, właściwości są wypełniane przy użyciu określonych <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> i <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 Jeśli parametr w chmurze to `null`, nazwa jest zarejestrowana <xref:System.Net.PeerToPeer.Cloud.Available> przy użyciu skrótu, który <xref:System.Net.PeerToPeer.Cloud.Name%2A>inicjuje wartości domyślne dla, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, i <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Po utworzeniu wystąpienia należy wywołać <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> metodę, aby <xref:System.Net.PeerToPeer.PeerName>zarejestrować.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być <see langword="null" />. <paramref name="name" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony numer portu jest mniejszy od zera.  Numery portów muszą być większe lub równe zero i mniejsze niż 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="T:System.Net.PeerToPeer.PeerName" /> -Określony element został już zarejestrowany na tym hoście.  
  
-Zdalny element równorzędny nie jest własnością <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> dla podanego <see cref="T:System.Net.PeerToPeer.PeerName" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informacje w ramach <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> , w których <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> ten obiekt zostanie zarejestrowany.</summary>
        <value>Obiekt typu <see cref="T:System.Net.PeerToPeer.Cloud" /> , który określa chmurę równorzędną, dla której jest zdefiniowana ta rejestracja. Ta właściwość jest domyślnie ustawiona <see langword="null" /> na wartość.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dodatkowe informacje o <see cref="T:System.Net.PeerToPeer.PeerName" /> obiekcie, który zostanie zarejestrowany <see cref="T:System.Net.PeerToPeer.Cloud" />przy użyciu.</summary>
        <value>Komentarz, który zawiera dodatkowe informacje na temat <see cref="T:System.Net.PeerToPeer.PeerName" /> do skojarzenia <see cref="T:System.Net.PeerToPeer.Cloud" />z. Ta właściwość jest domyślnie ustawiona <see langword="null" /> na wartość.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Określona wartość ciągu jest większa niż 39 znaków Unicode.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dane binarne zdefiniowane przez aplikację dla <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <value>Tablica bajtów, która przechowuje dane binarne skojarzone z wpisem. Ta właściwość jest domyślnie ustawiona <see langword="null" /> na wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maksymalna ilość <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> , jaką można podać, to 4 096 bajtów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> wartość jest większa niż 4096 bajtów.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy węzeł równorzędny opuści <xref:System.Net.PeerToPeer.Cloud>program, chmura nie <xref:System.Net.PeerToPeer.PeerNameRegistration> wymaga już obiektu skojarzonego z elementem równorzędnym.  Czy obiekt rejestracji jest zatrzymany, czy usunięty, zależy od tego, czy chmura będzie ponownie używała obiektu do zarejestrowania tego elementu równorzędnego, czy innego elementu równorzędnego. Jeśli w obiekcie rejestracji istnieją inne punkty końcowe, z którymi hostem równorzędnym oczekiwano na komunikację, rejestrowanie tych punktów końcowych w chmurze musi odbywać się przed zatrzymaniem lub usunięciem tego obiektu.  
  
 Jeśli chmura oczekuje na zarejestrowanie większej liczby elementów równorzędnych, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> zalecana jest metoda; gdy chmura nie potrzebuje już pamięci, powinna zostać zwrócona do systemu operacyjnego <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> za pośrednictwem metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiekt.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>Zawsze Wywołaj metodę Dispose przed zniszczeniem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia zasoby niezarządzane i opcjonalnie zwalnia zarządzane zasoby używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiekt.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>Zawsze Wywołaj metodę Dispose przed zwolnieniem ostatniego odwołania do <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję punktów końcowych sieci, dla których jest zarejestrowana skojarzona nazwa elementu równorzędnego.</summary>
        <value><see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> Obiekt, który zawiera punkty końcowe sieci, dla których jest zarejestrowana skojarzona nazwa elementu równorzędnego. O ile nie określono jawnie, wartością domyślną dla wszystkich właściwości <see langword="null" /> jest typ referencyjny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przestrzeni nazw <xref:System.Net.IPEndPoint> reprezentuje punkt końcowy sieci jako adres IP i numer portu. <xref:System.Net>  W przypadku protokołu PNRP należy podać adres IP i wartość portu dla każdego punktu końcowego.  Maksymalna liczba punktów końcowych, które można podać, to dziesięć. Wybór adresów automatycznych jest używany, gdy ten parametr `null`jest.  
  
 Jeśli zostanie użyta metoda rejestracji, która automatycznie wybiera adresy do zarejestrowania, nie ma metody określania adresów, dla których zarejestrowano nazwę elementu równorzędnego.  Oznacza to, <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> że właściwość nie zostanie zaktualizowana w celu odzwierciedlenia wybranych adresów.  
  
 Gdy nazwa elementu równorzędnego jest zarejestrowana dla więcej niż jednego węzła <xref:System.Net.PeerToPeer.PeerNameRegistration> , każda z nich <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> jest odrębna, a właściwość zdefiniowana w każdym wystąpieniu rejestracji będzie różna. Ponadto, gdy element <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> jest zarejestrowany w więcej niż jeden <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, każda Rejestracja jest odrębna, a Kolekcja punktów końcowych będzie zwykle różna dla każdego wystąpienia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Lista punktów końcowych, z którymi będzie komunikować się ten element równorzędny, nie jest taka sama jak lista punktów końcowych, których nazwa elementu równorzędnego jest znana, która jest przechowywana inaczej.</para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Przechowuje zserializowane dane skojarzone z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektem.</param>
        <param name="context">Zawiera miejsce docelowe dla serializowanego strumienia skojarzonego z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektem.</param>
        <summary>Wypełnia obiekt informacji serializacji danymi wymaganymi do serializacji <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy nazwa elementu <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> równorzędnego określona we właściwości jest <see cref="T:System.Net.PeerToPeer.Cloud" /> zarejestrowana na hoście.</summary>
        <returns>Jeśli <see langword="true" />nazwa elementu równorzędnego jest zarejestrowana <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> dla hosta równorzędnego. W <see langword="false" />takim przypadku proces rejestracji można rozpocząć od. <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Nie można zarejestrować obiektu, który został usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę elementu równorzędnego do zarejestrowania w chmurze równorzędnej.</summary>
        <value>Obiekt typu <see cref="T:System.Net.PeerToPeer.PeerName" /> , który zawiera wartości skojarzone z tym <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektem. O ile nie określono jawnie, wartością domyślną dla wszystkich właściwości <see langword="null" /> jest typ referencyjny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa elementu równorzędnego może być zarejestrowana dla więcej niż jednego węzła; każde <xref:System.Net.PeerToPeer.PeerNameRegistration> wystąpienie jest odrębne. Właściwość skojarzona z każdym odpowiednim <xref:System.Net.PeerToPeer.PeerName> wystąpieniem jest różna. <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Ponadto istnieje możliwość zarejestrowania nazwy elementu równorzędnego dla więcej niż jednej chmury, z którą jest połączony węzeł; Każda z tych rejestracji jest odrębna. Nazwa elementu równorzędnego <xref:System.Net.IPEndPointCollection> będzie różna w każdym z tych wystąpień.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numer portu [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) używany przez element równorzędny rejestrowany w <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiekcie.</summary>
        <value>Wartość całkowita wskazująca numer <see cref="T:System.Net.IPEndPoint" />portu TCP. O ile nie określono jawnie, wartość domyślna tej właściwości wynosi zero (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Port domyślny jest używany przez <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> metodę tylko wtedy, gdy nie określono żadnych punktów końcowych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość portu jest mniejsza od zera.  Numery portów muszą być większe lub równe zero i mniejsze niż 65 535 (0xFFFF).</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Rejestruje<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />do. Jeśli nie <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> zostanie określony, automatyczny wybór adresów jest używany z wartością portu określoną <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> przez właściwość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda rejestruje nazwę elementu równorzędnego określoną we <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> właściwości ze wszystkimi adresami źródłowymi <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> i określonymi w konstruktorze. Port domyślny jest używany przez tę metodę tylko wtedy, gdy nie określono żadnych punktów końcowych.  
  
 <xref:System.Net.PeerToPeer.Cloud.Available> <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.Scope%2A>Jeśli właściwość ma `null`wartość, ta metoda rejestruje nazwę elementu równorzędnego określoną we właściwości przy użyciu pola, które inicjuje wartości domyślne dla, i <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Po rozpoczęciu <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> obiektu Metoda jest używana do jego zatrzymania. <xref:System.Net.PeerToPeer.PeerNameRegistration>  
  
 Aby zaktualizować rejestrację, <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> należy użyć metody.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.PeerToPeer.PeerName> i rejestruje wraz z określonymi metadanymi.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiona na <see langword="null" />. <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /></exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt miał wcześniej wywołane metody Dispose ().</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><see cref="T:System.Net.PeerToPeer.PeerName" /> -Określony został już zarejestrowany. Aby <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> zaktualizować rejestrację, należy użyć metody.  
  
-Zdalny element równorzędny nie jest własnością <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> <see cref="T:System.Net.PeerToPeer.PeerName" /> określonego.  
  
<see cref="T:System.Net.PeerToPeer.PeerName" /> -<see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> Lub nie jest określony, należy podać co najmniej jeden.  
  
-Komunikat lub elementy danych są nieprawidłowe. Lub, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> nie jest ustawiony i nie określono obiektu BLOB <see cref="T:System.Net.IPEndPoint" /> danych lub jest on określony.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyrejestrowuje nazwę elementu równorzędnego określoną we <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwości ze wszystkich chmur, w których została zarejestrowana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zatrzymaniu procesu rejestracji stan obiektu rejestracji jest równy stanowi bezpośrednio po skonstruowaniu przez Konstruktor bez parametrów. W tym stanie przyjmuje się, że wszystkie jego właściwości nie mają żadnej wartości. Metoda <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> ta może być używana do ponownego uruchomienia.  
  
 Możliwe jest posiadanie wielu obiektów rejestracji dla tej samej nazwy elementu równorzędnego.  W takim przypadku, jeśli nazwa elementu równorzędnego jest zabezpieczona, każde wystąpienie będzie reprezentować rejestrację w innej chmurze PNRP.  Jeśli jednak nazwa elementu równorzędnego nie jest zabezpieczona, można ją zarejestrować w tej samej chmurze wiele razy.  
  
 Jeśli to wystąpienie jest już zatrzymane, wywołanie tej metody nie ma żadnego wpływu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwość nie została jeszcze zarejestrowana. Dzieje się tak, <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> gdy obiekt jest konstruowany przy użyciu pustego konstruktora. Przed wywołaniem <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />właściwości należy wypełnić ją w tym wystąpieniu. <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /></exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt miał wcześniej wywołane metody Dispose ().</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Przechowuje serializowane dane skojarzone z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpieniem.</param>
        <param name="context">Zawiera miejsce docelowe dla serializowanego strumienia skojarzonego z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpieniem.</param>
        <summary>Implementuje interfejs i zwraca dane, które są konieczne do <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> serializacji wystąpienia. <see cref="T:System.Runtime.Serialization.ISerializable" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizuje dla węzła zarejestrowanego przy użyciu określonego <see cref="T:System.Net.PeerToPeer.Cloud" />. <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> Aktualizacja jest przeprowadzana przy użyciu informacji określonych we właściwościach.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie informacje zarejestrowane w chmurach dla tego <xref:System.Net.PeerToPeer.PeerName> przed wywołaniem są całkowicie odrzucane.  Nowe dane nie są łączone z istniejącą rejestracją.  Aby zaktualizować a <xref:System.Net.PeerToPeer.PeerNameRegistration>, najpierw zaktualizuj właściwości w tym wystąpieniu, a następnie Wywołaj tę metodę.  
  
 Po zarejestrowaniu nie można <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> zaktualizować właściwości. <xref:System.Net.PeerToPeer.PeerNameRecord>  Wszystkie inne pola w rekordzie mogą zostać zaktualizowane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiona na <see langword="null" />. <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /></exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> -Właściwość nie została jeszcze zarejestrowana. Nie <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> można wywołać metody, dopóki nazwa elementu równorzędnego określona <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> we właściwości nie zostanie zarejestrowana w jednej lub większej liczbie chmur.  
  
-Nazwa elementu równorzędnego określona we <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwości została zmieniona od czasu zarejestrowania odpowiedniej. <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można zarejestrować obiektu, który został usunięty.</exception>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiona na <see langword="null" />. <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /></exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy ma być używany automatyczny wybór punktów końcowych podczas przechodzenia przez <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />siatkę równorzędną.</summary>
        <value><see langword="true" />Jeśli zostanie użyty automatyczny wybór punktów końcowych; <see langword="false" /> Jeśli inna metoda zostanie użyta do określenia punktu końcowego. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest używane wybór opcji autoendpoint (Ta właściwość jest ustawiona `true`na) bez informacji o punkcie końcowym określonych przed początkiem <xref:System.Net.PeerToPeer.PeerNameRegistration>a, system wybierze poszczególne punkty końcowe i opublikuje je za pomocą skojarzonej nazwy elementu równorzędnego w polu wszystkie dostępne. połączeń.  Jeśli port nie jest określony, funkcja autowyboru wybiera wartość zero jako <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  
  
 Po ustawieniu na `false`, autowybieranie, jak opisano powyżej, nie jest wykonywane.  Umożliwia to proces rejestracji opublikowanie nazwy elementu równorzędnego wraz z obiektem BLOB danych (określony przez <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Właściwość). Z nazwą nie są skojarzone żadne punkty końcowe.  
  
 Jeśli zostanie użyta metoda rejestracji, która automatycznie wybiera adresy do zarejestrowania, nie ma metody określania adresów, dla których <xref:System.Net.PeerToPeer.PeerName> obiekt został zarejestrowany.  Oznacza to, <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> że właściwość nie zostanie zaktualizowana w celu odzwierciedlenia wybranych adresów.  
  
 Aktualizacja tej właściwości po rozpoczęciu rejestracji nazwy elementu równorzędnego nie ma żadnego wpływu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>