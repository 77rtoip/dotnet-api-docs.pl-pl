<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf91652e5f16317c9118a1d0d3fb9d6dfb59cee9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36550539" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rejestruje <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> w <see cref="T:System.Net.PeerToPeer.Cloud" /> lub zbiór chmury.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rejestracja tworzy (lub aktualizuje) wszystkie informacje, które jest skojarzone z <xref:System.Net.PeerToPeer.PeerName> w chmurze elementu równorzędnego lub chmury.  
  
 Użytkownik może mieć wielu <xref:System.Net.PeerToPeer.PeerNameRegistration> obiektów dla tej samej nazwy elementu równorzędnego. W takim przypadku, jeśli nazwa elementu równorzędnego jest zabezpieczony, każde wystąpienie reprezentuje <xref:System.Net.PeerToPeer.PeerNameRegistration> w innej chmurze. Jednak jeśli nazwa elementu równorzędnego nie jest zabezpieczony, możesz go zarejestrować, w tej samej chmury wielokrotnie, zapewniając, że każdy rejestracji jest z innego procesu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie domyślnego <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca nowe wystąpienie domyślnego typu <xref:System.Net.PeerToPeer.PeerNameRegistration>. Rejestracja nazwy elementu równorzędnego nie są wykonywane podczas konstruowania.  
  
 Po tworzenia wystąpienia obiektu w tym konstruktorze, wywołujący należy wypełnić w odpowiednich polach wystąpienia przed wywołaniem <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> lub <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> Obiektu do zarejestrowania.</param>
        <param name="port">Wartość całkowita określająca numer portu do zarejestrowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> z określoną nazwę i numer portu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie ten konstruktor tworzy wystąpienie, które będą używane do rejestrowania wszystkich źródłowych adresów (IPv4 obie IPv6and) i portu podanego dla wszystkich chmur, w których obecnie jest udział elementu równorzędnego.  Jeśli obiekt jest tworzony pomyślnie, określony <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> i <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> są wypełnione.  
  
 Jeśli nazwa elementu równorzędnego jest zabezpieczone i został poprzednio zarejestrowany w <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> element równorzędny aktualnie uczestniczy w, <xref:System.Net.PeerToPeer.PeerToPeerException> jest generowany.  
  
 Ten konstruktor tworzy tylko <xref:System.Net.PeerToPeer.PeerNameRegistration> wystąpienia klasy nie są wykonywane rejestracji. Po tworzenia wystąpienia obiektu rejestracji w tym konstruktorze i wypełnianie jej pól, aplikacja musi wywołać <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> do wykonania rejestracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> Parametr nie może być <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony numer portu jest mniejsza od zera.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- <see cref="T:System.Net.PeerToPeer.PeerName" /> Określony został już zarejestrowany z tego hosta.  -Komputer zdalny nie jest właścicielem <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> wybranych <see cref="T:System.Net.PeerToPeer.PeerName" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Odwołanie do obiektu, który zawiera dane potrzebne do deserializacji tego wystąpienia.</param>
        <param name="context">Kontekst, który udostępnia środki do deserializowania danych. Określane jako źródło danych serializacji.</param>
        <summary>Inicjuje nowy serializacji <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> Obiektu do zarejestrowania.</param>
        <param name="port">Wartość całkowita określająca numer portu do zarejestrowania.</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> w którym można zarejestrować nazwy elementu równorzędnego.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy o nazwie określonego elementu równorzędnego, numer portu i <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie ten konstruktor tworzy wystąpienie, które będą używane do rejestrowania wszystkich źródłowych adresów (IPv6 i IPv4), podany port i określonego <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  Jeśli obiekt jest tworzony pomyślnie, właściwości są wypełnione z określonym <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> i <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 Jeśli parametr chmury jest `null`, nazwa nie jest zarejestrowana przy użyciu <xref:System.Net.PeerToPeer.Cloud.Available> skrótu, która inicjuje wartości domyślne dla <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, i <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Po wystąpienia <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> można wywołać metody, aby zarejestrować <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> Parametr nie może być <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony numer portu jest mniejsza od zera.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- <see cref="T:System.Net.PeerToPeer.PeerName" /> Określony został już zarejestrowany z tego hosta.  -Komputer zdalny nie jest właścicielem <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> wybranych <see cref="T:System.Net.PeerToPeer.PeerName" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informacje <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> do której ta <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> obiekt zostanie zarejestrowany.</summary>
        <value>Obiekt typu <see cref="T:System.Net.PeerToPeer.Cloud" /> , który określa chmury równorzędnej, dla którego zdefiniowano tej rejestracji. Ta właściwość jest ustawiona na <see langword="null" /> domyślnie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dodatkowe informacje <see cref="T:System.Net.PeerToPeer.PeerName" /> obiekt, który zostanie zarejestrowany <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <value>Komentarz, który zawiera dodatkowe informacje o <see cref="T:System.Net.PeerToPeer.PeerName" /> do skojarzenia z <see cref="T:System.Net.PeerToPeer.Cloud" />. Ta właściwość jest ustawiona na <see langword="null" /> domyślnie.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Określona wartość ciągu jest większa niż 39 znaków Unicode.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dane binarne zdefiniowane przez aplikację dla <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <value>Tablica bajtów przechowujący dane binarne skojarzone z danym wpisem. Ta właściwość jest ustawiona na <see langword="null" /> domyślnie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maksymalna ilość <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> mogą być dostarczane jest 4096 bajtów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> jest większa niż 4096 bajtów.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element równorzędny opuszcza <xref:System.Net.PeerToPeer.Cloud>, chmura nie wymaga już <xref:System.Net.PeerToPeer.PeerNameRegistration> obiekt skojarzony z węzłem równorzędnym.  Określa, czy obiekt rejestracji jest zatrzymana lub usunięty jest zależny od tego, czy chmura będzie używał obiekt, aby zarejestrować ten element równorzędny lub innego elementu równorzędnego. W przypadku innych punktów końcowych w obiekcie rejestracji, z którym hosta równorzędnej oczekiwano do komunikowania się rejestrowanie tych punktów końcowych w chmurze musi przypadać przed zatrzymaniem lub usuwanie tego obiektu.  
  
 Jeśli oczekuje chmury zarejestrować więcej elementów równorzędnych, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> zaleca się metodę; gdy chmury nie musi już pamięć, powinny być zwrócone do systemu operacyjnego za pośrednictwem <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>zawsze wywoływać metodę Dispose przed niszczenie <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="True" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane i opcjonalnie zwalnia zasoby zarządzane używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>Zawsze należy wywołać metodę Dispose przed zwolnieniem ostatnie odwołanie do <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję punktów końcowych sieci, dla których nazwa skojarzonego elementu równorzędnego jest zarejestrowany.</summary>
        <value>
          <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> Obiekt, który zawiera punktów końcowych sieci, dla których nazwa skojarzonego elementu równorzędnego jest zarejestrowany. Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest <see langword="null" /> dla typów odwołań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Net> przestrzeni nazw, <xref:System.Net.IPEndPoint> reprezentuje punkt końcowy sieci jako adres IP i numer portu.  Usługa PNRP należy podać wartość portu i adresem IP dla każdego punktu końcowego.  Maksymalna liczba punktów końcowych, które można podać wynosi 10. Wybór automatyczny adres jest używany w przypadku tego parametru `null`.  
  
 Jeśli stosowana jest metoda rejestracji automatycznie wybiera adresy zarejestrować, nie istnieje metoda ustalenie theaddresses, dla którego zarejestrowano nazwa elementu równorzędnego.  Oznacza to, że <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> właściwość nie zostanie zaktualizowany w celu odzwierciedlenia adresów wybrane.  
  
 Po zarejestrowaniu nazwy elementu równorzędnego dla więcej niż jeden węzeł, każdy <xref:System.Net.PeerToPeer.PeerNameRegistration> zawiera tylko unikatowe wiersze i <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> właściwość zdefiniowaną w każdym wystąpieniu rejestracji będą inne. Także, gdy <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> jest zarejestrowany na więcej niż jeden <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, różni się każdej rejestracji i zwykle jest różne dla każdego wystąpienia kolekcji punktów końcowych.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Lista punktów końcowych, które będą komunikować się ten element równorzędny nie jest taka sama jak listy punktów końcowych za pomocą których ta nazwa elementu równorzędnego jest znany, który jest przechowywany w inny sposób.</para>
        </block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Przechowuje dane serializowane skojarzone z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</param>
        <param name="context">Zawiera miejsce docelowe dla serializowanym strumieniu skojarzone z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</param>
        <summary>Wypełnia obiekt informacje serializacji dane potrzebne do serializacji <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera lub ustawia, czy określona nazwa elementu równorzędnego w <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwości jest zarejestrowany z określonym <see cref="T:System.Net.PeerToPeer.Cloud" /> na hoście.</summary>
        <returns>Jeśli <see langword="true" />, nazwa elementu równorzędnego jest zarejestrowana w usłudze <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> dla hosta elementu równorzędnego. Jeśli <see langword="false" />, a następnie można uruchomić procesu rejestracji z <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Nie można zarejestrować obiektu, który został już usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę elementu równorzędnego do rejestracji w usłudze w chmurze elementu równorzędnego.</summary>
        <value>Obiekt typu <see cref="T:System.Net.PeerToPeer.PeerName" /> zawierający wartości skojarzone z tym <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu. Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest <see langword="null" /> dla typów odwołań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa elementu równorzędnego mogą być rejestrowane dla więcej niż jeden węzeł; Każdy <xref:System.Net.PeerToPeer.PeerNameRegistration> wystąpienia zawiera tylko unikatowe wiersze. <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Właściwości skojarzonej z każdego odpowiadającego <xref:System.Net.PeerToPeer.PeerName> różni się wystąpienia. Jest także możliwość zarejestrowania nazwy elementu równorzędnego dla chmury więcej niż jeden węzeł jest podłączony do; Każdy z tych rejestracji zawiera tylko unikatowe wiersze. Nazwa elementu równorzędnego <xref:System.Net.IPEndPointCollection> będzie się różnił w każdym z tych wystąpień.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia [TCP/IP] (http://go.microsoft.com/fwlink?LinkID=98458) używane przez węzeł równorzędny jest zarejestrowany na numer portu <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <value>Numer portu całkowitą wskazującą TCP <see cref="T:System.Net.IPEndPoint" />. Chyba że jawnie określona, wartością domyślną dla tej właściwości jest wartość zero (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny port jest używany przez <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> metody tylko wtedy, gdy punkty końcowe nie zostały określone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określony port jest mniejsza od zera.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF).</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rejestruje <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> do <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. Jeśli nie <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> określono wybór automatyczny adres jest używany z określonym przez wartość portu <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda rejestruje podana nazwa elementu równorzędnego w <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> właściwości ze wszystkich źródłowych adresów i <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> określonym w konstruktorze. Domyślny port jest używany przez tę metodę, tylko wtedy, gdy punkty końcowe nie zostały określone.  
  
 Jeśli <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> właściwość jest `null`, ta metoda rejestruje podana nazwa elementu równorzędnego w <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> za pomocą właściwości <xref:System.Net.PeerToPeer.Cloud.Available> pola, które inicjuje wartości domyślne dla <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>i <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Po <xref:System.Net.PeerToPeer.PeerNameRegistration> obiektu została uruchomiona, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> metoda jest używana, zatrzymaj ją.  
  
 Aby zaktualizować rejestrację, <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> metoda musi być używana.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.PeerToPeer.PeerName> i rejestruje go wraz z określonych metadanych.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwość jest ustawiona na <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt ma Dispose() wywoływać w nim wcześniej.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- <see cref="T:System.Net.PeerToPeer.PeerName" /> Określony został już zarejestrowany. <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> Metoda musi być używane do aktualizowania rejestracji.  -Komputer zdalny nie jest właścicielem <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> dla <see cref="T:System.Net.PeerToPeer.PeerName" /> określony.  -Albo <see cref="T:System.Net.PeerToPeer.PeerName" /> lub <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> nie jest określona; co najmniej jeden musi zostać podany.  -Elementy komunikatu lub dane są nieprawidłowe. Lub, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> nie jest zestawem i nie danych obiektów blob lub <see cref="T:System.Net.IPEndPoint" /> jest określona.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyrejestrowuje podana nazwa elementu równorzędnego w <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwości z wszystkich chmur, w których został zarejestrowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zatrzymaniu procesu rejestracji, stan obiektu rejestracji jest równa stan bezpośrednio po generowana przez konstruktora domyślnego. W tym stanie wszystkie jego właściwości są zakłada się, że niezawierające wartości. <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Metoda może służyć do uruchom go ponownie.  
  
 Użytkownik może mieć wiele obiektów rejestracji dla tej samej nazwy elementu równorzędnego.  W takim przypadku jeśli nazwa elementu równorzędnego jest zabezpieczony, każde wystąpienie będzie reprezentować rejestracji w innej chmurze usługi PNRP.  Jednak jeśli nazwa elementu równorzędnego nie jest zabezpieczony, możesz go zarejestrować, w tej samej chmury wiele razy.  
  
 Jeśli to wystąpienie jest już zatrzymana, wywołanie tej metody nie ma znaczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwości nie została jeszcze zarejestrowana. W takim przypadku <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiekt jest tworzony przy użyciu pustego konstruktora. <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Powinno zostać zapełnione właściwości w tym wystąpieniu przed wywołaniem <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt ma Dispose() wywoływać w nim wcześniej.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Przechowuje dane serializowane skojarzone z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</param>
        <param name="context">Zawiera miejsce docelowe dla serializowanym strumieniu skojarzone z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</param>
        <summary>Implementuje <see cref="T:System.Runtime.Serialization.ISerializable" /> interfejsu i zwraca dane potrzebne do serializacji <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizacje <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> dla węzła zarejestrowany z określonym <see cref="T:System.Net.PeerToPeer.Cloud" />. Aktualizacja jest wykonywana przy użyciu podanych informacji o we właściwościach.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie informacje o zarejestrowanych w chmur dla tego <xref:System.Net.PeerToPeer.PeerName> przed wywołaniem całkowicie zostaną odrzucone.  Nowe dane nie jest połączona z istniejącej rejestracji.  Aby zaktualizować <xref:System.Net.PeerToPeer.PeerNameRegistration>, najpierw zaktualizować właściwości dla tego wystąpienia, a następnie wywołać tę metodę.  
  
 Po <xref:System.Net.PeerToPeer.PeerNameRecord> jest zarejestrowany, <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> nie można zaktualizować właściwości.  Wszystkie pola w rekordzie może zostać zaktualizowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwość jest ustawiona na <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">- <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwości nie została jeszcze zarejestrowana. <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> Nie można wywołać metody, dopóki nazwa elementu równorzędnego <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwości jest zarejestrowany w co najmniej jedną chmurę.  -Podana nazwa elementu równorzędnego w <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwości zmienił się od odpowiadającego <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> został zarejestrowany.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można zarejestrować obiektu, który został usunięty.</exception>
        <exception cref="T:System.ArgumentNullException">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> właściwość jest ustawiona na <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy używać punktu końcowego automatycznego wyboru podczas przesyłania siatki elementów równorzędnych lub <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</summary>
        <value>
          <see langword="True" /> Jeśli punktu końcowego automatycznego wyboru ma być używane; <see langword="false" /> Jeśli innej metody, które będą używane do określenia punktu końcowego. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas automatycznego wyboru punktu końcowego jest używana (Ta właściwość jest ustawiona na `true`) bez informacji o punkcie końcowym określoną przed rozpoczęciem <xref:System.Net.PeerToPeer.PeerNameRegistration>, wybierze poszczególne punkty końcowe systemu, aby je opublikował o nazwie skojarzonego elementu równorzędnego do wszystkich dostępnych chmury.  Jeśli port nie jest określony, wybór automatycznie wybierze zero <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  
  
 Jeśli wartość `false`, nie jest wykonywane automatycznie wybór zgodnie z powyższym opisem.  Dzięki temu proces rejestracji opublikować nazwa elementu równorzędnego, wraz z obiektu blob danych (określone przez <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> właściwości). Punkty końcowe nie są skojarzone z nazwą.  
  
 Jeśli stosowana jest metoda rejestracji automatycznie wybiera adresy zarejestrować, nie istnieje metoda ustalenie, co dotyczy, dla którego <xref:System.Net.PeerToPeer.PeerName> obiekt został zarejestrowany.  Oznacza to, że <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> właściwość nie zostanie zaktualizowany w celu odzwierciedlenia adresów wybrane.  
  
 Aktualizowanie tej właściwości po rozpoczęciu Rejestracja Nazwa elementu równorzędnego nie ma znaczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>