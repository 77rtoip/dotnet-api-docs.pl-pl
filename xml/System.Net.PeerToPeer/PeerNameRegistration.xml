<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de2528f53d8a2a9b2da8235cc44e694343deba61" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52363780" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rejestruje <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> w <see cref="T:System.Net.PeerToPeer.Cloud" /> lub zestawie chmurach.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rejestracja tworzy (lub aktualizuje) wszystkie informacje, które są skojarzone z <xref:System.Net.PeerToPeer.PeerName> w chmurze elementu równorzędnego lub chmury.  
  
 Użytkownik może mieć wielu <xref:System.Net.PeerToPeer.PeerNameRegistration> obiektów dla tej samej nazwy elementów równorzędnych. W takim przypadku, gdy nazwa elementu równorzędnego jest zabezpieczony, każde wystąpienie reprezentuje <xref:System.Net.PeerToPeer.PeerNameRegistration> w innej chmurze. Jednak jeśli nazwa elementu równorzędnego nie jest zabezpieczony, możesz go zarejestrować w tej samej chmurze wielokrotnie, zapewniając, że każda rejestracja jest pochodzi z innego procesu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie domyślnego <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca nowe wystąpienie domyślnego typu <xref:System.Net.PeerToPeer.PeerNameRegistration>. Rejestracja nazwy elementów równorzędnych nie są wykonywane podczas konstruowania.  
  
 Po utworzeniu wystąpienia obiektu za pomocą tego konstruktora, obiekt wywołujący należy wypełnić w odpowiednich polach wystąpienia przed wywołaniem <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> lub <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> Obiekt do rejestracji.</param>
        <param name="port">Wartość całkowitą, która określa numer portu do zarejestrowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy o określonej nazwie i numer portu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania tego konstruktora tworzy wystąpienie, która będzie służyć do rejestrowania wszystkich źródłowych adresów (zarówno IPv4 IPv6and) i portu podanego dla wszystkich chmur, w których element równorzędny aktualnie udział.  Jeśli obiekt jest konstruowany pomyślnie, określony <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> i <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> są wypełnione.  
  
 Jeśli nazwa elementu równorzędnego jest zabezpieczony i zostało wcześniej zarejestrowane w <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> element równorzędny aktualnie jest uczestnikiem, <xref:System.Net.PeerToPeer.PeerToPeerException> zgłaszany.  
  
 Ten konstruktor tworzy tylko <xref:System.Net.PeerToPeer.PeerNameRegistration> wystąpienia klasy nie wykonuje rejestracji. Po utworzenie wystąpienia obiektu rejestracji za pomocą tego konstruktora i wypełnianie jej pola, aplikacja musi wywołać <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> przeprowadzenie rejestracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> Parametr nie może być <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony numer portu jest mniejsza niż zero.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> Określony został już zarejestrowany z tego hosta.  
  
-Komputer zdalny nie jest właścicielem <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> na podanie <see cref="T:System.Net.PeerToPeer.PeerName" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Odwołanie do obiektu, która przechowuje dane potrzebne do deserializacji tego wystąpienia.</param>
        <param name="context">Kontekst, który udostępnia środki do deserializacji danych. Również określany jako źródło danych serializacji.</param>
        <summary>Inicjuje nowy serializacji <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> Obiekt do rejestracji.</param>
        <param name="port">Wartość całkowitą, która określa numer portu do zarejestrowania.</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> w którym można zarejestrować nazwy elementu równorzędnego.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> klasy o nazwie określonego elementu równorzędnego, numer portu i <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania tego konstruktora tworzy wystąpienie, która będzie służyć do rejestrowania wszystkich źródłowych adresów (protokół IPv6 i IPv4), podany port i określonego <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  Jeśli obiekt jest konstruowany pomyślnie, właściwości są wypełniane przy użyciu określonego <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> i <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 Jeśli parametr chmury jest `null`, nazwa nie jest zarejestrowana przy użyciu <xref:System.Net.PeerToPeer.Cloud.Available> skrót, który inicjuje domyślne wartości dla <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, i <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Po wystąpienia <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> można wywołać metody, aby zarejestrować <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> Parametr nie może być <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony numer portu jest mniejsza niż zero.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> Określony został już zarejestrowany z tego hosta.  
  
-Komputer zdalny nie jest właścicielem <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> na podanie <see cref="T:System.Net.PeerToPeer.PeerName" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informacje <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> do którego należy to <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> obiektu zostanie zarejestrowana.</summary>
        <value>Obiekt typu <see cref="T:System.Net.PeerToPeer.Cloud" /> określający chmury elementów równorzędnych, dla którego zdefiniowano tej rejestracji. Ta właściwość jest ustawiona <see langword="null" /> domyślnie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dodatkowe informacje na <see cref="T:System.Net.PeerToPeer.PeerName" /> obiektu, który ma zostać zarejestrowany za pomocą <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <value>Komentarz, który zawiera dodatkowe informacje na temat <see cref="T:System.Net.PeerToPeer.PeerName" /> do skojarzenia z <see cref="T:System.Net.PeerToPeer.Cloud" />. Ta właściwość jest ustawiona <see langword="null" /> domyślnie.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Określona wartość ciągu jest większa niż 39 znaków Unicode.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dane binarne dla zdefiniowanych przez aplikację <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <value>Tablicę bajtów zawierającą dane binarne skojarzone z wpisem. Ta właściwość jest ustawiona <see langword="null" /> domyślnie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maksymalna ilość <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> mogą być dostarczane wynosi 4096 bajtów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> jest większa niż 4096 bajtów.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element równorzędny opuszcza <xref:System.Net.PeerToPeer.Cloud>, chmura nie wymaga już <xref:System.Net.PeerToPeer.PeerNameRegistration> obiekt skojarzony z węzłem równorzędnym.  Czy zatrzymaniu lub usunięciu rejestracji obiektów zależy od tego, czy chmura zostanie ponownie użyty obiekt, aby zarejestrować ten element równorzędny lub innego elementu równorzędnego. W przypadku wszelkich innych punkty końcowe: w obiekcie rejestracji za pomocą którego host równorzędnej oczekiwano do komunikowania się zarejestrowanie te punkty końcowe w chmurze musi przypadać przed zatrzymaniem lub usuwania tego obiektu.  
  
 Jeśli chmura oczekuje zarejestrować więcej elementami równorzędnymi, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> zaleca się metodę; w przypadku chmury nie musi już pamięć, ma zostać zwrócone do systemu operacyjnego za pośrednictwem <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>zawsze wywołać metodę Dispose przed niszczenie <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="True" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</param>
        <summary>Zwalnia zasoby niezarządzane i opcjonalnie zwalnia zasoby zarządzane używane przez <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>Zawsze należy wywołać metodę Dispose przed zwolnieniem to ostatnie odwołanie do <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję punktów końcowych sieci, dla których nazwa skojarzonego elementu równorzędnego jest zarejestrowany.</summary>
        <value>
          <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> Obiekt, który zawiera punkty końcowe sieci, dla których nazwa skojarzonego elementu równorzędnego jest zarejestrowany. Chyba że jawnie określone, jest wartością domyślną dla wszystkich właściwości <see langword="null" /> dla typów odwołań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Net> przestrzeni nazw, <xref:System.Net.IPEndPoint> reprezentuje punkt końcowy sieci jako adres IP i numer portu.  Dla PNRP należy podać wartość adres i port adresu IP dla każdego punktu końcowego.  Maksymalna liczba punktów końcowych, które można podać wynosi dziesięć. Wybór automatyczny adres jest używany, gdy ten parametr jest `null`.  
  
 Jeśli używana jest metoda rejestracji, który automatycznie wybiera adresów, aby zarejestrować, nie istnieje metoda ustalenie theaddresses, dla którego została zarejestrowana nazwa elementu równorzędnego.  Oznacza to, że <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> nie zostanie zaktualizowana w celu odzwierciedlenia adresów wybrane.  
  
 Po zarejestrowaniu nazwy elementu równorzędnego dla więcej niż jeden węzeł każdego <xref:System.Net.PeerToPeer.PeerNameRegistration> różni się i <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> właściwości zdefiniowane w każdym wystąpieniu rejestracji będą inne. Również gdy <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> zostanie zarejestrowana w więcej niż jedną <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, różni się każdej rejestracji i Kolekcja punktów końcowych zwykle będą inne dla każdego wystąpienia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Lista punktów końcowych, za pomocą których będą komunikowały się ten element równorzędny nie jest taka sama jak listy punktów końcowych, za pomocą których jest znana nazwa tego elementu równorzędnego, który jest przechowywany w różny sposób.</para>
        </block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Przechowuje serializowane dane skojarzone z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</param>
        <param name="context">Zawiera lokalizację docelową dla strumienia serializacji, skojarzonego z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</param>
        <summary>Wypełnia obiekt informacji o serializacji dane potrzebne do serializacji <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera lub ustawia informację, czy nazwa elementu równorzędnego <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwość został zarejestrowany z określonym <see cref="T:System.Net.PeerToPeer.Cloud" /> na hoście.</summary>
        <returns>Jeśli <see langword="true" />, nazwa elementu równorzędnego jest zarejestrowane w usłudze <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> hosta elementów równorzędnych. Jeśli <see langword="false" />, a następnie rozpoczęcie procesu rejestracji <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Nie można zarejestrować obiektu, który został już usunięty.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę elementu równorzędnego zarejestrować się w chmurze elementów równorzędnych.</summary>
        <value>Obiekt typu <see cref="T:System.Net.PeerToPeer.PeerName" /> zawierający wartości skojarzonych z tym <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu. Chyba że jawnie określone, jest wartością domyślną dla wszystkich właściwości <see langword="null" /> dla typów odwołań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa elementu równorzędnego można zarejestrować do więcej niż jeden węzeł; Każdy <xref:System.Net.PeerToPeer.PeerNameRegistration> wystąpienie zawiera unikatowe wartości. <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Właściwości skojarzonej z poszczególnych <xref:System.Net.PeerToPeer.PeerName> wystąpienia jest inny. Jest także można zarejestrować nazwy elementu równorzędnego dla więcej niż jednej chmury, który węzeł jest połączony. Każdy z tych rejestracji jest distinct. Nazwa elementu równorzędnego <xref:System.Net.IPEndPointCollection> będzie się różnił w każdym z tych wystąpień.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) numer portu używany przez węzeł równorzędny, są rejestrowane w <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiektu.</summary>
        <value>Numer portu wartość całkowitą, wskazując TCP <see cref="T:System.Net.IPEndPoint" />. Chyba że jawnie określona, wartością domyślną dla tej właściwości jest wartość zero (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny port jest używany przez <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> metody tylko wtedy, gdy punkty końcowe nie zostały określone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określonego portu jest mniejsza od zera.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF).</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rejestruje <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> do <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. Jeśli nie <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> jest określony, wybór automatyczny adres jest używany z określonym przez wartość portu <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda rejestruje nazwa elementu równorzędnego określone w <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> właściwości przy użyciu wszystkich adresów źródła i <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> określony w konstruktorze. Domyślny port jest używany przez tę metodę, tylko wtedy, gdy punkty końcowe nie zostały określone.  
  
 Jeśli <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> właściwość `null`, ta metoda rejestruje nazwa elementu równorzędnego określone w <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> właściwość za pomocą <xref:System.Net.PeerToPeer.Cloud.Available> pola, które inicjuje domyślne wartości dla <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>i <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Po <xref:System.Net.PeerToPeer.PeerNameRegistration> obiekt został uruchomiony, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> metoda jest używana do zatrzymania go.  
  
 Można zaktualizować rejestracji <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> metoda musi być używana.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.PeerToPeer.PeerName> i rejestruje go wraz z metadanymi określony.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwość jest ustawiona na <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt ma Dispose() wywoływać w nim wcześniej.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> Określony został już zarejestrowany. <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> Metodę można zaktualizować rejestracji.  
  
-Komputer zdalny nie jest właścicielem <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> dla <see cref="T:System.Net.PeerToPeer.PeerName" /> określony.  
  
-Albo <see cref="T:System.Net.PeerToPeer.PeerName" /> lub <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> nie jest określona; co najmniej jedna musi zostać dostarczona.  
  
— Elementy wiadomości lub dane są nieprawidłowe. Ewentualnie <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> nie jest zestaw, a nie obiekt blob danych lub <see cref="T:System.Net.IPEndPoint" /> jest określony.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyrejestrowuje nazwa elementu równorzędnego określone w <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwości ze wszystkich chmur, w których został zarejestrowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zatrzymaniu procesu rejestracji, stan rejestracji obiektów jest równa stan bezpośrednio po generowana przez konstruktora domyślnego. W tym stanie wszystkie jego właściwości są zakłada się, że nie mają żadnej wartości. <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Metoda może służyć do ponownego uruchomienia.  
  
 Istnieje możliwość mają wiele obiektów rejestracji dla tej samej nazwy elementów równorzędnych.  W takim przypadku nazwa elementu równorzędnego jest zabezpieczony, każde wystąpienie będzie reprezentował rejestracji w innej chmurze PNRP.  Jednakże jeśli nazwa elementu równorzędnego nie jest zabezpieczony, możesz go zarejestrować w tej samej chmurze wiele razy.  
  
 Jeśli to wystąpienie jest już zatrzymana, wywołanie tej metody nie ma znaczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwości nie została jeszcze zarejestrowana. W takim przypadku <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> obiekt jest konstruowany przy użyciu pustego konstruktora. <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwości muszą być wypełnione w tym wystąpieniu przed wywołaniem <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt ma Dispose() wywoływać w nim wcześniej.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Przechowuje serializowane dane skojarzone z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</param>
        <param name="context">Zawiera lokalizację docelową dla strumienia serializacji, skojarzonego z <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</param>
        <summary>Implementuje <see cref="T:System.Runtime.Serialization.ISerializable" /> interfejs i zwraca dane potrzebne do serializacji <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizacje <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> dla węzła zarejestrowany z określonym <see cref="T:System.Net.PeerToPeer.Cloud" />. Aktualizacja odbywa się przy użyciu informacji o określonej we właściwościach.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie informacje o zarejestrowanych w chmur dla tego <xref:System.Net.PeerToPeer.PeerName> przed wywołaniem całkowicie jest odrzucany.  Nowe dane nie jest połączone z istniejącej rejestracji.  Aby zaktualizować <xref:System.Net.PeerToPeer.PeerNameRegistration>, najpierw zaktualizować właściwości dla tego wystąpienia, a następnie wywołać tę metodę.  
  
 Po <xref:System.Net.PeerToPeer.PeerNameRecord> jest zarejestrowany, <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> nie można zaktualizować właściwości.  Wszystkie pola w rekordzie może zostać zaktualizowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwość jest ustawiona na <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> Właściwości nie została jeszcze zarejestrowana. <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> Nie można wywołać metody, dopóki nazwa elementu równorzędnego <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwość jest zarejestrowany w co najmniej jedna chmura.  
  
Nazwa elementu równorzędnego określone w <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> właściwość zmienił się od odpowiadającego <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> został zarejestrowany.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Nie można zarejestrować obiektu, który został usunięty.</exception>
        <exception cref="T:System.ArgumentNullException">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> właściwość jest ustawiona na <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy używać punktu końcowego automatycznego wyboru podczas przechodzenia między siatki elementów równorzędnych lub <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</summary>
        <value>
          <see langword="True" /> Jeśli punkt końcowy automatycznego wyboru, które ma być używane; <see langword="false" /> Jeśli innej metody, które będą używane do określenia punktu końcowego. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest używany automatycznie punkt końcowy zaznaczenia (Ta właściwość jest ustawiona `true`) z nie informacji o punkcie końcowym określoną przed rozpoczęciem <xref:System.Net.PeerToPeer.PeerNameRegistration>, system wybierze poszczególne punkty końcowe i publikuje je o nazwie skojarzonego elementu równorzędnego we wszystkich dostępnych chmury.  Jeśli nie określono portu, wyboru automatycznie wybiera zero jako <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  
  
 Po ustawieniu `false`, wybór automatyczny, zgodnie z powyższym opisem nie jest wykonywane.  Dzięki temu proces rejestracji opublikować nazwa elementu równorzędnego, wraz z obiektu blob danych (zgodnie z określonym <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> właściwości). Punkty końcowe nie są skojarzone z nazwą.  
  
 Jeśli używana jest metoda rejestracji, który automatycznie wybiera adresów, aby zarejestrować, nie istnieje metoda aby ustalić, jakie adresy, dla którego <xref:System.Net.PeerToPeer.PeerName> obiekt został zarejestrowany.  Oznacza to, że <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> nie zostanie zaktualizowana w celu odzwierciedlenia adresów wybrane.  
  
 Aktualizowanie tej właściwości po rozpoczęciu rejestracji nazw elementów równorzędnych nie ma znaczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>