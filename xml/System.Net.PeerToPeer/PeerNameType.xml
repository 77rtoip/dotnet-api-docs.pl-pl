<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0650fb8b6e4a91e37af9cf7e613795a75e2d861" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36550227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <TypeSignature Language="F#" Value="type PeerNameType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa typ <see cref="T:System.Net.PeerToPeer.PeerName" /> do utworzenia. Nazwa elementu równorzędnego jest zabezpieczony albo bez zabezpieczeń. Nazwa elementu równorzędnego zabezpieczonych udostępnia dowodu posiadania nazwy. Nazwa elementu równorzędnego niezabezpieczona ma nie tożsamość skojarzona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Węzeł musi mieć dostęp do klucza prywatnego skojarzonego z kluczem publicznym, używany do tworzenia bezpiecznego <xref:System.Net.PeerToPeer.PeerName>, aby zweryfikować własność. Węzeł nie ma relacji z kluczem publicznym.  
  
 Format nazwy elementu równorzędnego jest: *Authority.Classifier*. Wartość <xref:System.Net.PeerToPeer.PeerName.Authority%2A> zależy od tego, czy nazwa jest nazwą zabezpieczonych elementu równorzędnego lub nazwa elementu równorzędnego niezabezpieczona. <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> Część nazwy można ustawić dowolny ciąg, który zawiera 15 lub mniej znaków Unicode, w tym `null` terminator. Raz <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> i poziom zabezpieczeń elementu równorzędnego zostały utworzone, element równorzędny może być również określany nazwą względną lub nazwę hosta.  
  
 Tylko właściciel lub hosta równorzędnej, można zarejestrować nazwę bezpiecznego elementu równorzędnego z [interfejsu API dostawcy Namespace PNRP](http://go.microsoft.com/fwlink?LinkID=92731). Dowolnego węzła można potwierdzić prawa własności do żadnych niezabezpieczone <xref:System.Net.PeerToPeer.PeerName>.  
  
 **Uwaga** przy użyciu zabezpieczonym <xref:System.Net.PeerToPeer.PeerName> nie zapewnia ogólne bezpieczeństwo aplikacji sieciowych. Zabezpieczenia aplikacji są zależne od implementacji.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberSignature Language="F#" Value="Secured = 0" Usage="System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Utwórz zabezpieczonym <see cref="T:System.Net.PeerToPeer.PeerName" /> przy użyciu tożsamości bieżącego użytkownika.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberSignature Language="F#" Value="Unsecured = 1" Usage="System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Utwórz niezabezpieczona <see cref="T:System.Net.PeerToPeer.PeerName" /> przy użyciu tożsamości bieżącego użytkownika.</summary>
      </Docs>
    </Member>
  </Members>
</Type>