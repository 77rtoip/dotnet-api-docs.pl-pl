<Type Name="UnionCodeGroup" FullName="System.Security.Policy.UnionCodeGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c4457197c743c887f5f35574e0522c7bb882809" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36623261" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnionCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UnionCodeGroup extends System.Security.Policy.CodeGroup" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.UnionCodeGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnionCodeGroup&#xA;Inherits CodeGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnionCodeGroup sealed : System::Security::Policy::CodeGroup" />
  <TypeSignature Language="F#" Value="type UnionCodeGroup = class&#xA;    inherit CodeGroup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje grupę kodu którego deklaracji zasad jest złożenie deklaracji zasad bieżącej grupy kodu i deklaracji zasad w wszystkie jej zgodnego kodu grup podrzędnych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy kodów są blokami konstrukcyjnymi zasad zabezpieczeń dostępu kodu. Każdy poziom zasad składa się z głównej grupy kodów, który może mieć grup kodów podrzędnych (i tak dalej), stanowiące drzewa. Każda grupa kodów zawiera warunek członkostwa, który określa, czy danego zestawu należy do niego lub nie, na podstawie dowodów dla tego zestawu. Tylko grupy kodów, których warunki członkostwa odpowiadają danego zestawu i ich grup kodów podrzędnych stosowanie zasad.  
  
 <xref:System.Security.Policy.UnionCodeGroup> jest najczęściej używany typ grupy kodów; Deklaracja zasad wszystkich grup zgodnych kod podrzędny (i przez rozszerzenie ich grup kodów podrzędnych) są połączone z zestaw uprawnień zgodnego kodu grupy nadrzędnej. W związku z tym jeśli pasuje do jego warunek członkostwa, ta grupa kodów formularzy Unii jego deklaracji zasad, a także wszystkie jej podrzędnych grup kodów zgodne dowody.  
  
 <xref:System.Security.Policy.UnionCodeGroup> grupy kodów są utworzone przez narzędzie CASPOL grupy kodu (zobacz [Caspol.exe (narzędzie zasad zabezpieczenia dostępu kodu)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnionCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition, class System.Security.Policy.PolicyStatement policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (membershipCondition As IMembershipCondition, policy As PolicyStatement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnionCodeGroup(System::Security::Policy::IMembershipCondition ^ membershipCondition, System::Security::Policy::PolicyStatement ^ policy);" />
      <MemberSignature Language="F#" Value="new System.Security.Policy.UnionCodeGroup : System.Security.Policy.IMembershipCondition * System.Security.Policy.PolicyStatement -&gt; System.Security.Policy.UnionCodeGroup" Usage="new System.Security.Policy.UnionCodeGroup (membershipCondition, policy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
        <Parameter Name="policy" Type="System.Security.Policy.PolicyStatement" />
      </Parameters>
      <Docs>
        <param name="membershipCondition">Warunek członkostwa, który testuje dowody, aby określić, czy ta grupa kodów stosuje zasady.</param>
        <param name="policy">Deklaracja zasad grupy kodu w formie zestaw uprawnień i atrybuty udzielenia kod zgodny z warunkiem członkostwa.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Policy.UnionCodeGroup" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy grupę kodów podstawowe i powinna być wywoływana z konstruktorów grup niestandardowych kodów. Grupy kodów podrzędne można dodać za pomocą <xref:System.Security.Policy.CodeGroup.AddChild%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Typ <paramref name="membershipCondition" /> parametr jest nieprawidłowy.  - lub - typ <paramref name="policy" /> parametr jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.Policy.CodeGroup" Usage="unionCodeGroup.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię głębokie bieżącą grupę kodu.</summary>
        <returns>Odpowiednik kopia bieżącej grupy kodu, w tym warunki członkostwa i grup kodów podrzędnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy kopię głębokie grupy kodu tak, aby również kopię wszystkich obiektów, które zawiera grupy kodu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.UnionCodeGroup.MergeLogic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MergeLogic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MergeLogic { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MergeLogic : string" Usage="System.Security.Policy.UnionCodeGroup.MergeLogic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera logiki scalania.</summary>
        <value>Zawsze ciąg "Union".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="override this.Resolve : System.Security.Policy.Evidence -&gt; System.Security.Policy.PolicyStatement" Usage="unionCodeGroup.Resolve evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Dowody dla zestawu.</param>
        <summary>Usuwa zasady dla grupy kodu i jego elementy podrzędne dla zestawem świadectwo.</summary>
        <returns>Deklaracja zasad, składające się z uprawnienia przyznane przez Grupa kodów z opcjonalne atrybuty lub <see langword="null" /> Jeśli grupa kodów nie ma zastosowania (warunek członkostwa jest niezgodny dowód określony).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podana dowody dla zestawu do załadowania, ta metoda ocenia grupa kodów sprawdzając pierwszy warunek członkostwa przed dowód określony. Jeśli istnieje dopasowanie, ta metoda zwraca instrukcję zasady dla grupy kodu, w tym ocenę grup kodów podrzędnych.  
  
 Dla grup Unii kodu wszystkich podrzędnych grup kodu którego warunku członkostwa odpowiada dowody również zostaną rozwiązane, a wszystkie instrukcje wynikowe zasady tworzą union z deklaracji zasad grupy nadrzędnej Unii kodu. Każdy typ grupy kod podrzędny określa sposób stosowania jej grup podrzędnych, w zależności od tego, jak ich odpowiednich <xref:System.Security.Policy.UnionCodeGroup.Resolve%2A> metody działają.  
  
 Korzysta z systemu zabezpieczeń .NET Framework <xref:System.Security.Policy.UnionCodeGroup.Resolve%2A> na poziomy zasad, aby określić, które uprawnienia przyznania załadowanym kodzie wynikowy deklaracji zasad i kod żądania w zestawie.  
  
 Jeśli warunek członkostwa nie odpowiada określonym dowód, ta metoda zwraca `null`; w przeciwnym razie ustawia równa deklaracji zasad grupy kodu zestawu ma zostać zwrócona uprawnień (P), a następnie jest kontynuowana. Dla każdej grupy kod podrzędny metoda usuwa grupę kodów te same dowody; Jeśli wynik nie jest `null`, P ustawia równa Unii P i deklaracji zasad grupy podrzędnej kodu. Zwraca P, która jest teraz Unii w bieżącej grupie Kod deklaracji zasad i wszystkie podrzędne grupy zasad instrukcje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.Policy.PolicyException">Więcej niż jednej grupy kodu (w tym kod grupy nadrzędnej oraz wszystkich podrzędnych grup kodu) jest oznaczony jako <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="override this.ResolveMatchingCodeGroups : System.Security.Policy.Evidence -&gt; System.Security.Policy.CodeGroup" Usage="unionCodeGroup.ResolveMatchingCodeGroups evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Dowody dla zestawu.</param>
        <summary>Dopasowanie grup kodu jest rozpoznawana.</summary>
        <returns>Pełny zestaw grup kodów, zgodnych dowody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podana dowody dla zestawu do załadowania, ta metoda ocenia grupa kodów sprawdzając pierwszy warunek członkostwa przed dowód określony. Jeśli istnieje dopasowanie, ta metoda zwraca głównej grupy kodów. Grupa kodów, która jest zwracana mogą zawierać grup kodów podrzędne, które z kolei może również zawierać podrzędnych grup kodów, dlatego zwracana wartość odzwierciedla pełny zestaw grup kodów, zgodnych przez podany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>