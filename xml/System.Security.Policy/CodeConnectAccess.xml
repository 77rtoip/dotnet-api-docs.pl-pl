<Type Name="CodeConnectAccess" FullName="System.Security.Policy.CodeConnectAccess">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16b01df8d0dde15325806d1015357a828b9d2a39" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39802776" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeConnectAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeConnectAccess extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.CodeConnectAccess" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeConnectAccess" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeConnectAccess" />
  <TypeSignature Language="F#" Value="type CodeConnectAccess = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, które udzielane kodowi dostępu do zasobów sieciowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana w połączeniu z <xref:System.Security.Policy.NetCodeGroup> klasy do kontrolowania sposobu wykonywania kodu można połączyć do witryny została pobrana z. Te klasy oferują programistyczną kontrolę <xref:System.Net.WebPermission> udzielenie wykonywanie kodu, który określa, jakie porty, można użyć kodu i schematy dostęp do swojej witryny pochodzenia. Można określić schemat i port pary, które są dozwolone oparty na schemacie w adresie URL, którego kod pochodzi.  
  
 Aby utworzyć <xref:System.Security.Policy.CodeConnectAccess> obiektu oparte na schemacie źródła kodu, należy użyć <xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A> metody.  
  
 Aby utworzyć <xref:System.Security.Policy.CodeConnectAccess> obiekt, który można używać dowolnego schematu, ale jest ograniczony przez port, użyj <xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Security.Policy.NetCodeGroup> obiektu i dodaje go do poziomu zasad użytkownika.  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeConnectAccess (string allowScheme, int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string allowScheme, int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowScheme As String, allowPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeConnectAccess(System::String ^ allowScheme, int allowPort);" />
      <MemberSignature Language="F#" Value="new System.Security.Policy.CodeConnectAccess : string * int -&gt; System.Security.Policy.CodeConnectAccess" Usage="new System.Security.Policy.CodeConnectAccess (allowScheme, allowPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowScheme" Type="System.String" />
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowScheme">Schemat identyfikatora URI, reprezentowane przez bieżące wystąpienie.</param>
        <param name="allowPort">Port, reprezentowane przez bieżące wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Policy.CodeConnectAccess" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> Właściwość można ustawić przy użyciu `allowScheme` parametru. Schemat jest konwertowane na małe litery. Wartość <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> Określa schemat, który wykonuje kod można się połączyć z zasobem sieciowym.  
  
 <xref:System.Security.Policy.CodeConnectAccess.Port%2A> Właściwość można ustawić przy użyciu `allowPort` parametru. Wartość <xref:System.Security.Policy.CodeConnectAccess.Port%2A> Określa port, który wykonuje kod można się połączyć z zasobem sieciowym.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie <xref:System.Security.Policy.CodeConnectAccess> obiektu, że zezwala pobrane kod, aby połączyć z powrotem do serwera pochodzenia przy użyciu protokołu HTTP, i takie same do portu został pobrany na. Aby uzyskać przykład, który demonstruje sposób użycia <xref:System.Security.Policy.CodeConnectAccess> obiektów, aby utworzyć grupę kodu i dodawanie grupy kodu do poziomu zasad, zobacz <xref:System.Security.Policy.CodeConnectAccess> klasa — Przegląd.  
  
 [!code-cpp[NclCodeGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#2)]
 [!code-csharp[NclCodeGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowScheme" /> jest <see langword="null" />.  - lub - <paramref name="allowScheme" /> jest pustym ciągiem ("").  - lub - <paramref name="allowScheme" /> zawiera znaki, które nie są dozwolone w schematach.  - lub - <paramref name="allowPort" /> jest mniejszy niż 0.  - lub - <paramref name="allowPort" /> jest większy niż 65 535.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnyScheme">
      <MemberSignature Language="C#" Value="public static readonly string AnyScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AnyScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.AnyScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnyScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AnyScheme;" />
      <MemberSignature Language="F#" Value=" staticval mutable AnyScheme : string" Usage="System.Security.Policy.CodeConnectAccess.AnyScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera wartość ciągu, która reprezentuje symbol wieloznaczny schematu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jako alternatywę do konstruowania <xref:System.Security.Policy.CodeConnectAccess> przy użyciu tej wartości, można wywołać <xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A> metodę, aby uzyskać <xref:System.Security.Policy.CodeConnectAccess> obiekt, który reprezentuje określony port i dowolnego schematu.  
  
 Wartość tego pola to "*".  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartości tego pola.  
  
 [!code-cpp[NclCodeGroup#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#6)]
 [!code-csharp[NclCodeGroup#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAnySchemeAccess">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess (int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess(int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAnySchemeAccess (allowPort As Integer) As CodeConnectAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::CodeConnectAccess ^ CreateAnySchemeAccess(int allowPort);" />
      <MemberSignature Language="F#" Value="static member CreateAnySchemeAccess : int -&gt; System.Security.Policy.CodeConnectAccess" Usage="System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess allowPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeConnectAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowPort">Port, reprezentowany przez wystąpienie zwrócone.</param>
        <summary>Zwraca <see cref="T:System.Security.Policy.CodeConnectAccess" /> wystąpienia, która reprezentuje dostęp do określonego portu, przy użyciu dowolnego schematu.</summary>
        <returns>A <see cref="T:System.Security.Policy.CodeConnectAccess" /> wystąpienia dla określonego portu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.CodeConnectAccess> Zwracanego przez tę metodę wystąpienia używa wartości symboli wieloznacznych schemat <xref:System.Security.Policy.CodeConnectAccess.AnyScheme> ("*") do reprezentowania schemat.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tej metody. Aby uzyskać przykład, który demonstruje sposób użycia <xref:System.Security.Policy.CodeConnectAccess> obiektów, aby utworzyć grupę kodu i dodawanie grupy kodu do poziomu zasad, zobacz <xref:System.Security.Policy.CodeConnectAccess> klasa — Przegląd.  
  
 [!code-cpp[NclCodeGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#5)]
 [!code-csharp[NclCodeGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowPort" /> jest mniejsza niż 0.  - lub - <paramref name="allowPort" /> jest większy niż 65 535.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOriginSchemeAccess">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess (int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess(int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOriginSchemeAccess (allowPort As Integer) As CodeConnectAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::CodeConnectAccess ^ CreateOriginSchemeAccess(int allowPort);" />
      <MemberSignature Language="F#" Value="static member CreateOriginSchemeAccess : int -&gt; System.Security.Policy.CodeConnectAccess" Usage="System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess allowPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeConnectAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowPort">Port, reprezentowany przez wystąpienie zwrócone.</param>
        <summary>Zwraca <see cref="T:System.Security.Policy.CodeConnectAccess" /> wystąpienia, która reprezentuje dostęp do określonego portu przy użyciu schematu kodu pochodzenia.</summary>
        <returns>A <see cref="T:System.Security.Policy.CodeConnectAccess" /> wystąpienia dla określonego portu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.CodeConnectAccess> Wystąpienie zwrócone przez tę metodę ma wartość schemat <xref:System.Security.Policy.CodeConnectAccess.OriginScheme>. Schemat pochodzenia jest wartością schemat z identyfikatora URI, skąd pochodzi kod.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Security.Policy.CodeConnectAccess> obiektów, aby utworzyć grupę kodu i dodawanie grupy kodu do poziomu zasad.  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowPort" /> jest mniejsza niż 0.  - lub - <paramref name="allowPort" /> jest większy niż 65 535.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultPort">
      <MemberSignature Language="C#" Value="public static readonly int DefaultPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 DefaultPort" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.DefaultPort" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultPort As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int DefaultPort;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultPort : int" Usage="System.Security.Policy.CodeConnectAccess.DefaultPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera wartość używana do reprezentowania domyślnego portu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć <xref:System.Security.Policy.CodeConnectAccess> obiekt, który ma domyślny port dla określonego schematu, użyj tego pola jako `allowPort` parametru <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> konstruktora.  
  
 Wartość tego pola jest -3.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie <xref:System.Security.Policy.CodeConnectAccess> obiekt, który określa FTP schemat i domyślny port dla protokołu FTP.  
  
 [!code-cpp[NclCodeGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#1)]
 [!code-csharp[NclCodeGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="codeConnectAccess.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do porównania z bieżącą <see cref="T:System.Security.Policy.CodeConnectAccess" /> obiektu.</param>
        <summary>Zwraca wartość wskazującą, czy dwa <see cref="T:System.Security.Policy.CodeConnectAccess" /> obiekty reprezentują ten sam schemat i port.</summary>
        <returns>
          <see langword="true" /> Jeśli dwa obiekty reprezentują ten sam schemat i port; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Security.Policy.CodeConnectAccess> obiekty są sobie równe jeśli ich <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> i <xref:System.Security.Policy.CodeConnectAccess.Port%2A> wartości właściwości są takie same.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="codeConnectAccess.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</summary>
        <returns>Wartość skrótu dla bieżącego <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="OriginPort">
      <MemberSignature Language="C#" Value="public static readonly int OriginPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 OriginPort" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.OriginPort" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OriginPort As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int OriginPort;" />
      <MemberSignature Language="F#" Value=" staticval mutable OriginPort : int" Usage="System.Security.Policy.CodeConnectAccess.OriginPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera wartość używana do reprezentowania wartość portu w identyfikatorze URI, skąd pochodzi kodu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć <xref:System.Security.Policy.CodeConnectAccess> obiekt, który ma ten sam port jako port w dowód URL wykonywanie kodu, użyj tego pola jako `allowPort` parametru <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> konstruktora.  
  
 Wartość tego pola jest -4.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie <xref:System.Security.Policy.CodeConnectAccess> obiekt, który określa port schemat i źródła HTTP.  
  
 [!code-cpp[NclCodeGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#2)]
 [!code-csharp[NclCodeGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string OriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string OriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.OriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ OriginScheme;" />
      <MemberSignature Language="F#" Value=" staticval mutable OriginScheme : string" Usage="System.Security.Policy.CodeConnectAccess.OriginScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera wartość używana do reprezentowania schemat w adresie URL, którego kod pochodzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie używaj tego pola z <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> konstruktora. Zamiast tego należy użyć <xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A> metody.  
  
 Wartość tego pola jest "$origin".  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartości tego pola.  
  
 [!code-cpp[NclCodeGroup#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#6)]
 [!code-csharp[NclCodeGroup#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeConnectAccess.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="System.Security.Policy.CodeConnectAccess.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera numer portu, reprezentowane przez bieżące wystąpienie.</summary>
        <value>A <see cref="T:System.Int32" /> określająca port komputera, używany w połączeniu z <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości portów należą do zakresu od 0 do 65 535. Określona jest wartość portu, podczas tworzenia wystąpienia <xref:System.Security.Policy.CodeConnectAccess>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wyświetlanie wartość tej właściwości.  
  
 [!code-cpp[NclCodeGroup#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#4)]
 [!code-csharp[NclCodeGroup#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeConnectAccess.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.Security.Policy.CodeConnectAccess.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera schemat identyfikatora URI, reprezentowane przez bieżące wystąpienie.</summary>
        <value>A <see cref="T:System.String" /> określający schemat identyfikatora URI, konwertowane na małe litery.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Schemat jest określona podczas tworzenia wystąpienia <xref:System.Security.Policy.CodeConnectAccess>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wyświetlanie wartość tej właściwości.  
  
 [!code-cpp[NclCodeGroup#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#4)]
 [!code-csharp[NclCodeGroup#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>