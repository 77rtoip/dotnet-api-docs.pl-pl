<Type Name="IApplicationTrustManager" FullName="System.Security.Policy.IApplicationTrustManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a821c3d4bc7de406dcf5e610d0df87f9d144e26" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48586400" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationTrustManager : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationTrustManager implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.IApplicationTrustManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationTrustManager&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationTrustManager : System::Security::ISecurityEncodable" />
  <TypeSignature Language="F#" Value="type IApplicationTrustManager = interface&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, czy aplikacja powinna zostać wykonana i który zestaw uprawnień może być przyznany do niego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaufania, należy zaimplementować menedżerów <xref:System.Security.Policy.IApplicationTrustManager> interfejsu. Wywołania hosta <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> metodę, aby określić, czy mają zostać wykonane aplikacji i które uprawnienia do aplikacji.  
  
 W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] , a później, istnieje tylko jeden Menedżer zaufania, który może być implementację niestandardową z <xref:System.Security.Policy.IApplicationTrustManager> interfejsu. Domyślną implementację Menedżera zaufania monituje użytkownika o zgodę, aby zainstalować aplikację i podniesienie poziomu uprawnień udzielonych aplikacji. Inne implementacje Menedżer zaufania może udostępniać środowiska do innego użytkownika. Na przykład implementacja może sprawdzić listy przedsiębiorstwa dla zaufanych aplikacji, zamiast monitowania użytkownika o tych informacji.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono proste wdrażanie <xref:System.Security.Policy.IApplicationTrustManager>.  
  
 [!code-csharp[System.Security.Policy.IApplicationTrustManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/CS/customTrustManager.cs#1)]
 [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/VB/customtrustmanager.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DetermineApplicationTrust">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.ApplicationTrust DetermineApplicationTrust(class System.ActivationContext activationContext, class System.Security.Policy.TrustManagerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Policy::ApplicationTrust ^ DetermineApplicationTrust(ActivationContext ^ activationContext, System::Security::Policy::TrustManagerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DetermineApplicationTrust : ActivationContext * System.Security.Policy.TrustManagerContext -&gt; System.Security.Policy.ApplicationTrust" Usage="iApplicationTrustManager.DetermineApplicationTrust (activationContext, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="context" Type="System.Security.Policy.TrustManagerContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">Kontekst aktywacji dla aplikacji.</param>
        <param name="context">Kontekst Menedżer relacji zaufania dla aplikacji.</param>
        <summary>Określa, czy aplikacja powinna zostać wykonana i który zestaw uprawnień może być przyznany do niego.</summary>
        <returns>Obiekt, który zawiera decyzje dotyczące bezpieczeństwa dotyczące aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> Metoda jest wywoływana przez hosta w celu ustalenia, czy aplikacja powinna zostać wykonana i może być przyznany zestaw uprawnień go. <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> Zwraca <xref:System.Security.Policy.ApplicationTrust> obiekt z <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> zawierający uprawnienia właściwością reprezentujący uprawnień przyznawanych do każdego zestawu wykonywania w kontekście aplikacji. Udzielone uprawnienia nie są stosowane do zestawów w globalnej pamięci podręcznej. <xref:System.Security.Policy.ApplicationTrust> Obiekt również ma <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> własności ustawiający Menedżer zaufania, aby wskazać, czy aplikacja powinna być zaufane. Jeśli Menedżer zaufania wskazuje, czy aplikacja jest zaufany, host aktywuje aplikację i nadaje jej zestawów zestaw uprawnień w <xref:System.Security.Policy.ApplicationTrust> kolekcji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano implementację <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> metody dla Menedżera zaufania niestandardowych. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Policy.IApplicationTrustManager> interfejsu.  
  
 [!code-csharp[System.Security.Policy.IApplicationTrustManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/CS/customTrustManager.cs#2)]
 [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/VB/customtrustmanager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>