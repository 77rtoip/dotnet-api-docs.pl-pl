<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ApplicationTrustEnumerator.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac559ab8cb6df681b340ec518887a2d4220c23c34b8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59ab8cb6df681b340ec518887a2d4220c23c34b8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>Represents the enumerator for <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> objects in the <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> collection.</source>
          <target state="translated">Reprezentuje moduł wyliczający dla <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> obiekty w <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> kolekcji.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>Enumerators only allow reading the data in the collection.</source>
          <target state="translated">Moduły wyliczające Zezwalaj tylko na odczytywanie danych w kolekcji.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">Wyliczenia nie można zmodyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> — Metoda powoduje również moduł wyliczający do tej pozycji.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>At this position, calling the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">At to pozycja, wywoływania <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> właściwości zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">W związku z tym należy wywołać <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> metodę modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> zwraca ten sam obiekt do momentu <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> do następnego elementu.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Po zakończeniu kolekcji jest moduł wyliczający jest rozmieszczanych za ostatnim elementem w kolekcji i wywoływania <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> zwraca <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Jeśli przez ostatnie wywołanie <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, wywoływania <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>To reset <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> to the first element of the collection, call <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> followed by a call to <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Aby zresetować <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> do pierwszego elementu kolekcji, należy wywołać <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> następuje wywołanie <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> zgłasza <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> wyjątku.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> returns the element to which it is currently set, even if the enumerator is already invalidated.</source>
          <target state="translated">Jeśli kolekcja jest zmodyfikowany między wywoływaniem <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> zwraca element, do którego jest obecnie ustawiona, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.ApplicationTrustEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> object in the <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> collection.</source>
          <target state="translated">Pobiera bieżący <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> obiektu w <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> kolekcji.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> in the <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph>.</source>
          <target state="translated">Bieżący <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> w <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
          <source>When the enumerator is created, it does not point to an object, so the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Po utworzeniu modułu wyliczającego nie wskazuje on do obiektu, więc <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> właściwość nie jest prawidłowy i zgłosi wyjątek, jeśli jest on dostępny.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> method to position the cursor at the first object in the collection.</source>
          <target state="translated">Najpierw musisz wywołać <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> metodę, aby umieść kursor na pierwszy obiekt w kolekcji.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> with no intervening calls to <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> object.</source>
          <target state="translated">Wiele wywołań <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> nie pośredniczące wywołania <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> , którą będzie zwracać taki sam <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
          <source>Moves to the next element in the <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> collection.</source>
          <target state="translated">Przechodzi do następnego elementu w <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> kolekcji.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli moduł wyliczający został pomyślnie poprawionym do następnego elementu; <ph id="ph2">&lt;see langword="false" /&gt;</ph> po zakończeniu zbierania moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
          <source>The <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> method immediately returns <ph id="ph2">`false`</ph> if there are no objects in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> Metoda natychmiast zwraca <ph id="ph2">`false`</ph> Jeśli nie ma żadnych obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> will return <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> Zwraca <ph id="ph2">`true`</ph> dopóki osiągnie koniec kolekcji.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">Następnie zwróci <ph id="ph1">`false`</ph> dla każdego kolejne wywołania.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
          <source>However, after <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property will throw an exception.</source>
          <target state="translated">Jednak po <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, podczas uzyskiwania dostępu do <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> właściwość spowoduje zgłoszenie wyjątku.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
          <source>Upon creation, an enumerator is positioned before the first <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> object in the collection, and the first call to <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> positions the enumerator at the first object in the collection.</source>
          <target state="translated">Po utworzeniu, moduł wyliczający jest umieszczony przed pierwszą <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> obiektu w kolekcji i w pierwszym wywołaniu <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> umieszcza modułu wyliczającego na pierwszy obiekt w kolekcji.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
          <source>Resets the enumerator to the beginning of the <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> collection.</source>
          <target state="translated">Resetuje modułu wyliczającego na początku <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> kolekcji.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">Moduł wyliczający przenosi kierunku tylko do przodu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
          <source>Use this method to return the enumerator to the beginning of the collection of <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> objects.</source>
          <target state="translated">Ta metoda służy do powrotu do kolekcji modułu wyliczającego <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> method positions the cursor at the first object in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> Metody umieszcza kursor na pierwszy obiekt w kolekcji.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph>, you do not need to call the <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> method to move the cursor forward to the first object.</source>
          <target state="translated">Po wywołaniu <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph>, nie należy wywołać <ph id="ph2">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> metody, aby przesunąć kursor do przodu do pierwszego obiektu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> in the <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> collection.</source>
          <target state="translated">Pobiera bieżący <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> w <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph> kolekcji.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> in the <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph>.</source>
          <target state="translated">Bieżący <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> w <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrustCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
          <source>Do not call this method; use the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property instead.</source>
          <target state="translated">Nie wywołuj tej metody; Użyj <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> właściwości zamiast tego.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>