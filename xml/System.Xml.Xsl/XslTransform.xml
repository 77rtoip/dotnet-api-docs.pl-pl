<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fffe3df74f84922396e53ccd8afb19f9699356f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741884" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przekształcenia danych XML przy użyciu rozszerzalny język arkusza stylów do arkusza stylów przekształcenia XSLT ().</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie Microsoft .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi korzystać z przestrzeni nazw `http://www.w3.org/1999/XSL/Transform`.  
  
 Dodatkowe argumenty można również dodać do arkusza stylów przy użyciu <xref:System.Xml.Xsl.XsltArgumentList> klasy. Ta klasa zawiera parametry wejściowe styl arkusza i rozszerzenie obiekty, które mogą być wywoływane z arkusza stylów.  
  
 Do transformacji danych XML:  
  
1.  Utwórz <xref:System.Xml.Xsl.XslTransform> obiektu.  
  
2.  Użyj <xref:System.Xml.Xsl.XslTransform.Load%2A> metodę, aby załadować arkusza stylów dla transformacji. Ta metoda ma kilka przeciążeń i załadować arkusza stylów przy użyciu <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, lub adres URL z lokalizacji pliku.  
  
3.  Użyj <xref:System.Xml.Xsl.XslTransform.Transform%2A> metody do transformacji danych XML. Ta metoda ma kilka przeciążeń i może obsługiwać różne typy danych wejściowych i wyjściowych. Można również określić <xref:System.Xml.Xsl.XsltArgumentList> zawierających dodatkowe argumenty do użycia jako dane wejściowe podczas transformacji.  
  
 **Zagadnienia dotyczące bezpieczeństwa**  
  
 Podczas tworzenia aplikacji, która używa <xref:System.Xml.Xsl.XslTransform> klasy, należy zwrócić uwagę na następujące elementy i ich wpływ na:  
  
-   Obiekty rozszerzenia są domyślnie włączone. Jeśli <xref:System.Xml.Xsl.XsltArgumentList> obiekt zawierający obiekty rozszerzenia jest przekazywany do <xref:System.Xml.Xsl.XslTransform.Transform%2A> metody, są one wykorzystywane.  
  
-   Arkusze stylów XSLT może zawierać odwołania do innych plików i bloki osadzony skrypt. Złośliwy użytkownik może wykorzystać to poprzez dostarczanie danych lub arkusze stylów, który po wykonaniu spowoduje, że system przetwarza do momentu komputer ma za mało zasobów.  
  
-   Aplikacje XSLT, które działają w środowisku mieszanym zaufania może spowodować fałszowania arkusza stylów. Na przykład, złośliwy użytkownik może załadować obiektu z arkusza stylów szkodliwe i przekazują do innego użytkownika, który następnie wywołuje <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda i wykonuje transformację.  
  
 Te problemy z zabezpieczeniami można zminimalizować przez nie akceptuje <xref:System.Xml.Xsl.XslTransform> obiekty, arkusze stylów XSLT lub XML źródła danych ze źródeł niezaufanych.  
  
 **Obsługa skryptów**  
  
 Ta klasa obsługuje osadzonych skryptów przy użyciu `msxsl:script` elementu.  
  
 W wersji 1.1 programu .NET Framework dowód arkusza stylów Określa, jakie uprawnienia są nadawane osadzonych skryptów.  
  
-   Jeśli arkusz stylów został załadowany z zasobów identyfikator URI (Uniform), identyfikator URI służy do tworzenia dowody. To świadectwo zawiera identyfikator URI wraz z jego lokacji i strefy.  
  
-   Jeśli arkusz stylów został załadowany przy użyciu innego źródła, musisz podać dowód, przekazując <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> do obiektu <xref:System.Xml.Xsl.XslTransform.Load%2A> metody. W przeciwnym razie zestaw skryptu ma pełne zaufanie.  
  
 Częściowo zaufanych wywołań: `UnmanagedCode` są wymagane uprawnienia, aby skompilować osadzony skrypt. `ControlEvidence` uprawnienie jest wymagane w celu zapewnienia <xref:System.Security.Policy.Evidence> do <xref:System.Xml.Xsl.XslTransform.Load%2A> metody. A <xref:System.Security.SecurityException> jest generowany, jeśli element wywołujący nie ma wystarczających uprawnień. Zobacz <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> i <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
 `msxsl:script` Element ma następujące wymagania:  
  
-   `msxsl:script` Element należy do `urn:schemas-microsoft-com:xslt` przestrzeni nazw. Arkusz stylów musi zawierać deklaracji przestrzeni nazw `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.  
  
-   `msxsl:script` Może zawierać elementu `language` atrybut, który określa język skryptów. Wartość `language` atrybut musi być jedną z następujących czynności: C#, CSharp, VB, VisualBasic, JScript lub JavaScript. Nazwa języka nie jest rozróżniana wielkość liter, JavaScript i javascript są prawidłowe. Jeśli `language` atrybut nie jest określony, domyślnie JScript.  
  
-   `msxsl:script` Musi zawierać element `implements-prefix` atrybut, który zawiera prefiks reprezentujący przestrzeń nazw skojarzone z bloku skryptu. Ta przestrzeń nazw musi być zdefiniowany w ramach arkusza stylów. Arkusz stylów może obejmować wiele bloków skryptu, które są pogrupowane według przestrzeni nazw. Nie może mieć blokach skryptu z wieloma językami w obrębie tego samego obszaru nazw. Bloki skryptu można wywołać funkcji zdefiniowanej w innym bloku skryptu, pod warunkiem blokach skryptu znajdują się w obrębie tego samego obszaru nazw. Zawartość bloku skryptu są parsowane zgodnie z zasadami i składni języka skryptów (dostarczonych przez `language` atrybutu). Na przykład jeśli były bloku skryptu C#, komentarze może być poprzedzony `//` znaków. Komentarze musi być prawidłowa zawartość XML.  
  
 `Note` Zaleca się Zawijaj bloków skryptu w sekcji CDATA.  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]><![CDATA[]>  
</msxsl:script>  
```  
  
 Funkcje mogą być deklarowane w `msxsl:script` elementu. W poniższej tabeli przedstawiono przestrzenie nazw, które są obsługiwane domyślnie.  
  
|Obsługiwanych przestrzeniach nazw|Opis|  
|--------------------------|-----------------|  
|`System`|Klasy systemu.|  
|`System.Collection`|Klasy kolekcji.|  
|`System.Text`|Klasy obsługi tekstu.|  
|`System.Xml`|Podstawowe klasy XML.|  
|`System.Xml.Xsl`|Klasy XSLT.|  
|`System.Xml.XPath`|Klasy XML Path Language (XPath).|  
  
 Podanych argumentów i zwracanych wartości zdefiniowane przez funkcje skryptu musi być jednego z typów sieci World Wide Web konsorcjum W3C wymienionych poniżej. Poniższa tabela zawiera szczegóły mapowania między tymi typami W3C XPath lub XSLT oraz odpowiedniej klasy .NET Framework.  
  
|Typ W3C|Odpowiednik klasę platformy .NET|  
|--------------|---------------------------|  
|Ciąg (XPath)|`System.String`|  
|Boolean (XPath)|`System.Boolean`|  
|Numer (XPath)|`System.Double`|  
|Result Tree Fragment (XSLT)|`System.Xml.XPath.XPathNavigator`|  
|Zestaw węzłów (XPath)|`System.Xml.XPath.XPathNodeIterator`|  
  
 Jeśli funkcja skryptu korzysta z jednego z następujących typów numerycznych: Int16, UInt16, Int32, UInt32, Int64, UInt64, jednym lub Decimal, te typy są przekształcić dwukrotnie, która mapuje numer typu W3C XPath.  
  
 Gdy funkcja jest nazywana, który jest zgłaszany wyjątek nie można przekonwertować argumentu wynik do jednego z wymaganych typów.  
  
> [!NOTE]
>  `msxsl:script` i `msxsl:node-list` są tylko funkcje z `urn:schemas-microsoft-com:xslt` przestrzeni nazw, które są obsługiwane przez <xref:System.Xml.Xsl.XslTransform> klasy.  
  
 <xref:System.Xml.Xsl.XslTransform> może wykorzystywać typowy kod środowiska uruchomieniowego (języka wspólnego CLR) języka jako mechanizmu rozszerzenia. Jest to osiągane przez przekazanie wystąpienia klasy <xref:System.Xml.Xsl.XslTransform> klasy i wywołanie jego metody publiczne w arkusz stylów XSLT. Metody, które są zdefiniowane z `params` — słowo kluczowe, umożliwiający nieokreślony liczba parametrów nie działają prawidłowo w tym scenariuszu. Zobacz [params](~/docs/csharp/language-reference/keywords/params.md) więcej szczegółów.  
  
 Aby uzyskać więcej informacji, zobacz [przekształceń XSLT z klasą XslTransform](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).  
  
   
  
## Examples  
 W poniższym przykładzie przekształca określony dokument XML i zapisuje wynik do konsoli.  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <see cref="T:System.Xml.Xsl.XslTransform" /> obiekty są tylko obsługujące wielowątkowość operacje transformacji. Inne operacje nie gwarantuje się wątkowo. Należy się upewnić, że żadne inne metody są nazywane obiektu podczas operacji ładowania.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Xsl.XslTransform" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ładuje arkusz stylów XSLT, w tym arkusze stylów, do którego odwołuje się <see langword="xsl:include" /> i <see langword="xsl:import" /> elementy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Adres URL, który określa arkusz stylów XSLT do załadowania.</param>
        <summary>Ładuje określony przez adres URL arkusz stylów XSLT.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.  
  
 Ta metoda ładuje arkusz stylów XSLT, w tym wszystkie arkusze stylów, do którego odwołuje się `xsl:include` i `xsl:import` elementy. Zasoby zewnętrzne są rozpoznawane przy użyciu <xref:System.Xml.XmlUrlResolver> bez poświadczeń użytkownika. Jeśli arkusze stylów znajdują się w zasobie sieciowym, który wymaga uwierzytelnienia, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z jego argumentów i określ <xref:System.Xml.XmlResolver> niezbędne poświadczenia.  
  
 Jeśli arkusz stylów zawiera osadzony skryptów, skrypt jest kompilowane do zestawu. Identyfikator URI arkusza stylów służy do tworzenia dowód, która jest stosowana do zestawu. W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
> [!NOTE]
>  Jeśli element wywołujący nie ma `UnmanagedCode` uprawnień, osadzony skrypt nie jest skompilowany i <xref:System.Security.SecurityException> jest generowany. Zobacz <xref:System.Security.Permissions.SecurityPermission> i <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład przekształca dokument XML w dokumencie HTML. Wyświetla ISBN, tytuł i ceny dla każdej książki w tabeli.  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 W przykładzie użyto następujących dwóch plików wejściowych.  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Załadowany zasób nie jest prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów zawiera osadzony skrypt, a obiekt wywołujący nie ma <see langword="UnmanagedCode" /> uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <see cref="T:System.Xml.XmlReader" /> Obiekt, który zawiera arkusz stylów XSLT.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Ta metoda ładuje arkusz stylów XSLT, w tym wszystkie arkusze stylów, do którego odwołuje się `xsl:include` i `xsl:import` elementy. Zasoby zewnętrzne są rozpoznawane przy użyciu <xref:System.Xml.XmlUrlResolver> bez poświadczeń użytkownika. Jeśli arkusze stylów znajdują się w zasobie sieciowym, który wymaga uwierzytelnienia, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z jego argumentów i określ <xref:System.Xml.XmlResolver> niezbędne poświadczenia.  
  
 Ładuje arkusz stylów z bieżącego węzła <xref:System.Xml.XmlReader> przez wszystkie elementy podrzędne. Pozwala na użycie części dokumentu jako arkusza stylów. Po <xref:System.Xml.Xsl.XslTransform.Load%2A> zwraca metoda <xref:System.Xml.XmlReader> znajduje się w węźle dalej na końcu arkusza stylów. Jeśli zostanie osiągnięty koniec dokumentu, <xref:System.Xml.XmlReader> znajduje się na końcu pliku (EOF).  
  
 Jeśli arkusz stylów zawiera jednostki, należy określić <xref:System.Xml.XmlReader> to rozwiąże jednostek (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> zwraca `true`). W takim przypadku <xref:System.Xml.XmlValidatingReader> mogą być używane.  
  
 Jeśli arkusz stylów zawiera osadzony skryptów, skrypt jest kompilowane do zestawu. Zestaw ma pełne zaufanie. Zalecaną praktyką jest zapewnienie dowód przy użyciu <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> metody. W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
> [!NOTE]
>  Jeśli element wywołujący nie ma `UnmanagedCode` uprawnień, osadzony skrypt nie jest skompilowany i <xref:System.Security.SecurityException> jest generowany. Zobacz <xref:System.Security.Permissions.SecurityPermission> i <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład przekształca sortowanie wszystkich książek przez tytuł pliku XML.  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 W przykładzie użyto następujących plików danych jako dane wejściowe.  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Bieżący węzeł nie jest zgodna z prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów zawiera osadzonych skryptów, a obiekt wywołujący nie ma <see langword="UnmanagedCode" /> uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający arkusz stylów XSLT.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Ta metoda ładuje arkusz stylów XSLT, w tym wszystkie arkusze stylów, do którego odwołuje się `xsl:include` i `xsl:import` elementy. Zasoby zewnętrzne są rozpoznawane przy użyciu <xref:System.Xml.XmlUrlResolver> bez poświadczeń użytkownika. Jeśli arkusze stylów znajdują się w zasobie sieciowym, który wymaga uwierzytelnienia, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z jego argumentów i określ <xref:System.Xml.XmlResolver> niezbędne poświadczenia.  
  
 Jeśli arkusz stylów zawiera osadzony skryptów, skrypt jest kompilowane do zestawu. Zestaw ma pełne zaufanie. Zalecaną praktyką jest zapewnienie dowód przy użyciu <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> metody. W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
> [!NOTE]
>  Jeśli element wywołujący nie ma `UnmanagedCode` uprawnień, osadzony skrypt nie jest skompilowany i <xref:System.Security.SecurityException> jest generowany. Zobacz <xref:System.Security.Permissions.SecurityPermission> i <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Załadowany zasób nie jest prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów zawiera osadzonych skryptów, a obiekt wywołujący nie ma <see langword="UnmanagedCode" /> uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Obiekt, który zawiera arkusz stylów XSLT.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Ta metoda ładuje arkusz stylów XSLT, w tym wszystkie arkusze stylów, do którego odwołuje się `xsl:include` i `xsl:import` elementy. Zasoby zewnętrzne są rozpoznawane przy użyciu <xref:System.Xml.XmlUrlResolver> bez poświadczeń użytkownika. Jeśli arkusze stylów znajdują się w zasobie sieciowym, który wymaga uwierzytelnienia, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z jego argumentów i określ <xref:System.Xml.XmlResolver> niezbędne poświadczenia.  
  
 Arkusz stylów są ładowane z bieżącej pozycji <xref:System.Xml.XPath.XPathNavigator>. Aby użyć tylko część załadowanego dokumentu jako arkusz stylów, przejdź do węzła odpowiadający początku arkusza stylów. Po <xref:System.Xml.Xsl.XslTransform.Load%2A> zwraca metoda <xref:System.Xml.XPath.XPathNavigator> znajduje się na początku arkusz stylów (na `xsl:style sheet` węzła).  
  
 Jeśli arkusz stylów zawiera osadzony skryptów, skrypt jest kompilowane do zestawu. Zestaw ma pełne zaufanie. Zalecaną praktyką jest zapewnienie dowód przy użyciu <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> metody. W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
> [!NOTE]
>  Jeśli element wywołujący nie ma `UnmanagedCode` uprawnień, osadzony skrypt nie jest skompilowany i <xref:System.Security.SecurityException> jest generowany. Zobacz <xref:System.Security.Permissions.SecurityPermission> i <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Bieżący węzeł nie jest zgodna z prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów zawiera osadzonych skryptów, a obiekt wywołujący nie ma <see langword="UnmanagedCode" /> uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">Adres URL, który określa arkusz stylów XSLT do załadowania.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Na potrzeby ładowania arkusza stylów i wszystkie arkusze stylów w <c>XSL: import</c> i <c>xsl: obejmują</c> elementów.  
  
 Jeśli jest to <see langword="null" />, domyślny <see cref="T:System.Xml.XmlUrlResolver" /> z żadnego użytkownika poświadczeń jest używany do otwierania arkusza stylów. Wartość domyślna <see cref="T:System.Xml.XmlUrlResolver" /> nie jest używany do rozpoznawania dowolnych zasobów zewnętrznych, w arkuszu stylów, więc <c>XSL: import</c> i <c>xsl: obejmują</c> elementy nie są rozpoznawane.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Ładuje określony przez adres URL arkusz stylów XSLT.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Jeśli arkusz stylów zawiera osadzony skryptów, skrypt jest kompilowane do zestawu. Identyfikator URI arkusza stylów służy do tworzenia dowód, która jest stosowana do zestawu. W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
> [!NOTE]
>  Jeśli element wywołujący nie ma `UnmanagedCode` uprawnień, osadzony skrypt nie jest skompilowany i <xref:System.Security.SecurityException> jest generowany. Zobacz <xref:System.Security.Permissions.SecurityPermission> i <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład przekształca dokument XML w dokumencie HTML. Przykład ładuje arkusz stylów XSLT, który zawiera `xsl:include` element odwołuje się do innego arkusza stylów. <xref:System.Xml.XmlUrlResolver> Jest przekazywana do <xref:System.Xml.Xsl.XslTransform.Load%2A> metodę, która ustawia poświadczenia na potrzeby dostępu do zasobu sieciowego do arkusza stylów dołączone.  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 W przykładzie użyto następujących plików danych jako dane wejściowe.  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Załadowany zasób nie jest prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów zawiera osadzony skrypt, a obiekt wywołujący nie ma <see langword="UnmanagedCode" /> uprawnienia.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <see cref="T:System.Xml.XmlReader" /> Obiekt, który zawiera arkusz stylów XSLT.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używana do załadowania wszystkie arkusze stylów, do którego odwołuje się <c>XSL: import</c> i <c>xsl: obejmują</c> elementów. Jeśli jest to <see langword="null" />, zasobów zewnętrznych nie są rozpoznawane.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Ta metoda ładuje arkusz stylów XSLT, w tym wszystkie arkusze stylów, do którego odwołuje się `xsl:include` i `xsl:import` elementy. Ładuje arkusz stylów z bieżącego węzła <xref:System.Xml.XmlReader> przez wszystkie elementy podrzędne. Pozwala na użycie części dokumentu jako arkusza stylów.  
  
 Po <xref:System.Xml.Xsl.XslTransform.Load%2A> zwraca metoda <xref:System.Xml.XmlReader> znajduje się w węźle dalej na końcu arkusza stylów. Jeśli zostanie osiągnięty koniec dokumentu, <xref:System.Xml.XmlReader> znajduje się na końcu pliku (EOF).  
  
 Jeśli arkusz stylów zawiera jednostki, należy określić <xref:System.Xml.XmlReader> to rozwiąże jednostek (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> zwraca `true`). W takim przypadku <xref:System.Xml.XmlValidatingReader> mogą być używane.  
  
 Jeśli arkusz stylów zawiera osadzony skryptów, skrypt jest kompilowane do zestawu. Zestaw ma pełne zaufanie. Zalecaną praktyką jest zapewnienie dowód przy użyciu <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> metody. W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
> [!NOTE]
>  Jeśli element wywołujący nie ma `UnmanagedCode` uprawnień, osadzony skrypt nie jest skompilowany i <xref:System.Security.SecurityException> jest generowany. Zobacz <xref:System.Security.Permissions.SecurityPermission> i <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Bieżący węzeł nie jest zgodna z prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów zawiera osadzonych skryptów, a obiekt wywołujący nie ma <see langword="UnmanagedCode" /> uprawnienia.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający arkusz stylów XSLT.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używana do załadowania wszystkie arkusze stylów, do którego odwołuje się <c>XSL: import</c> i <c>xsl: obejmują</c> elementów. Jeśli jest to <see langword="null" />, zasobów zewnętrznych nie są rozpoznawane.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> ukończeniu metody.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Jeśli arkusz stylów zawiera osadzony skryptów, skrypt jest kompilowane do zestawu. Zestaw ma pełne zaufanie. Zalecaną praktyką jest zapewnienie dowód przy użyciu <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> metody. W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
> [!NOTE]
>  Jeśli element wywołujący nie ma `UnmanagedCode` uprawnień, osadzony skrypt nie jest skompilowany i <xref:System.Security.SecurityException> jest generowany. Zobacz <xref:System.Security.Permissions.SecurityPermission> i <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Załadowany zasób nie jest prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów zawiera osadzonych skryptów, a obiekt wywołujący nie ma <see langword="UnmanagedCode" /> uprawnienia.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Obiekt, który zawiera arkusz stylów XSLT.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używana do załadowania wszystkie arkusze stylów, do którego odwołuje się <c>XSL: import</c> i <c>xsl: obejmują</c> elementów. Jeśli jest to <see langword="null" />, zasobów zewnętrznych nie są rozpoznawane.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> ukończeniu metody.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Arkusz stylów są ładowane z bieżącej pozycji <xref:System.Xml.XPath.XPathNavigator>. Aby użyć część załadowanego dokumentu jako arkusz stylów, przejdź do węzła odpowiadający początku arkusza stylów. Po <xref:System.Xml.Xsl.XslTransform.Load%2A> zwraca metoda <xref:System.Xml.XPath.XPathNavigator> znajduje się na początku arkusz stylów (na `xsl:style sheet` węzła).  
  
 Jeśli arkusz stylów zawiera osadzony skryptów, skrypt jest kompilowane do zestawu. Zestaw ma pełne zaufanie. Zalecaną praktyką jest zapewnienie dowód przy użyciu <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>. W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
> [!NOTE]
>  Jeśli element wywołujący nie ma `UnmanagedCode` uprawnień, osadzony skrypt nie jest skompilowany i <xref:System.Security.SecurityException> jest generowany. Zobacz <xref:System.Security.Permissions.SecurityPermission> i <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> Aby uzyskać więcej informacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Bieżący węzeł nie jest zgodna z prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów zawiera osadzonych skryptów, a obiekt wywołujący nie ma <see langword="UnmanagedCode" /> uprawnienia.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <see cref="T:System.Xml.XmlReader" /> Obiekt zawierający arkusz stylów do załadowania.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używana do załadowania wszystkie arkusze stylów, do którego odwołuje się <c>XSL: import</c> i <c>xsl: obejmują</c> elementów. Jeśli jest to <see langword="null" />, zasobów zewnętrznych nie są rozpoznawane.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> ukończeniu metody.</param>
        <param name="evidence">
          <see cref="T:System.Security.Policy.Evidence" /> Ustawiony w zestawie wygenerowany dla bloku skryptu w arkuszu stylów XSLT.  
  
 Jeśli jest to <see langword="null" />, skrypt bloki nie są przetwarzane XSLT <c>document()</c> funkcja nie jest obsługiwana i obiekty uprzywilejowanych rozszerzenia są niedozwolone.  
  
 Wywołujący musi mieć <see langword="ControlEvidence" /> uprawnień, aby udowodnić dla zestawu skryptu. Częściowo zaufanych wywołań ten parametr może być ustawiony na <see langword="null" />.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XmlReader" />. Ta metoda umożliwia ograniczenie uprawnień arkusza stylów, określając dowód.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Ta metoda ładuje arkusz stylów XSLT, w tym wszystkie arkusze stylów, do którego odwołuje się `xsl:include` i `xsl:import` elementy. Ładuje arkusz stylów z bieżącego węzła <xref:System.Xml.XmlReader> przez wszystkie elementy podrzędne. Pozwala na użycie części dokumentu jako arkusza stylów.  
  
 Po <xref:System.Xml.Xsl.XslTransform.Load%2A> zwraca metoda <xref:System.Xml.XmlReader> znajduje się w węźle dalej na końcu arkusza stylów. Jeśli zostanie osiągnięty koniec dokumentu, <xref:System.Xml.XmlReader> znajduje się na końcu pliku (EOF).  
  
 Jeśli arkusz stylów zawiera jednostki, należy określić <xref:System.Xml.XmlReader> to rozwiąże jednostek (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> zwraca `true`). W takim przypadku <xref:System.Xml.XmlValidatingReader> mogą być używane.  
  
 W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
 Istnieją różne sposoby, aby udowodnić. W poniższej tabeli opisano jakiego rodzaju dowody stanowiące dla typowych scenariuszy użytkownika.  
  
    
  
## Examples  
 Poniższy przykład wykonuje transformację XSLT gdzie `xsltReader` jest <xref:System.Xml.XmlReader> zawierający arkusz stylów i `secureURL` jest zaufany adres URL, który może służyć do tworzenia <xref:System.Security.Policy.Evidence>. <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> Metoda służy do tworzenia <xref:System.Security.Policy.Evidence> których są stosowane do arkusza stylów.  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Bieżący węzeł nie jest zgodna z prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów przywoływanego wymaga funkcji, która nie jest dozwolona przez podany.  
  
 Obiekt wywołujący próbuje udowodnić, a nie ma <see langword="ControlEvidence" /> uprawnienia.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do udowodnienia. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający arkusz stylów XSLT.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używana do załadowania wszystkie arkusze stylów, do którego odwołuje się <c>XSL: import</c> i <c>xsl: obejmują</c> elementów. Jeśli jest to <see langword="null" />, zasobów zewnętrznych nie są rozpoznawane.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> ukończeniu metody.</param>
        <param name="evidence">
          <see cref="T:System.Security.Policy.Evidence" /> Ustawiony w zestawie wygenerowany dla bloku skryptu w arkuszu stylów XSLT.  
  
 Jeśli jest to <see langword="null" />, skrypt bloki nie są przetwarzane XSLT <c>document()</c> funkcja nie jest obsługiwana i obiekty uprzywilejowanych rozszerzenia są niedozwolone.  
  
 Wywołujący musi mieć <see langword="ControlEvidence" /> uprawnień, aby udowodnić dla zestawu skryptu. Częściowo zaufanych wywołań ten parametr może być ustawiony na <see langword="null" />.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XPath.IXPathNavigable" />. Ta metoda umożliwia ograniczenie uprawnień arkusza stylów, określając dowód.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
 Istnieją różne sposoby, aby udowodnić. W poniższej tabeli opisano jakiego rodzaju dowody stanowiące dla typowych scenariuszy użytkownika.  
  
  ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Załadowany zasób nie jest prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów przywoływanego wymaga funkcji, która nie jest dozwolona przez podany.  
  
 Obiekt wywołujący próbuje udowodnić, a nie ma <see langword="ControlEvidence" /> uprawnienia.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do udowodnienia. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Obiekt zawierający arkusz stylów do załadowania.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używana do załadowania wszystkie arkusze stylów, do którego odwołuje się <c>XSL: import</c> i <c>xsl: obejmują</c> elementów. Jeśli jest to <see langword="null" />, zasobów zewnętrznych nie są rozpoznawane.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> ukończeniu metody.</param>
        <param name="evidence">
          <see cref="T:System.Security.Policy.Evidence" /> Ustawiony w zestawie wygenerowany dla bloku skryptu w arkuszu stylów XSLT.  
  
 Jeśli jest to <see langword="null" />, skrypt bloki nie są przetwarzane XSLT <c>document()</c> funkcja nie jest obsługiwana i obiekty uprzywilejowanych rozszerzenia są niedozwolone.  
  
 Wywołujący musi mieć <see langword="ControlEvidence" /> uprawnień, aby udowodnić dla zestawu skryptu. Częściowo zaufanych wywołań ten parametr może być ustawiony na <see langword="null" />.</param>
        <summary>Ładuje arkusz stylów XSLT zawarte w <see cref="T:System.Xml.XPath.XPathNavigator" />. Ta metoda umożliwia ograniczenie uprawnień arkusza stylów, określając dowód.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Arkusz stylów są ładowane z bieżącej pozycji <xref:System.Xml.XPath.XPathNavigator>. Aby użyć część załadowanego dokumentu jako arkusz stylów, przejdź do węzła odpowiadający początku arkusza stylów. Po <xref:System.Xml.Xsl.XslTransform.Load%2A> zwraca metoda <xref:System.Xml.XPath.XPathNavigator> znajduje się na początku arkusz stylów (na `xsl:style sheet` węzła).  
  
 W przypadku problemów z <xref:System.Xml.Xsl.XslTransform.Load%2A> metody i stylu arkuszy z osadzonych skryptów, zobacz artykuł Q316755 w bazie wiedzy Microsoft Knowledge Base pod http://support.microsoft.com.  
  
 Istnieją różne sposoby, aby udowodnić. W poniższej tabeli opisano jakiego rodzaju dowody stanowiące dla typowych scenariuszy użytkownika.  
  
    
  
## Examples  
 Poniższy przykład wykonuje transformację XSLT przy użyciu arkusza stylów ze źródła zewnętrznego. Ponieważ arkusz stylów pochodzi z niezaufanego źródła, `resolver` i `evidence` parametry są ustawione na `null`.  
  
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Bieżący węzeł nie jest zgodna z prawidłowego arkusza stylów.</exception>
        <exception cref="T:System.Security.SecurityException">Arkusz stylów przywoływanego wymaga funkcji, która nie jest dozwolona przez podany.  
  
 Obiekt wywołujący próbuje udowodnić, a nie ma <see langword="ControlEvidence" /> uprawnienia.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do udowodnienia. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekształca danych XML przy użyciu załadować arkusza stylów XSLT.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">Adres URL dokumentu źródłowego do przekształcenia.</param>
        <param name="outputfile">Adres URL pliku wyjściowego.</param>
        <summary>Przekształcenia danych XML w pliku wejściowym i umieszcza wynik do pliku wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Ta metoda jest przestarzałe w programie .NET Framework w wersji 1.1. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak XSLT `document()` funkcji nie zostanie rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
   
  
## Examples  
 Poniższy przykład powoduje modyfikację `books.xml` plik za pomocą `output.xsl` arkusza stylów i umieszcza wyniki w `books.html` pliku.  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 W przykładzie użyto następujących dwóch plików wejściowych:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.IXPathNavigable" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> Zawierającego wyniki transformacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Ta metoda jest już przestarzałe. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak XSLT `document()` funkcji nie zostanie rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. `xsl:output` Element nie jest obsługiwany podczas wyprowadzania do <xref:System.Xml.XmlReader> ( `xsl:output` element jest ignorowana). Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) Aby uzyskać więcej informacji.  
  
 Ta metoda umożliwia wykonaj asynchroniczne przekształcania dokumentu źródłowego.  
  
 Przekształcenia mają zastosowanie do dokumentu jako całość. Innymi słowy w przypadku przekazania w węźle innym niż węzeł główny dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Aby przekształcić fragmentu węzła, należy utworzyć <xref:System.Xml.XmlDocument> zawierający tylko węzeł fragmentu i przekazać, który <xref:System.Xml.XmlDocument> do <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda.  
  
 Poniższy przykład wykonuje transformację na fragmentu węzła.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 W przykładzie użyto `library.xml` i `print_root.xsl` pliki jako dane wejściowe i wyświetla następujące polecenie, aby konsoli.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.XPathNavigator" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> Zawierającego wyniki transformacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. Wybór przekształcania mają zastosowanie do dokumentu jako całość. Innymi słowy Jeśli bieżący węzeł jest ustawiona w węźle drzewa niż węzła głównego dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Po wykonaniu transformacja <xref:System.Xml.XPath.XPathNavigator> pozostaje w stanie pierwotnym. Oznacza to, że węzeł, który jest bieżącym przed proces przekształcania, pozostanie bieżącego węzła po <xref:System.Xml.Xsl.XslTransform.Transform%2A> została wywołana metoda.  
  
 Ponieważ <xref:System.Xml.XmlReader> zawiera tylko do odczytu danych wyjściowych `xsl:output` element jest ignorowana. Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) Aby uzyskać więcej informacji.  
  
 Ta metoda umożliwia wykonaj asynchroniczne przekształcania dokumentu źródłowego.  
  
> [!NOTE]
>  Ta metoda jest przestarzała. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak funkcja XSLT document() został rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">Adres URL dokumentu źródłowego do przekształcenia.</param>
        <param name="outputfile">Adres URL pliku wyjściowego.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w pliku wejściowym i umieszcza wynik do pliku wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
   
  
## Examples  
 W poniższym przykładzie wykonuje transformację XSLT i danych wyjściowych do pliku. <xref:System.Xml.XmlUrlResolver> z domyślne poświadczenia jest używane rozwiązanie zasobów zewnętrznych. Zobacz <xref:System.Net.CredentialCache.DefaultCredentials%2A> szczegółowe informacje.  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">Strumień, do którego chcesz danych wyjściowych.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.IXPathNavigable" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Ta metoda jest już przestarzałe. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak XSLT `document()` funkcji nie zostanie rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów.  
  
 Przekształcenia mają zastosowanie do dokumentu jako całość. Innymi słowy w przypadku przekazania w węźle innym niż węzeł główny dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Aby przekształcić fragmentu węzła, należy utworzyć <xref:System.Xml.XmlDocument> zawierający tylko węzeł fragmentu i przekazać, który <xref:System.Xml.XmlDocument> do <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda.  
  
 Poniższy przykład wykonuje transformację na fragmentu węzła.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 W przykładzie użyto `library.xml` i `print_root.xsl` pliki jako dane wejściowe i wyświetla następujące polecenie, aby konsoli.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">
          <see cref="T:System.IO.TextWriter" /> Do której ma zostać danych wyjściowych.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.IXPathNavigable" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Ta metoda jest już przestarzałe. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak XSLT `document()` funkcji nie zostanie rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów.  
  
 Atrybut kodowania na `xsl:output` element nie jest obsługiwany podczas wyprowadzania do <xref:System.IO.TextWriter>. Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) kątem specyfiki, na którym `xsl:output` atrybutów są obsługiwane.  
  
 Przekształcenia mają zastosowanie do dokumentu jako całość. Innymi słowy w przypadku przekazania w węźle innym niż węzeł główny dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Aby przekształcić fragmentu węzła, należy utworzyć <xref:System.Xml.XmlDocument> zawierających tylko węzeł fragmentu i przekazać, który <xref:System.Xml.XmlDocument> do <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda.  
  
 Poniższy przykład wykonuje transformację na fragmentu węzła.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 W przykładzie użyto `library.xml` i `print_root.xsl` pliki jako dane wejściowe i wyświetla następujące polecenie, aby konsoli.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.IXPathNavigable" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> Zawierającego wyniki transformacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. `xsl:output` Element nie jest obsługiwany podczas wyprowadzania do <xref:System.Xml.XmlReader> ( `xsl:output` element jest ignorowana). Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) Aby uzyskać więcej informacji.  
  
 Ta metoda umożliwia wykonaj asynchroniczne przekształcania dokumentu źródłowego.  
  
 Przekształcenia mają zastosowanie do dokumentu jako całość. Innymi słowy w przypadku przekazania w węźle innym niż węzeł główny dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Aby przekształcić fragmentu węzła, należy utworzyć <xref:System.Xml.XmlDocument> zawierających tylko węzeł fragmentu i przekazać, który <xref:System.Xml.XmlDocument> do <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda.  
  
 Poniższy przykład wykonuje transformację na fragmentu węzła.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 W przykładzie użyto `library.xml` i `print_root.xsl` pliki jako dane wejściowe i wyświetla następujące polecenie, aby konsoli.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 Przekształca dokument XML, umieszcza wyniki w następującym przykładzie `XmlReader`. <xref:System.Xml.XmlUrlResolver> Niezbędne poświadczenia służy do przetwarzania żadnych XSLT `document()` funkcji.  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">
          <see cref="T:System.Xml.XmlWriter" /> Do której ma zostać danych wyjściowych.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.IXPathNavigable" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Ta metoda jest już przestarzałe. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak XSLT `document()` funkcji nie zostanie rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. `xsl:output` Element nie jest obsługiwany podczas wyprowadzania do <xref:System.Xml.XmlWriter> (`xsl:output` jest ignorowana). Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) Aby uzyskać więcej informacji.  
  
 Przekształcenia mają zastosowanie do dokumentu jako całość. Innymi słowy w przypadku przekazania w węźle innym niż węzeł główny dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Aby przekształcić fragmentu węzła, należy utworzyć <xref:System.Xml.XmlDocument> zawierający tylko węzeł fragmentu i przekazać, który <xref:System.Xml.XmlDocument> do <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda.  
  
 Poniższy przykład wykonuje transformację na fragmentu węzła.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 W przykładzie użyto `library.xml` i `print_root.xsl` pliki jako dane wejściowe i wyświetla następujące polecenie, aby konsoli.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">Strumień, do którego chcesz danych wyjściowych.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.XPathNavigator" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. Wybór przekształcania mają zastosowanie do dokumentu jako całość. Innymi słowy Jeśli bieżący węzeł jest ustawiona w węźle drzewa niż węzła głównego dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Po wykonaniu transformacja <xref:System.Xml.XPath.XPathNavigator> pozostaje w stanie pierwotnym. Oznacza to, że węzeł, który jest bieżącym przed proces przekształcania, pozostanie bieżącego węzła po <xref:System.Xml.Xsl.XslTransform.Transform%2A> została wywołana metoda.  
  
 Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) kątem specyfiki, na którym `xsl:output` atrybutów są obsługiwane.  
  
> [!NOTE]
>  Ta metoda jest już przestarzałe. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak XSLT `document()` funkcji nie zostanie rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">
          <see cref="T:System.IO.TextWriter" /> Do której ma zostać danych wyjściowych.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.XPathNavigator" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. Wybór przekształcania mają zastosowanie do dokumentu jako całość. Innymi słowy Jeśli bieżący węzeł jest ustawiona w węźle drzewa niż węzła głównego dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Po wykonaniu transformacja <xref:System.Xml.XPath.XPathNavigator> pozostaje w stanie pierwotnym. Oznacza to, że węzeł, który jest bieżącym przed proces przekształcania, pozostanie bieżącego węzła po <xref:System.Xml.Xsl.XslTransform.Transform%2A> została wywołana metoda.  
  
 Atrybut kodowania na `xsl:output` element nie jest obsługiwany podczas wyprowadzania do <xref:System.IO.TextWriter>. Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) kątem specyfiki, na którym `xsl:output` atrybutów są obsługiwane.  
  
> [!NOTE]
>  Ta metoda jest już przestarzałe. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak XSLT `document()` funkcji nie zostanie rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.XPathNavigator" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> Zawierającego wyniki transformacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. Wybór przekształcania mają zastosowanie do dokumentu jako całość. Innymi słowy Jeśli bieżący węzeł jest ustawiona w węźle drzewa niż węzła głównego dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Po wykonaniu transformacja <xref:System.Xml.XPath.XPathNavigator> pozostaje w stanie pierwotnym. Oznacza to, że węzeł, który jest bieżącym przed proces przekształcania, pozostanie bieżącego węzła po <xref:System.Xml.Xsl.XslTransform.Transform%2A> została wywołana metoda.  
  
 Ponieważ <xref:System.Xml.XmlReader> zawiera tylko do odczytu danych wyjściowych `xsl:output` element jest ignorowana. Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) Aby uzyskać więcej informacji.  
  
 Ta metoda umożliwia wykonaj asynchroniczne przekształcania dokumentu źródłowego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">
          <see cref="T:System.Xml.XmlWriter" /> Do której ma zostać danych wyjściowych.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.XPathNavigator" /> przy użyciu określonych argumentów i umieszcza wynik, który ma <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. Wybór przekształcania mają zastosowanie do dokumentu jako całość. Innymi słowy Jeśli bieżący węzeł jest ustawiona w węźle drzewa niż węzła głównego dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Po wykonaniu transformacja <xref:System.Xml.XPath.XPathNavigator> pozostaje w stanie pierwotnym. Oznacza to, że węzeł, który jest aktualny, zanim proces przekształcania, pozostanie bieżącego węzła po <xref:System.Xml.Xsl.XslTransform.Transform%2A> została wywołana metoda.  
  
 `xsl:output` Element nie jest obsługiwany podczas wyprowadzania do <xref:System.Xml.XmlWriter> (`xsl:output` jest ignorowana). Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) Aby uzyskać więcej informacji.  
  
> [!NOTE]
>  Ta metoda jest już przestarzałe. Ustawienie <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> właściwość określa, jak XSLT `document()` funkcji nie zostanie rozwiązany. Zalecaną praktyką jest użycie <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodę, która przyjmuje <xref:System.Xml.XmlResolver> obiektu jako jego argumenty.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">Strumień, do którego chcesz danych wyjściowych.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.IXPathNavigable" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów.  
  
 Przekształcenia mają zastosowanie do dokumentu jako całość. Innymi słowy w przypadku przekazania w węźle innym niż węzeł główny dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Aby przekształcić fragmentu węzła, należy utworzyć <xref:System.Xml.XmlDocument> zawierający tylko węzeł fragmentu i przekazać, który <xref:System.Xml.XmlDocument> do <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda.  
  
 Poniższy przykład wykonuje transformację na fragmentu węzła.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 W przykładzie użyto `library.xml` i `print_root.xsl` pliki jako dane wejściowe i wyświetla następujące polecenie, aby konsoli.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 Poniższy przykład wykonuje przekształcenie strony ASP.NET.  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">
          <see cref="T:System.IO.TextWriter" /> Do której ma zostać danych wyjściowych.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.IXPathNavigable" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów.  
  
 Atrybut kodowania na `xsl:output` element nie jest obsługiwany podczas wyprowadzania do <xref:System.IO.TextWriter>. Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) kątem specyfiki, na którym `xsl:output` atrybutów są obsługiwane.  
  
 Przekształcenia mają zastosowanie do dokumentu jako całość. Innymi słowy w przypadku przekazania w węźle innym niż węzeł główny dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Aby przekształcić fragmentu węzła, należy utworzyć <xref:System.Xml.XmlDocument> zawierający tylko węzeł fragmentu i przekazać, który <xref:System.Xml.XmlDocument> do <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda.  
  
 Poniższy przykład wykonuje transformację na fragmentu węzła.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 W przykładzie użyto `library.xml` i `print_root.xsl` pliki jako dane wejściowe i wyświetla następujące polecenie, aby konsoli.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 W poniższym przykładzie przekształca pliku XML i generuje ciąg HTML. <xref:System.IO.StringReader> i <xref:System.IO.StringWriter> klasy służą do odczytu i zapisu ciągów.  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 W przykładzie użyto `books.xml` pliku jako dane wejściowe.  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Implementacja obiektu <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejsu. W programie .NET Framework, może to być albo <see cref="T:System.Xml.XmlNode" /> (zazwyczaj <see cref="T:System.Xml.XmlDocument" />), lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">
          <see cref="T:System.Xml.XmlWriter" /> Do której ma zostać danych wyjściowych.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.IXPathNavigable" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. `xsl:output` Element nie jest obsługiwany podczas wyprowadzania do <xref:System.Xml.XmlWriter> (`xsl:output` jest ignorowana). Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) Aby uzyskać więcej informacji.  
  
 Przekształcenia mają zastosowanie do dokumentu jako całość. Innymi słowy w przypadku przekazania w węźle innym niż węzeł główny dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Aby przekształcić fragmentu węzła, należy utworzyć <xref:System.Xml.XmlDocument> zawierający tylko węzeł fragmentu i przekazać, który <xref:System.Xml.XmlDocument> do <xref:System.Xml.Xsl.XslTransform.Transform%2A> — metoda.  
  
 Poniższy przykład wykonuje transformację na fragmentu węzła.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 W przykładzie użyto `library.xml` i `print_root.xsl` pliki jako dane wejściowe i wyświetla następujące polecenie, aby konsoli.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 Poniższy przykład przekształca dokument XML w dokumencie HTML. Wyświetla ISBN, tytuł i ceny dla każdej książki w tabeli.  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 W przykładzie użyto następujących dwóch plików wejściowych.  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">Strumień, do którego chcesz danych wyjściowych.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.XPathNavigator" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. Wybór przekształcania mają zastosowanie do dokumentu jako całość. Innymi słowy Jeśli bieżący węzeł jest ustawiona w węźle drzewa niż węzła głównego dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Po wykonaniu transformacja <xref:System.Xml.XPath.XPathNavigator> pozostaje w stanie pierwotnym. Oznacza to, że węzeł, który jest bieżącym przed proces przekształcania, pozostanie bieżącego węzła po <xref:System.Xml.Xsl.XslTransform.Transform%2A> została wywołana metoda.  
  
 Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) kątem specyfiki, na którym `xsl:output` atrybutów są obsługiwane.  
  
   
  
## Examples  
 Poniższy przykład ładuje tabelę klienta do <xref:System.Xml.XmlDataDocument> i wykonuje transformację XSLT do pobierania danych klienta w tabeli HTML. W przykładzie użyto bazy danych programu Microsoft SQL Server 2000 Northwind.  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 W przykładzie użyto `customers.xsl` pliku jako dane wejściowe.  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">
          <see cref="T:System.IO.TextWriter" /> Do której ma zostać danych wyjściowych.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.XPathNavigator" /> przy użyciu określonego <paramref name="args" /> i umieszcza wynik, który ma <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. Wybór przekształcania mają zastosowanie do dokumentu jako całość. Innymi słowy Jeśli bieżący węzeł jest ustawiona w węźle drzewa niż węzła głównego dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Po wykonaniu transformacja <xref:System.Xml.XPath.XPathNavigator> pozostaje w stanie pierwotnym. Oznacza to, że węzeł, który jest bieżącym przed proces przekształcania, pozostanie bieżącego węzła po <xref:System.Xml.Xsl.XslTransform.Transform%2A> została wywołana metoda.  
  
 Atrybut kodowania na `xsl:output` element nie jest obsługiwany podczas wyprowadzania do <xref:System.IO.TextWriter>. Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) kątem specyfiki, na którym `xsl:output` atrybutów są obsługiwane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Zawierające dane, które mają zostać przetworzone.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierającego użyte jako dane wejściowe do przekształcania argumenty kwalifikowana przestrzeni nazw.</param>
        <param name="output">
          <see cref="T:System.Xml.XmlWriter" /> Do której ma zostać danych wyjściowych.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznania XSLT <c>document()</c> funkcji. Jeśli jest to <see langword="null" />, <c>document()</c> funkcji nie zostanie rozwiązany.  
  
 <see cref="T:System.Xml.XmlResolver" /> Nie jest buforowana po <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> ukończeniu metody.</param>
        <summary>Przekształcenia danych XML w <see cref="T:System.Xml.XPath.XPathNavigator" /> przy użyciu określonych argumentów i umieszcza wynik, który ma <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> obsługuje składnię XSLT 1.0. Arkusz stylów XSLT musi zawierać deklaracji przestrzeni nazw `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Są wspomagane `xsl:param` elementy zdefiniowane w arkuszu stylów. Wybór przekształcania mają zastosowanie do dokumentu jako całość. Innymi słowy Jeśli bieżący węzeł jest ustawiona w węźle drzewa niż węzła głównego dokumentu, to nie zapobiega proces przekształcania podczas uzyskiwania dostępu do wszystkich węzłów w załadowanego dokumentu. Po wykonaniu transformacja <xref:System.Xml.XPath.XPathNavigator> pozostaje w stanie pierwotnym. Oznacza to, że węzeł, który jest aktualny, zanim proces przekształcania, pozostanie bieżącego węzła po <xref:System.Xml.Xsl.XslTransform.Transform%2A> została wywołana metoda.  
  
 `xsl:output` Element nie jest obsługiwany podczas wyprowadzania do <xref:System.Xml.XmlWriter> (`xsl:output` jest ignorowana). Zobacz [dane wyjściowe z XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) Aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład załaduje i edytować dokument XML przed wykonaniem przekształcenia XSLT.  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas przetwarzania transformację XSLT.  
  
 Uwaga: Jest to zmiana w porównaniu z wcześniejszymi wersjami. <see cref="T:System.Xml.Xsl.XsltException" /> Jest generowany, jeśli używasz programu Microsoft .NET Framework w wersji 1.1 lub starszym.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia <see cref="T:System.Xml.XmlResolver" /> używany do rozpoznania zasobów zewnętrznych podczas <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> metoda jest wywoływana.</summary>
        <value>
          <see cref="T:System.Xml.XmlResolver" /> Używany podczas przekształcania. Jeśli ustawiono <see langword="null" />, XSLT <c>document()</c> funkcji nie zostanie rozwiązany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Klasa jest przestarzała w programie .NET Framework w wersji 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Klasa jest nowy procesorze XSLT. Aby uzyskać więcej informacji, zobacz [za pomocą klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [migracji z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 Poziom zaufania aplikacji programu .NET Framework w wersji 1.1, określa domyślne zachowanie:  
  
 `Fully trusted code:` Domyślnie <xref:System.Xml.XmlUrlResolver> z żadnego użytkownika poświadczeń jest używany do rozpoznawania `document()` funkcji. Jeśli wymagane jest uwierzytelnienie dostępu do zasobu zewnętrznego, ta właściwość służy do określenia <xref:System.Xml.XmlResolver> niezbędne poświadczenia.  
  
 `Semi-trusted code:` Właściwość jest ustawiona na `null`, co oznacza, że `document()` funkcji nie zostanie rozwiązany. Ponieważ pełnego zaufania jest wymagany do określenia <xref:System.Xml.XmlResolver>, również nie można ustawić tej właściwości.  
  
 Ten mechanizm rozpoznawania jest używany podczas XSLT `document()` funkcja jest wywoływana. Nie jest używany do rozpoznawania `xsl:import` i `xsl:include` elementów, do których odwołuje się w arkuszu stylów. Aby określić <xref:System.Xml.XmlResolver> do użycia rozpoznania `xsl:import` i `xsl:include` elementów w arkuszu stylów, użyj <xref:System.Xml.Xsl.XslTransform.Load%2A> przeciążenia, które ma <xref:System.Xml.XmlResolver> jako jeden z jego argumentów.  
  
> [!NOTE]
>  Ta właściwość jest przestarzałe w programie .NET Framework w wersji 1.1. Określanie <xref:System.Xml.XmlResolver> przy użyciu <xref:System.Xml.Xsl.XslTransform.Transform%2A> metoda jest zalecaną praktyką. W takim przypadku <xref:System.Xml.XmlResolver> nie jest buforowana po <xref:System.Xml.Xsl.XslTransform.Transform%2A> ukończeniu metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>