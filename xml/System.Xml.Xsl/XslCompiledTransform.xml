<Type Name="XslCompiledTransform" FullName="System.Xml.Xsl.XslCompiledTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f8dec3d0bbe35e60611a0d340cf66bb312b1a8e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69440071" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslCompiledTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XslCompiledTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslCompiledTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslCompiledTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslCompiledTransform sealed" />
  <TypeSignature Language="F#" Value="type XslCompiledTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Przekształca dane XML przy użyciu arkusza stylów XSLT.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.XslCompiledTransform> Klasa to procesor XSLT obsługujący składnię XSLT 1,0. Jest to nowa implementacja i oferuje wzrost wydajności w porównaniu do przestarzałej <xref:System.Xml.Xsl.XslTransform> klasy. Struktura <xref:System.Xml.Xsl.XslCompiledTransform> klasy jest bardzo podobna <xref:System.Xml.Xsl.XslTransform> do klasy. Metoda ładuje i kompiluje arkusz stylów, <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> podczas gdy metoda wykonuje transformację XSLT. <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>  
  
 Obsługa funkcji XSLT `document()` i osadzonych bloków skryptów jest domyślnie wyłączona. Te funkcje można włączyć przez utworzenie <xref:System.Xml.Xsl.XsltSettings> obiektu i przekazanie go <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> do metody.  
  
 Aby uzyskać więcej informacji, zobacz [Korzystanie z klasy XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) i [Migrowanie z klasy XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
## <a name="security-considerations"></a>Zagadnienia dotyczące zabezpieczeń  
 Podczas tworzenia aplikacji korzystającej z <xref:System.Xml.Xsl.XslCompiledTransform> klasy należy zwrócić uwagę na następujące elementy i ich konsekwencje:  
  
-   Obsługa skryptów XSLT jest domyślnie wyłączona. Obsługa skryptów XSLT powinna być włączona tylko wtedy, gdy wymagana jest obsługa skryptów i Pracujesz w w pełni zaufanym środowisku.  
  
-   Funkcja XSLT `document()` jest domyślnie wyłączona. Jeśli włączysz tę `document()` funkcję, Ogranicz zasoby, do których można uzyskać dostęp, <xref:System.Xml.XmlSecureResolver> przekazując obiekt do <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metody.  
  
-   Obiekty rozszerzeń są domyślnie włączone. Jeśli obiekt zawierający obiekty rozszerzeń jest przenoszona <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> do metody, są one używane. <xref:System.Xml.Xsl.XsltArgumentList>  
  
-   Arkusze stylów XSLT mogą zawierać odwołania do innych plików i osadzonych bloków skryptów. Złośliwy użytkownik może wykorzystać ten element, dostarczając dane lub arkusze stylów, które po wykonaniu mogą spowodować, że system będzie działał do momentu, gdy na komputerze nie zostanie wykorzystana niska wartość zasobów.  
  
-   Aplikacje XSLT działające w środowisku mieszanym zaufania mogą spowodować fałszowanie arkusza stylów. Na przykład złośliwy użytkownik może załadować obiekt z bezpiecznym arkuszem stylów i wycofać go innemu użytkownikowi, który następnie wywołuje <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metodę i wykonuje transformację.  
  
 Te problemy z zabezpieczeniami można wyeliminować przez niewłączanie skryptów lub funkcji, `document()` chyba że arkusz stylów pochodzi z zaufanego źródła i nie akceptuje <xref:System.Xml.Xsl.XslCompiledTransform> obiektów, arkuszy stylów XSLT ani danych źródłowych XML z niezaufanego źródła.  
  
   
  
## Examples  
 Poniższy przykład wykonuje przekształcenie i wyjście do pliku.  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 W przykładzie są stosowane następujące dwa pliki wejściowe:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe><see cref="T:System.Xml.Xsl.XslCompiledTransform" /> Obiekt jest bezpieczny wątkowo po jego załadowaniu. Innymi słowy po <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> pomyślnym zakończeniu <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> metody Metoda może być wywoływana jednocześnie z wielu wątków.  
  
Jeśli metoda jest wywoływana ponownie w jednym wątku, <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> podczas gdy metoda jest wywoływana <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> w innym wątku, obiekt kończy wykonywanie <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> wywołania, Kontynuując używanie starego stanu. <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> Nowy stan jest używany, gdy metoda <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> zostanie pomyślnie ukończona.  
  
 <block subset="none" type="note"><para>  
 Metoda <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> nie jest bezpieczna wątkowo, gdy jest wywoływana jednocześnie z wielu wątków.  
  
</para></block></threadsafe>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
    <altmember cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
    <altmember cref="N:System.Xml" />
    <related type="Article" href="https://msdn.microsoft.com/library/202f8820-224c-494f-b61e-cd127eac6e03">Przekształcenia XSLT</related>
    <related type="Article" href="~/docs/standard/data/xml/index.md">Dokumenty i dane XML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> klasy.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform (bool enableDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDebug As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform(bool enableDebug);" />
      <MemberSignature Language="F#" Value="new System.Xml.Xsl.XslCompiledTransform : bool -&gt; System.Xml.Xsl.XslCompiledTransform" Usage="new System.Xml.Xsl.XslCompiledTransform enableDebug" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="enableDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDebug"><see langword="true" />Aby wygenerować informacje debugowania; w <see langword="false" />przeciwnym razie. Ustawienie tej opcji <see langword="true" /> na wartość umożliwia debugowanie arkusza stylów przy użyciu debugera Microsoft Visual Studio.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> klasy z określonym ustawieniem debugowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby można było wkroczyć kod i debugować arkusz stylów, muszą zostać spełnione następujące warunki:  
  
-   Parametr jest ustawiony na `true`. `enableDebug`  
  
-   Arkusz stylów jest przesyłany do <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> metody jako identyfikator URI lub implementacja <xref:System.Xml.XmlReader> klasy, która implementuje <xref:System.Xml.IXmlLineInfo> interfejs. Interfejs jest implementowany we wszystkich obiektach analizy <xref:System.Xml.XmlReader> tekstu. <xref:System.Xml.IXmlLineInfo>  
  
     Innymi słowy, jeśli arkusz stylów jest ładowany <xref:System.Xml.XPath.IXPathNavigable> przy użyciu obiektu, takiego <xref:System.Xml.XmlDocument> jak lub <xref:System.Xml.XPath.XPathDocument>, <xref:System.Xml.IXmlLineInfo> lub <xref:System.Xml.XmlReader> implementacji, która nie implementuje interfejsu, nie można debugować arkusza stylów.  
  
-   <xref:System.Xml.XmlUrlResolver> <xref:System.Xml.XmlResolver> <xref:System.Xml.Xsl.XslCompiledTransform> <xref:System.Xml.XmlResolver> Używany do ładowania arkusza stylów jest oparty na plikach, na przykład (jest to ustawienie domyślne używane przez klasę). <xref:System.Xml.XmlResolver>  
  
-   Arkusz stylów znajduje się na komputerze lokalnym lub w intranecie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak włączyć debugowanie XSLT.  
  
 [!code-csharp[XslCompiledTransform.Load#10](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#10)]
 [!code-vb[XslCompiledTransform.Load#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="CompileToType">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerErrorCollection CompileToType(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver, bool debug, class System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerErrorCollection ^ CompileToType(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver, bool debug, System::Reflection::Emit::TypeBuilder ^ typeBuilder, System::String ^ scriptAssemblyPath);" />
      <MemberSignature Language="F#" Value="static member CompileToType : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver * bool * System.Reflection.Emit.TypeBuilder * string -&gt; System.CodeDom.Compiler.CompilerErrorCollection" Usage="System.Xml.Xsl.XslCompiledTransform.CompileToType (stylesheet, settings, stylesheetResolver, debug, typeBuilder, scriptAssemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="debug" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="typeBuilder" Type="System.Reflection.Emit.TypeBuilder" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="scriptAssemblyPath" Type="System.String" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Pozycja <see cref="T:System.Xml.XmlReader" /> umieszczona na początku arkusza stylów do skompilowania.</param>
        <param name="settings"><see cref="T:System.Xml.Xsl.XsltSettings" /> Do zastosowania w arkuszu stylów. <see langword="null" /> W<see cref="P:System.Xml.Xsl.XsltSettings.Default" /> takim przypadku zostanie zastosowane.</param>
        <param name="stylesheetResolver">Służy do rozpoznawania modułów arkusza stylów <see langword="xsl:import" /> , do których odwołuje się element i <see langword="xsl:include" />. <see cref="T:System.Xml.XmlResolver" /> <see langword="null" />W takim przypadku zasoby zewnętrzne nie zostaną rozwiązane.</param>
        <param name="debug">Ustawienie tej <see langword="true" /> opcji umożliwia debugowanie arkusza stylów za pomocą debugera.</param>
        <param name="typeBuilder"><see cref="T:System.Reflection.Emit.TypeBuilder" /> Używany do kompilowania arkusza stylów. Podane TypeBuilder są używane do generowania typu wyników.</param>
        <param name="scriptAssemblyPath">Ścieżka podstawowa dla zestawów wygenerowanych dla <see langword="msxsl:script" /> elementów. Jeśli generowany jest tylko jeden zestaw skryptów, ten parametr określa ścieżkę dla tego zestawu. W przypadku wielu zestawów skryptów do nazwy pliku zostanie dołączony sufiks odróżniający, aby zapewnić unikatowość nazw zestawów.</param>
        <summary>Kompiluje arkusz stylów XSLT do określonego typu.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> Obiekt zawierający błędy kompilatora i ostrzeżenia wskazujące wyniki kompilacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Narzędzie to otoka <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> otaczająca metodę. `xsltc.exe` Kompilowanie arkuszy stylów z `xsltc.exe` zastosowaniem będzie spełniało wymagania większości aplikacji, które wykorzystują skompilowane arkusze stylów. <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> Metoda powinna być używana podczas kompilowania niestandardowych narzędzi kompilacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kompiluje arkusz stylów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chociaż ogólna <xref:System.Xml.Xsl.XslCompiledTransform> wydajność klasy jest lepsza <xref:System.Xml.Xsl.XslTransform> niż Klasa <xref:System.Xml.Xsl.XslCompiledTransform> , <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> metoda klasy może być wykonywana wolniej niż <xref:System.Xml.Xsl.XslTransform.Load%2A> Metoda <xref:System.Xml.Xsl.XslTransform> klasy przy pierwszym jest wywoływana w transformacji. Jest to spowodowane tym, że plik XSLT musi być skompilowany przed załadowaniem. Aby uzyskać więcej informacji, zobacz następujący wpis w blogu: [XslCompiledTransform wolniej niż XslTransform?](https://go.microsoft.com/fwlink/?LinkId=130590)  
  
> [!NOTE]
>  Istnieją różnice między przedziałami XSLT skompilowanymi w trybie debugowania i wersją XSLT skompilowaną w trybie wydania. W niektórych sytuacjach arkusze stylów skompilowane w trybie debugowania nie będą zgłaszać błędów <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>w trakcie, ale później <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>zakończą się niepowodzeniem. Ten sam arkusz stylów skompilowany w trybie zwalniania zakończy <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>się niepowodzeniem. Przykładem takiego zachowania jest to, że zmienna, która nie jest typem zestawu węzłów, jest przypisywana do wyrażenia, w którym jest wymagany zestaw węzłów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslCompiledTransform.Load stylesheetUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">Identyfikator URI arkusza stylów.</param>
        <summary>Ładuje i kompiluje arkusz stylów znajdujący się pod określonym identyfikatorem URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.XslCompiledTransform> Klasa obsługuje składnię XSLT 1,0. Arkusz stylów XSLT musi używać `http://www.w3.org/1999/XSL/Transform` przestrzeni nazw.  
  
 Ta metoda ma następujące zachowanie:  
  
-   Za pomocą poświadczeń użytkownika nie można rozpoznać identyfikatora URI arkusza stylów i przetwarzać dowolnego `xsl:import` elementu lub `xsl:include`. <xref:System.Xml.XmlUrlResolver>  
  
-   <xref:System.Xml.XmlReader> Z ustawieniami domyślnymi służy do ładowania arkusza stylów. Przetwarzanie DTD jest wyłączone w <xref:System.Xml.XmlReader>. Jeśli wymagasz przetwarzania DTD, Utwórz <xref:System.Xml.XmlReader> za pomocą tej funkcji, a następnie przekaż ją <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> do metody.  
  
-   `document()` Funkcja jest wyłączona.  
  
-   Skrypty osadzone nie są obsługiwane.  
  
 Możesz użyć <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> przeciążenia, aby <xref:System.Xml.XmlResolver> określić z wymaganymi poświadczeniami uwierzytelniania lub określić różne ustawienia XSLT.  
  
   
  
## Examples  
 Poniższy przykład wykonuje przekształcenie i wyjście do pliku.  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stylesheetUri" /> Wartość to<see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Arkusz stylów zawiera błąd.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Nie można znaleźć arkusza stylów.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="stylesheetUri" /> Wartość zawiera nazwę pliku lub katalogu, którego nie można znaleźć.</exception>
        <exception cref="T:System.Net.WebException">Nie można rozpoznać wartości. <paramref name="stylesheetUri" />  
  
—lub— 
Wystąpił błąd podczas przetwarzania żądania.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="stylesheetUri" />nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.Xml.XmlException">Wystąpił błąd analizy podczas ładowania arkusza stylów.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Type compiledStylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Type compiledStylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (compiledStylesheet As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Type ^ compiledStylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : Type -&gt; unit" Usage="xslCompiledTransform.Load compiledStylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compiledStylesheet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="compiledStylesheet">Nazwa klasy zawierającej skompilowany arkusz stylów.  
  
 Jest to zazwyczaj nazwa arkusza stylów. O ile nie określono inaczej, narzędzie xsltc. exe używa nazwy arkusza stylów dla klas i nazw zestawów.</param>
        <summary>Ładuje skompilowany arkusz stylów, który został utworzony przy użyciu <see href="https://docs.microsoft.com/dotnet/standard/data/xml/xslt-compiler-xsltc-exe">kompilatora XSLT (xsltc. exe)</see>.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Narzędzie xsltc. exe służy do kompilowania arkuszy stylów i generowania zestawów z arkuszy stylów. <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> Metoda ładuje skompilowany arkusz stylów z zestawu.  
  
> [!NOTE]
>  Musisz również dołączyć zestaw XSLT jako odwołanie w aplikacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak załadować skompilowany arkusz stylów z zestawu XSLT. W przykładzie przyjęto założenie, że narzędzie xsltc. exe zostało użyte do utworzenia zestawu o nazwie bookOrders. dll z klasą o nazwie bookOrders.  
  
> [!NOTE]
>  Należy odwołać się do zestawu XSLT podczas kompilowania kodu. Na przykład `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.  
  
```csharp  
// Load the type of the class.  
XslCompiledTransform xslt = new XslCompiledTransform();  
xslt.Load(typeof(bookOrders));  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/672a5ac8-8305-4d28-ba10-11089c2c0924">Narzędzie zestawu XSLT (xsltc. exe)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/76ee440b-d134-4f8f-8262-b917ad6dcbf6">Instrukcje: Wykonaj transformację XSLT przy użyciu zestawu</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><see cref="T:System.Xml.XmlReader" /> Zawierający arkusz stylów.</param>
        <summary>Kompiluje arkusz stylów zawarty w <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.XslCompiledTransform> Klasa obsługuje składnię XSLT 1,0. Arkusz stylów XSLT musi używać `http://www.w3.org/1999/XSL/Transform` przestrzeni nazw.  
  
 Arkusz stylów jest ładowany z bieżącego węzła <xref:System.Xml.XmlReader> przez wszystkie jego elementy podrzędne. Dzięki temu można użyć części dokumentu jako arkusza stylów. Po zakończeniu <xref:System.Xml.XmlReader> metody, jest ona umieszczana w następnym węźle po zakończeniu arkusza stylów. <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> Jeśli koniec dokumentu zostanie osiągnięty, <xref:System.Xml.XmlReader> zostanie umieszczony na końcu pliku (EOF).  
  
 Ta metoda ma następujące zachowanie:  
  
-   Bez poświadczeń użytkownika służy do `xsl:import` przetwarzania elementów lub `xsl:include`. <xref:System.Xml.XmlUrlResolver>  
  
-   `document()` Funkcja jest wyłączona.  
  
-   Skrypty osadzone nie są obsługiwane.  
  
 Możesz użyć <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> przeciążenia, aby <xref:System.Xml.XmlResolver> określić z wymaganymi poświadczeniami uwierzytelniania lub określić różne ustawienia XSLT.  
  
   
  
## Examples  
 Poniższy przykład ładuje arkusz stylów zawarty w <xref:System.Xml.XmlReader> obiekcie.  
  
 [!code-csharp[XslCompiledTransform.Load#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Load#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stylesheet" /> Wartość to<see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Arkusz stylów zawiera błąd.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Obiekt implementujący <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejs. W środowisku Microsoft .NETm może to być <see cref="T:System.Xml.XmlNode" /> ( <see cref="T:System.Xml.XmlDocument" />zazwyczaj) lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający arkusz stylów.</param>
        <summary>Kompiluje arkusz stylów zawarty w <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiekcie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.XslCompiledTransform> Klasa obsługuje składnię XSLT 1,0. Arkusz stylów XSLT musi używać `http://www.w3.org/1999/XSL/Transform` przestrzeni nazw.  
  
 Ta metoda ma następujące zachowanie:  
  
-   Bez poświadczeń użytkownika służy do `xsl:import` przetwarzania elementów lub `xsl:include`. <xref:System.Xml.XmlUrlResolver>  
  
-   `document()` Funkcja jest wyłączona.  
  
-   Skrypty osadzone nie są obsługiwane.  
  
 Możesz użyć <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> przeciążenia, aby <xref:System.Xml.XmlResolver> określić z wymaganymi poświadczeniami uwierzytelniania lub określić różne ustawienia XSLT.  
  
   
  
## Examples  
 Poniższy przykład ładuje arkusz stylów zawarty w <xref:System.Xml.XPath.XPathDocument> obiekcie.  
  
 [!code-csharp[XslCompiledTransform.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stylesheet" /> Wartość to<see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Arkusz stylów zawiera błąd.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Reflection.MethodInfo executeMethod, unsigned int8[] queryData, class System.Type[] earlyBoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (executeMethod As MethodInfo, queryData As Byte(), earlyBoundTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Reflection::MethodInfo ^ executeMethod, cli::array &lt;System::Byte&gt; ^ queryData, cli::array &lt;Type ^&gt; ^ earlyBoundTypes);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Reflection.MethodInfo * byte[] * Type[] -&gt; unit" Usage="xslCompiledTransform.Load (executeMethod, queryData, earlyBoundTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="queryData" Type="System.Byte[]" />
        <Parameter Name="earlyBoundTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="executeMethod">Obiekt reprezentujący metodę Execute wygenerowaną przez kompilator skompilowanego arkusza stylów. <c></c> <see cref="T:System.Reflection.MethodInfo" /></param>
        <param name="queryData">Tablica bajtów serializowanych struktur danych w polu <c>staticData</c> w skompilowanym arkuszu stylów, zgodnie z <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> wygenerowanym przez metodę.</param>
        <param name="earlyBoundTypes">Tablica typów przechowywanych w polu <c>ebTypes</c> generowanego przez kompilator w skompilowanym arkuszu stylów.</param>
        <summary>Ładuje metodę z arkusza stylów skompilowanego za pomocą <see langword="XSLTC.exe" /> narzędzia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda akceptuje skompilowany arkusz stylów w postaci <xref:System.Reflection.MethodInfo> obiektu, tablicy bajtowej i tablicy typów. <xref:System.Reflection.Emit.DynamicMethod>obiekty mogą być używane do zezwalania, aby skompilowane metody arkusza stylów zostały odrzucone, <xref:System.Xml.Xsl.XslCompiledTransform> gdy obiekt zostanie odrzucony.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> do załadowania skompilowanego arkusza stylów. Transformacja zmniejsza wartość `Price` elementu o dziesięć procent.  
  
 [!code-csharp[XsltDynamicMethodLoad#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/XsltDynamicMethodLoad.cs#1)]
 [!code-vb[XsltDynamicMethodLoad#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltDynamicMethodLoad/VB/XsltDynamicMethodLoad.vb#1)]  
  
> [!NOTE]
>  Zestaw "Transform" używany w tym przykładzie został utworzony za pomocą narzędzia xsltc. exe. Aby uzyskać szczegółowe informacje na temat korzystania z tego narzędzia wiersza [polecenia, zobacz How to: Wykonaj transformację XSLT przy użyciu zestawu](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md).  
  
 Poprzedni przykład kodu używa następującego przekształcenia:  
 [!code-xml[XsltDynamicMethodLoad-xslt](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/Transform.xslt)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheetUri, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">Identyfikator URI arkusza stylów.</param>
        <param name="settings"><see cref="T:System.Xml.Xsl.XsltSettings" /> Do zastosowania do arkusza stylów. Jeśli tak jest <see langword="null" /> <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> , ustawienie jest stosowane.</param>
        <param name="stylesheetResolver">Służy do rozpoznawania identyfikatora URI arkusza stylów i arkuszy stylów, do których odwołuje się <c>Import</c> XSLT i dołączanie elementów. <c></c> <see cref="T:System.Xml.XmlResolver" /></param>
        <summary>Ładuje i kompiluje arkusz stylów XSLT określony przez identyfikator URI. Rozpoznaje wszystkie elementy <c>importowania</c> lub dołączania XSLT oraz ustawienia XSLT określają uprawnienia do arkusza stylów. <c></c> <see cref="T:System.Xml.XmlResolver" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.XslCompiledTransform> Klasa obsługuje składnię XSLT 1,0. Arkusz stylów XSLT musi używać `http://www.w3.org/1999/XSL/Transform` przestrzeni nazw.  
  
 <xref:System.Xml.XmlReader> Z ustawieniami domyślnymi służy do ładowania arkusza stylów. Przetwarzanie DTD jest wyłączone w <xref:System.Xml.XmlReader>. Jeśli wymagasz przetwarzania DTD, Utwórz <xref:System.Xml.XmlReader> za pomocą tej funkcji, a następnie przekaż ją <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> do metody.  
  
   
  
## Examples  
 Poniższy przykład ładuje arkusz stylów, który jest przechowywany w zasobów sieciowych. <xref:System.Xml.XmlSecureResolver> Obiekt określa poświadczenia niezbędne do uzyskania dostępu do arkusza stylów.  
  
 [!code-csharp[XslCompiledTransform.Load#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Load#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="stylesheetUri" /> <paramref name="stylesheetResolver" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Arkusz stylów zawiera błąd.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Nie można znaleźć arkusza stylów.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="stylesheetUri" /> Wartość zawiera nazwę pliku lub katalogu, którego nie można znaleźć.</exception>
        <exception cref="T:System.Net.WebException">Nie można rozpoznać wartości. <paramref name="stylesheetUri" />  
  
—lub— 
Wystąpił błąd podczas przetwarzania żądania.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="stylesheetUri" />nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.Xml.XmlException">Wystąpił błąd analizy podczas ładowania arkusza stylów.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><see cref="T:System.Xml.XmlReader" /> Zawierający arkusz stylów.</param>
        <param name="settings"><see cref="T:System.Xml.Xsl.XsltSettings" /> Do zastosowania do arkusza stylów. Jeśli tak jest <see langword="null" /> <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> , ustawienie jest stosowane.</param>
        <param name="stylesheetResolver">Służy do rozwiązywania wszystkich arkuszy stylów, do których odwołuje się <c>Import</c> XSLT i dołączanie elementów. <c></c> <see cref="T:System.Xml.XmlResolver" /> <see langword="null" />W takim przypadku zasoby zewnętrzne nie są rozwiązywane.</param>
        <summary>Kompiluje arkusz stylów XSLT zawarty w <see cref="T:System.Xml.XmlReader" />. Rozpoznaje wszystkie elementy <c>importowania</c> lub dołączania XSLT oraz ustawienia XSLT określają uprawnienia do arkusza stylów. <c></c> <see cref="T:System.Xml.XmlResolver" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.XslCompiledTransform> Klasa obsługuje składnię XSLT 1,0. Arkusz stylów XSLT musi używać `http://www.w3.org/1999/XSL/Transform` przestrzeni nazw.  
  
 Arkusz stylów jest ładowany z bieżącego węzła <xref:System.Xml.XmlReader> przez wszystkie jego elementy podrzędne. Dzięki temu można użyć części dokumentu jako arkusza stylów. Po zakończeniu <xref:System.Xml.XmlReader> metody, jest ona umieszczana w następnym węźle po zakończeniu arkusza stylów. <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> Jeśli koniec dokumentu zostanie osiągnięty, <xref:System.Xml.XmlReader> zostanie umieszczony na końcu pliku (EOF).  
  
   
  
## Examples  
 Poniższy przykład ładuje arkusz stylów i umożliwia obsługę skryptów XSLT.  
  
 [!code-csharp[XslCompiledTransform.Load#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Load#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stylesheet" /> Wartość to<see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Arkusz stylów zawiera błąd.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Obiekt implementujący <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejs. W środowisku Microsoft .NETm może to być <see cref="T:System.Xml.XmlNode" /> ( <see cref="T:System.Xml.XmlDocument" />zazwyczaj) lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający arkusz stylów.</param>
        <param name="settings"><see cref="T:System.Xml.Xsl.XsltSettings" /> Do zastosowania do arkusza stylów. Jeśli tak jest <see langword="null" /> <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> , ustawienie jest stosowane.</param>
        <param name="stylesheetResolver">Służy do rozwiązywania wszystkich arkuszy stylów, do których odwołuje się <c>Import</c> XSLT i dołączanie elementów. <c></c> <see cref="T:System.Xml.XmlResolver" /> <see langword="null" />W takim przypadku zasoby zewnętrzne nie są rozwiązywane.</param>
        <summary>Kompiluje arkusz stylów XSLT zawarty w <see cref="T:System.Xml.XPath.IXPathNavigable" />. Rozpoznaje wszystkie elementy <c>importowania</c> lub dołączania XSLT oraz ustawienia XSLT określają uprawnienia do arkusza stylów. <c></c> <see cref="T:System.Xml.XmlResolver" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.XslCompiledTransform> Klasa obsługuje składnię XSLT 1,0. Arkusz stylów XSLT musi używać `http://www.w3.org/1999/XSL/Transform` przestrzeni nazw.  
  
   
  
## Examples  
 Poniższy przykład ładuje arkusz stylów. Obiekt zawiera poświadczenia niezbędne do uzyskania dostępu do dowolnych `import` lub `include` elementów znalezionych w arkuszu stylów. <xref:System.Xml.XmlSecureResolver>  
  
 [!code-csharp[XslCompiledTransform.Load#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Load#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stylesheet" /> Wartość to<see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Arkusz stylów zawiera błąd.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="OutputSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings OutputSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings OutputSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSettings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlWriterSettings ^ OutputSettings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputSettings : System.Xml.XmlWriterSettings" Usage="System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który zawiera informacje wyjściowe pochodzące z elementu <c>xsl: output</c> arkusza stylów. <see cref="T:System.Xml.XmlWriterSettings" /></summary>
        <value>Obiekt tylko <see cref="T:System.Xml.XmlWriterSettings" /> do odczytu, który zawiera informacje wyjściowe pochodzące z elementu <c>xsl: output</c> w arkuszu stylów. Ta wartość może być <see langword="null" />równa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wypełniana po pomyślnym wywołaniu <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> metody. Zawiera informacje pochodzące z `xsl:output` elementu skompilowanego arkusza stylów. Ten <xref:System.Xml.XmlWriterSettings> obiekt może zostać przesłany <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> do metody w celu utworzenia <xref:System.Xml.XmlWriter> obiektu, do którego chcesz wykonać wyjście.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> jak użyć właściwości, aby <xref:System.Xml.XmlWriter> utworzyć obiekt, który zapisuje tekst w konsoli programu.  
  
 [!code-csharp[XslCompiledTransform.OutputSettings#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.OutputSettings/CS/xslt_OutputSettings.cs#1)]
 [!code-vb[XslCompiledTransform.OutputSettings#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.OutputSettings/VB/xslt_OutputSettings.vb#1)]  
  
 W przykładzie zastosowano `books.xml` pliki `outputConsole.xsl` i jako dane wejściowe.  
  
 `books.xml`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#2](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/books.xml#2)]  
  
 `outputConsole.xsl`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#3](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/outputConsole.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="TemporaryFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TemporaryFiles" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TemporaryFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemporaryFiles : System.CodeDom.Compiler.TempFileCollection" Usage="System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, który zawiera pliki tymczasowe wygenerowane na dysku po pomyślnym wywołaniu <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> metody. <see cref="T:System.CodeDom.Compiler.TempFileCollection" /></summary>
        <value><see cref="T:System.CodeDom.Compiler.TempFileCollection" /> Zawiera pliki tymczasowe wygenerowane na dysku. Ta wartość jest <see langword="null" /> , <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> Jeśli metoda nie została pomyślnie wywołana lub jeśli debugowanie nie zostało włączone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa pliki, które zostały wygenerowane podczas przetwarzania XSLT. Pliki są umieszczane w katalogu tymczasowym (określony przez zmienną środowiskową% TEMP%), po zakończeniu przetwarzania XSLT można usunąć te pliki.  
  
   
  
## Examples  
 Poniższy przykład zapisuje nazwy plików tymczasowych w konsoli programu.  
  
> [!NOTE]
>  Pliki tymczasowe są tworzone tylko w przypadku ładowania arkuszy stylów \<z msxsl: skrypt > bloków.  
  
 [!code-csharp[XslCompiledTransform.Transform#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Transform#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wykonuje transformację XSLT.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Istnieją różnice między przedziałami XSLT skompilowanymi w trybie debugowania i wersją XSLT skompilowaną w trybie wydania. W niektórych sytuacjach arkusze stylów skompilowane w trybie debugowania nie będą zgłaszać błędów <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>w trakcie, ale później <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>zakończą się niepowodzeniem. Ten sam arkusz stylów skompilowany w trybie zwalniania zakończy <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>się niepowodzeniem. Przykładem takiego zachowania jest to, że zmienna, która nie jest typem zestawu węzłów, jest przypisywana do wyrażenia, w którym jest wymagany zestaw węzłów.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, string resultsFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, string resultsFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, resultsFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::String ^ resultsFile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, resultsFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="resultsFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri">Identyfikator URI dokumentu wejściowego.</param>
        <param name="resultsFile">Identyfikator URI pliku wyjściowego.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez identyfikator URI i wyprowadza wyniki do pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa ustawienia domyślnego <xref:System.Xml.XmlUrlResolver> bez poświadczeń użytkownika, aby rozpoznać dokumenty wejściowe i wyjściowe. Jeśli którykolwiek z tych zasobów znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelniania, należy użyć przeciążenia, które <xref:System.Xml.XmlResolver> przyjmuje jako jeden z argumentów i <xref:System.Xml.XmlResolver> określić z wymaganymi poświadczeniami.  
  
 <xref:System.Xml.XmlReader> Z ustawieniami domyślnymi służy do ładowania dokumentu wejściowego. Przetwarzanie DTD jest wyłączone w <xref:System.Xml.XmlReader>. Jeśli wymagasz przetwarzania DTD, Utwórz <xref:System.Xml.XmlReader> za pomocą tej funkcji, a następnie przekaż ją <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> do metody.  
  
   
  
## Examples  
 Poniższy przykład wykonuje przekształcenie i wyjście do pliku.  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 W przykładzie są stosowane następujące dwa pliki wejściowe:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputUri" /> <paramref name="resultsFile" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Nie można znaleźć dokumentu wejściowego.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Wartość <paramref name="inputUri" /> lub<paramref name="resultsFile" /> nie można odnaleźć nazwy pliku lub katalogu.</exception>
        <exception cref="T:System.Net.WebException">Nie można <paramref name="resultsFile" /> rozpoznać wartości lub.<paramref name="inputUri" />  
  
—lub— 
Wystąpił błąd podczas przetwarzania żądania</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" />lub <paramref name="resultsFile" /> nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.Xml.XmlException">Wystąpił błąd analizy podczas ładowania dokumentu wejściowego.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">Identyfikator URI dokumentu wejściowego.</param>
        <param name="results">, <see cref="T:System.Xml.XmlWriter" /> Do którego chcesz utworzyć dane wyjściowe.  
  
Jeśli arkusz stylów zawiera element <c>xsl: output</c> , należy utworzyć <see cref="T:System.Xml.XmlWriter" /> <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt przy użyciu obiektu zwróconego z <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości. Daje to pewność, <see cref="T:System.Xml.XmlWriter" /> że ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez identyfikator URI i wyprowadza wyniki do <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda korzysta z wartości <xref:System.Xml.XmlUrlResolver> domyślnej bez poświadczeń użytkownika w celu rozpoznania dokumentu wejściowego i wszystkich wystąpień funkcji `document()` XSLT znalezionych w arkuszu stylów. Jeśli którykolwiek z tych zasobów znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelniania, należy użyć przeciążenia, które <xref:System.Xml.XmlResolver> przyjmuje jako jeden z argumentów i <xref:System.Xml.XmlResolver> określić z wymaganymi poświadczeniami.  
  
 <xref:System.Xml.XmlReader> Z ustawieniami domyślnymi służy do ładowania dokumentu wejściowego. Przetwarzanie DTD jest wyłączone w <xref:System.Xml.XmlReader>. Jeśli wymagasz przetwarzania DTD, Utwórz <xref:System.Xml.XmlReader> za pomocą tej funkcji, a następnie przekaż ją <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> do metody.  
  
 Ta metoda nie obsługuje `xsl:strip-space` elementu. Jeśli skompilowany arkusz stylów zawiera `xsl:strip-space` element, należy <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> użyć przeciążenia, które przyjmuje <xref:System.Xml.XmlReader> jako argument wejściowy.  
  
   
  
## Examples  
 Poniższy przykład wykonuje transformację XSLT i wyjście do <xref:System.Xml.XmlWriter> obiektu.  
  
 [!code-csharp[XslCompiledTransform.Transform#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Transform#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputUri" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="inputUri" /> Wartość zawiera nazwę pliku lub katalogu nie może zostać znaleziona.</exception>
        <exception cref="T:System.Net.WebException">Nie można rozpoznać wartości. <paramref name="inputUri" />  
  
—lub— 
Wystąpił błąd podczas przetwarzania żądania.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" />nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.Xml.XmlException">Wystąpił błąd analizy podczas ładowania dokumentu wejściowego.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><see cref="T:System.Xml.XmlReader" /> Zawierający dokument wejściowy.</param>
        <param name="results">, <see cref="T:System.Xml.XmlWriter" /> Do którego chcesz utworzyć dane wyjściowe.  
  
Jeśli arkusz stylów zawiera element <c>xsl: output</c> , należy utworzyć <see cref="T:System.Xml.XmlWriter" /> <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt przy użyciu obiektu zwróconego z <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości. Daje to pewność, <see cref="T:System.Xml.XmlWriter" /> że ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XmlReader" /> obiekt i wyprowadza wyniki <see cref="T:System.Xml.XmlWriter" />do.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli funkcja XSLT `document()` jest włączona, jest rozpoznawana <xref:System.Xml.XmlUrlResolver> przy użyciu poświadczeń bez użytkownika. Jeśli zasób zewnętrzny znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelnienia, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z argumentów i <xref:System.Xml.XmlResolver> podaj z wymaganymi poświadczeniami.  
  
   
  
## Examples  
 Poniższy przykład przekształca pierwszą książkę w pliku Books. XML.  
  
 [!code-csharp[XslCompiledTransform.Transform#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Transform#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Obiekt implementujący <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejs. W środowisku Microsoft .NETm może to być <see cref="T:System.Xml.XmlNode" /> ( <see cref="T:System.Xml.XmlDocument" />zazwyczaj) lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający dane do przekształcenia.</param>
        <param name="results">, <see cref="T:System.Xml.XmlWriter" /> Do którego chcesz utworzyć dane wyjściowe.  
  
Jeśli arkusz stylów zawiera element <c>xsl: output</c> , należy utworzyć <see cref="T:System.Xml.XmlWriter" /> <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt przy użyciu obiektu zwróconego z <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości. Daje to pewność, <see cref="T:System.Xml.XmlWriter" /> że ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiekt i wyprowadza wyniki <see cref="T:System.Xml.XmlWriter" />do.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli funkcja XSLT `document()` jest włączona, jest rozpoznawana <xref:System.Xml.XmlUrlResolver> przy użyciu poświadczeń bez użytkownika. Jeśli zasób zewnętrzny znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelnienia, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z argumentów i <xref:System.Xml.XmlResolver> podaj z wymaganymi poświadczeniami.  
  
 Ta metoda nie obsługuje `xsl:strip-space` elementu. Jeśli skompilowany arkusz stylów zawiera `xsl:strip-space` element, należy <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> użyć przeciążenia, które przyjmuje <xref:System.Xml.XmlReader> jako argument wejściowy.  
  
 Interfejs jest implementowany <xref:System.Xml.XmlNode> w klasach <xref:System.Xml.XPath.XPathDocument>i. <xref:System.Xml.XPath.IXPathNavigable> Klasy te reprezentują pamięć podręczną danych XML.  
  
-   <xref:System.Xml.XmlNode> Klasa jest oparta na Document Object Model W3C (dom) i oferuje możliwości edycji.  
  
-   <xref:System.Xml.XPath.XPathDocument> Klasa to magazyn danych tylko do odczytu oparty na modelu danych XPath. <xref:System.Xml.XPath.XPathDocument>jest zalecaną klasą przetwarzania XSLT. Zapewnia większą wydajność w porównaniu z <xref:System.Xml.XmlNode> klasą.  
  
 Przekształcenia są stosowane do dokumentu jako całości. Innymi słowy, jeśli przejdziesz do węzła innego niż węzeł główny dokumentu, nie uniemożliwi to proces przekształcania uzyskuje dostęp do wszystkich węzłów w załadowanym dokumencie. Aby przekształcić fragment węzła, należy utworzyć obiekt zawierający tylko fragment węzła i przekazać go do <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metody. Aby uzyskać więcej informacji, zobacz [jak: Przekształcanie fragmentu](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)węzła.  
  
   
  
## Examples  
 Poniższy przykład wykonuje transformację XSLT i wyjście do <xref:System.Xml.XmlWriter> obiektu.  
  
 [!code-csharp[XslCompiledTransform.Transform#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Transform#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputUri">Identyfikator URI dokumentu wejściowego.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">Strumień, do którego chcesz utworzyć dane wyjściowe.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez identyfikator URI i wyprowadza wyniki do strumienia. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zapewnia dodatkowe argumenty czasu wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda korzysta z wartości <xref:System.Xml.XmlUrlResolver> domyślnej bez poświadczeń użytkownika w celu rozpoznania dokumentu wejściowego i wszystkich wystąpień funkcji `document()` XSLT znalezionych w arkuszu stylów. Jeśli którykolwiek z tych zasobów znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelniania, należy użyć przeciążenia, które <xref:System.Xml.XmlResolver> przyjmuje jako jeden z argumentów i <xref:System.Xml.XmlResolver> określić z wymaganymi poświadczeniami.  
  
 <xref:System.Xml.XmlReader> Z ustawieniami domyślnymi służy do ładowania dokumentu wejściowego. Przetwarzanie DTD jest wyłączone w <xref:System.Xml.XmlReader>. Jeśli wymagasz przetwarzania DTD, Utwórz <xref:System.Xml.XmlReader> za pomocą tej funkcji, a następnie przekaż ją <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> do metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputUri" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="inputUri" /> Wartość zawiera nazwę pliku lub katalogu nie może zostać znaleziona.</exception>
        <exception cref="T:System.Net.WebException">Nie można rozpoznać wartości. <paramref name="inputUri" />  
  
—lub— 
Wystąpił błąd podczas przetwarzania żądania</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" />nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.Xml.XmlException">Wystąpił błąd analizy podczas ładowania dokumentu wejściowego.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">Identyfikator URI dokumentu wejściowego.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">, <see cref="T:System.IO.TextWriter" /> Do którego chcesz utworzyć dane wyjściowe.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez identyfikator URI i wyprowadza wyniki do <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda korzysta z wartości <xref:System.Xml.XmlUrlResolver> domyślnej bez poświadczeń użytkownika w celu rozpoznania dokumentu wejściowego i wszystkich wystąpień funkcji `document()` XSLT znalezionych w arkuszu stylów. Jeśli którykolwiek z tych zasobów znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelniania, należy użyć przeciążenia, które <xref:System.Xml.XmlResolver> przyjmuje jako jeden z argumentów i <xref:System.Xml.XmlResolver> określić z wymaganymi poświadczeniami.  
  
 <xref:System.Xml.XmlReader> Z ustawieniami domyślnymi służy do ładowania dokumentu wejściowego. Przetwarzanie DTD jest wyłączone w <xref:System.Xml.XmlReader>. Jeśli wymagasz przetwarzania DTD, Utwórz <xref:System.Xml.XmlReader> za pomocą tej funkcji, a następnie przekaż ją <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> do metody.  
  
   
  
## Examples  
 Poniższy przykład wykonuje transformację XSLT i wyprowadza ciąg.  
  
 [!code-csharp[XslCompiledTransform.Transform#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Transform#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputUri" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="inputUri" /> Wartość zawiera nazwę pliku lub katalogu nie może zostać znaleziona.</exception>
        <exception cref="T:System.Net.WebException">Nie można rozpoznać wartości. <paramref name="inputUri" />  
  
—lub— 
Wystąpił błąd podczas przetwarzania żądania</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" />nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.Xml.XmlException">Wystąpił błąd analizy podczas ładowania dokumentu wejściowego.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">Identyfikator URI dokumentu wejściowego.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">, <see cref="T:System.Xml.XmlWriter" /> Do którego chcesz utworzyć dane wyjściowe.  
  
Jeśli arkusz stylów zawiera element <c>xsl: output</c> , należy utworzyć <see cref="T:System.Xml.XmlWriter" /> <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt przy użyciu obiektu zwróconego z <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości. Daje to pewność, <see cref="T:System.Xml.XmlWriter" /> że ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez identyfikator URI i wyprowadza wyniki do <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zapewnia dodatkowe argumenty czasu wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda korzysta z wartości <xref:System.Xml.XmlUrlResolver> domyślnej bez poświadczeń użytkownika w celu rozpoznania dokumentu wejściowego i wszystkich wystąpień funkcji `document()` XSLT znalezionych w arkuszu stylów. Jeśli którykolwiek z tych zasobów znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelniania, należy użyć przeciążenia, które <xref:System.Xml.XmlResolver> przyjmuje jako jeden z argumentów i <xref:System.Xml.XmlResolver> określić z wymaganymi poświadczeniami.  
  
 <xref:System.Xml.XmlReader> Z ustawieniami domyślnymi służy do ładowania dokumentu wejściowego. Przetwarzanie DTD jest wyłączone w <xref:System.Xml.XmlReader>. Jeśli wymagasz przetwarzania DTD, Utwórz <xref:System.Xml.XmlReader> za pomocą tej funkcji, a następnie przekaż ją <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> do metody.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Xml.Xsl.XsltArgumentList> obiektu do utworzenia parametru reprezentującego bieżącą datę i godzinę.  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 W przykładzie są stosowane następujące dwa pliki danych jako dane wejściowe.  
  
 order.xml  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 order.xsl  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputUri" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="inputtUri" /> Wartość zawiera nazwę pliku lub katalogu nie może zostać znaleziona.</exception>
        <exception cref="T:System.Net.WebException">Nie można rozpoznać wartości. <paramref name="inputUri" />  
  
—lub— 
Wystąpił błąd podczas przetwarzania żądania.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" />nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.Xml.XmlException">Wystąpił błąd analizy podczas ładowania dokumentu wejściowego.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><see cref="T:System.Xml.XmlReader" /> Zawierający dokument wejściowy.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">Strumień, do którego chcesz utworzyć dane wyjściowe.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XmlReader" /> obiekt i wyprowadza wyniki do strumienia. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zapewnia dodatkowe argumenty czasu wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli arkusz stylów zawiera funkcję XSLT `document()` , jest on rozpoznawany <xref:System.Xml.XmlUrlResolver> przy użyciu poświadczeń bez użytkownika. Jeśli zasób zewnętrzny znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelnienia, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z argumentów i <xref:System.Xml.XmlResolver> podaj z wymaganymi poświadczeniami.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><see cref="T:System.Xml.XmlReader" /> Zawierający dokument wejściowy.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">, <see cref="T:System.IO.TextWriter" /> Do którego chcesz utworzyć dane wyjściowe.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XmlReader" /> obiekt i wyprowadza wyniki <see cref="T:System.IO.TextWriter" />do. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zapewnia dodatkowe argumenty czasu wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli arkusz stylów zawiera funkcję XSLT `document()` , jest on rozpoznawany <xref:System.Xml.XmlUrlResolver> przy użyciu poświadczeń bez użytkownika. Jeśli zasób zewnętrzny znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelnienia, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z argumentów i <xref:System.Xml.XmlResolver> podaj z wymaganymi poświadczeniami.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><see cref="T:System.Xml.XmlReader" /> Zawierający dokument wejściowy.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">, <see cref="T:System.Xml.XmlWriter" /> Do którego chcesz utworzyć dane wyjściowe.  
  
Jeśli arkusz stylów zawiera element <c>xsl: output</c> , należy utworzyć <see cref="T:System.Xml.XmlWriter" /> <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt przy użyciu obiektu zwróconego z <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości. Daje to pewność, <see cref="T:System.Xml.XmlWriter" /> że ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XmlReader" /> obiekt i wyprowadza wyniki <see cref="T:System.Xml.XmlWriter" />do. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zapewnia dodatkowe argumenty czasu wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli arkusz stylów zawiera funkcję XSLT `document()` , jest on rozpoznawany <xref:System.Xml.XmlUrlResolver> przy użyciu poświadczeń bez użytkownika. Jeśli zasób zewnętrzny znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelnienia, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z argumentów i <xref:System.Xml.XmlResolver> podaj z wymaganymi poświadczeniami.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Obiekt implementujący <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejs. W środowisku Microsoft .NETm może to być <see cref="T:System.Xml.XmlNode" /> ( <see cref="T:System.Xml.XmlDocument" />zazwyczaj) lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający dane do przekształcenia.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">Strumień, do którego chcesz utworzyć dane wyjściowe.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiekt i wyprowadza wyniki do strumienia. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zapewnia dodatkowe argumenty środowiska uruchomieniowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli funkcja XSLT `document()` jest włączona, jest rozpoznawana <xref:System.Xml.XmlUrlResolver> przy użyciu poświadczeń bez użytkownika. Jeśli zasób zewnętrzny znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelnienia, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z argumentów i <xref:System.Xml.XmlResolver> podaj z wymaganymi poświadczeniami.  
  
 Ta metoda nie obsługuje `xsl:strip-space` elementu. Jeśli skompilowany arkusz stylów zawiera `xsl:strip-space` element, należy <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> użyć przeciążenia, które przyjmuje <xref:System.Xml.XmlReader> jako argument wejściowy.  
  
 Interfejs jest implementowany <xref:System.Xml.XmlNode> w klasach <xref:System.Xml.XPath.XPathDocument>i. <xref:System.Xml.XPath.IXPathNavigable> Klasy te reprezentują pamięć podręczną danych XML.  
  
-   <xref:System.Xml.XmlNode> Klasa jest oparta na Document Object Model W3C (dom) i oferuje możliwości edycji.  
  
-   <xref:System.Xml.XPath.XPathDocument> Klasa to magazyn danych tylko do odczytu oparty na modelu danych XPath. <xref:System.Xml.XPath.XPathDocument>jest zalecaną klasą przetwarzania XSLT. Zapewnia większą wydajność w porównaniu z <xref:System.Xml.XmlNode> klasą.  
  
 Przekształcenia są stosowane do dokumentu jako całości. Innymi słowy, jeśli przejdziesz do węzła innego niż węzeł główny dokumentu, nie uniemożliwi to proces przekształcania uzyskuje dostęp do wszystkich węzłów w załadowanym dokumencie. Aby przekształcić fragment węzła, należy utworzyć obiekt zawierający tylko fragment węzła i przekazać go do <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metody. Aby uzyskać więcej informacji, zobacz [jak: Przekształcanie fragmentu](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)węzła.  
  
   
  
## Examples  
 Poniższy przykład wykonuje transformację XSLT i wyjście do <xref:System.IO.FileStream>.  
  
 [!code-csharp[XslCompiledTransform.Transform#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Transform#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Obiekt implementujący <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejs. W środowisku Microsoft .NETm może to być <see cref="T:System.Xml.XmlNode" /> ( <see cref="T:System.Xml.XmlDocument" />zazwyczaj) lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający dane do przekształcenia.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">, <see cref="T:System.IO.TextWriter" /> Do którego chcesz utworzyć dane wyjściowe.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiekt i wyprowadza wyniki <see cref="T:System.IO.TextWriter" />do. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zapewnia dodatkowe argumenty czasu wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli funkcja XSLT `document()` jest włączona, jest rozpoznawana <xref:System.Xml.XmlUrlResolver> przy użyciu poświadczeń bez użytkownika. Jeśli zasób zewnętrzny znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelnienia, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z argumentów i <xref:System.Xml.XmlResolver> podaj z wymaganymi poświadczeniami.  
  
 Ta metoda nie obsługuje `xsl:strip-space` elementu. Jeśli skompilowany arkusz stylów zawiera `xsl:strip-space` element, należy <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> użyć przeciążenia, które przyjmuje <xref:System.Xml.XmlReader> jako argument wejściowy.  
  
 Interfejs jest implementowany <xref:System.Xml.XmlNode> w klasach <xref:System.Xml.XPath.XPathDocument>i. <xref:System.Xml.XPath.IXPathNavigable> Klasy te reprezentują pamięć podręczną danych XML.  
  
-   <xref:System.Xml.XmlNode> Klasa jest oparta na Document Object Model W3C (dom) i oferuje możliwości edycji.  
  
-   <xref:System.Xml.XPath.XPathDocument> Klasa to magazyn danych tylko do odczytu oparty na modelu danych XPath. <xref:System.Xml.XPath.XPathDocument>jest zalecaną klasą przetwarzania XSLT. Zapewnia większą wydajność w porównaniu z <xref:System.Xml.XmlNode> klasą.  
  
 Przekształcenia są stosowane do dokumentu jako całości. Innymi słowy, jeśli przejdziesz do węzła innego niż węzeł główny dokumentu, nie uniemożliwi to proces przekształcania uzyskuje dostęp do wszystkich węzłów w załadowanym dokumencie. Aby przekształcić fragment węzła, należy utworzyć obiekt zawierający tylko fragment węzła i przekazać go do <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metody. Aby uzyskać więcej informacji, zobacz [jak: Przekształcanie fragmentu](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)węzła.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Obiekt implementujący <see cref="T:System.Xml.XPath.IXPathNavigable" /> interfejs. W środowisku Microsoft .NETm może to być <see cref="T:System.Xml.XmlNode" /> ( <see cref="T:System.Xml.XmlDocument" />zazwyczaj) lub <see cref="T:System.Xml.XPath.XPathDocument" /> zawierający dane do przekształcenia.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">, <see cref="T:System.Xml.XmlWriter" /> Do którego chcesz utworzyć dane wyjściowe.  
  
Jeśli arkusz stylów zawiera element <c>xsl: output</c> , należy utworzyć <see cref="T:System.Xml.XmlWriter" /> <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt przy użyciu obiektu zwróconego z <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości. Daje to pewność, <see cref="T:System.Xml.XmlWriter" /> że ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiekt i wyprowadza wyniki <see cref="T:System.Xml.XmlWriter" />do. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zapewnia dodatkowe argumenty czasu wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli funkcja XSLT `document()` jest włączona, jest rozpoznawana <xref:System.Xml.XmlUrlResolver> przy użyciu poświadczeń bez użytkownika. Jeśli zasób zewnętrzny znajduje się w ramach zasobu sieciowego, który wymaga uwierzytelnienia, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z argumentów i <xref:System.Xml.XmlResolver> podaj z wymaganymi poświadczeniami.  
  
 Ta metoda nie obsługuje `xsl:strip-space` elementu. Jeśli skompilowany arkusz stylów zawiera `xsl:strip-space` element, należy <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> użyć przeciążenia, które przyjmuje <xref:System.Xml.XmlReader> jako argument wejściowy.  
  
 Interfejs jest implementowany <xref:System.Xml.XmlNode> w klasach <xref:System.Xml.XPath.XPathDocument>i. <xref:System.Xml.XPath.IXPathNavigable> Klasy te reprezentują pamięć podręczną danych XML.  
  
-   <xref:System.Xml.XmlNode> Klasa jest oparta na Document Object Model W3C (dom) i oferuje możliwości edycji.  
  
-   <xref:System.Xml.XPath.XPathDocument> Klasa to magazyn danych tylko do odczytu oparty na modelu danych XPath. <xref:System.Xml.XPath.XPathDocument>jest zalecaną klasą przetwarzania XSLT. Zapewnia większą wydajność w porównaniu z <xref:System.Xml.XmlNode> klasą.  
  
 Przekształcenia są stosowane do dokumentu jako całości. Innymi słowy, jeśli przejdziesz do węzła innego niż węzeł główny dokumentu, nie uniemożliwi to proces przekształcania uzyskuje dostęp do wszystkich węzłów w załadowanym dokumencie. Aby przekształcić fragment węzła, należy utworzyć obiekt zawierający tylko fragment węzła i przekazać go do <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metody. Aby uzyskać więcej informacji, zobacz [jak: Przekształcanie fragmentu](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)węzła.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><see cref="T:System.Xml.XmlReader" /> Zawierający dokument wejściowy.</param>
        <param name="arguments"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Zawierająca argumenty kwalifikowane do przestrzeni nazw używane jako dane wejściowe transformacji. Ta wartość może być <see langword="null" />równa.</param>
        <param name="results">, <see cref="T:System.Xml.XmlWriter" /> Do którego chcesz utworzyć dane wyjściowe.  
  
Jeśli arkusz stylów zawiera element <c>xsl: output</c> , należy utworzyć <see cref="T:System.Xml.XmlWriter" /> <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt przy użyciu obiektu zwróconego z <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości. Daje to pewność, <see cref="T:System.Xml.XmlWriter" /> że ma poprawne ustawienia danych wyjściowych.</param>
        <param name="documentResolver">Służy do rozpoznawania funkcji dokumentu XSLT <c>().</c> <see cref="T:System.Xml.XmlResolver" /> W takim <see langword="null" />przypadku funkcja <c>Document ()</c> nie jest rozpoznawana.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego określonego przez <see cref="T:System.Xml.XmlReader" /> obiekt i wyprowadza wyniki <see cref="T:System.Xml.XmlWriter" />do. Zapewnia dodatkowe argumenty czasu wykonywania, a element XmlResolver rozpoznaje funkcję <c>dokumentu XSLT ().</c> <see cref="T:System.Xml.Xsl.XsltArgumentList" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie używa <xref:System.Xml.XmlSecureResolver> się, aby rozpoznać funkcję XSLT. `document()`  
  
 [!code-csharp[XslCompiledTransform.Transform#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Transform#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="input" /> <paramref name="results" /> lub. <see langword="null" /></exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Wystąpił błąd podczas wykonywania transformacji XSLT.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Używanie klasy XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Dokument do przekształcenia, który jest określony przez <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiekt.</param>
        <param name="arguments">Lista argumentów jako <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
        <param name="results">, <see cref="T:System.Xml.XmlWriter" /> Do którego chcesz utworzyć dane wyjściowe.  
  
<see langword="xsl:output" /> Jeśli arkusz stylów zawiera element, należy <see cref="T:System.Xml.XmlWriter" /> utworzyć przy użyciu <see cref="T:System.Xml.XmlWriterSettings" /> obiektu, który jest zwracany z <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości. Daje to pewność, <see cref="T:System.Xml.XmlWriter" /> że ma poprawne ustawienia danych wyjściowych.</param>
        <param name="documentResolver">Używany do rozpoznawania funkcji XSLT <see langword="document()" />. <see cref="T:System.Xml.XmlResolver" /> Jeśli tak jest <see langword="null" /> <see langword="document()" /> , funkcja nie zostanie rozpoznana.</param>
        <summary>Wykonuje transformację przy użyciu dokumentu wejściowego, który jest określony przez <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiekt i wyprowadza wyniki <see cref="T:System.Xml.XmlWriter" />do. Zapewnia dodatkowe argumenty uruchomieniowe <see cref="T:System.Xml.XmlResolver" /> i rozpoznaje funkcję XSLT <see langword="document()" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
