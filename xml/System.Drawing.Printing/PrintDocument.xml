<Type Name="PrintDocument" FullName="System.Drawing.Printing.PrintDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3226da59f248f0e62f48f2881c168acd1651a90b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452703" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrintDocument : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDocument extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrintDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDocument&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDocument : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PrintPage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DocumentName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje obiekt wielokrotnego użytku, który wysyła dane wyjściowe do drukarki z aplikacji formularzy systemu Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle, Utwórz wystąpienie <xref:System.Drawing.Printing.PrintDocument> klasy, takie jak ustawianie właściwości <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> i <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>i Wywołaj <xref:System.Drawing.Printing.PrintDocument.Print%2A> metodę, aby rozpocząć proces drukowania. Obsługa <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzeń, w których określane są dane wyjściowe do drukowania, za pomocą <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> <xref:System.Drawing.Graphics> właściwość <xref:System.Drawing.Printing.PrintPageEventArgs>.  
  
 Aby uzyskać więcej informacji na temat drukowania z aplikacji formularzy systemu Windows, zobacz [Obsługa drukowania formularzy systemu Windows](~/docs/framework/winforms/advanced/windows-forms-print-support.md). Jeśli chcesz wydrukuj z aplikacji Windows Presentation Foundation, zobacz <xref:System.Printing> przestrzeni nazw.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla plik o nazwie C:\My Documents\MyFile.txt na drukarki domyślnej. Aby uruchomić przykład, Utwórz nowy projekt formularzy systemu Windows i wklej przykładowy kod w formularzu, zastępując zawartość pliku. Język C# należy usunąć plik Form1.Designer.cs. Ponadto należy zmienić ścieżkę do pliku, który chcesz wydrukować.  
  
> [!NOTE]
>  Przykładzie wymaga, aby każdy wiersz mieści się w szerokości strony.  
  
 Użyj <xref:System.ComponentModel>, <xref:System.Windows.Forms>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, i <xref:System.IO> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Graphics" />
    <altmember cref="T:System.Drawing.Printing.PageSettings" />
    <altmember cref="T:System.Drawing.Printing.PrintController" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Printing.PrintDocument" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor domyślny inicjuje wszystkie pola oparte na drukarki domyślnej. Zwykle po tworzenia nowego <xref:System.Drawing.Printing.PrintDocument>, ustaw ustawienia drukarki i strony, które wpływają na dane wyjściowe za pośrednictwem <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> i <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> właściwości, odpowiednio.  
  
   
  
## Examples  
 Poniższy przykład kodu Ustawia orientację dokumentu w poziomie, a drukuje dokument.  
  
 Użyj <xref:System.Drawing>, <xref:System.Drawing.Printing>, i <xref:System.IO> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler BeginPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler BeginPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginPrint As PrintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintEventHandler ^ BeginPrint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> metoda jest wywoływana przed na pierwszej stronie drukuje dokument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj obsługi <xref:System.Drawing.Printing.PrintDocument.BeginPrint> zdarzenie, aby zainicjować czcionki, strumieni plików i inne zasoby używane w procesie drukowania.  
  
 Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia <xref:System.Drawing.Printing.PrintEventHandler> delegować do zdarzenia. Program obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie. Aby uzyskać więcej informacji na temat obsługi zdarzeń z delegatów zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPageSettings As PageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PageSettings ^ DefaultPageSettings { System::Drawing::Printing::PageSettings ^ get(); void set(System::Drawing::Printing::PageSettings ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ustawienia strony, które są używane jako domyślne dla wszystkich stron do wydrukowania.</summary>
        <value>A <see cref="T:System.Drawing.Printing.PageSettings" /> , który określa domyślne ustawienia strony do dokumentu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić kilka domyślnych ustawień strony za pomocą <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> właściwości. Na przykład <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=nameWithType> właściwość określa, czy strona ma być drukowana w kolorze, <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=nameWithType> właściwość określa orientacji poziomej lub pionowej i <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> właściwość określa marginesy strony.  
  
 Aby określić ustawienia na podstawie przez strony, obsługi <xref:System.Drawing.Printing.PrintDocument.PrintPage> lub <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> zdarzeń i zmodyfikuj <xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A> argument zawarte w <xref:System.Drawing.Printing.PrintPageEventArgs> lub <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>odpowiednio.  
  
> [!NOTE]
>  Po uruchomieniu drukowania, zmiany w ustawieniach strony za pomocą <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> właściwość nie ma wpływu na drukowanej strony.  
  
   
  
## Examples  
 Poniższy przykład kodu Ustawia orientację dokumentu w poziomie, a drukuje dokument. Uaktywniane trzy założenia: zmiennej o nazwie `filePath` została ustawiona jako ścieżka pliku do drukowania; metodę o nazwie `pd_PrintPage`, która obsługuje <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzeń, została zdefiniowana; i zmiennej o nazwie `printer` został Ustaw nazwę drukarki.  
  
 Użyj <xref:System.Drawing>, <xref:System.Drawing.Printing>, i <xref:System.IO> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="DocumentName">
      <MemberSignature Language="C#" Value="public string DocumentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DocumentName" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("document")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dokumentu, aby wyświetlić (na przykład w stan drukowania w oknie dialogowym pola lub drukarki kolejki) podczas wydruku dokumentu.</summary>
        <value>Nazwa dokumentu do wyświetlenia podczas wydruku dokumentu. Wartość domyślna to "dokumentu".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> Właściwość nie określa plik do druku. Zamiast, określ dane wyjściowe do drukowania Obsługa <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzeń. Na przykład zobacz <xref:System.Drawing.Printing.PrintDocument> Przegląd klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu drukuje dokument z pierwszej strony w kolorze, jeśli drukarka obsługuje tę funkcję i ustawia <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> na nazwę przyjazną dla użytkownika. Przykład wymaga, aby <xref:System.Drawing.Printing.PrintDocument> zmiennej o nazwie `printDoc` został utworzony oraz <xref:System.Drawing.Printing.PrintDocument.PrintPage> i <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> zdarzenia są obsługiwane.  
  
 Użyj <xref:System.Drawing> i <xref:System.Drawing.Printing> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="EndPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler EndPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler EndPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.EndPrint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndPrint As PrintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintEventHandler ^ EndPrint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy został wydrukowany na ostatniej stronie dokumentu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj obsługi <xref:System.Drawing.Printing.PrintDocument.EndPrint> zdarzenia zwolnienia czcionki, strumieni plików i inne zasoby używane w procesie drukowania, takie jak czcionki.  
  
 Wskazuje, czy nie występują żadne więcej stron do drukowania przez ustawienie <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType> właściwości `false` w <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzeń. <xref:System.Drawing.Printing.PrintDocument.EndPrint> Zdarzeń ma miejsce, gdy proces drukowania została anulowana lub wystąpił wyjątek podczas drukowania.  
  
 Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia <xref:System.Drawing.Printing.PrintEventHandler> delegować do zdarzenia. Program obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie. Aby uzyskać więcej informacji na temat obsługi zdarzeń z delegatów zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OnBeginPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginPrint (e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginPrint(System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> zdarzeń. Jest wywoływana po wykonaniu <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> metoda jest wywoływana przed na pierwszej stronie drukuje dokument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A> Metoda pozwala klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 Po klasie pochodnej wywołuje <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A> metoda zgłasza <xref:System.Drawing.Printing.PrintDocument.BeginPrint> zdarzeń za pomocą programu obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia. Ta metoda jest dobrym miejscem do zainicjowania.</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEndPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndPrint (e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndPrint(System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> zdarzeń. Jest on nazywany wydruku na ostatniej stronie dokumentu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> Metoda pozwala klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej. <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> Metody również jest wywoływana, gdy proces drukowania została anulowana lub wystąpił wyjątek podczas drukowania.  
  
 Po klasie pochodnej wywołuje <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> metoda zgłasza <xref:System.Drawing.Printing.PrintDocument.EndPrint> zdarzeń za pomocą programu obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia. Ta metoda jest dobrym miejscem do uninitialization.</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPrintPage">
      <MemberSignature Language="C#" Value="protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrintPage(class System.Drawing.Printing.PrintPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrintPage (e As PrintPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrintPage(System::Drawing::Printing::PrintPageEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> zdarzeń. Jest ona wywoływana przed wyświetla stronę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A> Metoda pozwala klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 Po klasie pochodnej wywołuje <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A> metoda zgłasza <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzeń za pomocą programu obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryPageSettings">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryPageSettings(class System.Drawing.Printing.QueryPageSettingsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryPageSettings (e As QueryPageSettingsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryPageSettings(System::Drawing::Printing::QueryPageSettingsEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.QueryPageSettingsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> zdarzeń. Jest ona wywoływana bezpośrednio przed każdym <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 Po klasie pochodnej wywołuje <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> metoda zgłasza <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> zdarzeń za pomocą programu obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OriginAtMargins">
      <MemberSignature Language="C#" Value="public bool OriginAtMargins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OriginAtMargins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.OriginAtMargins" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginAtMargins As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OriginAtMargins { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pozycja obiekt graphics skojarzony ze stroną znajduje się wewnątrz marginesy określone przez użytkownika lub w lewym górnym rogu obszar drukowania strony.</summary>
        <value>
          <see langword="true" /> Jeśli punkt początkowy grafiki rozpoczyna się od marginesy; <see langword="false" /> Jeśli punkt początkowy grafiki znajduje się w lewym górnym rogu strony do druku. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obliczanie obszaru dostępne do drukowania wymaga fizyczny rozmiar papieru, marginesy strony i lokalizację <xref:System.Drawing.Graphics> obiekt pochodzenia. Gdy <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> jest `true`, <xref:System.Drawing.Graphics> uwzględnia lokalizacji obiektu <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> wartość właściwości i obszar drukowania strony. Gdy <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> jest `false`, tylko obszar drukowania strony służy do określenia lokalizacji <xref:System.Drawing.Graphics> obiekt początek, <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> wartość jest ignorowana.  
  
 Na przykład jeśli <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> jest `true`, i <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> jest ustawiona na 1 cala na każdej stronie <xref:System.Drawing.Graphics> zawarte w obiekcie <xref:System.Drawing.Printing.PrintPageEventArgs> jest 1 cala znajduje się w lewo i w górnej części strony. Jeśli obszar drukowania strony jest.25 cala na każdej stronie i <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> jest `false`, <xref:System.Drawing.Graphics> obiekt jest zlokalizowany.25 cala w lewo i w górnej części strony.  
  
> [!NOTE]
>  Obszar drukowania strony może być różna dla różnych drukarek i nie musi być symetryczne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia proces drukowania dokumentu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określ dane wyjściowe do drukowania Obsługa <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzeń i za pomocą <xref:System.Drawing.Graphics> objęte <xref:System.Drawing.Printing.PrintPageEventArgs>.  
  
 Użyj <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType> właściwości w celu określenia dokumentu które drukowania.  
  
 <xref:System.Drawing.Printing.PrintDocument.Print%2A> Metody drukuje dokument bez przy użyciu okna dialogowego drukowania. Użyj <xref:System.Windows.Forms.PrintDialog> aby zaoferować użytkownikowi możliwość wybrania ustawienia wydruku.  
  
> [!NOTE]
>  Jeśli wyjątek, który nie jest obsługiwany przez <xref:System.Drawing.Printing.PrintDocument.Print%2A> metody jest generowany podczas drukowania, drukowanie dokumentu zostało przerwane.  
  
   
  
## Examples  
 Poniższy przykład kodu drukuje plik, który został określony przy użyciu wiersza polecenia do drukarki domyślnej.  
  
> [!NOTE]
>  Przykładzie wymaga, aby każdy wiersz mieści się w szerokości strony.  
  
 Użyj <xref:System.ComponentModel>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, <xref:System.IO>, i <xref:System.Windows.Forms> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">Drukarki o nazwie w <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> właściwość nie istnieje.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">bezpieczne drukowania z ograniczeniami okno dialogowe. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintController">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintController PrintController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrintController PrintController" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrintController" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintController As PrintController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintController ^ PrintController { System::Drawing::Printing::PrintController ^ get(); void set(System::Drawing::Printing::PrintController ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontroler wydruku, który przeprowadza proces drukowania.</summary>
        <value>
          <see cref="T:System.Drawing.Printing.PrintController" /> Który przeprowadza proces drukowania. Wartość domyślna to nowe wystąpienie klasy <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontroler wydruku przeprowadza proces drukowania na kilka sposobów. Na przykład, aby wydrukować dokument, należy przekonwertować go na <xref:System.Drawing.Graphics> obiektu. A <xref:System.Drawing.Printing.PrintController> Określa, gdzie do rysowania obrazu podglądu wydruku lub na drukarce faktycznie drukowanie grafiki. Kontroler wydruku można również określić, czy natychmiast wydrukować dokument, lub zaczekaj określonego interwału.  
  
   
  
## Examples  
 Poniższy przykład kodu wymaga, które zostało utworzone wystąpienie <xref:System.Drawing.Printing.PrintDocument> klasy o nazwie `myPrintDocument`. Przykład tworzy nowe wystąpienie klasy <xref:System.Drawing.Printing.PrintController> klasy i przypisuje go do <xref:System.Drawing.Printing.PrintDocument.PrintController%2A> właściwość `myPrintDocument`i drukuje dokument.  
  
 Użyj <xref:System.Drawing.Printing> i <xref:System.Windows.Forms> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrintDocument.PrintController Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintController Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintController Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">bezpieczne drukowania z ograniczeniami okno dialogowe. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="T:System.Drawing.Printing.PreviewPrintController" />
        <altmember cref="T:System.Drawing.Printing.PrintController" />
        <altmember cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
        <altmember cref="T:System.Drawing.Printing.StandardPrintController" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterSettings As PrinterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings ^ PrinterSettings { System::Drawing::Printing::PrinterSettings ^ get(); void set(System::Drawing::Printing::PrinterSettings ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia drukarki, która drukuje dokument.</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings" /> Określa, jak i gdzie wydrukowaniu dokumentu. Wartość domyślna to <see cref="T:System.Drawing.Printing.PrinterSettings" /> z jego właściwości mają wartości domyślne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić wiele ustawień drukarek za pomocą <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> właściwości. Na przykład użyć <xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=nameWithType> właściwość, aby określić liczbę kopii do wydrukowania, <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType> właściwości w celu określenia drukarki, aby użyć i <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=nameWithType> właściwości w celu określenia zakresu stron do wydrukowania.  
  
   
  
## Examples  
 Poniższy przykład kodu drukuje dokument z określonym drukarki. Trzy założenia uaktywniane: który nazwy zmiennych `filePath` została ustawiona jako ścieżka pliku do drukowania; metodę o nazwie `pd_PrintPage`, dojścia <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzeń, została zdefiniowana; i zmiennej o nazwie `printer` został Ustaw nazwę drukarki.  
  
 Użyj <xref:System.Drawing>, <xref:System.Drawing.Printing>, i <xref:System.IO> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="PrintPage">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintPageEventHandler PrintPage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintPageEventHandler PrintPage" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PrintPage As PrintPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintPageEventHandler ^ PrintPage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy są potrzebne dane wyjściowe do wydruku dla bieżącej strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby określić dane wyjściowe do drukowania, użyj <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> właściwość <xref:System.Drawing.Printing.PrintPageEventArgs>. Na przykład aby określić wiersz tekstu, który ma być drukowana, narysować przy użyciu tekstu <xref:System.Drawing.Graphics.DrawString%2A?displayProperty=nameWithType> metody.  
  
 Oprócz określenia dane wyjściowe, można wskazać, czy istnieją dodatkowe strony do drukowania przez ustawienie <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType> właściwości `true`. Wartość domyślna to `false`, co oznacza, że nie istnieją żadne więcej stron do drukowania. Również można modyfikować ustawienia pojedynczej strony za pomocą <xref:System.Drawing.Printing.PageSettings> i mogą zostać anulowane zadania drukowania przez ustawienie <xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=nameWithType> właściwości `true`. Aby wydrukować stronę dokumentu za pomocą innej strony ustawień, obsługi <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> zdarzeń.  
  
 Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia <xref:System.Drawing.Printing.PrintPageEventHandler> delegować do zdarzenia. Program obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie. Aby uzyskać więcej informacji na temat obsługi zdarzeń z delegatów zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje Obsługa <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzeń.  
  
 Na przykład innego, zobacz [porady: drukowanie wielu stron pliku tekstowego w formularzach systemu Windows](~/docs/framework/winforms/advanced/how-to-print-a-multi-page-text-file-in-windows-forms.md).  
  
 Użyj <xref:System.Drawing>, <xref:System.Drawing.Printing>, i <xref:System.IO> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintPageEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="QueryPageSettings">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryPageSettings As QueryPageSettingsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::QueryPageSettingsEventHandler ^ QueryPageSettings;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.QueryPageSettingsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje bezpośrednio przed każdym <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieje możliwość wydrukować stronę dokumentu za pomocą ustawienia innej strony. Ustawienia strony, modyfikując poszczególnych właściwości <xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=nameWithType> właściwości lub przez ustawienie właściwości <xref:System.Drawing.Printing.PageSettings>. Zmiany wprowadzone w <xref:System.Drawing.Printing.PageSettings> wpływają na tylko bieżącej strony, a nie domyślnej strony Ustawienia dokumentu. Zadania drukowania również mogą zostać anulowane przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true` dla <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>.  
  
 Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia <xref:System.Drawing.Printing.QueryPageSettingsEventHandler> delegować do zdarzenia. Program obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie. Aby uzyskać więcej informacji na temat obsługi zdarzeń z delegatów zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
Jeśli używasz <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> zdarzeń, aby zmodyfikować ustawienia drukarki, wydajność <xref:System.Windows.Forms.PrintPreviewDialog> nie poprawi kontroli, nawet jeśli jest ustawiona przełącznik konfiguracji optymalizacji. Aby uzyskać więcej informacji, zobacz [printpreviewdialog — informacje o formancie](~/docs/framework/winforms/controls/printpreviewdialog-control-overview-windows-forms.md).   
  
## Examples  
 Poniższy przykład kodu drukuje dokument z pierwszej strony w kolorze, jeśli drukarka obsługuje tę funkcję. Przykład wymaga, aby <xref:System.Drawing.Printing.PrintDocument> zmiennej o nazwie `printDoc` został utworzony oraz <xref:System.Drawing.Printing.PrintDocument.PrintPage> i <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> zdarzenia są obsługiwane. `currentPageNumber` Zmiennej jest zwiększany po każdej stronie jest drukowany w <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzenie, które nie jest widoczne.  
  
 Użyj <xref:System.Drawing> i <xref:System.Drawing.Printing> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zawiera informacje dotyczące drukowania dokumentów, w postaci ciągu.</summary>
        <returns>Ciąg.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>