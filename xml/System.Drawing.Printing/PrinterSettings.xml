<Type Name="PrinterSettings" FullName="System.Drawing.Printing.PrinterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c0e502570086836fec57f5511363467f75093f0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452718" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrinterSettings : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PrinterSettings extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrinterSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class PrinterSettings&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrinterSettings : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Określa informacje dotyczące sposobu wydruku dokumentu, w tym drukarki, która wyświetla, podczas drukowania z aplikacji formularzy systemu Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle dostęp <xref:System.Drawing.Printing.PrinterSettings> za pośrednictwem <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=nameWithType> lub <xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=nameWithType> właściwości, aby zmodyfikować ustawienia drukarki. Najbardziej typowe ustawienia drukarki jest <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>, który określa drukarkę do drukowania na.  
  
 Aby uzyskać więcej informacji dotyczących drukowania w formularzach systemu Windows, zobacz <xref:System.Drawing.Printing> Omówienie przestrzeni nazw. Jeśli chcesz wydrukuj z aplikacji Windows Presentation Foundation, zobacz <xref:System.Printing> przestrzeni nazw.  
  
   
  
## Examples  
 Poniższy przykład kodu drukuje dokument z określonym drukarki. W przykładzie przedstawiono trzy wymagania wstępne:  
  
-   Zmiennej o nazwie `filePath` została ustawiona jako ścieżka pliku do drukowania.  
  
-   Metodę o nazwie `pd_PrintPage`, która obsługuje <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzenia został zdefiniowany.  
  
-   Zmiennej o nazwie `printer` została ustawiona na nazwę drukarki.  
  
 Użyj <xref:System.Drawing>, <xref:System.Drawing.Printing>, i <xref:System.IO> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
    <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
    <altmember cref="P:System.Drawing.Printing.PageSettings.PrinterSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrinterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrinterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Printing.PrinterSettings" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor domyślny inicjuje wszystkie pola z wartościami domyślnymi.  
  
 Zwykle nie należy tworzyć wystąpienia <xref:System.Drawing.Printing.PrinterSettings>, ale zamiast tego użyć <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=nameWithType> ustawienia drukarki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDuplex">
      <MemberSignature Language="C#" Value="public bool CanDuplex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDuplex" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDuplex As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDuplex { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy drukarka obsługuje drukowanie dwustronne.</summary>
        <value>
          <see langword="true" /> Jeśli drukarka obsługuje drukowanie dwustronne; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Drukowanie za pomocą dupleks i jeśli drukarka obsługuje, ustaw <xref:System.Drawing.Printing.PrinterSettings.Duplex%2A> do jednego z <xref:System.Drawing.Printing.Duplex> wartości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Collate" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię tego <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
        <returns>Kopię tego obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collate">
      <MemberSignature Language="C#" Value="public bool Collate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collate" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Collate" />
      <MemberSignature Language="VB.NET" Value="Public Property Collate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Collate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dokument wydruku jest posortowane.</summary>
        <value>
          <see langword="true" /> Jeśli dokument wydruku jest sortowane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sortowanie jest wykonywane tylko wtedy, gdy liczba kopii jest większa niż 1. Ustaw <xref:System.Drawing.Printing.PrinterSettings.Copies%2A> właściwości, aby określić liczbę kopii wydruku.  
  
 Ustawienie <xref:System.Drawing.Printing.PrinterSettings.Collate%2A> do `true` będzie drukować pełną kopię dokumentu, przed wydrukowaniem pierwszej strony następnej kopii. `false` będzie drukować każdej stronie przez liczbę kopii określony przed wydrukowaniem następnej strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="Copies">
      <MemberSignature Language="C#" Value="public short Copies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Copies" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Copies" />
      <MemberSignature Language="VB.NET" Value="Public Property Copies As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Copies { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kopii dokumentu do druku.</summary>
        <value>Liczba kopii do wydrukowania. Domyślnym ustawieniem jest 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie wszystkie drukarki obsługuje drukowanie wielu copes. Można użyć <xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> właściwości, aby określić maksymalną liczbę kopiuje obsługuje drukarki. Jeśli liczbę kopii jest większa niż maksymalna kopie obsługiwane przez drukarkę, maksymalna liczba kopii do wydrukowania i nastąpi żaden wyjątek.  
  
> [!NOTE]
>  Niektóre drukarki mogą nie obsługiwać drukowania więcej niż jednej kopii naraz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> właściwości jest mniejsza od zera.</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Collate" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMeasurementGraphics">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca <see cref="T:System.Drawing.Graphics" /> zawierający informacje o drukarce.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMeasurementGraphics () As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Drawing.Graphics" /> zawierający informacje o drukarce, które są przydatne podczas tworzenia <see cref="T:System.Drawing.Printing.PrintDocument" />.</summary>
        <returns>A <see cref="T:System.Drawing.Graphics" /> zawierający informacje z drukarki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> metody, można uzyskać <xref:System.Drawing.Graphics> drukarki bez tworzenia zadania drukowania. Można użyć <xref:System.Drawing.Graphics> do podejmowania decyzji na temat do układu elementy wizualne, takie jak czcionki, rozmiarów i style typu złożonego zadania drukowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">Drukarki o nazwie w <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> właściwość nie istnieje.</exception>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (bool honorOriginAtMargins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(bool honorOriginAtMargins) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMeasurementGraphics (honorOriginAtMargins As Boolean) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(bool honorOriginAtMargins);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="honorOriginAtMargins" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="honorOriginAtMargins">
          <see langword="true" /> w celu wskazania pochodzenia w marginesu; w przeciwnym razie <see langword="false" />.</param>
        <summary>Zwraca <see cref="T:System.Drawing.Graphics" /> zawierający informacje o drukarce, opcjonalnie określając źródła w marginesów.</summary>
        <returns>A <see cref="T:System.Drawing.Graphics" /> zawierający informacje o drukarce <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> metody, można uzyskać <xref:System.Drawing.Graphics> drukarki bez tworzenia zadania drukowania. Użyj <xref:System.Drawing.Graphics> do podejmowania decyzji na temat do układu elementy wizualne, takie jak czcionki, rozmiarów i style typu złożonego zadania drukowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(class System.Drawing.Printing.PageSettings pageSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(System::Drawing::Printing::PageSettings ^ pageSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
      </Parameters>
      <Docs>
        <param name="pageSettings">
          <see cref="T:System.Drawing.Printing.PageSettings" /> Można pobrać obiektu grafiki dla.</param>
        <summary>Zwraca <see cref="T:System.Drawing.Graphics" /> zawierający informacje o drukarce skojarzonego z określonym <see cref="T:System.Drawing.Printing.PageSettings" />.</summary>
        <returns>A <see cref="T:System.Drawing.Graphics" /> zawierający informacje o drukarce <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> metody, można uzyskać <xref:System.Drawing.Graphics> drukarki bez tworzenia zadania drukowania. Użyj <xref:System.Drawing.Graphics> do podejmowania decyzji na temat do układu elementy wizualne, takie jak czcionki, rozmiarów i style typu złożonego zadania drukowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(class System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(System::Drawing::Printing::PageSettings ^ pageSettings, bool honorOriginAtMargins);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
        <Parameter Name="honorOriginAtMargins" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pageSettings">
          <see cref="T:System.Drawing.Printing.PageSettings" /> Można pobrać <see cref="T:System.Drawing.Graphics" /> obiekt.</param>
        <param name="honorOriginAtMargins">
          <see langword="true" /> Aby określić źródła w marginesu; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Graphics" /> skojarzone z określonej strony ustawień i opcjonalnie określając źródła w marginesów.</summary>
        <returns>A <see cref="T:System.Drawing.Graphics" /> zawierający informacje o drukarce <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> Metoda pozwala uzyskać <xref:System.Drawing.Graphics> drukarki bez tworzenia zadania drukowania. Użyj <xref:System.Drawing.Graphics> do podejmowania decyzji na temat do układu elementy wizualne, takie jak czcionki, rozmiarów i style typu złożonego zadania drukowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultPageSettings As PageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PageSettings ^ DefaultPageSettings { System::Drawing::Printing::PageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślne ustawienia strony dla tej drukarki.</summary>
        <value>A <see cref="T:System.Drawing.Printing.PageSettings" /> reprezentujący ustawienia domyślne strony dla tej drukarki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia strony obejmują rozmiar marginesu na stronie, rozmiar papieru do użycia oraz czy ma być drukowana w kolorze. Aby uzyskać więcej informacji o ustawieniach strony, zobacz <xref:System.Drawing.Printing.PageSettings> klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
      </Docs>
    </Member>
    <Member MemberName="Duplex">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.Duplex Duplex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Printing.Duplex Duplex" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Duplex" />
      <MemberSignature Language="VB.NET" Value="Public Property Duplex As Duplex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::Duplex Duplex { System::Drawing::Printing::Duplex get(); void set(System::Drawing::Printing::Duplex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.Duplex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ustawienia drukarki dla drukowanie dwustronne.</summary>
        <value>Jeden z <see cref="T:System.Drawing.Printing.Duplex" /> wartości. Wartość domyślna jest określana przez drukarki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A> właściwości, aby sprawdzić, czy drukarka obsługuje drukowanie dwustronne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> właściwość nie jest jednym z <see cref="T:System.Drawing.Printing.Duplex" /> wartości.</exception>
        <altmember cref="T:System.Drawing.Printing.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="FromPage">
      <MemberSignature Language="C#" Value="public int FromPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FromPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.FromPage" />
      <MemberSignature Language="VB.NET" Value="Public Property FromPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FromPage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numer pierwszej strony do drukowania.</summary>
        <value>Numer strony pierwszej strony do drukowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> właściwości są używane przez <xref:System.Windows.Forms.PrintDialog> użytkownik wybrał zakres wydruku. <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Musi mieć ustawioną właściwość `true` umożliwia użytkownikowi określenie zakresu wydruku. Ponadto <xref:System.Windows.Forms.PrintDialog> wymaga <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> należy określić i <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> wartości muszą mieścić się w zakresie.  
  
 Podczas procesu drukowania w <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> zdarzeń, widok <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ustalenie ma być drukowana. Jeśli <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> jest <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>, użyj <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> właściwości, aby ustalić, jakie strony ma być drukowana. Jeśli <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> jest <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, następnie podaj dane wyjściowe tylko dla wybranej strony.  
  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> można również ustawić programowo, mimo że <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> implementacja jest taka sama.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> Wartość właściwości jest mniejsza od zera.</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHdevmode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy dojście do <see langword="DEVMODE" /> struktura umożliwiająca ustawienia drukarki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHdevmode">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevmode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevmode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevmode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdevmode () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevmode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dojście do <see langword="DEVMODE" /> struktura umożliwiająca ustawienia drukarki.</summary>
        <returns>Dojście do <see langword="DEVMODE" /> struktury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` struktury są określonego urządzenia. Kopiowanie `DEVMODE` struktury z jednego <xref:System.Drawing.Printing.PrinterSettings> do <xref:System.Drawing.Printing.PrinterSettings> inną drukarkę nie jest obsługiwane. Po zakończeniu z dojściem, który jest tworzony za pomocą tej metody, użytkownik musi deallocate go samodzielnie przez wywołanie metody natywnej Win32 `GlobalFree` metody. Podczas wywoływania tej metody można przekazać jako parametru wartość zwrotną z elementu <xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">Drukarki o nazwie w <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> właściwość nie istnieje.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Nie można pobrać informacji inicjowania drukarki.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Drukowanie i dostęp do wszystkich drukarek w sieci. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHdevmode">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevmode (System.Drawing.Printing.PageSettings pageSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevmode(class System.Drawing.Printing.PageSettings pageSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevmode(System::Drawing::Printing::PageSettings ^ pageSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
      </Parameters>
      <Docs>
        <param name="pageSettings">
          <see cref="T:System.Drawing.Printing.PageSettings" /> Obiekt, który <see langword="DEVMODE" /> odpowiada dojścia struktury.</param>
        <summary>Tworzy dojście do <see langword="DEVMODE" /> strukturę, która odpowiada drukarki i ustawienia strony określonej za pomocą <paramref name="pageSettings" /> parametru.</summary>
        <returns>Dojście do <see langword="DEVMODE" /> struktury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` struktury są określonego urządzenia. Kopiowanie `DEVMODE` struktury z jednego <xref:System.Drawing.Printing.PrinterSettings> do <xref:System.Drawing.Printing.PrinterSettings> inną drukarkę nie jest obsługiwane.  
  
 Po zakończeniu z dojściem, który jest tworzony za pomocą tej metody, użytkownik musi deallocate go samodzielnie przez wywołanie metody natywnej Win32 `GlobalFree` metody. Podczas wywoływania tej metody można przekazać jako parametru wartość zwrotną z elementu <xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">Drukarki o nazwie w <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> właściwość nie istnieje.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Nie można pobrać informacji inicjowania drukarki.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Drukowanie i dostęp do wszystkich drukarek w sieci. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHdevnames">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevnames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevnames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevnames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdevnames () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevnames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dojście do <see langword="DEVNAMES" /> struktura umożliwiająca ustawienia drukarki.</summary>
        <returns>Dojście do <see langword="DEVNAMES" /> struktury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zakończeniu z dojściem, który jest tworzony za pomocą tej metody, użytkownik musi deallocate go samodzielnie przez wywołanie metody natywnej Win32 `GlobalFree` metody. Podczas wywoływania tej metody można przekazać jako parametru wartość zwrotną z elementu <xref:System.Drawing.Printing.PrinterSettings.GetHdevnames%2A> metody.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Drukowanie i dostęp do wszystkich drukarek w sieci. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstalledPrinters">
      <MemberSignature Language="C#" Value="public static System.Drawing.Printing.PrinterSettings.StringCollection InstalledPrinters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Printing.PrinterSettings/StringCollection InstalledPrinters" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledPrinters As PrinterSettings.StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Printing::PrinterSettings::StringCollection ^ InstalledPrinters { System::Drawing::Printing::PrinterSettings::StringCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwy wszystkich drukarek zainstalowany na komputerze.</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> reprezentujący nazwy wszystkie drukarki zainstalowane na komputerze.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolekcja nazw zainstalowanej drukarki można użyć, aby przyznać użytkownikowi możliwość drukowania do drukarek.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `comboInstalledPrinters` pole kombi z zainstalowanych drukarek, a także ustawia drukarki drukowania, przy użyciu <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> właściwości, gdy zmieni się zaznaczenie. `PopulateInstalledPrintersCombo` Procedura jest wywoływana po zainicjowaniu formularza. Przykład wymaga, aby <xref:System.Drawing.Printing.PrintDocument> zmiennej o nazwie `printDoc` istnieje i czy istnieje określonych kombi.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#5)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#5)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Nie można wyliczyć dostępnych drukarek.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Drukowanie i dostęp do wszystkich drukarek w sieci. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultPrinter">
      <MemberSignature Language="C#" Value="public bool IsDefaultPrinter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultPrinter" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaultPrinter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultPrinter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> właściwości wyznacza używają domyślnej drukarki, z wyjątkiem przypadków, gdy użytkownik jawnie ustawia <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> wyznacza drukarki domyślnej; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter%2A> zawsze zwraca `false` po jawnie ustawiona <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> właściwości na wartość ciągu innych niż `null`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter%2A> właściwości. Do uruchomienia tego przykładu, wklej następujący kod do formularza i wywołanie `PopulateInstalledPrintersCombo` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-csharp[System.Drawing.Printing.PrinterSettingsEx#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Printing.PrinterSettingsEx/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Printing.PrinterSettingsEx#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Printing.PrinterSettingsEx/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDirectPrintingSupported">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy drukarka obsługuje drukowania pliku obrazu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDirectPrintingSupported">
      <MemberSignature Language="C#" Value="public bool IsDirectPrintingSupported (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectPrintingSupported(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDirectPrintingSupported(System::Drawing::Image ^ image);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Obraz do drukowania.</param>
        <summary>Pobiera wartość wskazującą, czy drukarka obsługuje drukowanie określony plik obrazu.</summary>
        <returns>
          <see langword="true" /> Jeśli drukarka obsługuje drukowanie określonego obrazu. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectPrintingSupported">
      <MemberSignature Language="C#" Value="public bool IsDirectPrintingSupported (System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectPrintingSupported(class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDirectPrintingSupported(System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFormat">
          <see cref="T:System.Drawing.Imaging.ImageFormat" /> Do drukowania.</param>
        <summary>Zwraca wartość wskazującą, czy drukarka obsługuje drukowanie format określonego obrazu.</summary>
        <returns>
          <see langword="true" /> Jeśli drukarka obsługuje drukowanie formacie określonego obrazu. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlotter">
      <MemberSignature Language="C#" Value="public bool IsPlotter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlotter" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPlotter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPlotter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy drukarka będzie miał.</summary>
        <value>
          <see langword="true" /> Jeśli drukarka jest miał; <see langword="false" /> Jeśli drukarka jest rastrowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Miał jest drukarki, która jest wektorowa przeciwieństwie wydajnego rastrowego. Większość drukarek wektorowa używa poszczególnych pióra kreślenia do generowania danych wyjściowych.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> właściwość wskazuje prawidłową drukarkę.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> właściwość wskazuje prawidłową drukarkę; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas pobierania lub ustawiania niektórych właściwości prawidłową drukarkę jest wymagane, czyli zgłoszony wyjątek. Aby uniknąć wyjątki, użyj <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> właściwości po ustawieniu <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> aby bezpiecznie ustalić, czy drukarka jest prawidłowy.  
  
   
  
## Examples  
 Poniższy przykład kodu określa drukarki docelowej przez ustawienie <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> właściwości oraz jeśli <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> jest `true`, drukuje dokument z określonym drukarki. W przykładzie przedstawiono trzy wymagania wstępne:  
  
-   Zmiennej o nazwie `filePath` została ustawiona jako ścieżka pliku do drukowania.  
  
-   Metodę o nazwie `pd_PrintPage`, która obsługuje <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzenia został zdefiniowany.  
  
-   Zmiennej o nazwie `printer` została ustawiona na nazwę drukarki.  
  
 Użyj <xref:System.Drawing>, <xref:System.Drawing.Printing>, i <xref:System.IO> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="LandscapeAngle">
      <MemberSignature Language="C#" Value="public int LandscapeAngle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LandscapeAngle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LandscapeAngle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LandscapeAngle { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kąt w stopniach, w orientacji pionowej jest obracana w celu utworzenia orientacji poziomej.</summary>
        <value>Kąt w stopniach orientacji pionowej jest obracana w celu utworzenia orientacji poziomej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obrót prawidłowe wartości to 90 i 270 stopni. Jeśli pozioma nie jest obsługiwana, obrotu jedyną prawidłową wartość wynosi 0 stopni. Możesz ustawić <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=nameWithType> właściwości `true` Aby wydrukować stronę w formacie orientacji poziomej.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PageSettings.Landscape" />
      </Docs>
    </Member>
    <Member MemberName="MaximumCopies">
      <MemberSignature Language="C#" Value="public int MaximumCopies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumCopies" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumCopies As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumCopies { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera maksymalną liczbę kopii, które drukarki umożliwia użytkownikowi drukowanie naraz.</summary>
        <value>Maksymalna liczba kopii, które drukarki umożliwia użytkownikowi drukowanie naraz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Drawing.Printing.PrinterSettings.Copies%2A> właściwości Liczba kopii do drukowania. Użyj <xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> właściwości w celu określenia, czy drukarka obsługuje drukowanie wielu kopii w czasie, ponieważ niektóre nie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
      </Docs>
    </Member>
    <Member MemberName="MaximumPage">
      <MemberSignature Language="C#" Value="public int MaximumPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumPage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> lub <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> możliwa do wyboru w <see cref="T:System.Windows.Forms.PrintDialog" />.</summary>
        <value>Maksymalna <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> lub <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> możliwa do wyboru w <see cref="T:System.Windows.Forms.PrintDialog" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> właściwości są używane przez <xref:System.Windows.Forms.PrintDialog> użytkownik wybrał zakres wydruku. <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Musi mieć ustawioną właściwość `true` umożliwia użytkownikowi określenie zakresu wydruku. Podczas ustawiania <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> lub <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> wartości programowo, oraz zapewnia ich w ramach zakresu zdefiniowanego przez <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> właściwości lub wyjątek zostanie zgłoszony podczas wyświetlania <xref:System.Windows.Forms.PrintDialog>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> właściwości jest mniejsza od zera.</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="MinimumPage">
      <MemberSignature Language="C#" Value="public int MinimumPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumPage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia minimalny <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> lub <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> możliwa do wyboru w <see cref="T:System.Windows.Forms.PrintDialog" />.</summary>
        <value>Minimalna <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> lub <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> możliwa do wyboru w <see cref="T:System.Windows.Forms.PrintDialog" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> właściwości są używane przez <xref:System.Windows.Forms.PrintDialog> użytkownik wybrał zakres wydruku. <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Musi mieć ustawioną właściwość `true` umożliwia użytkownikowi określenie zakresu wydruku. Podczas ustawiania <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> lub <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> wartości programowo, oraz zapewnia ich w ramach zakresu zdefiniowanego przez <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> właściwości lub wyjątek zostanie zgłoszony podczas wyświetlania <xref:System.Windows.Forms.PrintDialog>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> właściwości jest mniejsza od zera.</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="PaperSizes">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PaperSizeCollection PaperSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PaperSizeCollection PaperSizes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PaperSizes As PrinterSettings.PaperSizeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PaperSizeCollection ^ PaperSizes { System::Drawing::Printing::PrinterSettings::PaperSizeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PaperSizeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiarów papieru, które są obsługiwane przez tę drukarkę.</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> reprezentujący rozmiarów papieru, które są obsługiwane przez tę drukarkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection> Zawiera <xref:System.Drawing.Printing.PaperSize> wystąpień, które reprezentują rozmiarów papieru za pośrednictwem <xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=nameWithType> właściwość, która zawiera jedną z <xref:System.Drawing.Printing.PaperKind> wartości.  
  
 Zwykle, ustaw rozmiar papieru na stronie za pośrednictwem <xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=nameWithType> prawidłowej właściwości <xref:System.Drawing.Printing.PaperSize> dostępne za pośrednictwem <xref:System.Drawing.Printing.PrinterSettings.PaperSizes%2A> kolekcji.  
  
 Aby określić niestandardowy rozmiar papieru, zobacz <xref:System.Drawing.Printing.PaperSize.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `comboPaperSize` pola kombi z drukarką na obsługiwanych rozmiarów papieru. Ponadto rozmiar niestandardowy jest tworzony i dodawany do pola kombi. <xref:System.Drawing.Printing.PaperSize.PaperName%2A> Jest rozpoznawany jako właściwość, która zapewnia wyświetlanego ciągu dla elementu dodawany przez <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwości pola kombi. Przykład wymaga, aby <xref:System.Drawing.Printing.PrintDocument> zmiennej o nazwie `printDoc` istnieje i czy istnieje określonych kombi.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PaperSize" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
        <altmember cref="P:System.Windows.Forms.ListControl.DisplayMember" />
      </Docs>
    </Member>
    <Member MemberName="PaperSources">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PaperSourceCollection PaperSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PaperSourceCollection PaperSources" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PaperSources As PrinterSettings.PaperSourceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PaperSourceCollection ^ PaperSources { System::Drawing::Printing::PrinterSettings::PaperSourceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PaperSourceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera źródło zasobnikach, które są dostępne na drukarce.</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> reprezentujący źródło zasobnikach, które są dostępne na tej drukarce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection> Zawiera <xref:System.Drawing.Printing.PaperSource> wystąpień, które reprezentują papieru źródła zasobników za pośrednictwem <xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=nameWithType> właściwość, która zawiera jedną z <xref:System.Drawing.Printing.PaperSourceKind> wartości.  
  
 Zwykle ustawić źródła papieru strony za pomocą <xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=nameWithType> prawidłowej właściwości <xref:System.Drawing.Printing.PaperSource> dostępne za pośrednictwem <xref:System.Drawing.Printing.PrinterSettings.PaperSources%2A> kolekcji.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `comboPaperSource` pola kombi z drukarką na obsługiwany źródła papieru. <xref:System.Drawing.Printing.PaperSource.SourceName%2A> Jest rozpoznawany jako właściwość, która zapewnia wyświetlanego ciągu dla elementu dodawany przez <xref:System.Windows.Forms.ListControl.DisplayMember%2A> właściwości pola kombi. Przykład wymaga, aby <xref:System.Drawing.Printing.PrintDocument> zmiennej o nazwie `printDoc` istnieje i czy istnieje określonych kombi.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PaperSource" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
        <altmember cref="P:System.Windows.Forms.ListControl.DisplayMember" />
      </Docs>
    </Member>
    <Member MemberName="PrinterName">
      <MemberSignature Language="C#" Value="public string PrinterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrinterName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrinterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę drukarki do użycia.</summary>
        <value>Nazwa drukarki do użycia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu nazwę drukarki, wywołaj <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> ustalenie, czy nazwa drukarki został rozpoznany jako prawidłowy drukarki w systemie.  
  
 Można również użyć <xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A> właściwość, aby uzyskać listę zainstalowanych w systemie drukarek.  
  
   
  
## Examples  
 Poniższy przykład kodu określa drukarki docelowej przez ustawienie <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> właściwości oraz jeśli <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> jest `true`, drukuje dokument z określonym drukarki. W przykładzie przedstawiono trzy wymagania wstępne:  
  
-   Zmiennej o nazwie `filePath` została ustawiona jako ścieżka pliku do drukowania.  
  
-   Metodę o nazwie `pd_PrintPage`, która obsługuje <xref:System.Drawing.Printing.PrintDocument.PrintPage> zdarzenia został zdefiniowany.  
  
-   Zmiennej o nazwie `printer` została ustawiona na nazwę drukarki.  
  
 Użyj <xref:System.Drawing>, <xref:System.Drawing.Printing>, i <xref:System.IO> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Drukowanie i dostęp do wszystkich drukarek w sieci. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      </Docs>
    </Member>
    <Member MemberName="PrinterResolutions">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection PrinterResolutions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PrinterResolutionCollection PrinterResolutions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrinterResolutions As PrinterSettings.PrinterResolutionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PrinterResolutionCollection ^ PrinterResolutions { System::Drawing::Printing::PrinterSettings::PrinterResolutionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PrinterResolutionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie rozwiązania, które są obsługiwane przez tę drukarkę.</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> reprezentujący rozwiązania, które są obsługiwane przez tę drukarkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection> Zawiera <xref:System.Drawing.Printing.PrinterResolution> wystąpień, które reprezentują rozdzielczości drukarki, są obsługiwane w ramach <xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=nameWithType> właściwość, która zawiera jedną z <xref:System.Drawing.Printing.PrinterResolutionKind> wartości.  
  
 Zwykle ustawić źródła papieru strony za pomocą <xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=nameWithType> prawidłowej właściwości <xref:System.Drawing.Printing.PrinterResolution> dostępne za pośrednictwem <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutions%2A> kolekcji.  
  
 Jeśli <xref:System.Drawing.Printing.PrinterResolutionKind> jest `Custom`, następnie użyć <xref:System.Drawing.Printing.PrinterResolution.X%2A> i <xref:System.Drawing.Printing.PrinterResolution.Y%2A> właściwości można odpowiednio ustalić rozwiązanie niestandardowe drukarki w poziomie i w pionie kierunkach.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `comboPrintResolution` pole kombi z obsługiwanej rozdzielczości. Przykład wymaga, aby <xref:System.Drawing.Printing.PrintDocument> zmiennej o nazwie `printDoc` istnieje i czy istnieje określonych kombi.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrinterResolution" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      </Docs>
    </Member>
    <Member MemberName="PrintFileName">
      <MemberSignature Language="C#" Value="public string PrintFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrintFileName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrintFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pliku, podczas drukowania pliku.</summary>
        <value>Nazwa pliku, podczas drukowania pliku.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do odczytu podczas pobierania nazwy pliku i zapisu, gdy ustawienie nazwy pliku. Związane z wyliczenia <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PrintRange">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintRange PrintRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Printing.PrintRange PrintRange" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintRange As PrintRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintRange PrintRange { System::Drawing::Printing::PrintRange get(); void set(System::Drawing::Printing::PrintRange value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numery stron, które mają być drukowane określone przez użytkownika.</summary>
        <value>Jeden z <see cref="T:System.Drawing.Printing.PrintRange" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> Jest używana przez <xref:System.Windows.Forms.PrintDialog>.when użytkownik wybiera zakres wydruku. Wartość domyślna <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> jest `AllPages`. Umożliwia użytkownikowi określenie zakresu stron do drukowania, <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> musi mieć ustawioną właściwość `true`. Umożliwia użytkownikowi określenie wybranej strony do drukowania, <xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=nameWithType> musi mieć ustawioną właściwość `true`.  
  
 Podczas procesu drukowania w <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> zdarzeń, widok <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ustalenie ma być drukowana. Jeśli <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> jest <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>, użyj <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> właściwości, aby ustalić, jakie strony ma być drukowana. Jeśli <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> jest <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, następnie podaj dane wyjściowe tylko dla wybranej strony.  
  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> można również ustawić programowo, mimo że <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> implementacja jest taka sama.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> właściwość nie jest jednym z <see cref="T:System.Drawing.Printing.PrintRange" /> wartości.</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="T:System.Drawing.Printing.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="PrintToFile">
      <MemberSignature Language="C#" Value="public bool PrintToFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintToFile" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintToFile" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintToFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintToFile { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy drukowania dane wyjściowe są wysyłane do pliku zamiast portu.</summary>
        <value>
          <see langword="true" /> Jeśli drukowanie dane wyjściowe są wysyłane do pliku; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PrintToFile%2A> Jest używana przez <xref:System.Windows.Forms.PrintDialog> użytkownik wybrał **Drukuj do pliku** opcji. W takim przypadku port wyjściowy jest równa "FILE" powoduje podsystemu drukowania Windows Monituj użytkownika o pliku kiedy nazwa <xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=nameWithType> metoda jest wywoływana.  
  
> [!NOTE]
>  <xref:System.Drawing.Printing.PrinterSettings.PrintToFile%2A> Właściwość jest używana tylko przez <xref:System.Windows.Forms.PrintDialog> i nie można ustawić programowo. `Print to file` Opcja jest dostępna tylko na <xref:System.Windows.Forms.PrintDialog> podczas <xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.PrintDialog.AllowPrintToFile" />
      </Docs>
    </Member>
    <Member MemberName="SetHdevmode">
      <MemberSignature Language="C#" Value="public void SetHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevmode(IntPtr hdevmode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Dojście do Win32 <see langword="DEVMODE" /> struktury.</param>
        <summary>Kopiuje odpowiednie informacje z podanym dojściu z do <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` struktury są specyficzne dla urządzenia i kopiowanie `DEVMODE` struktury z jednego <xref:System.Drawing.Printing.PrinterSettings> do <xref:System.Drawing.Printing.PrinterSettings> inną drukarkę nie jest obsługiwane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Dojście drukarki jest nieprawidłowa.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Drukowanie i dostęp do wszystkich drukarek w sieci. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetHdevnames">
      <MemberSignature Language="C#" Value="public void SetHdevnames (IntPtr hdevnames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevnames(native int hdevnames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevnames (hdevnames As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevnames(IntPtr hdevnames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevnames" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevnames">Dojście do Win32 <see langword="DEVNAMES" /> struktury.</param>
        <summary>Kopiuje odpowiednie informacje z podanym dojściu z do <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Dojście drukarki jest nieprawidłowa.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Drukowanie i dostęp do wszystkich drukarek w sieci. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SupportsColor">
      <MemberSignature Language="C#" Value="public bool SupportsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsColor" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy drukarka obsługuje drukowanie kolorów.</summary>
        <value>
          <see langword="true" /> w przypadku tej drukarki obsługuje koloru; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Drukowanie za pomocą koloru i jeśli drukarka obsługuje, ustaw <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=nameWithType> do `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu drukuje dokument z pierwszej strony w kolorze, jeśli drukarka obsługuje tę funkcję. Przykład wymaga, aby <xref:System.Drawing.Printing.PrintDocument> zmiennej o nazwie `printDoc` został utworzony oraz <xref:System.Drawing.Printing.PrintDocument.PrintPage> i <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> zdarzenia są obsługiwane.  
  
 Użyj <xref:System.Drawing> i <xref:System.Drawing.Printing> przestrzeni nazw w tym przykładzie.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PageSettings.Color" />
      </Docs>
    </Member>
    <Member MemberName="ToPage">
      <MemberSignature Language="C#" Value="public int ToPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ToPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      <MemberSignature Language="VB.NET" Value="Public Property ToPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ToPage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numer ostatniej strony do drukowania.</summary>
        <value>Numer ostatniej strony do wydrukowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> właściwości są używane przez <xref:System.Windows.Forms.PrintDialog> użytkownik wybrał zakres wydruku. <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Musi mieć ustawioną właściwość `true` umożliwia użytkownikowi określenie zakresu wydruku. Ponadto <xref:System.Windows.Forms.PrintDialog> wymaga również <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> należy określić i <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> wartości muszą mieścić się w zakresie.  
  
 Podczas procesu drukowania w <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> zdarzeń, widok <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ustalenie ma być drukowana. Jeśli <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> jest <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>, użyj <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> właściwości, aby ustalić, jakie strony ma być drukowana. Jeśli <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> jest <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, następnie podaj dane wyjściowe tylko dla wybranej strony.  
  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> i <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> można również ustawić programowo, mimo że <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> implementacja jest taka sama.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> właściwości jest mniejsza od zera.</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zawiera informacje na temat <see cref="T:System.Drawing.Printing.PrinterSettings" /> w postaci ciągu.</summary>
        <returns>Ciąg.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>