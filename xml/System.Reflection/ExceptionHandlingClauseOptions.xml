<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExceptionHandlingClauseOptions.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5392d3cbc4a7aaa362797299233bcbad4451106f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">392d3cbc4a7aaa362797299233bcbad4451106f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Identifies kinds of exception-handling clauses.</source>
          <target state="translated">Identyfikuje rodzaje klauzule obsługi wyjątków.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>To examine the exception-handling clauses in a method, obtain a <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object and call the <ph id="ph2">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> method to obtain the method body.</source>
          <target state="translated">Aby zbadać klauzule obsługi wyjątków w metodzie, należy uzyskać <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> obiekt i wywołanie <ph id="ph2">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> metodę, aby uzyskać treści metody.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objects.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> właściwość, aby uzyskać listę <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</source>
          <target state="translated">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy metadanych i formatów instrukcji języka pośredniego (MSIL) firmy Microsoft.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">Dokumentacja jest dostępna w trybie online; zobacz <bpt id="p1">[</bpt>ECMA C# i wspólne normy infrastruktury języka<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> w witrynie MSDN i <bpt id="p2">[</bpt>standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> w witrynie sieci Web międzynarodowej Ecma.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph>, and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">Poniższy przykładowy kod definiuje metodę testu o nazwie <ph id="ph1">`MethodBodyExample`</ph>i wyświetla jego informacje o zmiennych lokalnych i klauzule obsługi wyjątków.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> Metoda jest używana do uzyskania <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> obiektu dla metody testowej.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property is used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objects and display their properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> Właściwość jest używana do uzyskiwania listy <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> obiekty i wyświetlania ich właściwości.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Not all computer languages can generate Filter clauses.</source>
          <target state="translated">Nie wszystkie języki komputer może generować klauzul filtru.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The Visual Basic example shows a filter clause, using a Visual Basic <ph id="ph1">`When`</ph> expression, which is omitted from the examples for other languages.</source>
          <target state="translated">Przykład Visual Basic zawiera klauzulę filtru, za pomocą języka Visual Basic <ph id="ph1">`When`</ph> wyrażenia, który został pominięty w przykładach dla innych języków.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Ten kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Reflection.ExceptionHandlingClauseOptions.Clause">
          <source>The clause accepts all exceptions that derive from a specified type.</source>
          <target state="translated">Klauzuli akceptuje wszystkie wyjątki, które pochodzą z określonego typu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Reflection.ExceptionHandlingClauseOptions.Fault">
          <source>The clause is executed if an exception occurs, but not on completion of normal control flow.</source>
          <target state="translated">Klauzuli jest wykonywana w przypadku wystąpienia wyjątku, ale nie po zakończeniu przepływu sterowania normalnego.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Reflection.ExceptionHandlingClauseOptions.Filter">
          <source>The clause contains user-specified instructions that determine whether the exception should be ignored (that is, whether normal execution should resume), be handled by the associated handler, or be passed on to the next clause.</source>
          <target state="translated">Klauzuli zawiera instrukcje określone przez użytkownika, które określają wyjątek należy ją ignorować (czy wykonanie normalnej powinien wznowić), są obsługiwane przez skojarzony program obsługi, czy przekazywany do klauzuli dalej.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Reflection.ExceptionHandlingClauseOptions.Finally">
          <source>The clause is executed whenever the try block exits, whether through normal control flow or because of an unhandled exception.</source>
          <target state="translated">Klauzula jest wykonywane przy każdym opuszcza blok try, czy za pośrednictwem przepływu sterowania normalne lub z powodu nieobsługiwanego wyjątku.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>