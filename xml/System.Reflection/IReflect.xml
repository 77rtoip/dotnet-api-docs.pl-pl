<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="219ff8b132ff6093e359a54ef339f48df3ffd3de" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52202330" /></Metadata><TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <TypeSignature Language="F#" Value="type IReflect = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cf6d7-101">Współdziała z <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">interfejsu IDispatch</see>.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-101">Interoperates with the <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch interface</see>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf6d7-102"><xref:System.Reflection.IReflect> Interfejs jest używany na potrzeby współdziałania z [interfejsu IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span><span class="sxs-lookup"><span data-stu-id="cf6d7-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span> <span data-ttu-id="cf6d7-103"><xref:System.Reflection.IReflect> definiuje podzbiór <xref:System.Type> metody odbicia.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="cf6d7-104">Implementowanie ten interfejs umożliwia typu dostosować jego zachowanie w przypadku, gdy obiekt jest uzyskiwany z modelu COM jako `IDispatch` obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="cf6d7-105"><xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> Klasa może być używana do organizowania obiekt, który implementuje <xref:System.Reflection.IReflect> lub <xref:System.Runtime.InteropServices.Expando.IExpando> jako COM `IDispatch` obiektu i na odwrót.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="iReflect.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cf6d7-106">Nazwa pola, aby znaleźć.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-106">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-107">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-107">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="cf6d7-108">Zwraca <see cref="T:System.Reflection.FieldInfo" /> obiekt, który odnosi się do określonego pola oraz flagę powiązania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-109">A <see cref="T:System.Reflection.FieldInfo" /> obiektu zawierającego informacje pola dla obiektu o nazwie, która spełnia kryteria ograniczające wyszukiwanie określonych w <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="cf6d7-110">Obiekt implementuje wiele pól o takiej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-110">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="iReflect.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-111">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-111">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="cf6d7-112">Zwraca tablicę <see cref="T:System.Reflection.FieldInfo" /> obiektów, które odnoszą się do wszystkich pól bieżącej klasy.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-113">Tablica <see cref="T:System.Reflection.FieldInfo" /> obiektów zawierający wszystkie informacje dla tego obiektu odbicia, który spełnia kryteria ograniczające wyszukiwanie określonego w polu <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf6d7-114">Dopasowanie opiera się na nazwę.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-114">The match is based upon a name.</span></span> <span data-ttu-id="cf6d7-115">Każde pole musi mieć unikatową nazwę.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-115">Each field must have a unique name.</span></span> <span data-ttu-id="cf6d7-116"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> Flaga Określa, że metod niepublicznych są uwzględnione w wyszukiwaniu.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="cf6d7-117"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> Flaga Określa, że metody publiczne są uwzględnione w wyszukiwaniu.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cf6d7-118">Nazwa elementu członkowskiego, aby znaleźć.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-118">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-119">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-119">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="cf6d7-120">Pobiera tablicę <see cref="T:System.Reflection.MemberInfo" /> obiekty odpowiadające na wszystkie publiczne elementy Członkowskie lub wszystkie elementy członkowskie, które odpowiadają określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-121">Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów pasujących <paramref name="name" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf6d7-122"><xref:System.Reflection.IReflect.GetMember%2A> Metoda pobiera tablicę <xref:System.Reflection.MemberInfo> obiektów przy użyciu nazwy i atrybut wiązania, które odpowiadają Wszystkie publiczne elementy Członkowskie lub wszystkie elementy członkowskie, które odpowiadają określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="cf6d7-123">Przypadku określona nazwa jest zaobserwowane lub ignorowane, zgodnie z określonym <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-124">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-124">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="cf6d7-125">Pobiera tablicę <see cref="T:System.Reflection.MemberInfo" /> obiektów, które odpowiadają Wszystkie publiczne elementy Członkowskie lub wszystkich elementów członkowskich w bieżącej klasie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-126">Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów zawierające wszystkie informacje o członkach dla tego obiektu odbicia.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf6d7-127">Ta metoda pobiera tablicę <xref:System.Reflection.MemberInfo> obiektów przy użyciu atrybutu powiązania, który odpowiada wszystkie publiczne elementy Członkowskie lub wszystkich elementów członkowskich w bieżącej klasie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="cf6d7-128">Zwraca tablicę wszystkich elementów członkowskich zdefiniowanych dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf6d7-129">Pobiera <see cref="T:System.Reflection.MethodInfo" /> obiekt, który odnosi się do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cf6d7-130">Nazwa elementu członkowskiego, aby znaleźć.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-130">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-131">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-131">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="cf6d7-132">Pobiera <see cref="T:System.Reflection.MethodInfo" /> obiekt, który odnosi się do określonej metody w ramach określone kryteria ograniczające wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-133">A <see cref="T:System.Reflection.MethodInfo" /> obiekt zawierający informacje o metodzie dopasowany jest oparty na metody nazwę i wyszukaj ograniczenia określone w <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="cf6d7-134">Obiekt implementuje wiele metod o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-134">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cf6d7-135">Nazwa elementu członkowskiego, aby znaleźć.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-135">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-136">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-136">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="cf6d7-137">Obiekt, który implementuje <see cref="T:System.Reflection.Binder" />, zawierający właściwości związane z tej metody.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="types"><span data-ttu-id="cf6d7-138">Tablica umożliwia wybranie jednego z przeciążonych metod.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-138">An array used to choose among overloaded methods.</span></span></param>
        <param name="modifiers"><span data-ttu-id="cf6d7-139">Tablica Modyfikatory parametrów umożliwia powiązanie, Praca z sygnaturami parametru, w których typy zostały zmodyfikowane.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="cf6d7-140">Pobiera <see cref="T:System.Reflection.MethodInfo" /> obiekt odpowiadający określonej metody, przy użyciu <see cref="T:System.Type" /> macierzy w celu wyboru z przeciążonych metod.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-141">Żądana metoda zgodny z określonymi parametrami.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-141">The requested method that matches all the specified parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf6d7-142">Zwracana jest wartość dopasowania na podstawie nazwy metody <xref:System.Reflection.BindingFlags> składowej wyliczenia, rodzaj konwersji typu określonego przez `binder` parametr, przeciążenia, a <xref:System.Reflection.ParameterInfo> opisujący podpis metody.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="cf6d7-143">Obiekt implementuje wiele metod o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-143">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="iReflect.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-144">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-144">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="cf6d7-145">Pobiera tablicę <see cref="T:System.Reflection.MethodInfo" /> obiektów za pomocą wszystkich metod publicznych lub wszystkie metody klasy.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-146">Tablica <see cref="T:System.Reflection.MethodInfo" /> obiektów zawierające wszystkie metody zdefiniowane dla tego obiektu odbicia, spełniające kryteria ograniczające wyszukiwanie określonych w <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf6d7-147">Atrybut niepublicznych `bindingAttr` wskazane jest tylko jeśli są zwracane metody publiczne.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="iReflect.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-148">Atrybut wiązania używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-148">The binding attribute used to control the search.</span></span></param>
        <summary><span data-ttu-id="cf6d7-149">Pobiera tablicę <see cref="T:System.Reflection.PropertyInfo" /> odpowiadające na wszystkie właściwości publiczne lub wszystkie właściwości bieżącej klasy obiektów.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-150">Tablica <see cref="T:System.Reflection.PropertyInfo" /> obiektów dla wszystkich właściwości, które są zdefiniowane w obiekcie odbicia.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf6d7-151">Pobiera <see cref="T:System.Reflection.PropertyInfo" /> obiekt odpowiadający określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cf6d7-152">Nazwa właściwości, aby znaleźć.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-152">The name of the property to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-153">Atrybutów powiązania, używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-153">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="cf6d7-154">Pobiera <see cref="T:System.Reflection.PropertyInfo" /> obiekt odpowiadający określonej właściwości w obszarze określone kryteria ograniczające wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-155">A <see cref="T:System.Reflection.PropertyInfo" /> obiekt znajduje się właściwość, która spełnia kryteria ograniczające wyszukiwanie określonych w <paramref name="bindingAttr" />, lub <see langword="null" /> Jeśli właściwość nie znajduje się.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="cf6d7-156">Obiekt implementuje wiele pól o takiej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-156">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cf6d7-157">Nazwa elementu członkowskiego, aby znaleźć.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-157">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="cf6d7-158">Atrybut wiązania używane do kontrolowania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-158">The binding attribute used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="cf6d7-159">Obiekt, który implementuje <see cref="T:System.Reflection.Binder" />, zawierający właściwości związane z tej metody.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="returnType"><span data-ttu-id="cf6d7-160">Typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-160">The type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="cf6d7-161">Tablica umożliwia wybranie jednego z przeciążonych metod o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-161">An array used to choose among overloaded methods with the same name.</span></span></param>
        <param name="modifiers"><span data-ttu-id="cf6d7-162">Tablica, używane do wybierania Modyfikatory parametrów.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-162">An array used to choose the parameter modifiers.</span></span></param>
        <summary><span data-ttu-id="cf6d7-163">Pobiera <see cref="T:System.Reflection.PropertyInfo" /> obiekt, który odnosi się do określonej właściwości przy użyciu określone kryteria ograniczające wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-164">A <see cref="T:System.Reflection.PropertyInfo" /> obiekt znajduje się właściwość, jeśli właściwość o podanej nazwie znajdują się w tym obiekcie odbicia lub <see langword="null" /> Jeśli właściwość nie znajduje się.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf6d7-165">Ta metoda umożliwia pobranie <xref:System.Reflection.PropertyInfo> obiekt odpowiadający określonej właściwości w obszarze określone kryteria ograniczające wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="cf6d7-166">Tablica typu służy do wyboru spośród przeciążonych metod.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="iReflect.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cf6d7-167">Nazwa elementu członkowskiego, aby znaleźć.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-167">The name of the member to find.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="cf6d7-168">Jedną z <see cref="T:System.Reflection.BindingFlags" /> atrybuty wywołania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span></span> <span data-ttu-id="cf6d7-169"><paramref name="invokeAttr" /> Parametru może być Konstruktor, metody, właściwości lub pola.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-169">The <paramref name="invokeAttr" /> parameter may be a constructor, method, property, or field.</span></span> <span data-ttu-id="cf6d7-170">Należy określić atrybut odpowiedniego wywołania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-170">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="cf6d7-171">Wywołaj domyślny element członkowski klasy, przekazując ciąg pusty ("") jako nazwę elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span></span></param>
        <param name="binder"><span data-ttu-id="cf6d7-172">Jedną z <see cref="T:System.Reflection.BindingFlags" /> flagi bitowe.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span></span> <span data-ttu-id="cf6d7-173">Implementuje <see cref="T:System.Reflection.Binder" />, zawierający właściwości związane z tej metody.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="target"><span data-ttu-id="cf6d7-174">Obiekt do wywołania określonego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-174">The object on which to invoke the specified member.</span></span> <span data-ttu-id="cf6d7-175">Ten parametr jest ignorowany dla statycznych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-175">This parameter is ignored for static members.</span></span></param>
        <param name="args"><span data-ttu-id="cf6d7-176">Tablica obiektów, która zawiera liczbę, kolejność i typ parametrów elementu członkowskiego, do wywołania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="cf6d7-177">Jest to pusta tablica, jeśli nie ma żadnych parametrów.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-177">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="cf6d7-178">Tablica <see cref="T:System.Reflection.ParameterModifier" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span></span> <span data-ttu-id="cf6d7-179">Ta tablica ma taką samą długość jak <paramref name="args" /> parametr reprezentujący atrybuty argument wywołanego elementu członkowskiego w metadanych.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-179">This array has the same length as the <paramref name="args" /> parameter, representing the invoked member's argument attributes in the metadata.</span></span> <span data-ttu-id="cf6d7-180">Parametr może mieć następujące atrybuty: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, i <see langword="pdHasDefault" />.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span></span> <span data-ttu-id="cf6d7-181">Reprezentują one [In] [Out], [retval] [opcjonalnie] i domyślnego parametru, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span></span> <span data-ttu-id="cf6d7-182">Te atrybuty są używane przez różne usługi współdziałania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-182">These attributes are used by various interoperability services.</span></span></param>
        <param name="culture"><span data-ttu-id="cf6d7-183">Wystąpienie <see cref="T:System.Globalization.CultureInfo" /> używane do sterowania wymuszanie typów.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="cf6d7-184">Na przykład <paramref name="culture" /> konwertuje <see langword="String" /> reprezentujący 1000- <see langword="Double" /> wartości, ponieważ 1000 jest reprezentowany w inny sposób przez różnych kultur.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-184">For example, <paramref name="culture" /> converts a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="cf6d7-185">Jeśli ten parametr jest <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> dla bieżącego wątku jest używana.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="cf6d7-186">A <see langword="String" /> tablicy parametrów.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-186">A <see langword="String" /> array of parameters.</span></span></param>
        <summary><span data-ttu-id="cf6d7-187">Wywołuje określony element członkowski.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-187">Invokes a specified member.</span></span></summary>
        <returns><span data-ttu-id="cf6d7-188">Określony element członkowski.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-188">The specified member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf6d7-189">Metody, która ma zostać wywołana muszą być dostępne i zapewnić bardziej konkretny od pozostałych dopasowanie określoną listę argumentów, w ramach ograniczeń określonych atrybutów integratorów modeli i wywołanie.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="cf6d7-190">Metoda jest wywoływana, jeśli liczba parametrów w deklaracji metody jest równa liczbie argumentów określoną listę argumentów, a typ każdego argumentu jest możliwe przekonwertowanie, integratorów modeli do typu parametru.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf6d7-191">Tablica Modyfikatory parametrów są przekazywane do <xref:System.Reflection.IReflect.InvokeMember%2A> metoda musi zawierać modyfikator jeden parametr.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="cf6d7-192">Tylko pierwszy modyfikator parametru jest uznawany za podczas określania który argument musi być przekazywane przez odwołanie, gdy jest uwidaczniany w modelu COM.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="cf6d7-193">Obiekt wiążący znajduje wszystkie metody dopasowania, zgodnie z typem powiązania żądane (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="cf6d7-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="cf6d7-194">Zestaw metod są filtrowane według nazwy, liczba argumentów i zestaw modyfikatorów wyszukiwania zdefiniowane w obiekt wiążący.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="cf6d7-195">Po wybraniu metody jest wywoływana, a w tym momencie zaznaczono ułatwień dostępu.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="cf6d7-196">Wyszukiwanie może kontrolować, które zestaw metod, przeszukiwany jest na podstawie atrybutu ułatwień dostępu powiązany z metodą.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="cf6d7-197"><xref:System.Reflection.Binder.BindToMethod%2A> Wybiera wywoływanej metody.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="cf6d7-198">Domyślny integrator wybiera najbardziej określonego dopasowania.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="cf6d7-199">Ograniczenia dostępu są ignorowane w przypadku w pełni zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="cf6d7-200">Oznacza to, że konstruktory prywatne, metody, pola i właściwości umożliwia dostęp i wywoływany przez odbicie, zawsze wtedy, gdy kod jest w pełni zaufany.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf6d7-201">W poniższym przykładzie uzyskano wartość <xref:System.DateTime.Now%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf6d7-202">Określono więcej niż jeden argument dla pola <see langword="set" />.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-202">More than one argument is specified for a field <see langword="set" />.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="cf6d7-203">Nie można odnaleźć pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-203">The field or property cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="cf6d7-204">Nie można odnaleźć metody.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-204">The method cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cf6d7-205">Od prywatnej składowej jest wywoływana bez koniecznego <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf6d7-206">Pobiera bazowy typ, który reprezentuje <see cref="T:System.Reflection.IReflect" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></summary>
        <value><span data-ttu-id="cf6d7-207">Bazowy typ, który reprezentuje <see cref="T:System.Reflection.IReflect" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf6d7-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>