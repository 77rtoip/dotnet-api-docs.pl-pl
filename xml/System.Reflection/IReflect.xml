<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReflect.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e4e9ce35ae51db5215ec0931c6460ac8367f47a6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4e9ce35ae51db5215ec0931c6460ac8367f47a6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Interoperates with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated">Współdziała z <bpt id="p1">[</bpt>interfejsu IDispatch<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> interface is used to interoperate with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> Interfejs jest używany na potrzeby współdziałania z <bpt id="p1">[</bpt>interfejsu IDispatch<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> defines a subset of the <ph id="ph2">&lt;xref:System.Type&gt;</ph> reflection methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> Definiuje ona podzestaw <ph id="ph2">&lt;xref:System.Type&gt;</ph> metody odbicia.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an <ph id="ph1">`IDispatch`</ph> object.</source>
          <target state="translated">Implementowanie ten interfejs umożliwia typ, aby dostosować zachowanie, gdy obiekt jest uzyskiwany z modelu COM jako <ph id="ph1">`IDispatch`</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph> class can be used to marshal an object that implements <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph> as a COM <ph id="ph4">`IDispatch`</ph> object, and vice versa.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph> Klasa może być używana do organizowania obiektu implementującego <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> lub <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph> jako COM <ph id="ph4">`IDispatch`</ph> obiektu i na odwrót.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The name of the field to find.</source>
          <target state="translated">Nazwa pola można znaleźć.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Atrybuty powiązanie używane do sterowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object that corresponds to the specified field and binding flag.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> obiekt, który odpowiada flagi powiązania i określonego pola.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object containing the field information for the named object that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> obiektu zawierającego informacje pola o nazwie obiektu spełniającego ograniczenia wyszukiwania określone w <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">Obiekt implementuje wiele pól o takiej samej nazwie.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Atrybuty powiązanie używane do sterowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects that correspond to all fields of the current class.</source>
          <target state="translated">Zwraca tablicę <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> obiektów, które odnoszą się do wszystkich pól bieżącej klasy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects containing all the field information for this reflection object that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> obiektów zawierających wszystkie informacje pola dla tego obiektu odbicia spełniającego ograniczenia wyszukiwania określone w <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The match is based upon a name.</source>
          <target state="translated">Dopasowanie opiera się na nazwę.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>Each field must have a unique name.</source>
          <target state="translated">Każde pole musi mieć unikatową nazwę.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType&gt;</ph> flag specifies that non-public methods are included in the search.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType&gt;</ph> Flaga Określa, że metody niepublicznej znajdują się w wyszukiwaniu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType&gt;</ph> flag specifies that public methods are included in the search.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType&gt;</ph> Flaga Określa, że metody publiczne są uwzględniane w wyszukiwaniu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The name of the member to find.</source>
          <target state="translated">Nazwa elementu członkowskiego do znalezienia.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Atrybuty powiązanie używane do sterowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects corresponding to all public members or to all members that match a specified name.</source>
          <target state="translated">Pobiera tablicę <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> obiekty odpowiadające wszystkich publicznych elementów członkowskich lub wszystkie elementy członkowskie, które odpowiada określonej nazwy.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects matching the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parameter.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> obiektów pasujących <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph> method retrieves an array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph> Metoda pobiera tablicę <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> obiektów przy użyciu nazwy i atrybut wiązania, które odpowiadają wszystkich publicznych elementów członkowskich lub wszystkie elementy członkowskie, które odpowiada określonej nazwy.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The case of the specified name is observed or ignored, as specified by <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku określonej nazwy jest obserwowanych lub ignorowane, zgodnie z określonym <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Atrybuty powiązanie używane do sterowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects that correspond either to all public members or to all members of the current class.</source>
          <target state="translated">Pobiera tablicę <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> obiektów, które odpowiadają wszystkich publicznych elementów członkowskich lub wszystkie elementy członkowskie klasy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects containing all the member information for this reflection object.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> obiektów zawierających wszystkie informacje elementu członkowskiego dla tego obiektu odbicia.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>This method retrieves an array of <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</source>
          <target state="translated">Ta metoda pobiera tablicę <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> obiektów przy użyciu atrybut powiązania, który odpowiada wszystkich publicznych elementów członkowskich lub wszystkie elementy członkowskie klasy.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>It returns an array of all of the members defined for this object.</source>
          <target state="translated">Zwraca tablicę wszystkich elementów członkowskich zdefiniowanych dla tego obiektu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds to a specified method.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> obiekt, który odpowiada określonej metody.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The name of the member to find.</source>
          <target state="translated">Nazwa elementu członkowskiego do znalezienia.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Atrybuty powiązanie używane do sterowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds to a specified method under specified search constraints.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> obiekt, który odpowiada określonej metody w obszarze określonej ograniczenia wyszukiwania.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object containing the method information, with the match being based on the method name and search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> obiekt zawierający informacje o metodzie dopasowany na ograniczenia nazwy i wyszukiwania metody określone w <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">Obiekt implementuje wiele metod o tej samej nazwie.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The name of the member to find.</source>
          <target state="translated">Nazwa elementu członkowskiego do znalezienia.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Atrybuty powiązanie używane do sterowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">Obiekt, który implementuje <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, zawierający właściwości związanych z tej metody.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose among overloaded methods.</source>
          <target state="translated">Tablica pozwala wybrać jedną z metod przeciążona.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</source>
          <target state="translated">Tablica modyfikatorów parametrów umożliwia powiązanie pracować z podpisów parametru, w których typy zostały zmodyfikowane.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object corresponding to a specified method, using a <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> array to choose from among overloaded methods.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> obiekt odpowiadający określonej metody, przy użyciu <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> tablicy można wybrać jeden z przeciążonej metody.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The requested method that matches all the specified parameters.</source>
          <target state="translated">Żądana metoda zgodny z określonymi parametrami.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return value is a match based on the method name, <ph id="ph1">&lt;xref:System.Reflection.BindingFlags&gt;</ph> enum member, the kind of type conversion specified by the <ph id="ph2">`binder`</ph> parameter, the overload, and the <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> that describes the signature of the method.</source>
          <target state="translated">Wartość zwracana jest dopasowania na podstawie nazwy metody <ph id="ph1">&lt;xref:System.Reflection.BindingFlags&gt;</ph> elementu członkowskiego wyliczenia, rodzaj konwersji typu określony przez <ph id="ph2">`binder`</ph> parametr, przeciążenia i <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> , który opisuje sygnaturę metody.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">Obiekt implementuje wiele metod o tej samej nazwie.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Atrybuty powiązanie używane do sterowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects with all public methods or all methods of the current class.</source>
          <target state="translated">Pobiera tablicę <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> obiekty o wszystkich metod publicznych lub wszystkie metody klasy.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects containing all the methods defined for this reflection object that meet the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> obiektów zawierających wszystkie metody zdefiniowane dla tego obiektu odbicia, spełniających ograniczenia wyszukiwania określone w <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>The non-public attribute of <ph id="ph1">`bindingAttr`</ph> is indicated only if public methods are returned.</source>
          <target state="translated">Atrybut niepublicznych <ph id="ph1">`bindingAttr`</ph> wskazane jest tylko metody publiczne są zwracane.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">Atrybut wiązania użyć do kontrolowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects corresponding to all public properties or to all properties of the current class.</source>
          <target state="translated">Pobiera tablicę <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> odpowiadającym wszystkie właściwości publiczne lub na wszystkie właściwości bieżącej klasy obiektów.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects for all the properties defined on the reflection object.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> obiektów dla wszystkich właściwości zdefiniowane w obiekcie odbicia.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object corresponding to a specified property.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> obiekt odpowiadający określonej właściwości.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The name of the property to find.</source>
          <target state="translated">Nazwa właściwości, aby znaleźć.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Atrybuty powiązanie używane do sterowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> odpowiadający określonej właściwości w obiekcie określono ograniczenia wyszukiwania.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object for the located property that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the property was not located.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> obiektu właściwości zlokalizować spełniającego ograniczenia wyszukiwania określone w <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>, lub <ph id="ph3">&lt;see langword="null" /&gt;</ph> Jeśli właściwość nie znajduje się.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">Obiekt implementuje wiele pól o takiej samej nazwie.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The name of the member to find.</source>
          <target state="translated">Nazwa elementu członkowskiego do znalezienia.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">Atrybut wiązania użyć do kontrolowania wyszukiwania.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">Obiekt, który implementuje <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, zawierający właściwości związanych z tej metody.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The type of the property.</source>
          <target state="translated">Typ właściwości.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose among overloaded methods with the same name.</source>
          <target state="translated">Tablica umożliwia wybranie jednego z przeciążonych metod o tej samej nazwie.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose the parameter modifiers.</source>
          <target state="translated">Tablica pozwala wybrać modyfikatorów parametrów.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object that corresponds to a specified property with specified search constraints.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> obiekt, który odpowiada określonej właściwości z określonych ograniczeń wyszukiwania.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object for the located property, if a property with the specified name was located in this reflection object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the property was not located.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> obiektu zlokalizować właściwości, jeśli właściwość o podanej nazwie znajdował się w tym obiekcie odbicia lub <ph id="ph2">&lt;see langword="null" /&gt;</ph> Jeśli właściwość nie znajduje się.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">Ta metoda pobiera <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> odpowiadający określonej właściwości w obiekcie określono ograniczenia wyszukiwania.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A type array is used to choose from among overloaded methods.</source>
          <target state="translated">Tablica typu służy do wybierz spośród przeciążonej metody.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The name of the member to find.</source>
          <target state="translated">Nazwa elementu członkowskiego do znalezienia.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> invocation attributes.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> atrybuty wywołania.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>invokeAttr<ept id="p1">&lt;/c&gt;</ept> parameter may be a constructor, method, property, or field.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>InvokeAttr<ept id="p1">&lt;/c&gt;</ept> parametru może być Konstruktor, metody, właściwości lub pola.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A suitable invocation attribute must be specified.</source>
          <target state="translated">Należy określić atrybut odpowiedniego wywołania.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Invoke the default member of a class by passing the empty string ("") as the name of the member.</source>
          <target state="translated">Wywołaj domyślny element członkowski klasy, przekazując pustego ciągu ("") jako nazwa elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> bit flags.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> bit flagi.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">Implementuje <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, zawierający właściwości związanych z tej metody.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The object on which to invoke the specified member.</source>
          <target state="translated">Obiekt do wywołania określonego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This parameter is ignored for static members.</source>
          <target state="translated">Ten parametr jest ignorowany dla statycznych elementów członkowskich.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</source>
          <target state="translated">Tablica obiektów zawierającą numer, kolejność i typy parametrów elementu członkowskiego, do wywołania.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This is an empty array if there are no parameters.</source>
          <target state="translated">Jest to pusta tablica, jeśli nie ma żadnych parametrów.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This array has the same length as the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter, representing the invoked member's argument attributes in the metadata.</source>
          <target state="translated">Ta tablica ma taką samą długość jak <bpt id="p1">&lt;c&gt;</bpt>argumentów<ept id="p1">&lt;/c&gt;</ept> parametr reprezentujący atrybuty argument wywołany członek zestawu w metadanych.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A parameter can have the following attributes: <ph id="ph1">&lt;see langword="pdIn" /&gt;</ph>, <ph id="ph2">&lt;see langword="pdOut" /&gt;</ph>, <ph id="ph3">&lt;see langword="pdRetval" /&gt;</ph>, <ph id="ph4">&lt;see langword="pdOptional" /&gt;</ph>, and <ph id="ph5">&lt;see langword="pdHasDefault" /&gt;</ph>.</source>
          <target state="translated">Parametr może mieć następujące atrybuty: <ph id="ph1">&lt;see langword="pdIn" /&gt;</ph>, <ph id="ph2">&lt;see langword="pdOut" /&gt;</ph>, <ph id="ph3">&lt;see langword="pdRetval" /&gt;</ph>, <ph id="ph4">&lt;see langword="pdOptional" /&gt;</ph>, i <ph id="ph5">&lt;see langword="pdHasDefault" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</source>
          <target state="translated">Te stanowią [In] [Out], [retval], [opcjonalnie] i domyślnego parametru, odpowiednio.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>These attributes are used by various interoperability services.</source>
          <target state="translated">Te atrybuty są używane przez różne usługi współdziałania.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> used to govern the coercion of types.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> używane do sterowania koercja typów.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>For example, <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> converts a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, since 1000 is represented differently by different cultures.</source>
          <target state="translated">Na przykład <bpt id="p1">&lt;c&gt;</bpt>kultury<ept id="p1">&lt;/c&gt;</ept> konwertuje <ph id="ph1">&lt;see langword="String" /&gt;</ph> reprezentujący 1000 do <ph id="ph2">&lt;see langword="Double" /&gt;</ph> wartości, ponieważ 1000 jest inaczej reprezentowany przez innych kultur.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>If this parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">Jeśli ten parametr ma <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> służy bieżącego wątku.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> array of parameters.</source>
          <target state="translated">A <ph id="ph1">&lt;see langword="String" /&gt;</ph> tablicy parametrów.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Invokes a specified member.</source>
          <target state="translated">Wywołuje określony element członkowski.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The specified member.</source>
          <target state="translated">Określony element członkowski.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</source>
          <target state="translated">Metodę, która ma zostać wywołana musi być dostępna i udostępnia specyficzny dopasowania z określona lista argumentów, w obszarze ograniczenia określonych atrybutów integratora i wywołanie.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</source>
          <target state="translated">Metoda jest wywoływana, jeśli liczba parametrów w deklaracji metody jest równa liczbie argumentów określona lista argumentów i można przekonwertować typu argumentu przez obiekt wiążący z typem parametru.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The array of parameter modifiers passed to the <ph id="ph1">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph> method must contain a single parameter modifier.</source>
          <target state="translated">Tablica modyfikatorów parametrów przekazanych do <ph id="ph1">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph> metoda musi zawierać modyfikatora jeden parametr.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</source>
          <target state="translated">Tylko pierwszy modyfikator parametru jest uznawany za podczas określania, który argument musi być przekazywane przez odwołanie, gdy ujawniać modelowi COM.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The binder finds all matching methods, in accordance with the type of binding requested (<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>, and so on).</source>
          <target state="translated">Obiekt wiążący znajduje wszystkie metody dopasowania, zgodnie z typem powiązania żądanie (<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>i tak dalej).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</source>
          <target state="translated">Zbiór metod są filtrowane według nazwy, liczba argumentów i zestaw Modyfikatory wyszukiwania zdefiniowane w obiekt wiążący.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>After the method is selected, it is invoked, and accessibility is checked at that point.</source>
          <target state="translated">Po wybraniu metody jest wywoływana, a w tym momencie zaznaczono ułatwień dostępu.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</source>
          <target state="translated">Wyszukiwanie może kontrolować, które zestaw metod jest przeszukiwany zależności atrybutu dostępności skojarzonego z metodą.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> selects the method to be invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> Wybiera wywoływanej metody.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The default binder selects the most specific match.</source>
          <target state="translated">Domyślnego integratora wybierze najbardziej zgodne.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Access restrictions are ignored for fully trusted code.</source>
          <target state="translated">Ograniczenia dostępu są ignorowane w przypadku całkowicie zaufanego kodu.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</source>
          <target state="translated">Oznacza to konstruktory prywatne, pola, metody i właściwości można uzyskać dostępu do się wywołana przez odbicie w każdym przypadku, gdy kod jest w pełni zaufany.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The following example obtains the value of the <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> property.</source>
          <target state="translated">Poniższy przykład uzyskuje wartość <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>More than one argument is specified for a field <ph id="ph1">&lt;see langword="set" /&gt;</ph>.</source>
          <target state="translated">Określono więcej niż jeden argument dla pola <ph id="ph1">&lt;see langword="set" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The field or property cannot be found.</source>
          <target state="translated">Nie można odnaleźć pola lub właściwości.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The method cannot be found.</source>
          <target state="translated">Nie można odnaleźć metody.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A private member is invoked without the necessary <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>.</source>
          <target state="translated">Prywatnego elementu członkowskiego jest wywoływana bez potrzeby <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Reflection.IReflect.UnderlyingSystemType">
          <source>Gets the underlying type that represents the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> object.</source>
          <target state="translated">Pobiera typ podstawowy, który reprezentuje <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.IReflect.UnderlyingSystemType">
          <source>The underlying type that represents the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> object.</source>
          <target state="translated">Typ podstawowy, który reprezentuje <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> obiektu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>