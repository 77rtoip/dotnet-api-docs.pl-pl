<Type Name="AmbiguousMatchException" FullName="System.Reflection.AmbiguousMatchException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="082daa94bc1554f65b8325b0bc84c3b25db67a72" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52380405" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbiguousMatchException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AmbiguousMatchException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AmbiguousMatchException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbiguousMatchException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbiguousMatchException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type AmbiguousMatchException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ef59c-101">Wyjątek, który jest generowany podczas tworzenia wiązania do elementu członkowskiego powoduje więcej niż jeden element członkowski, spełniające kryteria powiązania.</span><span class="sxs-lookup"><span data-stu-id="ef59c-101">The exception that is thrown when binding to a member results in more than one member matching the binding criteria.</span></span> <span data-ttu-id="ef59c-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="ef59c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef59c-103">`AmbiguousMatchException` używa COR_E_AMBIGUOUSMATCH HRESULT, która ma wartość 0x8000211D.</span><span class="sxs-lookup"><span data-stu-id="ef59c-103">`AmbiguousMatchException` uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</span></span>  
  
 <span data-ttu-id="ef59c-104">`AmbiguousMatchException` Jest generowany, gdy członek jest wywoływany z późnym wiązaniem i wiele przeciążeń spełniają kryteria powiązania, lub gdy więcej niż jeden element członkowski spełnia kryteria powiązania przekazywany do metody odbicia, która może zwracać tylko jeden wynik (na przykład <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>lub <xref:System.Type.GetProperty%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="ef59c-104">An `AmbiguousMatchException` is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> or <xref:System.Type.GetProperty%2A?displayProperty=nameWithType>).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.SystemException" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ef59c-105">Obsługa i zgłaszanie wyjątków na platformie .NET</span><span class="sxs-lookup"><span data-stu-id="ef59c-105">Handling and throwing exceptions in .NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef59c-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.AmbiguousMatchException" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef59c-106">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef59c-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.AmbiguousMatchException" /> klasy za pomocą ciągu pustego komunikatu i katalog główny spowodować wyjątek równa <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ef59c-107">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with an empty message string and the root cause exception set to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef59c-108">`AmbiguousMatchException` dziedziczy <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="ef59c-108">`AmbiguousMatchException` inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="ef59c-109">Ten konstruktor ustawia właściwości `Exception` obiektu, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="ef59c-109">This constructor sets the properties of the `Exception` object as shown in the following table.</span></span>  
  
|<span data-ttu-id="ef59c-110">Właściwość</span><span class="sxs-lookup"><span data-stu-id="ef59c-110">Property</span></span>|<span data-ttu-id="ef59c-111">Wartość</span><span class="sxs-lookup"><span data-stu-id="ef59c-111">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ef59c-112">Ciąg pusty ("").</span><span class="sxs-lookup"><span data-stu-id="ef59c-112">The empty string ("").</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.SystemException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AmbiguousMatchException : string -&gt; System.Reflection.AmbiguousMatchException" Usage="new System.Reflection.AmbiguousMatchException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ef59c-113">Ciąg wskazujący powodów, dla którego wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ef59c-113">A string indicating the reason this exception was thrown.</span></span></param>
        <summary><span data-ttu-id="ef59c-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.AmbiguousMatchException" /> klasy z jej ciąg z komunikatem o równa podanej wiadomości i wyjątek przyczyny głównej równa <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ef59c-114">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with its message string set to the given message and the root cause exception set to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef59c-115">`AmbiguousMatchException` dziedziczy <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="ef59c-115">`AmbiguousMatchException` inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="ef59c-116">Ten konstruktor ustawia właściwości `Exception` obiektu, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="ef59c-116">This constructor sets the properties of the `Exception` object as shown in the following table.</span></span>  
  
|<span data-ttu-id="ef59c-117">Właściwość</span><span class="sxs-lookup"><span data-stu-id="ef59c-117">Property</span></span>|<span data-ttu-id="ef59c-118">Wartość</span><span class="sxs-lookup"><span data-stu-id="ef59c-118">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ef59c-119">`message` Ciągu.</span><span class="sxs-lookup"><span data-stu-id="ef59c-119">The `message` string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AmbiguousMatchException : string * Exception -&gt; System.Reflection.AmbiguousMatchException" Usage="new System.Reflection.AmbiguousMatchException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ef59c-120">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ef59c-120">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="ef59c-121">Wyjątek, który jest przyczyną bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ef59c-121">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="ef59c-122">Jeśli <paramref name="inner" /> parametr nie jest <see langword="null" />, bieżący wyjątek jest zgłaszany w <see langword="catch" /> blok, który obsługuje wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="ef59c-122">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="ef59c-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.AmbiguousMatchException" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ef59c-123">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef59c-124">Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ef59c-124">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="ef59c-125"><xref:System.Exception.InnerException%2A> Właściwość zwraca taką samą wartość, która jest przekazywana do konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> nie dostarcza wartości wewnętrznego wyjątku do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="ef59c-125">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="ef59c-126">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Reflection.AmbiguousMatchException>.</span><span class="sxs-lookup"><span data-stu-id="ef59c-126">The following table shows the initial property values for an instance of <xref:System.Reflection.AmbiguousMatchException>.</span></span>  
  
|<span data-ttu-id="ef59c-127">Właściwość</span><span class="sxs-lookup"><span data-stu-id="ef59c-127">Property</span></span>|<span data-ttu-id="ef59c-128">Wartość</span><span class="sxs-lookup"><span data-stu-id="ef59c-128">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ef59c-129">Odwołanie do wewnętrznego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ef59c-129">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ef59c-130">Ciąg komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ef59c-130">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ef59c-131">W poniższym przykładzie przedstawiono dwie klasy, każdy o nazwie `Mymethod`.</span><span class="sxs-lookup"><span data-stu-id="ef59c-131">The following example shows two classes, each named `Mymethod`.</span></span> <span data-ttu-id="ef59c-132">Jedną klasę przyjmuje liczbę całkowitą, a druga przyjmuje ciąg.</span><span class="sxs-lookup"><span data-stu-id="ef59c-132">One class takes an integer and the other takes a string.</span></span> <span data-ttu-id="ef59c-133">Jeśli liczba całkowita jest przekazywany do `Mymethod`, najwyższej klasy jest używany.</span><span class="sxs-lookup"><span data-stu-id="ef59c-133">If an integer is passed to `Mymethod`, the first class is used.</span></span> <span data-ttu-id="ef59c-134">Jeśli ciąg jest przekazywany, druga klasa jest używana.</span><span class="sxs-lookup"><span data-stu-id="ef59c-134">If a string is passed, the second class is used.</span></span> <span data-ttu-id="ef59c-135">Jeśli nie może być wiedzieć, którą `Mymethod` do użycia, `AmbiguousMatchException` zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="ef59c-135">If it cannot be determined which `Mymethod` to use, `AmbiguousMatchException` is thrown.</span></span>  
  
 [!code-cpp[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/CS/source.cs#1)]
 [!code-vb[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ef59c-136">Obsługa i zgłaszanie wyjątków na platformie .NET</span><span class="sxs-lookup"><span data-stu-id="ef59c-136">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>