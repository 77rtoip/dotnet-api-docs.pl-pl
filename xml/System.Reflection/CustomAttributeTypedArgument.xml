<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomAttributeTypedArgument.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b5d1ec529757045ee60974de7538e486877eb0ff.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5d1ec529757045ee60974de7538e486877eb0ff</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</source>
          <target state="translated">Reprezentuje argument atrybutu niestandardowego w kontekstu reflection-only lub element tablicy argumentu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, and so on.</source>
          <target state="translated">Nie można wykonać kod, który jest rozpatrywany w kontekstu reflection-only, więc nie zawsze jest możliwe do sprawdzenia atrybutów niestandardowych, tworząc wystąpień je i sprawdzając ich właściwości, za pomocą metody, takie jak <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>i tak dalej .</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</source>
          <target state="translated">Jeśli kod sam typ atrybutu jest ładowany do kontekstu reflection-only, nie można wykonać.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure is used by the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> Struktura jest używana przez <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> klasy w celu zapewnienia dostępu do typu i wartości argument pozycyjny określony dla atrybutu niestandardowego wystąpienia, bez wykonywania konstruktora atrybutu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</source>
          <target state="translated">Umożliwia także dostęp do typu i wartości argumentu nazwanego bez wykonywania kodu odpowiedniej właściwości typu atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The types and values of all the positional and named arguments of an attribute instance are provided by <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures.</source>
          <target state="translated">Typy oraz wartości wszystkich argumentów pozycyjnych i nazwanego wystąpienia atrybutu są dostarczane przez <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> struktury.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The positional attributes returned by the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType&gt;</ph> property are directly represented by <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures, but the named arguments returned by the <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType&gt;</ph> property are represented by <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structures; to get the <ph id="ph5">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure for a named argument, use the <ph id="ph6">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Pozycyjny atrybutów zwracanych w wyniku <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType&gt;</ph> właściwości bezpośrednio są reprezentowane przez <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> struktury, ale argumenty nazwane zwrócony przez <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType&gt;</ph> właściwości są reprezentowane przez <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> struktur; Aby uzyskać <ph id="ph5">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> Struktura argumentu nazwanego, użyj <ph id="ph6">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>If an argument is an array of values, the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> that represents the argument returns a generic <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> objects.</source>
          <target state="translated">Jeśli argument ma tablicę wartości, <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> właściwość <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> reprezentuje argument zwracanych ogólnego <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> z <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Each <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> object in the collection represents the corresponding element of the array.</source>
          <target state="translated">Każdy <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> odpowiadający mu element tablicy reprezentuje obiekt w kolekcji.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>To create instances of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class, use the <ph id="ph2">`static`</ph><ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> factory method.</source>
          <target state="translated">Aby utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> klasy, należy użyć <ph id="ph2">`static`</ph> <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> metoda fabryki.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>The value of the custom attribute argument.</source>
          <target state="translated">Wartość argumentu atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class with the specified value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> klasy z określoną wartością.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter cannot be <ph id="ph2">`null`</ph> for this constructor, because the argument type is inferred from the type of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr nie może być <ph id="ph2">`null`</ph> dla tego konstruktora, ponieważ typ argumentu jest wywnioskowany na podstawie typu <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>To specify a <ph id="ph1">`null`</ph> value, use the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29&gt;</ph> constructor.</source>
          <target state="translated">Aby określić <ph id="ph1">`null`</ph> wartość, użyj <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> class.</source>
          <target state="translated">Ten konstruktor jest przeznaczony do użytku przez dziedziczenia z <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">Nie jest przeznaczony do użycia w kodzie aplikacji.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>The type of the custom attribute argument.</source>
          <target state="translated">Typ argumentu atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>The value of the custom attribute argument.</source>
          <target state="translated">Wartość argumentu atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class with the specified type and value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> z określonego typu i wartości.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> class.</source>
          <target state="translated">Ten konstruktor jest przeznaczony do użytku przez dziedziczenia z <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">Nie jest przeznaczony do użycia w kodzie aplikacji.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="argumentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argumentType" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Gets the type of the argument or of the array argument element.</source>
          <target state="translated">Pobiera typ argument lub argument elementu tablicy.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the type of the argument or of the array element.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> obiekt reprezentujący typ argumentu lub elementu tablicy.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property.</source>
          <target state="translated">Dla argumentów prostego lub dla elementów w tablicy argumentów, ta właściwość określa rzeczywisty typ wartości zwróconej przez <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>For array arguments, this property returns the array type, but the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property returns a <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</source>
          <target state="translated">Dla tablicy argumentów, ta właściwość zwraca typ tablicy, ale <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> zwraca właściwości <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> w języku Visual Basic) w których każdy element kolekcji odpowiada odpowiadającego mu elementu argument tablicy.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> property is used in the <ph id="ph2">`ShowValueOrArray`</ph> method that displays custom attribute data, to display the types of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> Właściwość jest używana w <ph id="ph2">`ShowValueOrArray`</ph> metodę, która wyświetla dane atrybutu niestandardowego, aby wyświetlić typy atrybutów.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source>Another object to compare to.</source>
          <target state="translated">Inny obiekt do porównania.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source>Indicates whether this instance and a specified object are equal.</source>
          <target state="translated">Wskazuje, czy to wystąpienie oraz określony obiekt są równe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this instance are the same type and represent the same value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> oraz to wystąpienie są tego samego typu i reprezentują tę samą wartość; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Zwraca kod skrótu dla tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode">
          <source>A 32-bit signed integer that is the hash code for this instance.</source>
          <target state="translated">32-bitowe liczby całkowite ze znakiem jest wartość skrótu dla tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the left of the equality operator.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> Struktury z lewej strony operatora równości.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the right of the equality operator.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> Struktury z prawej strony operatora równości.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are equivalent.</source>
          <target state="translated">Sprawdza, czy dwa <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> struktury są równoważne.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dwa <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> struktury są takie same; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the left of the inequality operator.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> Struktury z lewej strony operator nierówności.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the right of the inequality operator.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> Struktury z prawej strony operator nierówności.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are different.</source>
          <target state="translated">Sprawdza, czy dwa <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> struktury są różne.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are different; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dwa <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> struktury są różne; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.ToString">
          <source>Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">Zwraca ciąg składający się z nazwy argumentu, znak równości i wartość argumentu reprezentację ciągu.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.ToString">
          <source>A string consisting of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">Ciąg zawierający nazwę argumentu, znaku równości i wartość argumentu reprezentację ciągu.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</source>
          <target state="translated">Pobiera wartość argumentu dla prostego argument lub element tablicy argumentu; pobiera kolekcję wartości dla argumentu tablicy.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>An object that represents the value of the argument or element, or a generic <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> objects that represent the values of an array-type argument.</source>
          <target state="translated">Obiekt reprezentujący wartość argumentu lub element lub ogólnego <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> obiektów, które reprezentują wartości argumentu typu tablicy.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> represents an array argument, this property returns a <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> in Visual Basic).</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> reprezentuje argument tablicy, ta właściwość zwraca <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Each element of the collection represents the corresponding element of the array argument.</source>
          <target state="translated">Każdy element kolekcji reprezentuje odpowiadającego mu elementu argument tablicy.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The type of the value can be obtained by using the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> property.</source>
          <target state="translated">Typ wartości można uzyskać za pomocą <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> gets the actual type of the value returned by the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property for simple arguments or for elements of array arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> pobiera rzeczywisty typ wartości zwróconej przez <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> właściwość dla argumentów prostego lub dla elementów w tablicy argumentów.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>It returns the array type for array arguments.</source>
          <target state="translated">Zwraca typ tablicy dla tablicy argumentów.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property is used in the <ph id="ph2">`ShowValueOrArray`</ph> method that displays custom attribute data, to display the values of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> Właściwość jest używana w <ph id="ph2">`ShowValueOrArray`</ph> metodę, która wyświetla dane atrybutu niestandardowego, aby wyświetlić wartości atrybutów.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> &amp;#124; <ph id="ph2">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> &amp;#124; <ph id="ph2">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>