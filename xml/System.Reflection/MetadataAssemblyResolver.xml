<Type Name="MetadataAssemblyResolver" FullName="System.Reflection.MetadataAssemblyResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bb0b96189a8cffc4b438bd0a7e96a28c8bcb654" /><Meta Name="ms.sourcegitcommit" Value="0807ab0a64414edc9b4d09d3877857e83cb7f7a4" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/13/2019" /><Meta Name="ms.locfileid" Value="68972692" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetadataAssemblyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataAssemblyResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MetadataAssemblyResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataAssemblyResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataAssemblyResolver abstract" />
  <TypeSignature Language="F#" Value="type MetadataAssemblyResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę bazową dla algorytmów powiązania używanych <see cref="T:System.Reflection.MetadataLoadContext" />przez program.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetadataAssemblyResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetadataAssemblyResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie elementu <see cref="T:System.Reflection.MetadataAssemblyResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.Assembly Resolve (System.Reflection.MetadataLoadContext context, System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Resolve(class System.Reflection.MetadataLoadContext context, class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.Resolve(System.Reflection.MetadataLoadContext,System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::Assembly ^ Resolve(System::Reflection::MetadataLoadContext ^ context, System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.Reflection.MetadataLoadContext * System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="metadataAssemblyResolver.Resolve (context, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Reflection.MetadataLoadContext" />
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt kontekstu ładowania metadanych reprezentujący zamkniętą część <see cref="T:System.Type" /> obiektów załadowanych do celów tylko do inspekcji.</param>
        <param name="assemblyName">Nazwa zestawu.</param>
        <summary>Zwraca zestaw z danej nazwy zestawu.</summary>
        <returns>Zestaw dla podanego <paramref name="assemblyName" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Powiązanie nazwy zestawu z zestawem występuje, gdy <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyName%2A> jest wywoływana lub gdy typ z jednego zestawu ma zależność od innego zestawu. Procedura obsługi, która `Resolve` zastąpień <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyPath%2A?displayProperty=nameWithType> powinna <xref:System.Reflection.MetadataLoadContext.LoadFromByteArray%2A?displayProperty=nameWithType> zostać użyta <xref:System.Reflection.MetadataLoadContext.LoadFromStream%2A?displayProperty=nameWithType>, lub załadować żądany zestaw i zwrócić go.

Aby wskazać, że nie można znaleźć zestawu, należy zwrócić `null` procedurę obsługi, zamiast zgłaszać wyjątek. Zwraca `null` zatwierdzenie błędu, aby przyszłe próby załadowania tej nazwy zakończą się niepowodzeniem bez ponownego wywoływania programu obsługi.

Jeśli procedura obsługi zgłasza wyjątek, wyjątek zostanie przeszedł do aplikacji, która wywołała operację, która wyzwoliła powiązanie. <xref:System.Reflection.MetadataLoadContext> Nie przechwytuje go i żadne powiązanie nie zostanie wykonane.

Procedura obsługi zazwyczaj nie zostanie wywołana więcej niż raz dla tej samej nazwy, chyba że dwie wątki nie załadują tego samego zestawu. Nawet w takim przypadku jeden wynik zostanie wygrany i będzie niezależny od nazwy.

<xref:System.Reflection.MetadataLoadContext> Celowo nie wykonuje dopasowania ref w odniesieniu do zwracanego zestawu, co stanowi dopasowanie ref-def, jest zasadami. Jest to również rodzaj ograniczeń, które <xref:System.Reflection.MetadataLoadContext> starają się unikać.

<xref:System.Reflection.MetadataLoadContext> Nie można używać zestawów z innych kontekstów ładowania metadanych ani dostawców typów (na przykład własnego systemu odbicia w środowisku uruchomieniowym). Jeśli procedura obsługi zwróci taki zestaw, <xref:System.Reflection.MetadataLoadContext> generuje a. <xref:System.IO.FileLoadException>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
