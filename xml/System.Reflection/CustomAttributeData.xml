<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomAttributeData.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b81fc715a47a4fd76280f78c4364218e82b0390c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b81fc715a47a4fd76280f78c4364218e82b0390c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeData">
          <source>Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</source>
          <target state="translated">Zapewnia dostęp do danych atrybutu niestandardowego dla zestawów, modułów, typy, elementy członkowskie i parametrów, które są ładowane do kontekstu reflection-only.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, and so on.</source>
          <target state="translated">Nie można wykonać kod, który jest rozpatrywany w kontekstu reflection-only, więc nie zawsze jest możliwe do sprawdzenia atrybutów niestandardowych, tworząc wystąpień je i sprawdzając ich właściwości, za pomocą metody, takie jak <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>i tak dalej .</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</source>
          <target state="translated">Jeśli kod sam typ atrybutu jest ładowany do kontekstu reflection-only, nie można wykonać.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> Klasa umożliwia badania atrybutów niestandardowych do kontekstu reflection-only zapewniając abstrakcję dla atrybutów.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</source>
          <target state="translated">Elementy członkowskie tej klasy można używany do uzyskania argumenty pozycyjne i nazwanych argumentów atrybutu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A&gt;</ph> property to get a list of <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures that represent the positional arguments, and use the <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A&gt;</ph> property to get a list of <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structures that represent the named arguments.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A&gt;</ph> właściwość, aby uzyskać listę <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> struktur, które reprezentują argumenty pozycyjne i użyj <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A&gt;</ph> właściwość, aby uzyskać listę <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> struktur reprezentujących argumenty nazwane.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure only provides information about the attribute property used to get and set the argument value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> Struktury zawiera tylko informacje o właściwości atrybut używany do pobierania i ustaw wartość argumentu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>To obtain the type and value of the argument, use the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType&gt;</ph> property to obtain a <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure.</source>
          <target state="translated">Aby uzyskać typ i wartość argumentu, użyj <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType&gt;</ph> właściwości w celu uzyskania <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> struktury.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>When you have a <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure for an argument, whether named or positional, use the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType&gt;</ph> property to get the type and the <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType&gt;</ph> property to get the value.</source>
          <target state="translated">Jeśli masz <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> struktury dla argumentu nazwanego lub pozycyjnych, użyj <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType&gt;</ph> właściwości można pobrać typu i <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType&gt;</ph> właściwości można uzyskać wartość.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>For an array argument, the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType&gt;</ph> property returns a generic <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> objects.</source>
          <target state="translated">Argument tablicy <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType&gt;</ph> właściwość zwraca ogólnego <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> z <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>Each <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> object in the collection represents the corresponding element of the array.</source>
          <target state="translated">Każdy <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> odpowiadający mu element tablicy reprezentuje obiekt w kolekcji.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> can be used in the execution context as well as in the reflection-only context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> może służyć kontekstu wykonywania, a także jak kontekstu reflection-only.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</source>
          <target state="translated">Na przykład można uniknąć, podczas ładowania zestawu, który zawiera kod dla atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>Using the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class is different from using methods like <ph id="ph2">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>:</source>
          <target state="translated">Przy użyciu <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> klasy różni się od przy użyciu metody, takie jak <ph id="ph2">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The properties and methods of <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</source>
          <target state="translated">Właściwości i metod <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> tylko udostępniają wartości, które zostały określone dla tego wystąpienia atrybutu nie semantykę konstruktora.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</source>
          <target state="translated">Argument ciągu atrybutu może na przykład przekonwertować wewnętrznie niektóre inne reprezentacja i zwracane w formie kanonicznej; lub właściwości może mieć efekty uboczne, podczas wykonywania kodu atrybutu rzeczywistego.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The properties and methods of <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> do not allow you to retrieve the custom attributes inherited from base classes.</source>
          <target state="translated">Właściwości i metod <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> nie pozwala na pobieranie atrybuty niestandardowe odziedziczone z klas podstawowych.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>To create instances of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class, use the <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic) <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> factory methods.</source>
          <target state="translated">Można utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> klasy, należy użyć <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> w języku Visual Basic) <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> metody fabryki.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla informacje o niestandardowych atrybutów, które zostały zastosowane do niej i do typu i elementów członkowskich, które zawiera.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeData">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.#ctor">
          <source>This constructor is invoked by derived classes during the construction of <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> objects.</source>
          <target state="translated">Ten konstruktor jest wywoływany przez klas pochodnych podczas budowy <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.#ctor">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.#ctor">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeData.AttributeType">
          <source>Gets the type of the attribute.</source>
          <target state="translated">Pobiera typ atrybutu.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.AttributeType">
          <source>The type of the attribute.</source>
          <target state="translated">Typ atrybutu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> object that represents the constructor that would have initialized the custom attribute.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> obiekt, który reprezentuje konstruktora, który może zainicjować atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> class.</source>
          <target state="translated">Obiekt reprezentujący Konstruktor, który może zainicjować atrybutu niestandardowego reprezentowany przez bieżące wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> object.</source>
          <target state="translated">Jeśli typem atrybutu ma wiele konstruktorów, ta właściwość zwraca tylko określonego konstruktora, który może zainicjować reprezentowany przez bieżące wystąpienie atrybutu <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.Constructor%2A&gt;</ph> property is used in the <ph id="ph2">`ShowAttributeData`</ph> method that displays custom attribute data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.Constructor%2A&gt;</ph> Właściwość jest używana w <ph id="ph2">`ShowAttributeData`</ph> metodę, która zawiera dane o atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.Constructor">
          <source>In this code example, the <ph id="ph1">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</source>
          <target state="translated">W tym przykładzie kodu <ph id="ph1">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> zwróconych przez to właściwość jest używana do wyświetlania ciąg tekstowy, który opisuje konstruktora, z którego wynika, że właściwość zwraca Konstruktor, który może ustawić atrybutu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>Gets the list of positional arguments specified for the attribute instance represented by the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> object.</source>
          <target state="translated">Pobiera listę argumentów pozycyjnych określony dla atrybutu wystąpienia reprezentowany przez <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>A collection of structures that represent the positional arguments specified for the custom attribute instance.</source>
          <target state="translated">Kolekcja struktur reprezentujących argumenty pozycyjne określony dla atrybutu niestandardowego wystąpienia.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</source>
          <target state="translated">Ta metoda pobiera argumenty pozycyjne, które zostały określone dla atrybutu niestandardowego wystąpienia bez wykonania żadnego kodu atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>Thus, it can be used in the reflection-only context.</source>
          <target state="translated">W związku z tym można używać w kontekstu reflection-only.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A&gt;</ph> method to get the named arguments specified for the attribute instance.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A&gt;</ph> metodę, aby pobrać nazwanych argumentów określona dla atrybutu wystąpienia.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A&gt;</ph> property is used in the <ph id="ph2">`ShowAttributeData`</ph> method that displays custom attribute data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A&gt;</ph> Właściwość jest używana w <ph id="ph2">`ShowAttributeData`</ph> metodę, która zawiera dane o atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.ConstructorArguments">
          <source>In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</source>
          <target state="translated">W tym przykładzie kodu ta właściwość jest używana do wyświetlania listy argumentów przekazanych do konstruktora, który zainicjować atrybutu.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.Equals(System.Object)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Obiekt do porównania z tym wystąpieniem lub <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is equal to the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> jest taki sam, jak bieżące wystąpienie w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeData">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> objects representing data about the attributes that have been applied to the target.</source>
          <target state="translated">Zwraca listę <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do obiektu docelowego.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The assembly whose custom attribute data is to be retrieved.</source>
          <target state="translated">Zestaw danych atrybutu niestandardowego, którego ma być pobrana.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> objects representing data about the attributes that have been applied to the target assembly.</source>
          <target state="translated">Zwraca listę <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>A list of objects that represent data about the attributes that have been applied to the target assembly.</source>
          <target state="translated">Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do zestawu docelowego.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>This method provides an alternative to the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> method that can always be used in the Reflection-only context.</source>
          <target state="translated">Ta metoda stanowi alternatywę dla <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> metoda zawsze może być używana w kontekstu Reflection-only.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> method is used in <ph id="ph2">`Main()`</ph> to get the custom attributes applied to the assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> Metoda jest używana w <ph id="ph2">`Main()`</ph> można pobrać atrybutów niestandardowych zastosowanych do zestawu.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The return value of the method is passed to the <ph id="ph1">`ShowAttributeData`</ph> method.</source>
          <target state="translated">Zwracana wartość metody jest przekazywany do <ph id="ph1">`ShowAttributeData`</ph> metody.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The member whose attribute data is to be retrieved.</source>
          <target state="translated">Element członkowski, którego dane atrybut ma być pobrana.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> objects representing data about the attributes that have been applied to the target member.</source>
          <target state="translated">Zwraca listę <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do elementu docelowego.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>A list of objects that represent data about the attributes that have been applied to the target member.</source>
          <target state="translated">Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do elementu docelowego.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>This method overload gets custom attribute data for types, nested types, and type members, because the <ph id="ph1">&lt;xref:System.Type&gt;</ph> class and the classes in the <ph id="ph2">&lt;xref:System.Reflection&gt;</ph> namespace that represent type members all derive from <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph>.</source>
          <target state="translated">To przeciążenie metody pobiera dane atrybutów niestandardowych dla typów, zagnieżdżone typy i elementy członkowskie typu, ponieważ <ph id="ph1">&lt;xref:System.Type&gt;</ph> klasa i klasy w <ph id="ph2">&lt;xref:System.Reflection&gt;</ph> przestrzeni nazw, która reprezentuje dziedziczyć wszystkie elementy członkowskie typu <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> method is used in <ph id="ph2">`Main()`</ph> to get the custom attributes that were applied to a type and to a test method (<ph id="ph3">&lt;xref:System.Type&gt;</ph> derives from <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> Metoda jest używana w <ph id="ph2">`Main()`</ph> można pobrać atrybutów niestandardowych, które zostały zastosowane do typu i metody testowej (<ph id="ph3">&lt;xref:System.Type&gt;</ph> pochodną <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The return value of <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> is passed to the <ph id="ph2">`ShowAttributeData`</ph> method.</source>
          <target state="translated">Wartość zwracana <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> jest przekazywana do <ph id="ph2">`ShowAttributeData`</ph> metody.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)">
          <source>The module whose custom attribute data is to be retrieved.</source>
          <target state="translated">Moduł, którego dane atrybutu niestandardowego ma być pobrana.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> objects representing data about the attributes that have been applied to the target module.</source>
          <target state="translated">Zwraca listę <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do modułu, docelowej.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)">
          <source>A list of objects that represent data about the attributes that have been applied to the target module.</source>
          <target state="translated">Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do modułu, docelowej.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The parameter whose attribute data is to be retrieved.</source>
          <target state="translated">Parametr, którego dane atrybut ma być pobrana.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> objects representing data about the attributes that have been applied to the target parameter.</source>
          <target state="translated">Zwraca listę <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do parametru target.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>A list of objects that represent data about the attributes that have been applied to the target parameter.</source>
          <target state="translated">Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do parametru target.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>This method provides an alternative to the <ph id="ph1">&lt;xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A&gt;</ph> method that can always be used in the Reflection-only context.</source>
          <target state="translated">Ta metoda stanowi alternatywę dla <ph id="ph1">&lt;xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A&gt;</ph> metoda zawsze może być używana w kontekstu Reflection-only.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> method is used in <ph id="ph2">`Main()`</ph> to retrieve the custom attributes applied to a parameter of a test method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> Metoda jest używana w <ph id="ph2">`Main()`</ph> można pobrać atrybutów niestandardowych zastosowanych do parametru metody testowej.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The return value of <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> is passed to the <ph id="ph2">`ShowAttributeData`</ph> method.</source>
          <target state="translated">Wartość zwracana <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> jest przekazywana do <ph id="ph2">`ShowAttributeData`</ph> metody.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetHashCode">
          <source>Serves as a hash function for a particular type.</source>
          <target state="translated">Pełni rolę funkcji skrótu dla określonego typu.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>Gets the list of named arguments specified for the attribute instance represented by the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> object.</source>
          <target state="translated">Pobiera listę nazwanych argumentów określona dla atrybutu wystąpienia reprezentowany przez <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeData" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>A collection of structures that represent the named arguments specified for the custom attribute instance.</source>
          <target state="translated">Kolekcja struktur reprezentujących argumenty nazwane określony dla atrybutu niestandardowego wystąpienia.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</source>
          <target state="translated">Ta metoda pobiera nazwane argumenty, które zostały określone dla atrybutu niestandardowego wystąpienia bez wykonania żadnego kodu atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>Thus, it can be used in the Reflection-only context.</source>
          <target state="translated">W związku z tym można używać w kontekstu Reflection-only.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>The list that is returned contains only the named arguments that were specified for the attribute instance.</source>
          <target state="translated">Listy, który jest zwracany zawiera tylko nazwane argumenty, które zostały określone dla wystąpienia atrybutu.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A&gt;</ph> method to get the positional arguments that were specified for the attribute instance.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A&gt;</ph> metodę, aby uzyskać argumenty pozycyjne, które zostały określone wystąpienie atrybutu.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A&gt;</ph> property is used in the <ph id="ph2">`ShowAttributeData`</ph> method that displays custom attribute data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A&gt;</ph> Właściwość jest używana w <ph id="ph2">`ShowAttributeData`</ph> metodę, która zawiera dane o atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeData.NamedArguments">
          <source>In this code example, this property is used to display the list of named arguments specified for the attribute.</source>
          <target state="translated">W tym przykładzie kodu ta właściwość jest używana do wyświetlania listy nazwanych argumentów określona dla atrybutu.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>Returns a string representation of the custom attribute.</source>
          <target state="translated">Zwraca reprezentację ciągu atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>A string value that represents the custom attribute.</source>
          <target state="translated">Wartość ciągu, który reprezentuje atrybutu niestandardowego.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>The string value includes the attribute type, the attribute parameters, and the named parameters.</source>
          <target state="translated">Wartość ciągu zawiera typ atrybutu, parametry atrybutów i nazwane parametry.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Różne konstruktory są używane dla tych przypadków.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeData.ToString">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ToString%2A&gt;</ph> method is used in the <ph id="ph2">`ShowAttributeData`</ph> method, to identify the attribute whose data is being displayed.</source>
          <target state="translated">W tym przykładzie <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ToString%2A&gt;</ph> metoda jest używana w <ph id="ph2">`ShowAttributeData`</ph> metody, aby zidentyfikować ten atrybut, którego dane są wyświetlane.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>