<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f6d5b2a42b43590d8732cdaba9a4284896c1ab2" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48746001" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9db85-101">Zapewnia dostęp do atrybutów niestandardowych danych, zestawy, moduły, typy, elementy członkowskie i parametry, które są ładowane do kontekstu reflection-only.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9db85-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-102">Nie można wykonać kod, który jest rozpatrywany w kontekstu reflection-only, dzięki czemu nie zawsze jest możliwe do sprawdzenia atrybutów niestandardowych, tworząc wystąpień je i sprawdzając ich właściwości, za pomocą metod, takich jak <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>i tak dalej .</span><span class="sxs-lookup"><span data-stu-id="9db85-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="9db85-103">Jeśli kod dla samego typu atrybutu jest ładowany do kontekstu reflection-only, nie można wykonać.</span><span class="sxs-lookup"><span data-stu-id="9db85-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="9db85-104"><xref:System.Reflection.CustomAttributeData> Klasa umożliwia badania atrybutów niestandardowych do kontekstu reflection-only, zapewniając klasą abstrakcyjną dla atrybutów.</span><span class="sxs-lookup"><span data-stu-id="9db85-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="9db85-105">Elementy członkowskie tej klasy można używane do uzyskiwania argumenty pozycyjne i nazwane argumenty atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9db85-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="9db85-106">Użyj <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> właściwość, aby uzyskać listę <xref:System.Reflection.CustomAttributeTypedArgument> struktur, które zawierają argumenty pozycyjne, a następnie użyj <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> właściwość, aby uzyskać listę <xref:System.Reflection.CustomAttributeNamedArgument> struktur, które reprezentują nazwane argumenty.</span><span class="sxs-lookup"><span data-stu-id="9db85-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9db85-107"><xref:System.Reflection.CustomAttributeNamedArgument> Struktury tylko informacje dotyczące właściwości atrybut używany do pobierania i ustaw wartość argumentu.</span><span class="sxs-lookup"><span data-stu-id="9db85-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="9db85-108">Aby uzyskać typ i wartość argumentu, użyj <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> właściwości w celu uzyskania <xref:System.Reflection.CustomAttributeTypedArgument> struktury.</span><span class="sxs-lookup"><span data-stu-id="9db85-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="9db85-109">Jeśli masz <xref:System.Reflection.CustomAttributeTypedArgument> struktury argumentu, zarówno nazwanych i pozycyjnych, użyj <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> właściwości w celu uzyskania typu i <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> właściwości, aby uzyskać wartość.</span><span class="sxs-lookup"><span data-stu-id="9db85-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9db85-110">Dla argumentu tablicy <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> właściwość zwraca ogólnego <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> z <xref:System.Reflection.CustomAttributeTypedArgument> obiektów.</span><span class="sxs-lookup"><span data-stu-id="9db85-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="9db85-111">Każdy <xref:System.Reflection.CustomAttributeTypedArgument> obiektu w kolekcji reprezentuje odpowiadający mu element w tablicy.</span><span class="sxs-lookup"><span data-stu-id="9db85-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="9db85-112"><xref:System.Reflection.CustomAttributeData> mogą być używane w kontekście wykonania, a także jak kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="9db85-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="9db85-113">Na przykład można uniknąć wczytywania zestawu, który zawiera kod dla atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="9db85-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="9db85-114">Za pomocą <xref:System.Reflection.CustomAttributeData> klasy różni się od przy użyciu metod, takich jak <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="9db85-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="9db85-115">Właściwości i metod <xref:System.Reflection.CustomAttributeData> tylko umożliwiają wartości, które zostały określone dla tego wystąpienia atrybutu nie semantyki konstruktora.</span><span class="sxs-lookup"><span data-stu-id="9db85-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="9db85-116">Argumentu ciągu atrybutu może na przykład przekonwertować wewnętrznie niektóre inne formy i zwracane w formie kanonicznej; lub właściwość może mieć efekty uboczne, gdy atrybut rzeczywisty kod jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="9db85-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="9db85-117">Właściwości i metody <xref:System.Reflection.CustomAttributeData> nie zezwalają można pobrać atrybutów niestandardowych, dziedziczone z klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="9db85-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="9db85-118">Do tworzenia wystąpień <xref:System.Reflection.CustomAttributeData> klasy, należy użyć `static` (`Shared` w języku Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodach fabryki.</span><span class="sxs-lookup"><span data-stu-id="9db85-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db85-119">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="9db85-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="9db85-120">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="9db85-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="9db85-121">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="9db85-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="9db85-122">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="9db85-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="9db85-123">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="9db85-124">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9db85-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="9db85-125">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla informacje na temat atrybutów niestandardowych, które zostały zastosowane do niego i typów i elementów członkowskich, które zawiera.</span><span class="sxs-lookup"><span data-stu-id="9db85-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="9db85-126">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="9db85-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9db85-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-128">Ten konstruktor jest wywoływany przez klasy pochodne podczas konstruowania <xref:System.Reflection.CustomAttributeData> obiektów.</span><span class="sxs-lookup"><span data-stu-id="9db85-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9db85-129">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-129">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9db85-130">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db85-131">Pobiera typ atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-131">Gets the type of the attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db85-132">Typ atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-132">The type of the attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db85-133">Pobiera <see cref="T:System.Reflection.ConstructorInfo" /> obiekt, który reprezentuje konstruktora, który będzie inicjowane atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db85-134">Obiekt, który reprezentuje konstruktora, który będzie inicjowane atrybutu niestandardowego, reprezentowane przez bieżące wystąpienie <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-135">Jeśli typ atrybutu zawiera wiele konstruktorów, właściwość ta zwraca tylko określonego konstruktora, który będzie zainicjować wystąpienie atrybutu, reprezentowane przez bieżącą <xref:System.Reflection.CustomAttributeData> obiektu.</span><span class="sxs-lookup"><span data-stu-id="9db85-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db85-136">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="9db85-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="9db85-137">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="9db85-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="9db85-138">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="9db85-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="9db85-139">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="9db85-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="9db85-140">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="9db85-141">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9db85-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="9db85-142">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="9db85-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="9db85-143">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="9db85-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="9db85-144"><xref:System.Reflection.CustomAttributeData.Constructor%2A> Właściwość jest używana w `ShowAttributeData` metodę, która wyświetla dane atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="9db85-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="9db85-145">W tym przykładzie kodu <xref:System.Reflection.ConstructorInfo> zwróconych przez to właściwość jest używana do wyświetlania ciąg tekstowy, który opisuje konstruktora, demonstrując, że właściwość ta zwraca Konstruktor, który może ustawić atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9db85-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db85-146">Pobiera listę argumentów pozycyjnych określony dla tego wystąpienia atrybutu reprezentowany przez <see cref="T:System.Reflection.CustomAttributeData" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db85-147">Kolekcja struktur reprezentujących argumenty pozycyjne, określony dla tego wystąpienia atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-148">Ta metoda pobiera argumenty pozycyjne, które zostały określone dla tego wystąpienia atrybutu niestandardowego bez wykonywania kodu atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="9db85-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="9db85-149">W efekcie może służyć w kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="9db85-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="9db85-150">Użyj <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> metodę, aby uzyskać argumenty nazwane określony dla tego wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9db85-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db85-151">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="9db85-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="9db85-152">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="9db85-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="9db85-153">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="9db85-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="9db85-154">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="9db85-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="9db85-155">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="9db85-156">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9db85-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="9db85-157">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="9db85-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="9db85-158">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="9db85-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="9db85-159"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> Właściwość jest używana w `ShowAttributeData` metodę, która wyświetla dane atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="9db85-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="9db85-160">W tym przykładzie kodu ta właściwość jest używana do wyświetlania listy argumentów przekazanych do konstruktora, który jest inicjowany atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9db85-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9db85-161">Obiekt do porównania z tym wystąpieniem lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-161">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9db85-162">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-162">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9db85-163">
            <see langword="true" /> Jeśli <paramref name="obj" /> jest taki sam jak bieżące wystąpienie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-163">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9db85-164">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do obiektu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="9db85-165">Zestaw, w których dane atrybutu niestandardowego są do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-165">The assembly whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9db85-166">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9db85-167">Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-168">Ta metoda stanowi alternatywę dla <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metodę, która zawsze mogą być używane w kontekstu Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="9db85-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db85-169">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="9db85-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="9db85-170">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="9db85-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="9db85-171">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="9db85-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="9db85-172">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="9db85-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="9db85-173">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="9db85-174">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9db85-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="9db85-175">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="9db85-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="9db85-176">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="9db85-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="9db85-177"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych, zastosowany do zestawu.</span><span class="sxs-lookup"><span data-stu-id="9db85-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="9db85-178">Wartość zwracana przez metoda jest przekazywana do `ShowAttributeData` metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9db85-179">
            <paramref name="target" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-179">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="9db85-180">Element członkowski danych atrybut, którego ma być pobrana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-180">The member whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9db85-181">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do elementu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9db85-182">Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do elementu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-182">A list of objects that represent data about the attributes that have been applied to the target member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-183">Tego przeciążenia metody pobiera dane atrybutów niestandardowych dla typów, zagnieżdżone typy i składowe typu, ponieważ <xref:System.Type> klasy i klas w <xref:System.Reflection> przestrzeni nazw, które reprezentują dziedziczyć wszystkie elementy członkowskie typu <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="9db85-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db85-184">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="9db85-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="9db85-185">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="9db85-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="9db85-186">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="9db85-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="9db85-187">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="9db85-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="9db85-188">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="9db85-189">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9db85-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="9db85-190">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="9db85-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="9db85-191">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="9db85-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="9db85-192"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych, które zostały zastosowane do typu i metody testowej (<xref:System.Type> pochodzi od klasy <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="9db85-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="9db85-193">Wartość zwracana przez <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> jest przekazywany do `ShowAttributeData` metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9db85-194">
            <paramref name="target" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-194">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="9db85-195">Moduł, którego dane atrybutu niestandardowego jest do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-195">The module whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9db85-196">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do modułu, docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9db85-197">Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do modułu, docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-197">A list of objects that represent data about the attributes that have been applied to the target module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9db85-198">
            <paramref name="target" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-198">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="9db85-199">Parametr, którego dane atrybutu ma być pobrana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-199">The parameter whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9db85-200">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do parametru target.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9db85-201">Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do parametru target.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-202">Ta metoda stanowi alternatywę dla <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> metodę, która zawsze mogą być używane w kontekstu Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="9db85-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db85-203">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="9db85-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="9db85-204">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="9db85-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="9db85-205">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="9db85-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="9db85-206">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="9db85-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="9db85-207">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="9db85-208">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9db85-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="9db85-209">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="9db85-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="9db85-210">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="9db85-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="9db85-211"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych, zastosowany do parametru metody testowej.</span><span class="sxs-lookup"><span data-stu-id="9db85-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="9db85-212">Wartość zwracana przez <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> jest przekazywany do `ShowAttributeData` metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9db85-213">
            <paramref name="target" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-213">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9db85-214">Służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-214">Serves as a hash function for a particular type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9db85-215">Wartość skrótu dla bieżącego <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-215">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db85-216">Pobiera listę określony dla tego wystąpienia atrybutu, reprezentowane przez argumenty nazwane <see cref="T:System.Reflection.CustomAttributeData" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db85-217">Kolekcja struktur, które reprezentują nazwane argumenty określone dla tego wystąpienia atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-218">Ta metoda pobiera nazwane argumenty, które zostały określone dla tego wystąpienia atrybutu niestandardowego bez wykonywania kodu atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="9db85-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="9db85-219">W efekcie może służyć w kontekstu Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="9db85-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="9db85-220">Lista, która jest zwracana zawiera tylko nazwane argumenty, które zostały określone dla tego wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9db85-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="9db85-221">Użyj <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> metodę, aby uzyskać argumenty pozycyjne, które zostały określone dla tego wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9db85-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db85-222">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="9db85-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="9db85-223">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="9db85-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="9db85-224">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="9db85-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="9db85-225">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="9db85-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="9db85-226">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="9db85-227">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9db85-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="9db85-228">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="9db85-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="9db85-229">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="9db85-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="9db85-230"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A> Właściwość jest używana w `ShowAttributeData` metodę, która wyświetla dane atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="9db85-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="9db85-231">W tym przykładzie kodu ta właściwość jest używana do wyświetlania listy argumentów nazwanych określona dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9db85-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9db85-232">Zwraca reprezentację ciągu atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-232">Returns a string representation of the custom attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9db85-233">Wartość ciągu, który reprezentuje atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db85-233">A string value that represents the custom attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db85-234">Wartość ciągu zawiera typ atrybutu, parametry atrybutów i nazwanych parametrów.</span><span class="sxs-lookup"><span data-stu-id="9db85-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db85-235">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="9db85-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="9db85-236">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="9db85-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="9db85-237">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="9db85-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="9db85-238">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="9db85-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="9db85-239">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="9db85-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="9db85-240">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9db85-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="9db85-241">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="9db85-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="9db85-242">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="9db85-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="9db85-243">W tym przykładzie <xref:System.Reflection.CustomAttributeData.ToString%2A> metoda jest używana w `ShowAttributeData` metody, aby zidentyfikować ten atrybut, którego dane są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="9db85-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>