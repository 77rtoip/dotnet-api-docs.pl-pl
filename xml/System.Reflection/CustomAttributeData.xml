<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63d5890fdf03e05017d868607f988b3aaaebb931" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69353310" /></Metadata><TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1b8e1-101">Zapewnia dostęp do danych atrybutów niestandardowych dla zestawów, modułów, typów, elementów członkowskich i parametrów, które są ładowane do kontekstu tylko odbicie.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-102">Kod, który jest sprawdzany w kontekście tylko odbicia, nie może zostać wykonany, więc nie zawsze jest możliwe zbadanie atrybutów niestandardowych przez utworzenie wystąpień tych elementów, a następnie zbadanie ich właściwości przy użyciu metod <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>takich <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>jak,, i tak dalej. .</span><span class="sxs-lookup"><span data-stu-id="1b8e1-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="1b8e1-103">Jeśli kod dla samego typu atrybutu jest ładowany do kontekstu tylko odbicia, nie można go wykonać.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="1b8e1-104"><xref:System.Reflection.CustomAttributeData> Klasa umożliwia badanie atrybutów niestandardowych w kontekście tylko odbicia przez udostępnienie abstrakcji dla atrybutów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="1b8e1-105">Elementy członkowskie tej klasy mogą być używane do uzyskiwania argumentów pozycyjnych i nazwanych argumentów atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="1b8e1-106">Użyj właściwości, aby uzyskać <xref:System.Reflection.CustomAttributeTypedArgument> listę struktur, które reprezentują <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> argumenty pozycyjne, i Użyj właściwości, aby uzyskać listę <xref:System.Reflection.CustomAttributeNamedArgument> struktur, które reprezentują nazwane argumenty. <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A></span><span class="sxs-lookup"><span data-stu-id="1b8e1-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b8e1-107"><xref:System.Reflection.CustomAttributeNamedArgument> Struktura zawiera tylko informacje o właściwości atrybutu używanej do pobierania i ustawiania wartości argumentu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="1b8e1-108">Aby uzyskać typ i wartość argumentu, użyj <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> właściwości, aby <xref:System.Reflection.CustomAttributeTypedArgument> uzyskać strukturę.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="1b8e1-109">Jeśli masz <xref:System.Reflection.CustomAttributeTypedArgument> strukturę argumentu, bez względu na to, czy nazwana lub pozycyjne, <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> Użyj właściwości, aby <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> uzyskać typ i właściwość w celu uzyskania wartości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b8e1-110">Dla argumentu <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> tablicy Właściwość zwraca <xref:System.Reflection.CustomAttributeTypedArgument> ogólne <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> obiekty.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="1b8e1-111">Każdy <xref:System.Reflection.CustomAttributeTypedArgument> obiekt w kolekcji reprezentuje odpowiadający element tablicy.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="1b8e1-112"><xref:System.Reflection.CustomAttributeData>może być używany w kontekście wykonywania, a także w kontekście tylko odbicia.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="1b8e1-113">Na przykład możesz chcieć uniknąć ładowania zestawu, który zawiera kod dla atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="1b8e1-114">Korzystanie z <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>klasy różni się od używania metod, takich jak: <xref:System.Reflection.CustomAttributeData></span><span class="sxs-lookup"><span data-stu-id="1b8e1-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="1b8e1-115">Właściwości i metody <xref:System.Reflection.CustomAttributeData> tylko zapewniają wartości, które zostały określone dla wystąpienia atrybutu, a nie semantyki konstruktora.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="1b8e1-116">Na przykład argument ciągu atrybutu może być konwertowany wewnętrznie na inną reprezentację i zwracany w postaci kanonicznej; lub właściwość może mieć efekty uboczne po wykonaniu rzeczywistego kodu atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="1b8e1-117">Właściwości i metody <xref:System.Reflection.CustomAttributeData> nie pozwalają na pobieranie atrybutów niestandardowych dziedziczonych z klas bazowych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="1b8e1-118">Aby utworzyć wystąpienia <xref:System.Reflection.CustomAttributeData> klasy, `static` należy użyć metod fabryki (`Shared` w Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> .</span><span class="sxs-lookup"><span data-stu-id="1b8e1-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b8e1-119">W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1b8e1-120">Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1b8e1-121">Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1b8e1-122">Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1b8e1-123">Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1b8e1-124">W tych przypadkach są używane różne konstruktory.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="1b8e1-125">Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla informacje o niestandardowych atrybutach, które zostały zastosowane do niego, oraz do typu i członków, które zawiera.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="1b8e1-126">Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b8e1-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-128">Ten konstruktor jest wywoływany przez klasy pochodne podczas konstruowania <xref:System.Reflection.CustomAttributeData> obiektów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1b8e1-129">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-129">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="1b8e1-130">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-130">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b8e1-131">Pobiera typ atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-131">Gets the type of the attribute.</span></span></summary>
        <value><span data-ttu-id="1b8e1-132">Typ atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-132">The type of the attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b8e1-133"><see cref="T:System.Reflection.ConstructorInfo" /> Pobiera obiekt, który reprezentuje konstruktora, który mógłby zainicjować atrybut niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span></span></summary>
        <value><span data-ttu-id="1b8e1-134">Obiekt, który reprezentuje konstruktora, który mógłby zainicjować atrybut niestandardowy reprezentowany przez bieżące wystąpienie <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-135">Jeśli typ atrybutu ma wiele konstruktorów, ta właściwość zwraca tylko określony Konstruktor, który mógłby zainicjować wystąpienie atrybutu reprezentowane przez bieżący <xref:System.Reflection.CustomAttributeData> obiekt.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b8e1-136">W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1b8e1-137">Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1b8e1-138">Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1b8e1-139">Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1b8e1-140">Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1b8e1-141">W tych przypadkach są używane różne konstruktory.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="1b8e1-142">Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1b8e1-143">Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1b8e1-144">Ta <xref:System.Reflection.CustomAttributeData.Constructor%2A> właściwość jest używana `ShowAttributeData` w metodzie, która wyświetla dane atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="1b8e1-145">W tym przykładzie kodu, <xref:System.Reflection.ConstructorInfo> zwracany przez tę właściwość jest używany do wyświetlania ciągu tekstowego opisującego konstruktora, pokazując, że właściwość zwraca Konstruktor, który mógłby zainicjować atrybut.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b8e1-146">Pobiera listę argumentów pozycyjnych określonych dla wystąpienia atrybutu reprezentowanego przez <see cref="T:System.Reflection.CustomAttributeData" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="1b8e1-147">Kolekcja struktur reprezentujących argumenty pozycyjne określone dla niestandardowego wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-148">Ta metoda pobiera argumenty pozycyjne, które zostały określone dla niestandardowego wystąpienia atrybutu bez wykonywania żadnego niestandardowego kodu atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="1b8e1-149">W związku z tym może być używany w kontekście tylko odbicia.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="1b8e1-150"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A> Użyj metody, aby uzyskać nazwane argumenty określone dla wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b8e1-151">W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1b8e1-152">Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1b8e1-153">Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1b8e1-154">Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1b8e1-155">Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1b8e1-156">W tych przypadkach są używane różne konstruktory.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="1b8e1-157">Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1b8e1-158">Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1b8e1-159">Ta <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> właściwość jest używana `ShowAttributeData` w metodzie, która wyświetla dane atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="1b8e1-160">W tym przykładzie kodu Ta właściwość jest używana do wyświetlania listy argumentów przekazane do konstruktora, który zainicjował atrybut.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1b8e1-161">Obiekt, <see langword="null" />który ma zostać porównany z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-161">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1b8e1-162">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-162">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="1b8e1-163"><see langword="true" />Jeśli <paramref name="obj" /> jest równe bieżącemu wystąpieniu; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-163"><see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b8e1-164">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do obiektu docelowego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1b8e1-165">Zestaw, którego dane atrybutów niestandardowych mają być pobierane.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-165">The assembly whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1b8e1-166">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span></span></summary>
        <returns><span data-ttu-id="1b8e1-167">Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-168">Ta metoda zapewnia alternatywę dla <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metody, która zawsze może być używana w kontekście tylko odbicia.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b8e1-169">W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1b8e1-170">Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1b8e1-171">Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1b8e1-172">Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1b8e1-173">Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1b8e1-174">W tych przypadkach są używane różne konstruktory.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="1b8e1-175">Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1b8e1-176">Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1b8e1-177">Metoda jest używana w programie `Main()` w celu uzyskania atrybutów niestandardowych zastosowanych do zestawu. <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A></span><span class="sxs-lookup"><span data-stu-id="1b8e1-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="1b8e1-178">Wartość zwracana metody jest przenoszona do `ShowAttributeData` metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b8e1-179"><paramref name="target" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-179"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1b8e1-180">Element członkowski, którego atrybuty mają zostać pobrane.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-180">The member whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1b8e1-181">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do docelowego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></summary>
        <returns><span data-ttu-id="1b8e1-182">Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do docelowego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-182">A list of objects that represent data about the attributes that have been applied to the target member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-183">To Przeciążenie metody pobiera dane atrybutów niestandardowych dla typów, zagnieżdżonych typów i składowych typu, ponieważ <xref:System.Type> Klasa i klasy <xref:System.Reflection> w przestrzeni nazw, które reprezentują składowe <xref:System.Reflection.MemberInfo>typu wszystkie pochodne.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b8e1-184">W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1b8e1-185">Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1b8e1-186">Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1b8e1-187">Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1b8e1-188">Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1b8e1-189">W tych przypadkach są używane różne konstruktory.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="1b8e1-190">Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1b8e1-191">Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1b8e1-192">Metoda jest używana w programie `Main()` w celu uzyskania atrybutów niestandardowych, które zostały zastosowane do typu i do metody testowej (<xref:System.Type> pochodny <xref:System.Reflection.MemberInfo>od). <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A></span><span class="sxs-lookup"><span data-stu-id="1b8e1-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="1b8e1-193">Wartość <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> zwracana jest przenoszona `ShowAttributeData` do metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b8e1-194"><paramref name="target" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-194"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1b8e1-195">Moduł, którego dane atrybutów niestandardowych mają być pobierane.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-195">The module whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1b8e1-196">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do modułu docelowego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span></span></summary>
        <returns><span data-ttu-id="1b8e1-197">Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do modułu docelowego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-197">A list of objects that represent data about the attributes that have been applied to the target module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b8e1-198"><paramref name="target" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-198"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1b8e1-199">Parametr, którego dane atrybutów mają być pobierane.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-199">The parameter whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1b8e1-200">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do parametru docelowego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span></span></summary>
        <returns><span data-ttu-id="1b8e1-201">Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do parametru docelowego.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-202">Ta metoda zapewnia alternatywę dla <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> metody, która zawsze może być używana w kontekście tylko odbicia.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b8e1-203">W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1b8e1-204">Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1b8e1-205">Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1b8e1-206">Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1b8e1-207">Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1b8e1-208">W tych przypadkach są używane różne konstruktory.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="1b8e1-209">Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1b8e1-210">Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1b8e1-211">Metoda jest używana w programie `Main()` w celu pobrania niestandardowych atrybutów zastosowanych do parametru metody testowej. <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A></span><span class="sxs-lookup"><span data-stu-id="1b8e1-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="1b8e1-212">Wartość <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> zwracana jest przenoszona `ShowAttributeData` do metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b8e1-213"><paramref name="target" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-213"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b8e1-214">Służy jako funkcja skrótu dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-214">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="1b8e1-215">Kod skrótu dla bieżącego <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-215">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b8e1-216">Pobiera listę nazwanych argumentów określonych dla wystąpienia atrybutu reprezentowanego przez <see cref="T:System.Reflection.CustomAttributeData" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="1b8e1-217">Kolekcja struktur reprezentujących nazwane argumenty określone dla niestandardowego wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-218">Ta metoda pobiera nazwane argumenty, które zostały określone dla niestandardowego wystąpienia atrybutu bez wykonywania żadnego niestandardowego kodu atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="1b8e1-219">W związku z tym może być używany w kontekście tylko odbicia.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="1b8e1-220">Zwracana lista zawiera tylko nazwane argumenty, które zostały określone dla wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="1b8e1-221"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> Użyj metody, aby uzyskać argumenty pozycyjne, które zostały określone dla wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b8e1-222">W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1b8e1-223">Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1b8e1-224">Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1b8e1-225">Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1b8e1-226">Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1b8e1-227">W tych przypadkach są używane różne konstruktory.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="1b8e1-228">Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1b8e1-229">Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1b8e1-230">Ta <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> właściwość jest używana `ShowAttributeData` w metodzie, która wyświetla dane atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="1b8e1-231">W tym przykładzie kodu Ta właściwość służy do wyświetlania listy nazwanych argumentów określonych dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b8e1-232">Zwraca ciąg reprezentujący atrybut niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-232">Returns a string representation of the custom attribute.</span></span></summary>
        <returns><span data-ttu-id="1b8e1-233">Wartość ciągu, która reprezentuje atrybut niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-233">A string value that represents the custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b8e1-234">Wartość ciągu zawiera typ atrybutu, parametry atrybutów i nazwane parametry.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b8e1-235">W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1b8e1-236">Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1b8e1-237">Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1b8e1-238">Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1b8e1-239">Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1b8e1-240">W tych przypadkach są używane różne konstruktory.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="1b8e1-241">Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1b8e1-242">Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1b8e1-243">W tym przykładzie <xref:System.Reflection.CustomAttributeData.ToString%2A> Metoda jest używana `ShowAttributeData` w metodzie, aby zidentyfikować atrybut, którego dane są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="1b8e1-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
