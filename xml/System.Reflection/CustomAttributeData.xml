<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63d5890fdf03e05017d868607f988b3aaaebb931" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69353310" /></Metadata><TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia dostęp do danych atrybutów niestandardowych dla zestawów, modułów, typów, elementów członkowskich i parametrów, które są ładowane do kontekstu tylko odbicie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kod, który jest sprawdzany w kontekście tylko odbicia, nie może zostać wykonany, więc nie zawsze jest możliwe zbadanie atrybutów niestandardowych przez utworzenie wystąpień tych elementów, a następnie zbadanie ich właściwości przy użyciu metod <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>takich <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>jak,, i tak dalej. . Jeśli kod dla samego typu atrybutu jest ładowany do kontekstu tylko odbicia, nie można go wykonać.  
  
 <xref:System.Reflection.CustomAttributeData> Klasa umożliwia badanie atrybutów niestandardowych w kontekście tylko odbicia przez udostępnienie abstrakcji dla atrybutów. Elementy członkowskie tej klasy mogą być używane do uzyskiwania argumentów pozycyjnych i nazwanych argumentów atrybutu. Użyj właściwości, aby uzyskać <xref:System.Reflection.CustomAttributeTypedArgument> listę struktur, które reprezentują <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> argumenty pozycyjne, i Użyj właściwości, aby uzyskać listę <xref:System.Reflection.CustomAttributeNamedArgument> struktur, które reprezentują nazwane argumenty. <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>  
  
> [!NOTE]
>  <xref:System.Reflection.CustomAttributeNamedArgument> Struktura zawiera tylko informacje o właściwości atrybutu używanej do pobierania i ustawiania wartości argumentu. Aby uzyskać typ i wartość argumentu, użyj <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> właściwości, aby <xref:System.Reflection.CustomAttributeTypedArgument> uzyskać strukturę.  
  
 Jeśli masz <xref:System.Reflection.CustomAttributeTypedArgument> strukturę argumentu, bez względu na to, czy nazwana lub pozycyjne, <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> Użyj właściwości, aby <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> uzyskać typ i właściwość w celu uzyskania wartości.  
  
> [!NOTE]
>  Dla argumentu <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> tablicy Właściwość zwraca <xref:System.Reflection.CustomAttributeTypedArgument> ogólne <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> obiekty. Każdy <xref:System.Reflection.CustomAttributeTypedArgument> obiekt w kolekcji reprezentuje odpowiadający element tablicy.  
  
 <xref:System.Reflection.CustomAttributeData>może być używany w kontekście wykonywania, a także w kontekście tylko odbicia. Na przykład możesz chcieć uniknąć ładowania zestawu, który zawiera kod dla atrybutu niestandardowego. Korzystanie z <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>klasy różni się od używania metod, takich jak: <xref:System.Reflection.CustomAttributeData>  
  
-   Właściwości i metody <xref:System.Reflection.CustomAttributeData> tylko zapewniają wartości, które zostały określone dla wystąpienia atrybutu, a nie semantyki konstruktora. Na przykład argument ciągu atrybutu może być konwertowany wewnętrznie na inną reprezentację i zwracany w postaci kanonicznej; lub właściwość może mieć efekty uboczne po wykonaniu rzeczywistego kodu atrybutu.  
  
-   Właściwości i metody <xref:System.Reflection.CustomAttributeData> nie pozwalają na pobieranie atrybutów niestandardowych dziedziczonych z klas bazowych.  
  
 Aby utworzyć wystąpienia <xref:System.Reflection.CustomAttributeData> klasy, `static` należy użyć metod fabryki (`Shared` w Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> .  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości. Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów. Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów. Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.  
  
 Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody. W tych przypadkach są używane różne konstruktory. Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla informacje o niestandardowych atrybutach, które zostały zastosowane do niego, oraz do typu i członków, które zawiera.  
  
 Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływany przez klasy pochodne podczas konstruowania <xref:System.Reflection.CustomAttributeData> obiektów.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ atrybutu.</summary>
        <value>Typ atrybutu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Reflection.ConstructorInfo" /> Pobiera obiekt, który reprezentuje konstruktora, który mógłby zainicjować atrybut niestandardowy.</summary>
        <value>Obiekt, który reprezentuje konstruktora, który mógłby zainicjować atrybut niestandardowy reprezentowany przez bieżące wystąpienie <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli typ atrybutu ma wiele konstruktorów, ta właściwość zwraca tylko określony Konstruktor, który mógłby zainicjować wystąpienie atrybutu reprezentowane przez bieżący <xref:System.Reflection.CustomAttributeData> obiekt.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości. Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów. Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów. Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.  
  
 Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody. W tych przypadkach są używane różne konstruktory. Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.  
  
 Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.  
  
 Ta <xref:System.Reflection.CustomAttributeData.Constructor%2A> właściwość jest używana `ShowAttributeData` w metodzie, która wyświetla dane atrybutów niestandardowych. W tym przykładzie kodu, <xref:System.Reflection.ConstructorInfo> zwracany przez tę właściwość jest używany do wyświetlania ciągu tekstowego opisującego konstruktora, pokazując, że właściwość zwraca Konstruktor, który mógłby zainicjować atrybut.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę argumentów pozycyjnych określonych dla wystąpienia atrybutu reprezentowanego przez <see cref="T:System.Reflection.CustomAttributeData" /> obiekt.</summary>
        <value>Kolekcja struktur reprezentujących argumenty pozycyjne określone dla niestandardowego wystąpienia atrybutu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera argumenty pozycyjne, które zostały określone dla niestandardowego wystąpienia atrybutu bez wykonywania żadnego niestandardowego kodu atrybutu. W związku z tym może być używany w kontekście tylko odbicia.  
  
 <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> Użyj metody, aby uzyskać nazwane argumenty określone dla wystąpienia atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości. Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów. Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów. Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.  
  
 Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody. W tych przypadkach są używane różne konstruktory. Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.  
  
 Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.  
  
 Ta <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> właściwość jest używana `ShowAttributeData` w metodzie, która wyświetla dane atrybutów niestandardowych. W tym przykładzie kodu Ta właściwość jest używana do wyświetlania listy argumentów przekazane do konstruktora, który zainicjował atrybut.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, <see langword="null" />który ma zostać porównany z tym wystąpieniem.</param>
        <summary>Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</summary>
        <returns><see langword="true" />Jeśli <paramref name="obj" /> jest równe bieżącemu wystąpieniu; w przeciwnym razie <see langword="false" />,.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do obiektu docelowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target">Zestaw, którego dane atrybutów niestandardowych mają być pobierane.</param>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</summary>
        <returns>Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapewnia alternatywę dla <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metody, która zawsze może być używana w kontekście tylko odbicia.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości. Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów. Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów. Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.  
  
 Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody. W tych przypadkach są używane różne konstruktory. Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.  
  
 Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.  
  
 Metoda jest używana w programie `Main()` w celu uzyskania atrybutów niestandardowych zastosowanych do zestawu. <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Wartość zwracana metody jest przenoszona do `ShowAttributeData` metody.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target">Element członkowski, którego atrybuty mają zostać pobrane.</param>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do docelowego elementu członkowskiego.</summary>
        <returns>Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do docelowego elementu członkowskiego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To Przeciążenie metody pobiera dane atrybutów niestandardowych dla typów, zagnieżdżonych typów i składowych typu, ponieważ <xref:System.Type> Klasa i klasy <xref:System.Reflection> w przestrzeni nazw, które reprezentują składowe <xref:System.Reflection.MemberInfo>typu wszystkie pochodne.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości. Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów. Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów. Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.  
  
 Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody. W tych przypadkach są używane różne konstruktory. Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.  
  
 Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.  
  
 Metoda jest używana w programie `Main()` w celu uzyskania atrybutów niestandardowych, które zostały zastosowane do typu i do metody testowej (<xref:System.Type> pochodny <xref:System.Reflection.MemberInfo>od). <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Wartość <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> zwracana jest przenoszona `ShowAttributeData` do metody.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException"><paramref name="target" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target">Moduł, którego dane atrybutów niestandardowych mają być pobierane.</param>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do modułu docelowego.</summary>
        <returns>Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do modułu docelowego.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target">Parametr, którego dane atrybutów mają być pobierane.</param>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiektów reprezentujących dane dotyczące atrybutów, które zostały zastosowane do parametru docelowego.</summary>
        <returns>Lista obiektów, które reprezentują dane dotyczące atrybutów, które zostały zastosowane do parametru docelowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapewnia alternatywę dla <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> metody, która zawsze może być używana w kontekście tylko odbicia.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości. Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów. Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów. Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.  
  
 Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody. W tych przypadkach są używane różne konstruktory. Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.  
  
 Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.  
  
 Metoda jest używana w programie `Main()` w celu pobrania niestandardowych atrybutów zastosowanych do parametru metody testowej. <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Wartość <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> zwracana jest przenoszona `ShowAttributeData` do metody.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Służy jako funkcja skrótu dla określonego typu.</summary>
        <returns>Kod skrótu dla bieżącego <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę nazwanych argumentów określonych dla wystąpienia atrybutu reprezentowanego przez <see cref="T:System.Reflection.CustomAttributeData" /> obiekt.</summary>
        <value>Kolekcja struktur reprezentujących nazwane argumenty określone dla niestandardowego wystąpienia atrybutu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera nazwane argumenty, które zostały określone dla niestandardowego wystąpienia atrybutu bez wykonywania żadnego niestandardowego kodu atrybutu. W związku z tym może być używany w kontekście tylko odbicia.  
  
 Zwracana lista zawiera tylko nazwane argumenty, które zostały określone dla wystąpienia atrybutu.  
  
 <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> Użyj metody, aby uzyskać argumenty pozycyjne, które zostały określone dla wystąpienia atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości. Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów. Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów. Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.  
  
 Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody. W tych przypadkach są używane różne konstruktory. Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.  
  
 Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.  
  
 Ta <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> właściwość jest używana `ShowAttributeData` w metodzie, która wyświetla dane atrybutów niestandardowych. W tym przykładzie kodu Ta właściwość służy do wyświetlania listy nazwanych argumentów określonych dla atrybutu.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg reprezentujący atrybut niestandardowy.</summary>
        <returns>Wartość ciągu, która reprezentuje atrybut niestandardowy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość ciągu zawiera typ atrybutu, parametry atrybutów i nazwane parametry.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybut niestandardowy zawierający cztery konstruktory i cztery właściwości. Dwie właściwości są tylko do odczytu i są ustawiane przy użyciu parametrów pozycyjnych konstruktorów. Dwie inne właściwości są do odczytu/zapisu i mogą być ustawiane tylko przy użyciu nazwanych argumentów. Jedna Właściwość pozycyjne jest tablicą ciągów, a jedna nazwana właściwość jest tablicą liczb całkowitych.  
  
 Ten atrybut jest stosowany do zestawu, do typu zadeklarowanego w zestawie, do metody typu i do parametru metody. W tych przypadkach są używane różne konstruktory. Po wykonaniu zestaw ładuje się do kontekstu tylko odbicia i wyświetla atrybuty niestandardowe.  
  
 Atrybut, który jest stosowany do typu demonstruje właściwości tablicy, z argumentami pozycyjnymi i nazwanymi.  
  
 W tym przykładzie <xref:System.Reflection.CustomAttributeData.ToString%2A> Metoda jest używana `ShowAttributeData` w metodzie, aby zidentyfikować atrybut, którego dane są wyświetlane.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
