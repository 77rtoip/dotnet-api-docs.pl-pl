<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25019513ee22caa02e6ae70f127d733d5f8d6fd9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36543402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2041f-101">Zapewnia dostęp do danych atrybutu niestandardowego dla zestawów, modułów, typy, elementy członkowskie i parametrów, które są ładowane do kontekstu reflection-only.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2041f-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-102">Nie można wykonać kod, który jest rozpatrywany w kontekstu reflection-only, więc nie zawsze jest możliwe do sprawdzenia atrybutów niestandardowych, tworząc wystąpień je i sprawdzając ich właściwości, za pomocą metody, takie jak <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>i tak dalej .</span><span class="sxs-lookup"><span data-stu-id="2041f-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="2041f-103">Jeśli kod sam typ atrybutu jest ładowany do kontekstu reflection-only, nie można wykonać.</span><span class="sxs-lookup"><span data-stu-id="2041f-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="2041f-104"><xref:System.Reflection.CustomAttributeData> Klasa umożliwia badania atrybutów niestandardowych do kontekstu reflection-only zapewniając abstrakcję dla atrybutów.</span><span class="sxs-lookup"><span data-stu-id="2041f-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="2041f-105">Elementy członkowskie tej klasy można używany do uzyskania argumenty pozycyjne i nazwanych argumentów atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2041f-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="2041f-106">Użyj <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> właściwość, aby uzyskać listę <xref:System.Reflection.CustomAttributeTypedArgument> struktur, które reprezentują argumenty pozycyjne i użyj <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> właściwość, aby uzyskać listę <xref:System.Reflection.CustomAttributeNamedArgument> struktur reprezentujących argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="2041f-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2041f-107"><xref:System.Reflection.CustomAttributeNamedArgument> Struktury zawiera tylko informacje o właściwości atrybut używany do pobierania i ustaw wartość argumentu.</span><span class="sxs-lookup"><span data-stu-id="2041f-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="2041f-108">Aby uzyskać typ i wartość argumentu, użyj <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> właściwości w celu uzyskania <xref:System.Reflection.CustomAttributeTypedArgument> struktury.</span><span class="sxs-lookup"><span data-stu-id="2041f-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="2041f-109">Jeśli masz <xref:System.Reflection.CustomAttributeTypedArgument> struktury dla argumentu nazwanego lub pozycyjnych, użyj <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> właściwości można pobrać typu i <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> właściwości można uzyskać wartość.</span><span class="sxs-lookup"><span data-stu-id="2041f-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2041f-110">Argument tablicy <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> właściwość zwraca ogólnego <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> z <xref:System.Reflection.CustomAttributeTypedArgument> obiektów.</span><span class="sxs-lookup"><span data-stu-id="2041f-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="2041f-111">Każdy <xref:System.Reflection.CustomAttributeTypedArgument> odpowiadający mu element tablicy reprezentuje obiekt w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2041f-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="2041f-112"><xref:System.Reflection.CustomAttributeData> może służyć kontekstu wykonywania, a także jak kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="2041f-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="2041f-113">Na przykład można uniknąć, podczas ładowania zestawu, który zawiera kod dla atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="2041f-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="2041f-114">Przy użyciu <xref:System.Reflection.CustomAttributeData> klasy różni się od przy użyciu metody, takie jak <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="2041f-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="2041f-115">Właściwości i metod <xref:System.Reflection.CustomAttributeData> tylko udostępniają wartości, które zostały określone dla tego wystąpienia atrybutu nie semantykę konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2041f-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="2041f-116">Argument ciągu atrybutu może na przykład przekonwertować wewnętrznie niektóre inne reprezentacja i zwracane w formie kanonicznej; lub właściwości może mieć efekty uboczne, podczas wykonywania kodu atrybutu rzeczywistego.</span><span class="sxs-lookup"><span data-stu-id="2041f-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="2041f-117">Właściwości i metod <xref:System.Reflection.CustomAttributeData> nie pozwala na pobieranie atrybuty niestandardowe odziedziczone z klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="2041f-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="2041f-118">Można utworzyć wystąpienia <xref:System.Reflection.CustomAttributeData> klasy, należy użyć `static` (`Shared` w języku Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="2041f-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2041f-119">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="2041f-120">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="2041f-121">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="2041f-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="2041f-122">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2041f-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="2041f-123">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="2041f-124">Różne konstruktory są używane dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2041f-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="2041f-125">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla informacje o niestandardowych atrybutów, które zostały zastosowane do niej i do typu i elementów członkowskich, które zawiera.</span><span class="sxs-lookup"><span data-stu-id="2041f-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="2041f-126">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="2041f-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2041f-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-128">Ten konstruktor jest wywoływany przez klas pochodnych podczas budowy <xref:System.Reflection.CustomAttributeData> obiektów.</span><span class="sxs-lookup"><span data-stu-id="2041f-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2041f-129">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-129">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2041f-130">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2041f-131">Pobiera typ atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-131">Gets the type of the attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2041f-132">Typ atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-132">The type of the attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2041f-133">Pobiera <see cref="T:System.Reflection.ConstructorInfo" /> obiekt, który reprezentuje konstruktora, który może zainicjować atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2041f-134">Obiekt reprezentujący Konstruktor, który może zainicjować atrybutu niestandardowego reprezentowany przez bieżące wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-135">Jeśli typem atrybutu ma wiele konstruktorów, ta właściwość zwraca tylko określonego konstruktora, który może zainicjować reprezentowany przez bieżące wystąpienie atrybutu <xref:System.Reflection.CustomAttributeData> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2041f-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2041f-136">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="2041f-137">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="2041f-138">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="2041f-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="2041f-139">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2041f-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="2041f-140">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="2041f-141">Różne konstruktory są używane dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2041f-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="2041f-142">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="2041f-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="2041f-143">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="2041f-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="2041f-144"><xref:System.Reflection.CustomAttributeData.Constructor%2A> Właściwość jest używana w `ShowAttributeData` metodę, która zawiera dane o atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="2041f-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="2041f-145">W tym przykładzie kodu <xref:System.Reflection.ConstructorInfo> zwróconych przez to właściwość jest używana do wyświetlania ciąg tekstowy, który opisuje konstruktora, z którego wynika, że właściwość zwraca Konstruktor, który może ustawić atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2041f-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2041f-146">Pobiera listę argumentów pozycyjnych określony dla atrybutu wystąpienia reprezentowany przez <see cref="T:System.Reflection.CustomAttributeData" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2041f-147">Kolekcja struktur reprezentujących argumenty pozycyjne określony dla atrybutu niestandardowego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-148">Ta metoda pobiera argumenty pozycyjne, które zostały określone dla atrybutu niestandardowego wystąpienia bez wykonania żadnego kodu atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="2041f-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="2041f-149">W związku z tym można używać w kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="2041f-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="2041f-150">Użyj <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> metodę, aby pobrać nazwanych argumentów określona dla atrybutu wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2041f-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2041f-151">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="2041f-152">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="2041f-153">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="2041f-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="2041f-154">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2041f-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="2041f-155">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="2041f-156">Różne konstruktory są używane dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2041f-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="2041f-157">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="2041f-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="2041f-158">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="2041f-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="2041f-159"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> Właściwość jest używana w `ShowAttributeData` metodę, która zawiera dane o atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="2041f-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="2041f-160">W tym przykładzie kodu ta właściwość jest używana do wyświetlania listy argumentów przekazanych do konstruktora, który zainicjować atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2041f-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2041f-161">Obiekt do porównania z tym wystąpieniem lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-161">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2041f-162">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-162">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2041f-163">
            <see langword="true" /> Jeśli <paramref name="obj" /> jest taki sam, jak bieżące wystąpienie w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-163">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2041f-164">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do obiektu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2041f-165">Zestaw danych atrybutu niestandardowego, którego ma być pobrana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-165">The assembly whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2041f-166">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2041f-167">Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do zestawu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-168">Ta metoda stanowi alternatywę dla <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metoda zawsze może być używana w kontekstu Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="2041f-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2041f-169">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="2041f-170">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="2041f-171">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="2041f-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="2041f-172">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2041f-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="2041f-173">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="2041f-174">Różne konstruktory są używane dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2041f-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="2041f-175">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="2041f-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="2041f-176">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="2041f-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="2041f-177"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych zastosowanych do zestawu.</span><span class="sxs-lookup"><span data-stu-id="2041f-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="2041f-178">Zwracana wartość metody jest przekazywany do `ShowAttributeData` metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2041f-179">
            <paramref name="target" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-179">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2041f-180">Element członkowski, którego dane atrybut ma być pobrana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-180">The member whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2041f-181">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do elementu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2041f-182">Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do elementu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-182">A list of objects that represent data about the attributes that have been applied to the target member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-183">To przeciążenie metody pobiera dane atrybutów niestandardowych dla typów, zagnieżdżone typy i elementy członkowskie typu, ponieważ <xref:System.Type> klasa i klasy w <xref:System.Reflection> przestrzeni nazw, która reprezentuje dziedziczyć wszystkie elementy członkowskie typu <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="2041f-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2041f-184">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="2041f-185">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="2041f-186">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="2041f-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="2041f-187">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2041f-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="2041f-188">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="2041f-189">Różne konstruktory są używane dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2041f-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="2041f-190">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="2041f-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="2041f-191">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="2041f-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="2041f-192"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych, które zostały zastosowane do typu i metody testowej (<xref:System.Type> pochodną <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="2041f-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="2041f-193">Wartość zwracana <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> jest przekazywana do `ShowAttributeData` metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2041f-194">
            <paramref name="target" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-194">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2041f-195">Moduł, którego dane atrybutu niestandardowego ma być pobrana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-195">The module whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2041f-196">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do modułu, docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2041f-197">Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do modułu, docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-197">A list of objects that represent data about the attributes that have been applied to the target module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2041f-198">
            <paramref name="target" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-198">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2041f-199">Parametr, którego dane atrybut ma być pobrana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-199">The parameter whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2041f-200">Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do parametru target.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2041f-201">Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do parametru target.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-202">Ta metoda stanowi alternatywę dla <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> metoda zawsze może być używana w kontekstu Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="2041f-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2041f-203">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="2041f-204">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="2041f-205">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="2041f-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="2041f-206">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2041f-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="2041f-207">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="2041f-208">Różne konstruktory są używane dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2041f-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="2041f-209">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="2041f-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="2041f-210">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="2041f-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="2041f-211"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych zastosowanych do parametru metody testowej.</span><span class="sxs-lookup"><span data-stu-id="2041f-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="2041f-212">Wartość zwracana <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> jest przekazywana do `ShowAttributeData` metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2041f-213">
            <paramref name="target" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-213">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2041f-214">Pełni rolę funkcji skrótu dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-214">Serves as a hash function for a particular type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2041f-215">Wartość skrótu dla bieżącego <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-215">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2041f-216">Pobiera listę nazwanych argumentów określona dla atrybutu wystąpienia reprezentowany przez <see cref="T:System.Reflection.CustomAttributeData" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2041f-217">Kolekcja struktur reprezentujących argumenty nazwane określony dla atrybutu niestandardowego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-218">Ta metoda pobiera nazwane argumenty, które zostały określone dla atrybutu niestandardowego wystąpienia bez wykonania żadnego kodu atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="2041f-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="2041f-219">W związku z tym można używać w kontekstu Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="2041f-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="2041f-220">Listy, który jest zwracany zawiera tylko nazwane argumenty, które zostały określone dla wystąpienia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2041f-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="2041f-221">Użyj <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> metodę, aby uzyskać argumenty pozycyjne, które zostały określone wystąpienie atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2041f-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2041f-222">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="2041f-223">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="2041f-224">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="2041f-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="2041f-225">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2041f-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="2041f-226">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="2041f-227">Różne konstruktory są używane dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2041f-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="2041f-228">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="2041f-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="2041f-229">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="2041f-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="2041f-230"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A> Właściwość jest używana w `ShowAttributeData` metodę, która zawiera dane o atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="2041f-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="2041f-231">W tym przykładzie kodu ta właściwość jest używana do wyświetlania listy nazwanych argumentów określona dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2041f-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2041f-232">Zwraca reprezentację ciągu atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-232">Returns a string representation of the custom attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2041f-233">Wartość ciągu, który reprezentuje atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2041f-233">A string value that represents the custom attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2041f-234">Wartość ciągu zawiera typ atrybutu, parametry atrybutów i nazwane parametry.</span><span class="sxs-lookup"><span data-stu-id="2041f-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2041f-235">W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="2041f-236">Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="2041f-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="2041f-237">Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi.</span><span class="sxs-lookup"><span data-stu-id="2041f-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="2041f-238">Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2041f-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="2041f-239">Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="2041f-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="2041f-240">Różne konstruktory są używane dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2041f-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="2041f-241">Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="2041f-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="2041f-242">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="2041f-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="2041f-243">W tym przykładzie <xref:System.Reflection.CustomAttributeData.ToString%2A> metoda jest używana w `ShowAttributeData` metody, aby zidentyfikować ten atrybut, którego dane są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="2041f-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>