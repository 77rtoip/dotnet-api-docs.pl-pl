<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25019513ee22caa02e6ae70f127d733d5f8d6fd9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36543402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia dostęp do danych atrybutu niestandardowego dla zestawów, modułów, typy, elementy członkowskie i parametrów, które są ładowane do kontekstu reflection-only.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można wykonać kod, który jest rozpatrywany w kontekstu reflection-only, więc nie zawsze jest możliwe do sprawdzenia atrybutów niestandardowych, tworząc wystąpień je i sprawdzając ich właściwości, za pomocą metody, takie jak <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>i tak dalej . Jeśli kod sam typ atrybutu jest ładowany do kontekstu reflection-only, nie można wykonać.  
  
 <xref:System.Reflection.CustomAttributeData> Klasa umożliwia badania atrybutów niestandardowych do kontekstu reflection-only zapewniając abstrakcję dla atrybutów. Elementy członkowskie tej klasy można używany do uzyskania argumenty pozycyjne i nazwanych argumentów atrybutu. Użyj <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> właściwość, aby uzyskać listę <xref:System.Reflection.CustomAttributeTypedArgument> struktur, które reprezentują argumenty pozycyjne i użyj <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> właściwość, aby uzyskać listę <xref:System.Reflection.CustomAttributeNamedArgument> struktur reprezentujących argumenty nazwane.  
  
> [!NOTE]
>  <xref:System.Reflection.CustomAttributeNamedArgument> Struktury zawiera tylko informacje o właściwości atrybut używany do pobierania i ustaw wartość argumentu. Aby uzyskać typ i wartość argumentu, użyj <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> właściwości w celu uzyskania <xref:System.Reflection.CustomAttributeTypedArgument> struktury.  
  
 Jeśli masz <xref:System.Reflection.CustomAttributeTypedArgument> struktury dla argumentu nazwanego lub pozycyjnych, użyj <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> właściwości można pobrać typu i <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> właściwości można uzyskać wartość.  
  
> [!NOTE]
>  Argument tablicy <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> właściwość zwraca ogólnego <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> z <xref:System.Reflection.CustomAttributeTypedArgument> obiektów. Każdy <xref:System.Reflection.CustomAttributeTypedArgument> odpowiadający mu element tablicy reprezentuje obiekt w kolekcji.  
  
 <xref:System.Reflection.CustomAttributeData> może służyć kontekstu wykonywania, a także jak kontekstu reflection-only. Na przykład można uniknąć, podczas ładowania zestawu, który zawiera kod dla atrybutu niestandardowego. Przy użyciu <xref:System.Reflection.CustomAttributeData> klasy różni się od przy użyciu metody, takie jak <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:  
  
-   Właściwości i metod <xref:System.Reflection.CustomAttributeData> tylko udostępniają wartości, które zostały określone dla tego wystąpienia atrybutu nie semantykę konstruktora. Argument ciągu atrybutu może na przykład przekonwertować wewnętrznie niektóre inne reprezentacja i zwracane w formie kanonicznej; lub właściwości może mieć efekty uboczne, podczas wykonywania kodu atrybutu rzeczywistego.  
  
-   Właściwości i metod <xref:System.Reflection.CustomAttributeData> nie pozwala na pobieranie atrybuty niestandardowe odziedziczone z klas podstawowych.  
  
 Można utworzyć wystąpienia <xref:System.Reflection.CustomAttributeData> klasy, należy użyć `static` (`Shared` w języku Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metody fabryki.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów. Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów. Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi. Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.  
  
 Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody. Różne konstruktory są używane dla tych przypadków. Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla informacje o niestandardowych atrybutów, które zostały zastosowane do niej i do typu i elementów członkowskich, które zawiera.  
  
 Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływany przez klas pochodnych podczas budowy <xref:System.Reflection.CustomAttributeData> obiektów.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ atrybutu.</summary>
        <value>Typ atrybutu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Reflection.ConstructorInfo" /> obiekt, który reprezentuje konstruktora, który może zainicjować atrybutu niestandardowego.</summary>
        <value>Obiekt reprezentujący Konstruktor, który może zainicjować atrybutu niestandardowego reprezentowany przez bieżące wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeData" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli typem atrybutu ma wiele konstruktorów, ta właściwość zwraca tylko określonego konstruktora, który może zainicjować reprezentowany przez bieżące wystąpienie atrybutu <xref:System.Reflection.CustomAttributeData> obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów. Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów. Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi. Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.  
  
 Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody. Różne konstruktory są używane dla tych przypadków. Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.  
  
 Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.  
  
 <xref:System.Reflection.CustomAttributeData.Constructor%2A> Właściwość jest używana w `ShowAttributeData` metodę, która zawiera dane o atrybutu niestandardowego. W tym przykładzie kodu <xref:System.Reflection.ConstructorInfo> zwróconych przez to właściwość jest używana do wyświetlania ciąg tekstowy, który opisuje konstruktora, z którego wynika, że właściwość zwraca Konstruktor, który może ustawić atrybutu.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę argumentów pozycyjnych określony dla atrybutu wystąpienia reprezentowany przez <see cref="T:System.Reflection.CustomAttributeData" /> obiektu.</summary>
        <value>Kolekcja struktur reprezentujących argumenty pozycyjne określony dla atrybutu niestandardowego wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera argumenty pozycyjne, które zostały określone dla atrybutu niestandardowego wystąpienia bez wykonania żadnego kodu atrybutu niestandardowego. W związku z tym można używać w kontekstu reflection-only.  
  
 Użyj <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> metodę, aby pobrać nazwanych argumentów określona dla atrybutu wystąpienia.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów. Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów. Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi. Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.  
  
 Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody. Różne konstruktory są używane dla tych przypadków. Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.  
  
 Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.  
  
 <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> Właściwość jest używana w `ShowAttributeData` metodę, która zawiera dane o atrybutu niestandardowego. W tym przykładzie kodu ta właściwość jest używana do wyświetlania listy argumentów przekazanych do konstruktora, który zainicjować atrybutu.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania z tym wystąpieniem lub <see langword="null" />.</param>
        <summary>Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="obj" /> jest taki sam, jak bieżące wystąpienie w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do obiektu docelowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="target">Zestaw danych atrybutu niestandardowego, którego ma być pobrana.</param>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do zestawu docelowego.</summary>
        <returns>Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do zestawu docelowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda stanowi alternatywę dla <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metoda zawsze może być używana w kontekstu Reflection-only.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów. Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów. Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi. Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.  
  
 Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody. Różne konstruktory są używane dla tych przypadków. Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.  
  
 Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.  
  
 <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych zastosowanych do zestawu. Zwracana wartość metody jest przekazywany do `ShowAttributeData` metody.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="target">Element członkowski, którego dane atrybut ma być pobrana.</param>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do elementu docelowego.</summary>
        <returns>Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do elementu docelowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie metody pobiera dane atrybutów niestandardowych dla typów, zagnieżdżone typy i elementy członkowskie typu, ponieważ <xref:System.Type> klasa i klasy w <xref:System.Reflection> przestrzeni nazw, która reprezentuje dziedziczyć wszystkie elementy członkowskie typu <xref:System.Reflection.MemberInfo>.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów. Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów. Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi. Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.  
  
 Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody. Różne konstruktory są używane dla tych przypadków. Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.  
  
 Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.  
  
 <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych, które zostały zastosowane do typu i metody testowej (<xref:System.Type> pochodną <xref:System.Reflection.MemberInfo>). Wartość zwracana <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> jest przekazywana do `ShowAttributeData` metody.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="target">Moduł, którego dane atrybutu niestandardowego ma być pobrana.</param>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do modułu, docelowej.</summary>
        <returns>Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do modułu, docelowej.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="target">Parametr, którego dane atrybut ma być pobrana.</param>
        <summary>Zwraca listę <see cref="T:System.Reflection.CustomAttributeData" /> obiekty reprezentujące dane dotyczące atrybutów, które zostały zastosowane do parametru target.</summary>
        <returns>Lista obiektów, które zawierają dane o atrybutach, które zostały zastosowane do parametru target.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda stanowi alternatywę dla <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> metoda zawsze może być używana w kontekstu Reflection-only.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów. Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów. Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi. Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.  
  
 Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody. Różne konstruktory są używane dla tych przypadków. Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.  
  
 Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.  
  
 <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Metoda jest używana w `Main()` można pobrać atrybutów niestandardowych zastosowanych do parametru metody testowej. Wartość zwracana <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> jest przekazywana do `ShowAttributeData` metody.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pełni rolę funkcji skrótu dla określonego typu.</summary>
        <returns>Wartość skrótu dla bieżącego <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę nazwanych argumentów określona dla atrybutu wystąpienia reprezentowany przez <see cref="T:System.Reflection.CustomAttributeData" /> obiektu.</summary>
        <value>Kolekcja struktur reprezentujących argumenty nazwane określony dla atrybutu niestandardowego wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera nazwane argumenty, które zostały określone dla atrybutu niestandardowego wystąpienia bez wykonania żadnego kodu atrybutu niestandardowego. W związku z tym można używać w kontekstu Reflection-only.  
  
 Listy, który jest zwracany zawiera tylko nazwane argumenty, które zostały określone dla wystąpienia atrybutu.  
  
 Użyj <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> metodę, aby uzyskać argumenty pozycyjne, które zostały określone wystąpienie atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów. Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów. Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi. Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.  
  
 Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody. Różne konstruktory są używane dla tych przypadków. Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.  
  
 Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.  
  
 <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> Właściwość jest używana w `ShowAttributeData` metodę, która zawiera dane o atrybutu niestandardowego. W tym przykładzie kodu ta właściwość jest używana do wyświetlania listy nazwanych argumentów określona dla atrybutu.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu atrybutu niestandardowego.</summary>
        <returns>Wartość ciągu, który reprezentuje atrybutu niestandardowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość ciągu zawiera typ atrybutu, parametry atrybutów i nazwane parametry.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano atrybutu niestandardowego z czterech właściwości i cztery konstruktorów. Dwie właściwości są tylko do odczytu i są skonfigurowane przy użyciu parametrów pozycyjnych z konstruktorów. Dwie właściwości są odczytu/zapisu, i może być zestaw tylko przy użyciu argumentami nazwanymi. Jedną właściwość pozycyjnych jest tablicą ciągów, i jedną właściwość o nazwie jest tablica liczb całkowitych.  
  
 Atrybut jest stosowany do zestawu, na typ zadeklarowany w zestawie, metody typu i parametru metody. Różne konstruktory są używane dla tych przypadków. Po wykonaniu zestaw ładuje się do kontekstu reflection-only i wyświetla atrybutów niestandardowych.  
  
 Atrybut, który jest stosowany do typu pokazuje właściwości tablicy z argumenty nazwane i pozycyjnych.  
  
 W tym przykładzie <xref:System.Reflection.CustomAttributeData.ToString%2A> metoda jest używana w `ShowAttributeData` metody, aby zidentyfikować ten atrybut, którego dane są wyświetlane.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>