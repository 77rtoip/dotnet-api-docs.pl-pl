<Type Name="PropertyInfo" FullName="System.Reflection.PropertyInfo">
  <TypeSignature Language="C#" Value="public abstract class PropertyInfo : System.Reflection.MemberInfo, System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit PropertyInfo extends System.Reflection.MemberInfo implements class System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyInfo&#xA;Inherits MemberInfo&#xA;Implements _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyInfo abstract : System::Reflection::MemberInfo, System::Runtime::InteropServices::_PropertyInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MemberInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._PropertyInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyInfo))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="371a7-101">Umożliwia odnalezienie atrybuty właściwości i udostępnia metadane właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-101">Discovers the attributes of a property and provides access to property metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-102">Właściwości logicznie są takie same jak pól.</span><span class="sxs-lookup"><span data-stu-id="371a7-102">Properties are logically the same as fields.</span></span> <span data-ttu-id="371a7-103">Właściwość jest nazwane aspektów stanu obiektu, którego wartość jest zazwyczaj dostępna za pośrednictwem `get` i `set` metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-103">A property is a named aspect of an object's state whose value is typically accessible through `get` and `set` accessors.</span></span> <span data-ttu-id="371a7-104">Właściwości mogą być tylko do odczytu, w którym to przypadku procedury zestaw nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="371a7-104">Properties may be read-only, in which case a set routine is not supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-105">Aby określić, czy właściwość jest `static`, należy uzyskać <xref:System.Reflection.MethodInfo> dla `get` lub `set` przez wywołanie metody dostępu <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> lub <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> metody i sprawdź, czy jego <xref:System.Reflection.MethodBase.IsStatic%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-105">To determine whether a property is `static`, you must obtain the <xref:System.Reflection.MethodInfo> for the `get` or `set` accessor, by calling the <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> or the <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method, and examine its <xref:System.Reflection.MethodBase.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="371a7-106">Kilka metod w tej klasie przyjęto założenie, że `get` metody dostępu i `set` określonych formatów ma metody dostępu właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-106">Several methods in this class assume that the `get` accessor and `set` accessor methods of a property have certain formats.</span></span> <span data-ttu-id="371a7-107">Podpisy `get` i `set` metody muszą być zgodne z następującą konwencją:</span><span class="sxs-lookup"><span data-stu-id="371a7-107">The signatures of the `get` and `set` methods must match the following convention:</span></span>  
  
-   <span data-ttu-id="371a7-108">Zwracany typ `get` — metoda i ostatni argument `set` metody muszą być takie same.</span><span class="sxs-lookup"><span data-stu-id="371a7-108">The return type of the `get` method and the last argument of the `set` method must be identical.</span></span> <span data-ttu-id="371a7-109">Jest to typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-109">This is the type of the property.</span></span>  
  
-   <span data-ttu-id="371a7-110">`get` i `set` metody musi mieć numer, typ i kolejność indeksów.</span><span class="sxs-lookup"><span data-stu-id="371a7-110">The `get` and `set` methods must have the same number, type, and order of indices.</span></span>  
  
 <span data-ttu-id="371a7-111">Jeśli ten format nie jest zakończony, zachowanie `GetValue` i `SetValue` metody jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="371a7-111">If this format is not followed, the behavior of the `GetValue` and `SetValue` methods is undefined.</span></span>  
  
 <span data-ttu-id="371a7-112">Wywoływanie <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=nameWithType> na `PropertyInfo` podczas `inherit` parametr `GetCustomAttributes` jest `true` nie zawiera hierarchii typów.</span><span class="sxs-lookup"><span data-stu-id="371a7-112">Calling <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=nameWithType> on `PropertyInfo` when the `inherit` parameter of `GetCustomAttributes` is `true` does not walk the type hierarchy.</span></span> <span data-ttu-id="371a7-113">Użyj <xref:System.Attribute?displayProperty=nameWithType> dziedziczy atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="371a7-113">Use <xref:System.Attribute?displayProperty=nameWithType> to inherit custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-114">W tym przykładzie pokazano, jak używać różnych klas odbicia do analizowania metadanych zawarty w zestawie.</span><span class="sxs-lookup"><span data-stu-id="371a7-114">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-115">W tym przykładzie generuje około 55,000 wiersze danych, który można przekierować do pliku tekstowego w wierszu polecenia w następujący sposób: **example.exe > propertyinfo.txt**</span><span class="sxs-lookup"><span data-stu-id="371a7-115">This example generates about 55,000 lines of data, which you can redirect to a text file at the command prompt, as follows: **example.exe > propertyinfo.txt**</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="371a7-116">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="371a7-116">for full trust for inheritors.</span></span> <span data-ttu-id="371a7-117">Klasa ta nie może być dziedziczona przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="371a7-117">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="371a7-118">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="371a7-118">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="371a7-119">Przy dziedziczeniu z <see cref="T:System.Reflection.PropertyInfo" />, konieczne jest przesłonięcie następujących członków: <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />, <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />, i <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-119">When you inherit from <see cref="T:System.Reflection.PropertyInfo" />, you must override the following members: <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />, <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />, and <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.PropertyInfo" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="371a7-120">Initializes a new instance of the <see cref="T:System.Reflection.PropertyInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-121">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-121">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-122">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-122">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="371a7-123">Pobiera atrybuty dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-123">Gets the attributes for this property.</span></span></summary>
        <value><span data-ttu-id="371a7-124">Atrybuty tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-124">The attributes of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-125"><xref:System.Reflection.PropertyInfo.Attributes%2A> Właściwość zwraca atrybuty skojarzone z właściwości reprezentowanej przez to <xref:System.Reflection.PropertyInfo> obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-125">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property returns the attributes associated with the property represented by this <xref:System.Reflection.PropertyInfo> object.</span></span>  <span data-ttu-id="371a7-126">Atrybuty są głównie Modyfikatory stosowane przez kompilatora podczas tworzenia właściwości; wskazują, czy właściwość jest właściwością domyślną `SpecialName` właściwości i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="371a7-126">The attributes are primarily modifiers applied by a compiler when creating a property; they indicate whether a property is the default property, a `SpecialName` property, and so on.</span></span> <span data-ttu-id="371a7-127">Należy zauważyć, że dla prawie wszystkich właściwości znalezionych w typach w bibliotece klas programu .NET Framework, wartość <xref:System.Reflection.PropertyInfo.Attributes%2A> jest właściwość <xref:System.Reflection.PropertyAttributes.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="371a7-127">Note that, for almost all properties found in types in the .NET Framework class library, the value of the <xref:System.Reflection.PropertyInfo.Attributes%2A> property is <xref:System.Reflection.PropertyAttributes.None?displayProperty=nameWithType>.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="371a7-128">W większości przypadków prawdopodobnie chcesz pobrać niestandardowe atrybuty powiązane z właściwością.</span><span class="sxs-lookup"><span data-stu-id="371a7-128">In most cases, you probably want to retrieve the custom attributes associated with a property.</span></span> <span data-ttu-id="371a7-129">Aby to zrobić, należy pobrać wartość <xref:System.Reflection.MemberInfo.CustomAttributes%2A> właściwość lub wywołanie jednego z przeciążeń <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-129">To do this, retrieve the value of the <xref:System.Reflection.MemberInfo.CustomAttributes%2A> property, or call one of the overloads of the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span>  
  
 <span data-ttu-id="371a7-130">Aby uzyskać <xref:System.Reflection.PropertyInfo.Attributes%2A> właściwości:</span><span class="sxs-lookup"><span data-stu-id="371a7-130">To get the <xref:System.Reflection.PropertyInfo.Attributes%2A> property:</span></span>  
  
1.  <span data-ttu-id="371a7-131">Pobierz <xref:System.Type> obiekt, który reprezentuje typ, do którego należy właściwość.</span><span class="sxs-lookup"><span data-stu-id="371a7-131">Get a <xref:System.Type> object that represents the type to which the property belongs.</span></span>  
  
2.  <span data-ttu-id="371a7-132">Pobierz <xref:System.Reflection.PropertyInfo> obiektu przez wywołanie metody przeciążenia <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-132">Get the <xref:System.Reflection.PropertyInfo> object by calling an overload of the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method.</span></span>  
  
3.  <span data-ttu-id="371a7-133">Pobierz atrybuty właściwości z <xref:System.Reflection.PropertyInfo.Attributes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-133">Retrieve the property's attributes from the <xref:System.Reflection.PropertyInfo.Attributes%2A> property.</span></span>  
  
 <span data-ttu-id="371a7-134">Można zdefiniować atrybutów właściwości dla typu utworzony dynamicznie przy użyciu odbicia Emituj wywołując przeciążenia <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> — metoda i podanie wartości dla `attributes` argumentu.</span><span class="sxs-lookup"><span data-stu-id="371a7-134">You can define the attributes of a property for a type created dynamically using reflection emit by calling an overload of the <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> method and supplying a value for the `attributes` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.MemberInfo.CustomAttributes" />
        <altmember cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="371a7-135">Pobiera wartość wskazującą, czy właściwość może zostać odczytany.</span><span class="sxs-lookup"><span data-stu-id="371a7-135">Gets a value indicating whether the property can be read.</span></span></summary>
        <value>
          <span data-ttu-id="371a7-136"><see langword="true" /> Jeśli ta właściwość może zostać odczytany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-136"><see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-137">Jeśli nie ma właściwości `get` dostępu, nie może być odczytać.</span><span class="sxs-lookup"><span data-stu-id="371a7-137">If the property does not have a `get` accessor, it cannot be read.</span></span>  
  
 <span data-ttu-id="371a7-138">Aby uzyskać `CanRead` właściwość, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-138">To get the `CanRead` property, first get the class `Type`.</span></span> <span data-ttu-id="371a7-139">Z `Type`, Pobierz `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-139">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="371a7-140">Z `PropertyInfo`, Pobierz `CanRead` wartość.</span><span class="sxs-lookup"><span data-stu-id="371a7-140">From the `PropertyInfo`, get the `CanRead` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-141">W poniższym przykładzie zdefiniowano dwie właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-141">The following example defines two properties.</span></span> <span data-ttu-id="371a7-142">Pierwszą właściwością jest możliwy do odczytu i `CanRead` jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="371a7-142">The first property is readable and the `CanRead` property is `true`.</span></span> <span data-ttu-id="371a7-143">Druga właściwość nie jest do odczytu (jest nie metody dostępu get) i `CanRead` jest właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="371a7-143">The second property is not readable (there is no get accessor), and the `CanRead` property is `false`.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="371a7-144">Pobiera wartość wskazującą, czy właściwość może być zapisywane.</span><span class="sxs-lookup"><span data-stu-id="371a7-144">Gets a value indicating whether the property can be written to.</span></span></summary>
        <value>
          <span data-ttu-id="371a7-145"><see langword="true" /> Jeśli ta właściwość może zostać zapisana na; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-145"><see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-146"><xref:System.Reflection.PropertyInfo.CanWrite%2A> Zwraca `true` Jeśli właściwość ma `set` dostępu, nawet jeśli jest akcesor `private`, `internal` (lub `Friend` w języku Visual Basic), lub `protected`.</span><span class="sxs-lookup"><span data-stu-id="371a7-146"><xref:System.Reflection.PropertyInfo.CanWrite%2A> returns `true` if the property has a `set` accessor, even if the accessor is `private`, `internal` (or `Friend` in Visual Basic), or `protected`.</span></span>   <span data-ttu-id="371a7-147">Jeśli nie ma właściwości `set` dostępu, metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="371a7-147">If the property does not have a `set` accessor, the method returns `false`.</span></span>  
  
 <span data-ttu-id="371a7-148">Aby uzyskać wartość <xref:System.Reflection.PropertyInfo.CanWrite%2A> właściwości:</span><span class="sxs-lookup"><span data-stu-id="371a7-148">To get the value of the <xref:System.Reflection.PropertyInfo.CanWrite%2A> property:</span></span>  
  
1.  <span data-ttu-id="371a7-149">Pobierz <xref:System.Type> obiektu typu, który zawiera właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-149">Get the <xref:System.Type> object of the type that includes the property.</span></span>  
  
2.  <span data-ttu-id="371a7-150">Wywołanie <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> uzyskanie <xref:System.Reflection.PropertyInfo> obiekt, który reprezentuje właściwość.</span><span class="sxs-lookup"><span data-stu-id="371a7-150">Call the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> to get the <xref:System.Reflection.PropertyInfo> object that represents the property.</span></span>  
  
3.  <span data-ttu-id="371a7-151">Pobrać wartość <xref:System.Reflection.PropertyInfo.CanWrite%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-151">Retrieve the value of the <xref:System.Reflection.PropertyInfo.CanWrite%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-152">W poniższym przykładzie zdefiniowano dwie właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-152">The following example defines two properties.</span></span> <span data-ttu-id="371a7-153">Pierwszą właściwością jest zapisywalny i `CanWrite` jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="371a7-153">The first property is writable and the `CanWrite` property is `true`.</span></span> <span data-ttu-id="371a7-154">Druga właściwość nie jest zapisywalny (Brak nie `set` akcesor) i `CanWrite` jest właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="371a7-154">The second property is not writable (there is no `set` accessor), and the `CanWrite` property is `false`.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="371a7-155">Obiekt do porównania z tym wystąpieniem lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-155">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="371a7-156">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="371a7-156">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="371a7-157"><see langword="true" /> Jeśli <paramref name="obj" /> equals, typ i wartość tego wystąpienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-157"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="371a7-158">Zwraca tablicę <see langword="get" /> i <see langword="set" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-158">Returns an array of the <see langword="get" /> and <see langword="set" /> accessors on this property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetAccessors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-159">Zwraca tablicę, której elementy odzwierciedlają publicznego <see langword="get" /> i <see langword="set" /> metody dostępu właściwości odzwierciedlone przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="371a7-159">Returns an array whose elements reflect the public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span></span></summary>
        <returns><span data-ttu-id="371a7-160">Tablica <see cref="T:System.Reflection.MethodInfo" /> obiektów, które odzwierciedlać publicznego <see langword="get" /> i <see langword="set" /> metody dostępu właściwości odzwierciedlone przez bieżące wystąpienie, jeśli znaleziono; w przeciwnym razie ta metoda zwraca wartość zero (0) elementów tablicy.</span><span class="sxs-lookup"><span data-stu-id="371a7-160">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance, if found; otherwise, this method returns an array with zero (0) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-161">Aby wywołać <xref:System.Reflection.PropertyInfo.GetAccessors%2A> metody:</span><span class="sxs-lookup"><span data-stu-id="371a7-161">To call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method:</span></span>  
  
1.  <span data-ttu-id="371a7-162">Pobierz <xref:System.Type> obiekt, który reprezentuje klasę.</span><span class="sxs-lookup"><span data-stu-id="371a7-162">Get a <xref:System.Type> object that represents the class.</span></span>  
  
2.  <span data-ttu-id="371a7-163">Z <xref:System.Type> obiektów, Pobierz <xref:System.Reflection.PropertyInfo> obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-163">From the <xref:System.Type> object, get the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
3.  <span data-ttu-id="371a7-164">Z <xref:System.Reflection.PropertyInfo> obiekt, należy wywołać <xref:System.Reflection.PropertyInfo.GetAccessors%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-164">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-165">Poniższy przykład pobiera publicznego metod dostępu `ClassWithProperty.Caption` właściwości i wyświetla informacje o nich.</span><span class="sxs-lookup"><span data-stu-id="371a7-165">The following example retrieves the public accessors of the `ClassWithProperty.Caption` property and displays information about them.</span></span> <span data-ttu-id="371a7-166">Wywołuje również <xref:System.Reflection.MethodBase.Invoke%2A> metody ustawiającej można ustawić wartości właściwości i metody pobierającej można pobrać wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-166">It also calls the <xref:System.Reflection.MethodBase.Invoke%2A> method of the setter to set the property value and of the getter to retrieve the property value.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetAccessors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.getaccessors/cs/source.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetAccessors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.getaccessors/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-167">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-167">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-168">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-168">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="371a7-169">Wskazuje, czy metody niepublicznej powinny być zwracane w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="371a7-169">Indicates whether non-public methods should be returned in the returned array.</span></span> <span data-ttu-id="371a7-170"><see langword="true" /> Jeśli metody niepublicznej mają zostać uwzględnione; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-170"><see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="371a7-171">Zwraca tablicę, której elementy odzwierciedlają publicznego i, jeśli jest określony, niepublicznych <see langword="get" /> i <see langword="set" /> metody dostępu właściwości odzwierciedlone przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="371a7-171">Returns an array whose elements reflect the public and, if specified, non-public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span></span></summary>
        <returns><span data-ttu-id="371a7-172">Tablica której elementy odzwierciedlają <see langword="get" /> i <see langword="set" /> metody dostępu właściwości odzwierciedlone przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="371a7-172">An array whose elements reflect the <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span></span> <span data-ttu-id="371a7-173">Jeśli <paramref name="nonPublic" /> jest <see langword="true" />, ta tablica zawiera publicznego i niepublicznych <see langword="get" /> i <see langword="set" /> metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-173">If <paramref name="nonPublic" /> is <see langword="true" />, this array contains public and non-public <see langword="get" /> and <see langword="set" /> accessors.</span></span> <span data-ttu-id="371a7-174">Jeśli <paramref name="nonPublic" /> jest <see langword="false" />, to tablica zawiera tylko publiczne <see langword="get" /> i <see langword="set" /> metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-174">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" /> and <see langword="set" /> accessors.</span></span> <span data-ttu-id="371a7-175">Jeśli nie zostaną znalezione nie metod dostępu z określonym widoczność, ta metoda zwraca tablicę z zero (0) elementów.</span><span class="sxs-lookup"><span data-stu-id="371a7-175">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-176">Aby wywołać <xref:System.Reflection.PropertyInfo.GetAccessors%2A> metody:</span><span class="sxs-lookup"><span data-stu-id="371a7-176">To call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method:</span></span>  
  
1.  <span data-ttu-id="371a7-177">Pobierz <xref:System.Type> obiekt, który reprezentuje klasę.</span><span class="sxs-lookup"><span data-stu-id="371a7-177">Get a <xref:System.Type> object that represents the class.</span></span>  
  
2.  <span data-ttu-id="371a7-178">Z <xref:System.Type> obiektów, Pobierz <xref:System.Reflection.PropertyInfo> obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-178">From the <xref:System.Type> object, get the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
3.  <span data-ttu-id="371a7-179">Z <xref:System.Reflection.PropertyInfo> obiekt, należy wywołać <xref:System.Reflection.PropertyInfo.GetAccessors%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-179">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-180">Poniższy przykład pobiera metod dostępu z `ClassWithProperty.Caption` właściwości i wyświetla informacje o nich.</span><span class="sxs-lookup"><span data-stu-id="371a7-180">The following example retrieves the accessors of the `ClassWithProperty.Caption` property and displays information about them.</span></span> <span data-ttu-id="371a7-181">Wywołuje również <xref:System.Reflection.MethodBase.Invoke%2A> metody ustawiającej można ustawić wartości właściwości i metody pobierającej można pobrać wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-181">It also calls the <xref:System.Reflection.MethodBase.Invoke%2A> method of the setter to set the property value and of the getter to retrieve the property value.</span></span>  
  
 [!code-csharp[Classic PropertyInfo.GetAccessors1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetAccessors1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetAccessors1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetAccessors1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-182">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-182">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-183">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetConstantValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-184">Zwraca wartość literału skojarzony z właściwością przez kompilator.</span><span class="sxs-lookup"><span data-stu-id="371a7-184">Returns a literal value associated with the property by a compiler.</span></span></summary>
        <returns><span data-ttu-id="371a7-185"><see cref="T:System.Object" /> Zawiera wartość literału skojarzony z właściwością.</span><span class="sxs-lookup"><span data-stu-id="371a7-185">An <see cref="T:System.Object" /> that contains the literal value associated with the property.</span></span> <span data-ttu-id="371a7-186">Jeśli wartość literału jest typ klasy z wartością elementu o wartości zero, jest zwracana wartość <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-186">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-187">Ta metoda jest dostępna dla projektantów kompilatory zarządzanych i analizatorów kodu.</span><span class="sxs-lookup"><span data-stu-id="371a7-187">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-188">Nie należy używać tej metody w kontekstu reflection-only, ponieważ może spowodować, że kod do wykonania.</span><span class="sxs-lookup"><span data-stu-id="371a7-188">Do not use this method in the reflection-only context, because it might cause code to execute.</span></span> <span data-ttu-id="371a7-189">Użyj <xref:System.Reflection.PropertyInfo.GetRawConstantValue%2A> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="371a7-189">Use the <xref:System.Reflection.PropertyInfo.GetRawConstantValue%2A> method instead.</span></span>  
  
 <span data-ttu-id="371a7-190">W metadanych niezarządzane stałej tabela jest używana do przechowywania wartości stałych pól, parametrów i właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-190">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="371a7-191">Informacje o stałej nie wpływają bezpośrednio zachowania w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="371a7-191">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="371a7-192">Kompilatory sprawdzić te informacje w czasie kompilacji podczas importowania metadanych.</span><span class="sxs-lookup"><span data-stu-id="371a7-192">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="371a7-193">Jeśli używany, wartość stałą jest osadzony w strumieniu język pośredni (MSIL) firmy Microsoft, które kompilator emituje.</span><span class="sxs-lookup"><span data-stu-id="371a7-193">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="371a7-194">Nie ma żadnych instrukcji MSIL, które mogą służyć do dostępu do tabeli stałej w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="371a7-194">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-195">Więcej informacji o stałej tabeli i wartości stałych znajduje się w dokumentacji ECMA II partycji.</span><span class="sxs-lookup"><span data-stu-id="371a7-195">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="371a7-196">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="371a7-196">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="371a7-197">Stałe tabeli w niezarządzanych metadanych nie zawiera wartości stałej dla bieżącej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-197">The Constant table in unmanaged metadata does not contain a constant value for the current property.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="371a7-198">Typ wartości nie jest jednym z typów dopuszczonych wspólnej specyfikacji języka (CLS).</span><span class="sxs-lookup"><span data-stu-id="371a7-198">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span></span> <span data-ttu-id="371a7-199">Zobacz specyfikację II partycji ECMA metadanych.</span><span class="sxs-lookup"><span data-stu-id="371a7-199">See the ECMA Partition II specification, Metadata.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="371a7-200">Zwraca <see langword="MethodInfo" /> reprezentujący <see langword="get" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-200">Returns a <see langword="MethodInfo" /> representing the <see langword="get" /> accessor for this property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetGetMethod();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-201">Zwraca publicznego <see langword="get" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-201">Returns the public <see langword="get" /> accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="371a7-202">A <see langword="MethodInfo" /> obiekt reprezentujący publicznego <see langword="get" /> metody dostępu dla tej właściwości lub <see langword="null" /> Jeśli <see langword="get" /> metody dostępu jest niepublicznego lub nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="371a7-202">A <see langword="MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-203">Jest to metoda wygody, który zawiera implementację klasy abstrakcyjnej `GetGetMethod` metody z `nonPublic` ustawiono parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="371a7-203">This is a convenience method that provides an implementation for the abstract `GetGetMethod` method with the `nonPublic` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="371a7-204">Aby użyć `GetGetMethod` metody, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-204">To use the `GetGetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="371a7-205">Z `Type`, Pobierz <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="371a7-205">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="371a7-206">Z <xref:System.Reflection.PropertyInfo>, użyj `GetGetMethod` metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-206">From the <xref:System.Reflection.PropertyInfo>, use the `GetGetMethod` method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-207">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-207">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-208">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-208">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="371a7-209">Wskazuje, czy niepublicznych <see langword="get" /> akcesor ma zostać zwrócony.</span><span class="sxs-lookup"><span data-stu-id="371a7-209">Indicates whether a non-public <see langword="get" /> accessor should be returned.</span></span> <span data-ttu-id="371a7-210"><see langword="true" /> Jeśli akcesor niepubliczne, jest zwracana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-210"><see langword="true" /> if a non-public accessor is to be returned; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="371a7-211">W przypadku przesłonięcia w klasie pochodnej zwraca publicznego lub niepubliczne <see langword="get" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-211">When overridden in a derived class, returns the public or non-public <see langword="get" /> accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="371a7-212">A <see langword="MethodInfo" /> reprezentujący obiekt <see langword="get" /> metody dostępu dla tej właściwości, jeśli <paramref name="nonPublic" /> jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-212">A <see langword="MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if <paramref name="nonPublic" /> is <see langword="true" />.</span></span> <span data-ttu-id="371a7-213">Zwraca <see langword="null" /> Jeśli <paramref name="nonPublic" /> jest <see langword="false" /> i <see langword="get" /> akcesor jest niepubliczne, lub jeśli <paramref name="nonPublic" /> jest <see langword="true" /> , lecz nie <see langword="get" /> istnieje metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-213">Returns <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-214">Ta właściwość jest <xref:System.Reflection.MethodInfo> reprezentujący metody dostępu get.</span><span class="sxs-lookup"><span data-stu-id="371a7-214">This property is the <xref:System.Reflection.MethodInfo> representing the get accessor.</span></span>  
  
 <span data-ttu-id="371a7-215">Aby użyć `GetGetMethod` metody, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-215">To use the `GetGetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="371a7-216">Z `Type`, Pobierz <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="371a7-216">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="371a7-217">Z <xref:System.Reflection.PropertyInfo>, użyj `GetGetMethod` metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-217">From the <xref:System.Reflection.PropertyInfo>, use the `GetGetMethod` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-218">W poniższym przykładzie przedstawiono publicznego lub niepubliczne `get` akcesora dla określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-218">The following example displays the public or non-public `get` accessor for the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="371a7-219">Żądana metoda jest niepubliczne, a obiekt wywołujący nie ma <see cref="T:System.Security.Permissions.ReflectionPermission" /> do uwzględnienia w tej metodzie niepubliczne.</span><span class="sxs-lookup"><span data-stu-id="371a7-219">The requested method is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect on this non-public method.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-220">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-220">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-221">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-221">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-222">Zwraca kod skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="371a7-222">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="371a7-223">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="371a7-223">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-224">W przypadku przesłonięcia w klasie pochodnej zwraca tablicę wszystkich parametrów indeksu dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-224">When overridden in a derived class, returns an array of all the index parameters for the property.</span></span></summary>
        <returns><span data-ttu-id="371a7-225">Tablica typu <see langword="ParameterInfo" /> zawierających parametry dla indeksów.</span><span class="sxs-lookup"><span data-stu-id="371a7-225">An array of type <see langword="ParameterInfo" /> containing the parameters for the indexes.</span></span> <span data-ttu-id="371a7-226">Jeśli właściwość nie jest indeksowana, tablica ma 0 (zero) elementów.</span><span class="sxs-lookup"><span data-stu-id="371a7-226">If the property is not indexed, the array has 0 (zero) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-227">Wyodrębnij wszelkie wymagane parametry z zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="371a7-227">Extract any required parameter information from the returned array.</span></span>  
  
 <span data-ttu-id="371a7-228">Aby użyć `GetIndexParameters` metody, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-228">To use the `GetIndexParameters` method, first get the class `Type`.</span></span> <span data-ttu-id="371a7-229">Z `Type`, Pobierz `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-229">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="371a7-230">Z `PropertyInfo`, użyj `GetIndexParameters` metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-230">From the `PropertyInfo`, use the `GetIndexParameters` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-231">W poniższym przykładzie przedstawiono parametry indeks określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-231">The following example displays the index parameters of the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-232">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-232">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-233">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-233">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo GetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.GetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GetMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ GetMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="371a7-234">Pobiera <see langword="get" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-234">Gets the <see langword="get" /> accessor for this property.</span></span></summary>
        <value><span data-ttu-id="371a7-235"><see langword="get" /> Metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-235">The <see langword="get" /> accessor for this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-236">Zwraca tablicę typy reprezentujące opcjonalne Modyfikatory niestandardowej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-236">Returns an array of types representing the optional custom modifiers of the property.</span></span></summary>
        <returns><span data-ttu-id="371a7-237">Tablica <see cref="T:System.Type" /> obiektów, które takie jak zidentyfikować opcjonalne Modyfikatory niestandardowych bieżącej właściwości <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-237">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-238"><xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> i <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> metody są udostępniane dla projektantów kompilatory zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="371a7-238">The <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="371a7-239">Aby uzyskać więcej informacji na Modyfikatory niestandardowych, zobacz <xref:System.Runtime.CompilerServices.IsBoxed> i powiązanych klas w <xref:System.Runtime.CompilerServices> przestrzeni nazw i specyfikacja metadanych w dokumentacji ECMA II partycji.</span><span class="sxs-lookup"><span data-stu-id="371a7-239">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="371a7-240">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="371a7-240">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetRawConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRawConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetRawConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRawConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRawConstantValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-241">Zwraca wartość literału skojarzony z właściwością przez kompilator.</span><span class="sxs-lookup"><span data-stu-id="371a7-241">Returns a literal value associated with the property by a compiler.</span></span></summary>
        <returns><span data-ttu-id="371a7-242"><see cref="T:System.Object" /> Zawiera wartość literału skojarzony z właściwością.</span><span class="sxs-lookup"><span data-stu-id="371a7-242">An <see cref="T:System.Object" /> that contains the literal value associated with the property.</span></span> <span data-ttu-id="371a7-243">Jeśli wartość literału jest typ klasy z wartością elementu o wartości zero, jest zwracana wartość <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-243">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-244">Ta metoda jest dostępna dla projektantów kompilatory zarządzanych i analizatorów kodu.</span><span class="sxs-lookup"><span data-stu-id="371a7-244">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
 <span data-ttu-id="371a7-245">Tej metody można użyć zarówno kontekstu wykonywania i kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="371a7-245">This method can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="371a7-246">W metadanych niezarządzane stałej tabela jest używana do przechowywania wartości stałych pól, parametrów i właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-246">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="371a7-247">Informacje o stałej nie wpływają bezpośrednio zachowania w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="371a7-247">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="371a7-248">Kompilatory sprawdzić te informacje w czasie kompilacji podczas importowania metadanych.</span><span class="sxs-lookup"><span data-stu-id="371a7-248">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="371a7-249">Jeśli używany, wartość stałą jest osadzony w strumieniu język pośredni (MSIL) firmy Microsoft, które kompilator emituje.</span><span class="sxs-lookup"><span data-stu-id="371a7-249">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="371a7-250">Nie ma żadnych instrukcji MSIL, które mogą służyć do dostępu do tabeli stałej w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="371a7-250">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-251">Więcej informacji o stałej tabeli i wartości stałych znajduje się w dokumentacji ECMA II partycji.</span><span class="sxs-lookup"><span data-stu-id="371a7-251">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="371a7-252">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="371a7-252">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="371a7-253">Stałe tabeli w niezarządzanych metadanych nie zawiera wartości stałej dla bieżącej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-253">The Constant table in unmanaged metadata does not contain a constant value for the current property.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="371a7-254">Typ wartości nie jest jednym z typów dopuszczonych wspólnej specyfikacji języka (CLS).</span><span class="sxs-lookup"><span data-stu-id="371a7-254">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span></span> <span data-ttu-id="371a7-255">Zobacz specyfikację ECMA II partycji logicznej Format metadanych: inne struktury, używane w podpisach typów elementów.</span><span class="sxs-lookup"><span data-stu-id="371a7-255">See the ECMA Partition II specification, Metadata Logical Format: Other Structures, Element Types used in Signatures.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-256">Zwraca tablicę typy reprezentujące wymagane Modyfikatory niestandardowej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-256">Returns an array of types representing the required custom modifiers of the property.</span></span></summary>
        <returns><span data-ttu-id="371a7-257">Tablica <see cref="T:System.Type" /> obiektów, które takie jak zidentyfikować wymagane Modyfikatory niestandardowych bieżącej właściwości <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-257">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-258"><xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> i <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> metody są udostępniane dla projektantów kompilatory zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="371a7-258">The <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="371a7-259">Aby uzyskać więcej informacji na Modyfikatory niestandardowych, zobacz <xref:System.Runtime.CompilerServices.IsBoxed> i powiązanych klas w <xref:System.Runtime.CompilerServices> przestrzeni nazw i specyfikacja metadanych w dokumentacji ECMA II partycji.</span><span class="sxs-lookup"><span data-stu-id="371a7-259">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="371a7-260">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="371a7-260">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="371a7-261">Zwraca <see cref="T:System.Reflection.MethodInfo" /> reprezentujący <see langword="set" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-261">Returns a <see cref="T:System.Reflection.MethodInfo" /> representing the <see langword="set" /> accessor for this property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetSetMethod();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-262">Zwraca publicznego <see langword="set" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-262">Returns the public <see langword="set" /> accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="371a7-263"><see langword="MethodInfo" /> Reprezentujący obiekt <see langword="Set" /> metody dla tej właściwości Jeśli <see langword="set" /> metoda dostępu nie jest publiczny, lub <see langword="null" /> Jeśli <see langword="set" /> metoda dostępu nie jest publiczny.</span><span class="sxs-lookup"><span data-stu-id="371a7-263">The <see langword="MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-264">Jest to metoda wygody, który zawiera implementację klasy abstrakcyjnej `GetSetMethod` metody z `nonPublic` ustawiono parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="371a7-264">This is a convenience method that provides an implementation for the abstract `GetSetMethod` method with the `nonPublic` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="371a7-265">Aby użyć `GetSetMethod` metody, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-265">To use the `GetSetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="371a7-266">Z `Type`, Pobierz <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="371a7-266">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="371a7-267">Z `PropertyInfo`, użyj `GetSetMethod` metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-267">From the `PropertyInfo`, use the `GetSetMethod` method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-268">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-268">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-269">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-269">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="371a7-270">Wskazuje, czy akcesor ma zostać zwrócony, jeśli jest niepubliczny.</span><span class="sxs-lookup"><span data-stu-id="371a7-270">Indicates whether the accessor should be returned if it is non-public.</span></span> <span data-ttu-id="371a7-271"><see langword="true" /> Jeśli akcesor niepubliczne, jest zwracana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-271"><see langword="true" /> if a non-public accessor is to be returned; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="371a7-272">Po przesłonięciu w klasie pochodnej zwraca <see langword="set" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-272">When overridden in a derived class, returns the <see langword="set" /> accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="371a7-273">Ta właściwość <see langword="Set" /> metody, lub <see langword="null" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="371a7-273">This property's <see langword="Set" /> method, or <see langword="null" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="371a7-274"><list type="table"><listheader><term> Wartość</span><span class="sxs-lookup"><span data-stu-id="371a7-274"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="371a7-275"></term><description> Warunek</span><span class="sxs-lookup"><span data-stu-id="371a7-275"></term><description> Condition</span></span>  
  
 <span data-ttu-id="371a7-276"></description></listheader><item><term> <see langword="Set" /> Metody dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-276"></description></listheader><item><term> The <see langword="Set" /> method for this property.</span></span>  
  
 <span data-ttu-id="371a7-277"></term><description> <see langword="set" /> Metoda dostępu nie jest publiczny.</span><span class="sxs-lookup"><span data-stu-id="371a7-277"></term><description> The <see langword="set" /> accessor is public.</span></span>  
  
 <span data-ttu-id="371a7-278">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-278">-or-</span></span>  
  
 <span data-ttu-id="371a7-279"><paramref name="nonPublic" /> jest <see langword="true" /> i <see langword="set" /> akcesor jest niepubliczny.</span><span class="sxs-lookup"><span data-stu-id="371a7-279"><paramref name="nonPublic" /> is <see langword="true" /> and the <see langword="set" /> accessor is non-public.</span></span>  
  
 <span data-ttu-id="371a7-280"></description></item><item><term><see langword="null" /></term><description><paramref name="nonPublic" /> jest <see langword="true" />, ale właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="371a7-280"></description></item><item><term><see langword="null" /></term><description><paramref name="nonPublic" /> is <see langword="true" />, but the property is read-only.</span></span>  
  
 <span data-ttu-id="371a7-281">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-281">-or-</span></span>  
  
 <span data-ttu-id="371a7-282"><paramref name="nonPublic" /> jest <see langword="false" /> i <see langword="set" /> akcesor jest niepubliczny.</span><span class="sxs-lookup"><span data-stu-id="371a7-282"><paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="set" /> accessor is non-public.</span></span>  
  
 <span data-ttu-id="371a7-283">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-283">-or-</span></span>  
  
 <span data-ttu-id="371a7-284">Brak nie <see langword="set" /> dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-284">There is no <see langword="set" /> accessor.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-285">Aby użyć `GetSetMethod` metody, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-285">To use the `GetSetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="371a7-286">Z `Type`, Pobierz <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="371a7-286">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="371a7-287">Z `PropertyInfo`, użyj `GetSetMethod` metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-287">From the `PropertyInfo`, use the `GetSetMethod` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-288">W poniższym przykładzie przedstawiono `set` akcesora dla określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-288">The following example displays the `set` accessor for the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="371a7-289">Żądana metoda jest niepubliczne, a obiekt wywołujący nie ma <see cref="T:System.Security.Permissions.ReflectionPermission" /> do uwzględnienia w tej metodzie niepubliczne.</span><span class="sxs-lookup"><span data-stu-id="371a7-289">The requested method is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect on this non-public method.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-290">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-290">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-291">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-291">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="371a7-292">Zwraca wartość właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-292">Returns the property value of a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="371a7-293">Obiekt, którego wartość właściwości zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="371a7-293">The object whose property value will be returned.</span></span></param>
        <summary><span data-ttu-id="371a7-294">Zwraca wartość właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-294">Returns the property value of a specified object.</span></span></summary>
        <returns><span data-ttu-id="371a7-295">Wartość właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-295">The property value of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-296">Należy wywołać <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%29> przeciążenia można pobrać wartości właściwości nieindeksowanych; próba pobrania wartości właściwości indeksowanych metoda zgłasza <xref:System.Reflection.TargetParameterCountException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="371a7-296">You call the <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%29> overload to retrieve the value of a non-indexed property; if you try to retrieve the value of an indexed property, the method throws a <xref:System.Reflection.TargetParameterCountException> exception.</span></span> <span data-ttu-id="371a7-297">Można określić, czy właściwość jest indeksowany nie wywołując <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-297">You can determine whether a property is indexed or not by calling the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="371a7-298">Jeśli długość zwracana <xref:System.Reflection.ParameterInfo> tablicy wynosi zero, właściwość nie jest indeksowana.</span><span class="sxs-lookup"><span data-stu-id="371a7-298">If the length of the returned <xref:System.Reflection.ParameterInfo> array is zero, the property is not indexed.</span></span>  
  
 <span data-ttu-id="371a7-299">Jest to metoda wygody, który zawiera implementację klasy abstrakcyjnej <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> metody z <xref:System.Reflection.BindingFlags> ustawiona <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>, <xref:System.Reflection.Binder> ustawioną `null`, obiekt tablicę wartości indeksu ustawioną `null`, i <xref:System.Globalization.CultureInfo> ustawioną `null`.</span><span class="sxs-lookup"><span data-stu-id="371a7-299">This is a convenience method that provides an implementation for the abstract <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method with the <xref:System.Reflection.BindingFlags> parameter set to <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>, the <xref:System.Reflection.Binder> set to `null`, the object array of index values set to `null`, and the <xref:System.Globalization.CultureInfo> set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-300">W poniższym przykładzie zdefiniowano `Planet` klasy, która ma dwie właściwości: `Name`, nazwę świecie; i `Distance`, na świecie odległość od ziemi.</span><span class="sxs-lookup"><span data-stu-id="371a7-300">The following example defines a `Planet` class that has two properties: `Name`, the name of the planet; and `Distance`, the planet's distance from Earth.</span></span> <span data-ttu-id="371a7-301">Przykład tworzy `Planet` obiekt, który reprezentuje świecie Jupiter i przekazuje je do `GetPropertyValues` metodę, która zawiera informacje o właściwości i używa <xref:System.Reflection.PropertyInfo.GetValue%2A> metodę, aby uzyskać wartość każdego `Planet` właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-301">The example instantiates a `Planet` object that represents the planet Jupiter and passes it to a `GetPropertyValues` method that displays information about the properties and uses the <xref:System.Reflection.PropertyInfo.GetValue%2A> method to get the value of each `Planet` property.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="371a7-302">Obiekt, którego wartość właściwości zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="371a7-302">The object whose property value will be returned.</span></span></param>
        <param name="index"><span data-ttu-id="371a7-303">Opcjonalne indeks wartości dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="371a7-303">Optional index values for indexed properties.</span></span> <span data-ttu-id="371a7-304">Indeksy właściwości indeksowanych jest liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="371a7-304">The indexes of indexed properties are zero-based.</span></span> <span data-ttu-id="371a7-305">Ta wartość powinna być <see langword="null" /> nieindeksowanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-305">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="371a7-306">Zwraca wartość właściwości określonego obiektu za pomocą wartości indeksu opcjonalne dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="371a7-306">Returns the property value of a specified object with optional index values for indexed properties.</span></span></summary>
        <returns><span data-ttu-id="371a7-307">Wartość właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-307">The property value of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-308">Aby określić, czy właściwość jest indeksowana, użyj <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-308">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="371a7-309">Jeśli tablica wynikowa musi 0 (zero) elementy właściwości nie jest indeksowana.</span><span class="sxs-lookup"><span data-stu-id="371a7-309">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="371a7-310">Jest to metoda wygody, który zawiera implementację klasy abstrakcyjnej `GetValue` metody z `BindingFlags` parametr `Default`, `Binder` ustawioną `null`i `CultureInfo` ustawioną `null`.</span><span class="sxs-lookup"><span data-stu-id="371a7-310">This is a convenience method that provides an implementation for the abstract `GetValue` method with a `BindingFlags` parameter of `Default`, the `Binder` set to `null`, and the `CultureInfo` set to `null`.</span></span>  
  
 <span data-ttu-id="371a7-311">Ponieważ statycznej właściwości należeć do tego typu, a nie pojedyncze obiekty, Pobierz statycznej właściwości przez przekazanie `null` jako argument obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-311">Because static properties belong to the type, not individual objects, get static properties by passing `null` as the object argument.</span></span> <span data-ttu-id="371a7-312">Na przykład użyć poniższego kodu, aby uzyskać statycznych `CurrentCulture` właściwości `CultureInfo` :</span><span class="sxs-lookup"><span data-stu-id="371a7-312">For example, use the following code to get the static `CurrentCulture` property of `CultureInfo` :</span></span>  
  
```csharp  
PropertyInfo CurCultProp =   
    (typeof(CultureInfo)).GetProperty("CurrentCulture");   
Console.WriteLine("CurrCult: " +  
    CurCultProp.GetValue(null,null));  
```  
  
 <span data-ttu-id="371a7-313">Aby użyć `GetValue` metody, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-313">To use the `GetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="371a7-314">Z `Type`, Pobierz `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-314">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="371a7-315">Z `PropertyInfo`, użyj `GetValue` metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-315">From the `PropertyInfo`, use the `GetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-316">Począwszy od [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ta metoda umożliwia dostęp do elementów członkowskich niepubliczne, jeśli element wywołujący zostało udzielone <xref:System.Security.Permissions.ReflectionPermission> z <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> Flaga i jeśli zestaw grant niepublicznych elementów członkowskich jest ograniczone do obiektu wywołującego udzielić zestawu lub być podzbiorem jej.</span><span class="sxs-lookup"><span data-stu-id="371a7-316">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="371a7-317">(Zobacz [zagadnienia dotyczące zabezpieczeń dla odbicia](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="371a7-317">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="371a7-318">Aby używać tej funkcji, należy docelowy aplikacji [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="371a7-318">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-319">Poniższy przykład pokazuje, jak można pobrać wartości właściwości indeksowanych.</span><span class="sxs-lookup"><span data-stu-id="371a7-319">The following example shows how to get the value of an indexed property.</span></span> <span data-ttu-id="371a7-320"><xref:System.String.Chars%2A?displayProperty=nameWithType> Właściwości domyślnej właściwości (indeksator w języku C#) jest <xref:System.String> klasy.</span><span class="sxs-lookup"><span data-stu-id="371a7-320">The <xref:System.String.Chars%2A?displayProperty=nameWithType> property is the default property (the indexer in C#) of the <xref:System.String> class.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.PropertyInfo.GetValue Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.PropertyInfo.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="371a7-321"><paramref name="index" /> Tablicy nie zawiera typy argumentów potrzebne.</span><span class="sxs-lookup"><span data-stu-id="371a7-321">The <paramref name="index" /> array does not contain the type of arguments needed.</span></span>  
  
 <span data-ttu-id="371a7-322">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-322">-or-</span></span>  
  
 <span data-ttu-id="371a7-323">Właściwość <see langword="get" /> nie znaleziono metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-323">The property's <see langword="get" /> accessor is not found.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="371a7-324">W <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET dla Sklepu Windows apps</see> lub <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">przenośnej biblioteki klas</see>, catch <see cref="T:System.Exception" /> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="371a7-324">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="371a7-325">Obiekt nie jest zgodny z typem docelowym lub właściwość jest właściwością wystąpienia, ale <paramref name="obj" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-325">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="371a7-326">Liczba parametrów w <paramref name="index" /> jest niezgodna z liczbą parametrów indeksowanej właściwości ma.</span><span class="sxs-lookup"><span data-stu-id="371a7-326">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span></span></exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="371a7-327">W <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET dla Sklepu Windows apps</see> lub <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">przenośnej biblioteki klas</see>, catch wyjątku klasy podstawowej <see cref="T:System.MemberAccessException" />, zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="371a7-327">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="371a7-328">Wystąpił niedozwolona próba uzyskania dostępu do prywatne lub chronione metody w klasie.</span><span class="sxs-lookup"><span data-stu-id="371a7-328">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="371a7-329">Wystąpił błąd podczas pobierania wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-329">An error occurred while retrieving the property value.</span></span> <span data-ttu-id="371a7-330">Na przykład wartość indeksu określona dla właściwości indeksowanych jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="371a7-330">For example, an index value specified for an indexed property is out of range.</span></span> <span data-ttu-id="371a7-331"><see cref="P:System.Exception.InnerException" /> Właściwość wskazuje przyczynę błędu.</span><span class="sxs-lookup"><span data-stu-id="371a7-331">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-332">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-332">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-333">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-333">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="371a7-334">Obiekt, którego wartość właściwości zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="371a7-334">The object whose property value will be returned.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="371a7-335">Bitowe połączenie następujące elementy członkowskie wyliczenia określających atrybut wywołania: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, i <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-335">A bitwise combination of the following enumeration members that specify the invocation attribute: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, and <see langword="SetProperty" />.</span></span> <span data-ttu-id="371a7-336">Należy określić atrybut odpowiedniego wywołania.</span><span class="sxs-lookup"><span data-stu-id="371a7-336">You must specify a suitable invocation attribute.</span></span> <span data-ttu-id="371a7-337">Na przykład, aby wywołać statyczny element członkowski, należy ustawić <see langword="Static" /> flagi.</span><span class="sxs-lookup"><span data-stu-id="371a7-337">For example, to invoke a static member, set the <see langword="Static" /> flag.</span></span></param>
        <param name="binder"><span data-ttu-id="371a7-338">Obiekt, który umożliwia powiązanie koercja argumentu typy wywołania elementów członkowskich i pobieranie <see cref="T:System.Reflection.MemberInfo" /> obiektów przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="371a7-338">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="371a7-339">Jeśli <c>integratora</c> jest <see langword="null" />, używany jest domyślny integrator.</span><span class="sxs-lookup"><span data-stu-id="371a7-339">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="371a7-340">Opcjonalne indeks wartości dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="371a7-340">Optional index values for indexed properties.</span></span> <span data-ttu-id="371a7-341">Ta wartość powinna być <see langword="null" /> nieindeksowanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-341">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="371a7-342">Kultura, dla którego ma zostać zlokalizowany zasób.</span><span class="sxs-lookup"><span data-stu-id="371a7-342">The culture for which the resource is to be localized.</span></span> <span data-ttu-id="371a7-343">Jeśli zasób nie jest zlokalizowany na tę kulturę <see cref="P:System.Globalization.CultureInfo.Parent" /> właściwość zostanie wywołana kolejno w poszukiwaniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="371a7-343">If the resource is not localized for this culture, the <see cref="P:System.Globalization.CultureInfo.Parent" /> property will be called successively in search of a match.</span></span> <span data-ttu-id="371a7-344">Jeśli ta wartość jest <see langword="null" />, informacje specyficzne dla kultury są uzyskiwane z <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-344">If this value is <see langword="null" />, the culture-specific information is obtained from the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="371a7-345">W przypadku przesłonięcia w klasie pochodnej zwraca wartość właściwości określonego obiektu, który ma określone powiązanie, indeksu i informacje specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="371a7-345">When overridden in a derived class, returns the property value of a specified object that has the specified binding, index, and culture-specific information.</span></span></summary>
        <returns><span data-ttu-id="371a7-346">Wartość właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-346">The property value of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-347">Aby określić, czy właściwość jest indeksowana, użyj <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-347">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="371a7-348">Jeśli tablica wynikowa musi 0 (zero) elementy właściwości nie jest indeksowana.</span><span class="sxs-lookup"><span data-stu-id="371a7-348">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="371a7-349">Ponieważ statycznej właściwości należeć do tego typu, a nie pojedyncze obiekty, Pobierz statycznej właściwości przez przekazanie `null` jako argument obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-349">Because static properties belong to the type, not individual objects, get static properties by passing `null` as the object argument.</span></span> <span data-ttu-id="371a7-350">Na przykład użyć poniższego kodu, aby uzyskać statycznych `CurrentCulture` właściwości `CultureInfo` :</span><span class="sxs-lookup"><span data-stu-id="371a7-350">For example, use the following code to get the static `CurrentCulture` property of `CultureInfo` :</span></span>  
  
```csharp  
PropertyInfo CurCultProp =   
       (typeof(CultureInfo)).GetProperty("CurrentCulture");   
Console.WriteLine("CurrCult: " +  
       CurCultProp.GetValue(null,null));  
```  
  
 <span data-ttu-id="371a7-351">Aby użyć `GetValue` metody, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-351">To use the `GetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="371a7-352">Z `Type`, Pobierz `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-352">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="371a7-353">Z `PropertyInfo`, użyj `GetValue` metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-353">From the `PropertyInfo`, use the `GetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-354">Począwszy od [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ta metoda umożliwia dostęp do elementów członkowskich niepubliczne, jeśli element wywołujący zostało udzielone <xref:System.Security.Permissions.ReflectionPermission> z <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> Flaga i jeśli zestaw grant niepublicznych elementów członkowskich jest ograniczone do obiektu wywołującego udzielić zestawu lub być podzbiorem jej.</span><span class="sxs-lookup"><span data-stu-id="371a7-354">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="371a7-355">(Zobacz [zagadnienia dotyczące zabezpieczeń dla odbicia](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="371a7-355">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="371a7-356">Aby używać tej funkcji, należy docelowy aplikacji [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="371a7-356">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="371a7-357"><paramref name="index" /> Tablicy nie zawiera typy argumentów potrzebne.</span><span class="sxs-lookup"><span data-stu-id="371a7-357">The <paramref name="index" /> array does not contain the type of arguments needed.</span></span>  
  
 <span data-ttu-id="371a7-358">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-358">-or-</span></span>  
  
 <span data-ttu-id="371a7-359">Właściwość <see langword="get" /> nie znaleziono metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-359">The property's <see langword="get" /> accessor is not found.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="371a7-360">Obiekt nie jest zgodny z typem docelowym lub właściwość jest właściwością wystąpienia, ale <paramref name="obj" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-360">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="371a7-361">Liczba parametrów w <paramref name="index" /> jest niezgodna z liczbą parametrów indeksowanej właściwości ma.</span><span class="sxs-lookup"><span data-stu-id="371a7-361">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="371a7-362">Wystąpił niedozwolona próba uzyskania dostępu do prywatne lub chronione metody w klasie.</span><span class="sxs-lookup"><span data-stu-id="371a7-362">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="371a7-363">Wystąpił błąd podczas pobierania wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-363">An error occurred while retrieving the property value.</span></span> <span data-ttu-id="371a7-364">Na przykład wartość indeksu określona dla właściwości indeksowanych jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="371a7-364">For example, an index value specified for an indexed property is out of range.</span></span> <span data-ttu-id="371a7-365"><see cref="P:System.Exception.InnerException" /> Właściwość wskazuje przyczynę błędu.</span><span class="sxs-lookup"><span data-stu-id="371a7-365">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-366">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-366">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-367">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-367">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="371a7-368">Pobiera wartość wskazującą, czy właściwość jest specjalną nazwą.</span><span class="sxs-lookup"><span data-stu-id="371a7-368">Gets a value indicating whether the property is the special name.</span></span></summary>
        <value>
          <span data-ttu-id="371a7-369"><see langword="true" /> Jeśli ta właściwość jest specjalną nazwą; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-369"><see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-370">`SpecialName` Bit jest ustawiony na wartość Flaga elementów członkowskich, które są traktowane w specjalny sposób przez niektóre kompilatory (na przykład metod dostępu do właściwości i metod przeładowania operatora).</span><span class="sxs-lookup"><span data-stu-id="371a7-370">The `SpecialName` bit is set to flag members that are treated in a special way by some compilers (such as property accessors and operator overloading methods).</span></span>  
  
 <span data-ttu-id="371a7-371">Aby uzyskać `IsSpecialName` właściwość, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-371">To get the `IsSpecialName` property, first get the class `Type`.</span></span> <span data-ttu-id="371a7-372">Z `Type`, Pobierz `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-372">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="371a7-373">Z `PropertyInfo`, Pobierz `IsSpecialName` wartość.</span><span class="sxs-lookup"><span data-stu-id="371a7-373">From the `PropertyInfo`, get the `IsSpecialName` value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="371a7-374">Pobiera <see cref="T:System.Reflection.MemberTypes" /> wartość wskazującą, czy ten element członkowski jest właściwością.</span><span class="sxs-lookup"><span data-stu-id="371a7-374">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a property.</span></span></summary>
        <value><span data-ttu-id="371a7-375">A <see cref="T:System.Reflection.MemberTypes" /> wartość wskazującą, czy ten element członkowski jest właściwością.</span><span class="sxs-lookup"><span data-stu-id="371a7-375">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-376">Ta właściwość zastępuje <xref:System.Reflection.MemberInfo.MemberType%2A>.</span><span class="sxs-lookup"><span data-stu-id="371a7-376">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="371a7-377">W związku z tym podczas badania zestawu <xref:System.Reflection.MemberInfo> obiektów — na przykład tablicy zwracanej przez <xref:System.Type.GetMembers%2A> — <xref:System.Reflection.MemberInfo.MemberType%2A> zwraca <xref:System.Reflection.MemberTypes.Property> tylko wtedy, gdy dany element jest właściwością.</span><span class="sxs-lookup"><span data-stu-id="371a7-377">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects — for example, the array returned by <xref:System.Type.GetMembers%2A> — the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Property> only when a given member is a property.</span></span>  
  
 <span data-ttu-id="371a7-378">`MemberType` jest klasą pochodne `MemberInfo` i określa typ elementu członkowskiego jest.</span><span class="sxs-lookup"><span data-stu-id="371a7-378">`MemberType` is a derived class of `MemberInfo` and specifies the type of member this is.</span></span> <span data-ttu-id="371a7-379">Typy elementów członkowskich są konstruktorów, właściwości, pól i metod.</span><span class="sxs-lookup"><span data-stu-id="371a7-379">Member types are constructors, properties, fields, and methods.</span></span> <span data-ttu-id="371a7-380">Ponieważ jest to `PropertyInfo` zwrócony typ właściwości jest właściwością.</span><span class="sxs-lookup"><span data-stu-id="371a7-380">Since this is a `PropertyInfo` property, the returned type is a property.</span></span>  
  
 <span data-ttu-id="371a7-381">Aby uzyskać `MemberType` właściwość, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-381">To get the `MemberType` property, first get the class `Type`.</span></span> <span data-ttu-id="371a7-382">Z `Type`, Pobierz `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-382">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="371a7-383">Z `PropertyInfo`, Pobierz `MemberType` wartość.</span><span class="sxs-lookup"><span data-stu-id="371a7-383">From the `PropertyInfo`, get the `MemberType` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-384">W poniższym przykładzie przedstawiono typ określonego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="371a7-384">The following example displays the type of the specified member.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As PropertyInfo, right As PropertyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::PropertyInfo ^ left, System::Reflection::PropertyInfo ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="right" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="371a7-385">Pierwszy obiekt, który ma zostać porównany.</span><span class="sxs-lookup"><span data-stu-id="371a7-385">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="371a7-386">Drugi obiekt, który będzie porównywany.</span><span class="sxs-lookup"><span data-stu-id="371a7-386">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="371a7-387">Wskazuje, czy dwa <see cref="T:System.Reflection.PropertyInfo" /> obiekty są takie same.</span><span class="sxs-lookup"><span data-stu-id="371a7-387">Indicates whether two <see cref="T:System.Reflection.PropertyInfo" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="371a7-388"><see langword="true" /> Jeśli <paramref name="left" /> jest równa <paramref name="right" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-388"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As PropertyInfo, right As PropertyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::PropertyInfo ^ left, System::Reflection::PropertyInfo ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="right" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="371a7-389">Pierwszy obiekt, który ma zostać porównany.</span><span class="sxs-lookup"><span data-stu-id="371a7-389">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="371a7-390">Drugi obiekt, który będzie porównywany.</span><span class="sxs-lookup"><span data-stu-id="371a7-390">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="371a7-391">Wskazuje, czy dwa <see cref="T:System.Reflection.PropertyInfo" /> obiekty nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="371a7-391">Indicates whether two <see cref="T:System.Reflection.PropertyInfo" /> objects are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="371a7-392"><see langword="true" /> Jeśli <paramref name="left" /> nie jest równa <paramref name="right" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-392"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.PropertyType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="371a7-393">Pobiera typ tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-393">Gets the type of this property.</span></span></summary>
        <value><span data-ttu-id="371a7-394">Typ tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-394">The type of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-395">Aby określić typ określonej właściwości, wykonaj następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="371a7-395">To determine the type of a particular property, do the following:</span></span>  
  
1.  <span data-ttu-id="371a7-396">Pobierz <xref:System.Type> obiekt, który reprezentuje typ (klasy lub struktury), który zawiera właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-396">Get a <xref:System.Type> object that represents the type (the class or structure) that contains the property.</span></span> <span data-ttu-id="371a7-397">Jeśli pracujesz z obiektem (wystąpienia typu), można wywołać jej <xref:System.Object.GetType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-397">If you are working with an object (an instance of a type), you can call its <xref:System.Object.GetType%2A> method.</span></span> <span data-ttu-id="371a7-398">W przeciwnym razie można używać operatora C# lub operator języka Visual Basic, co w przykładzie przedstawiono.</span><span class="sxs-lookup"><span data-stu-id="371a7-398">Otherwise, you can use the C#  operator or the Visual Basic  operator, as the example illustrates.</span></span>  
  
2.  <span data-ttu-id="371a7-399">Pobierz <xref:System.Reflection.PropertyInfo> obiekt, który reprezentuje właściwości, w którym Cię.</span><span class="sxs-lookup"><span data-stu-id="371a7-399">Get a <xref:System.Reflection.PropertyInfo> object that represents the property in which you're interested.</span></span> <span data-ttu-id="371a7-400">Aby to zrobić, uzyskiwanie tablicę wszystkich właściwości z <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> metody, a następnie iteracja elementów w tablicy, lub można pobrać <xref:System.Reflection.PropertyInfo> obiekt, który reprezentuje właściwość bezpośrednio przez wywołanie metody <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> — metoda i określając Nazwa właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-400">You can do this by getting an array of all properties from the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method and then iterating the elements in the array, or you can retrieve the <xref:System.Reflection.PropertyInfo> object that represents the property directly by calling the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method and specifying the property name.</span></span>  
  
3.  <span data-ttu-id="371a7-401">Pobrać wartość <xref:System.Reflection.PropertyInfo.PropertyType%2A> właściwość z <xref:System.Reflection.PropertyInfo> obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-401">Retrieve the value of the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property from the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-402">W poniższym przykładzie zdefiniowano `Employee` klasy, która ma pięć właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-402">The following example defines an `Employee` class that has five properties.</span></span> <span data-ttu-id="371a7-403">Go, a następnie używa pobiera tablicę <xref:System.Reflection.PropertyInfo> obiekty, które reprezentują te właściwości i wyświetla nazwę i typ każdego z nich.</span><span class="sxs-lookup"><span data-stu-id="371a7-403">It then uses retrieves an array of <xref:System.Reflection.PropertyInfo> objects that represent those properties and displays the name and type of each.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.PropertyType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.propertytype/cs/propertytype1.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.PropertyType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.propertytype/vb/propertytype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo SetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo SetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.SetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SetMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ SetMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="371a7-404">Pobiera <see langword="set" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-404">Gets the <see langword="set" /> accessor for this property.</span></span></summary>
        <value><span data-ttu-id="371a7-405"><see langword="set" /> Metody dostępu dla tej właściwości lub <see langword="null" /> Jeśli właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="371a7-405">The <see langword="set" /> accessor for this property, or <see langword="null" /> if the property is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-406">Pobieranie wartości <xref:System.Reflection.PropertyInfo.SetMethod%2A> właściwość jest odpowiednikiem wywołania <xref:System.Reflection.PropertyInfo.GetSetMethod%28System.Boolean%29> metody o wartości `true` dla `nonPublic` argumentu.</span><span class="sxs-lookup"><span data-stu-id="371a7-406">Retrieving the value of the <xref:System.Reflection.PropertyInfo.SetMethod%2A> property is equivalent to calling the <xref:System.Reflection.PropertyInfo.GetSetMethod%28System.Boolean%29> method with a value of `true` for the `nonPublic` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.PropertyInfo.GetMethod" />
        <altmember cref="P:System.Reflection.PropertyInfo.CanWrite" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="371a7-407">Ustawia wartości właściwości dla określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-407">Sets the property value for a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="371a7-408">Obiekt, którego właściwość zostanie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="371a7-408">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="371a7-409">Nowa wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-409">The new property value.</span></span></param>
        <summary><span data-ttu-id="371a7-410">Ustawia wartości właściwości określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-410">Sets the property value of a specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-411"><xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> Przeciążenia ustawia wartości właściwości nieindeksowanych.</span><span class="sxs-lookup"><span data-stu-id="371a7-411">The <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> overload sets the value of a non-indexed property.</span></span> <span data-ttu-id="371a7-412">Aby ustalić, czy właściwość jest indeksowana, należy wywołać <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-412">To determine whether a property is indexed, call the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="371a7-413">Jeśli tablica wynikowa musi 0 (zero) elementy właściwości nie jest indeksowana.</span><span class="sxs-lookup"><span data-stu-id="371a7-413">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span> <span data-ttu-id="371a7-414">Aby ustawić wartość właściwości indeksowanej, należy wywołać <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Object%5B%5D%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="371a7-414">To set the value of an indexed property, call the <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Object%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="371a7-415">Jeśli typ to właściwość <xref:System.Reflection.PropertyInfo> obiektu jest typem wartości i `value` jest `null`, właściwość zostanie ustawiona na wartość domyślną dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="371a7-415">If the property type of this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="371a7-416">Jest metoda wygody, która wywołuje implementacji środowiska uruchomieniowego klasy abstrakcyjnej <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> metody, określając <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> dla `BindingFlags` parametru `null` dla `Binder`, `null` dla `Object[]`i `null` dla `CultureInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-416">This is a convenience method that calls the runtime implementation of the abstract <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method, specifying <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> for the `BindingFlags` parameter, `null` for `Binder`, `null` for `Object[]`, and `null` for `CultureInfo`.</span></span>  
  
 <span data-ttu-id="371a7-417">Aby użyć <xref:System.Reflection.PropertyInfo.SetValue%2A> metoda, pierwszy get <xref:System.Type> obiekt, który reprezentuje klasę.</span><span class="sxs-lookup"><span data-stu-id="371a7-417">To use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method, first get a <xref:System.Type> object that represents the class.</span></span> <span data-ttu-id="371a7-418">Z <xref:System.Type>, Pobierz <xref:System.Reflection.PropertyInfo> obiektu.</span><span class="sxs-lookup"><span data-stu-id="371a7-418">From the <xref:System.Type>, get the <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="371a7-419">Z <xref:System.Reflection.PropertyInfo> obiekt, należy wywołać <xref:System.Reflection.PropertyInfo.SetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-419">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.SetValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-420">Począwszy od [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ta metoda umożliwia dostęp do elementów członkowskich niepubliczne, jeśli element wywołujący zostało udzielone <xref:System.Security.Permissions.ReflectionPermission> z <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> Flaga i jeśli zestaw grant niepublicznych elementów członkowskich jest ograniczone do obiektu wywołującego udzielić zestawu lub być podzbiorem jej.</span><span class="sxs-lookup"><span data-stu-id="371a7-420">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="371a7-421">(Zobacz [zagadnienia dotyczące zabezpieczeń dla odbicia](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="371a7-421">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="371a7-422">Aby używać tej funkcji, należy docelowy aplikacji [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="371a7-422">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-423">Poniższy przykład deklaruje klasę o nazwie `Example` z jednym `static` (`Shared` w języku Visual Basic), a właściwość jedno wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="371a7-423">The following example declares a class named `Example` with one `static` (`Shared` in Visual Basic) and one instance property.</span></span> <span data-ttu-id="371a7-424">W przykładzie użyto <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> metodę, aby zmienić właściwości oryginalnej wartości i wyświetla wartości oryginalnej i końcowe.</span><span class="sxs-lookup"><span data-stu-id="371a7-424">The example uses the <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> method to change the original property values and displays the original and final values.</span></span>  
  
 [!code-cpp[PropertyInfo.SetValue#2](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyInfo.SetValue/cpp/example2.cpp#2)]
 [!code-csharp[PropertyInfo.SetValue#2](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyInfo.SetValue/cs/example2.cs#2)]
 [!code-vb[PropertyInfo.SetValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyInfo.SetValue/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="371a7-425">Właściwość <see langword="set" /> nie znaleziono metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-425">The property's <see langword="set" /> accessor is not found.</span></span>  
  
 <span data-ttu-id="371a7-426">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-426">-or-</span></span>  
  
 <span data-ttu-id="371a7-427"><paramref name="value" /> Nie można przekonwertować na typ <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-427"><paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="371a7-428">W <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET dla Sklepu Windows apps</see> lub <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">przenośnej biblioteki klas</see>, catch <see cref="T:System.Exception" /> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="371a7-428">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="371a7-429">Typ <paramref name="obj" /> nie jest zgodny z typem docelowym, lub właściwość jest właściwością wystąpienia, ale <paramref name="obj" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-429">The type of <paramref name="obj" /> does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="371a7-430">W <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET dla Sklepu Windows apps</see> lub <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">przenośnej biblioteki klas</see>, catch wyjątku klasy podstawowej <see cref="T:System.MemberAccessException" />, zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="371a7-430">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="371a7-431">Wystąpił niedozwolona próba uzyskania dostępu do prywatne lub chronione metody w klasie.</span><span class="sxs-lookup"><span data-stu-id="371a7-431">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="371a7-432">Wystąpił błąd podczas ustawiania wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-432">An error occurred while setting the property value.</span></span> <span data-ttu-id="371a7-433"><see cref="P:System.Exception.InnerException" /> Właściwość wskazuje przyczynę błędu.</span><span class="sxs-lookup"><span data-stu-id="371a7-433">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-434">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-434">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-435">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-435">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="371a7-436">Obiekt, którego właściwość zostanie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="371a7-436">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="371a7-437">Nowa wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-437">The new property value.</span></span></param>
        <param name="index"><span data-ttu-id="371a7-438">Opcjonalne indeks wartości dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="371a7-438">Optional index values for indexed properties.</span></span> <span data-ttu-id="371a7-439">Ta wartość powinna być <see langword="null" /> nieindeksowanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-439">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="371a7-440">Ustawia wartości właściwości określonego obiektu z wartości indeksu opcjonalne właściwości indeksu.</span><span class="sxs-lookup"><span data-stu-id="371a7-440">Sets the property value of a specified object with optional index values for index properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-441">Jeśli <xref:System.Reflection.PropertyInfo> obiektu jest typem wartości i `value` jest `null`, a następnie właściwość zostanie ustawiona na wartość domyślną dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="371a7-441">If this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, then the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="371a7-442">Aby określić, czy właściwość jest indeksowana, użyj <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-442">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="371a7-443">Jeśli tablica wynikowa musi 0 (zero) elementy właściwości nie jest indeksowana.</span><span class="sxs-lookup"><span data-stu-id="371a7-443">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="371a7-444">Jest metoda wygody, która wywołuje implementacji środowiska uruchomieniowego klasy abstrakcyjnej <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> metody, określając <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> dla `BindingFlags` parametru `null` dla `Binder`, i `null` dla `CultureInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-444">This is a convenience method that calls the runtime implementation of the abstract <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method, specifying <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> for the `BindingFlags` parameter, `null` for `Binder`, and `null` for `CultureInfo`.</span></span>  
  
 <span data-ttu-id="371a7-445">Aby użyć <xref:System.Reflection.PropertyInfo.SetValue%2A> metoda, pierwszy get <xref:System.Type> obiekt, który reprezentuje klasę.</span><span class="sxs-lookup"><span data-stu-id="371a7-445">To use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method, first get a <xref:System.Type> object that represents the class.</span></span> <span data-ttu-id="371a7-446">Z <xref:System.Type>, Pobierz <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="371a7-446">From the <xref:System.Type>, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="371a7-447">Z <xref:System.Reflection.PropertyInfo>, użyj <xref:System.Reflection.PropertyInfo.SetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-447">From the <xref:System.Reflection.PropertyInfo>, use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-448">Począwszy od [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ta metoda umożliwia dostęp do elementów członkowskich niepubliczne, jeśli element wywołujący zostało udzielone <xref:System.Security.Permissions.ReflectionPermission> z <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> Flaga i jeśli zestaw grant niepublicznych elementów członkowskich jest ograniczone do obiektu wywołującego udzielić zestawu lub być podzbiorem jej.</span><span class="sxs-lookup"><span data-stu-id="371a7-448">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="371a7-449">(Zobacz [zagadnienia dotyczące zabezpieczeń dla odbicia](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="371a7-449">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="371a7-450">Aby używać tej funkcji, należy docelowy aplikacji [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="371a7-450">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="371a7-451">W poniższym przykładzie zdefiniowano klasę o nazwie `TestClass` mający właściwość odczytu i zapisu o nazwie `Caption`.</span><span class="sxs-lookup"><span data-stu-id="371a7-451">The following example defines a class named `TestClass` that has a read-write property named `Caption`.</span></span> <span data-ttu-id="371a7-452">Wyświetla wartość domyślną `Caption` właściwości, wywołania <xref:System.Reflection.PropertyInfo.SetValue%2A> metodę, aby zmienić wartość właściwości i wyświetla wyniki.</span><span class="sxs-lookup"><span data-stu-id="371a7-452">It  displays the default value of the `Caption` property, calls the <xref:System.Reflection.PropertyInfo.SetValue%2A> method to change the property value, and displays the result.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="371a7-453">Należy zauważyć, że ponieważ `Caption` właściwość nie jest tablicą parametrów `index` argument jest `null`.</span><span class="sxs-lookup"><span data-stu-id="371a7-453">Note that, because the `Caption` property is not a parameter array, the `index` argument is `null`.</span></span>  
  
 <span data-ttu-id="371a7-454">Poniższy przykład deklaruje klasę o nazwie `Example` z trzy właściwości: `static` właściwości (`Shared` w języku Visual Basic), właściwości wystąpienia i właściwości indeksowanych wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="371a7-454">The following example declares a class named `Example` with three properties: a `static` property (`Shared` in Visual Basic), an instance property, and an indexed instance property.</span></span> <span data-ttu-id="371a7-455">W przykładzie użyto <xref:System.Reflection.PropertyInfo.SetValue%2A> metodę, aby zmienić domyślne wartości właściwości i wyświetla wartości oryginalnej i końcowe.</span><span class="sxs-lookup"><span data-stu-id="371a7-455">The example uses the <xref:System.Reflection.PropertyInfo.SetValue%2A> method to change the default values of the properties and displays the original and final values.</span></span>  
  
 <span data-ttu-id="371a7-456">Nazwę, która służy do wyszukiwania dla właściwości indeksowanych wystąpienia za pomocą odbicia różni się w zależności od języka i na atrybuty stosowane do właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-456">The name that is used to search for an indexed instance property with reflection is different depending on the language and on attributes applied to the property.</span></span>  
  
-   <span data-ttu-id="371a7-457">W języku Visual Basic nazwa właściwości zawsze jest używany do wyszukiwania właściwości za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="371a7-457">In Visual Basic, the property name is always used to search for the property with reflection.</span></span> <span data-ttu-id="371a7-458">Można użyć `Default` Właściwość indeksowana — słowo kluczowe, aby ustawić właściwość domyślną, w którym to przypadku można pominąć nazwę podczas uzyskiwania dostępu do właściwości, jak w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="371a7-458">You can use the `Default` keyword to make the property a default indexed property, in which case you can omit the name when accessing the property, as in this example.</span></span> <span data-ttu-id="371a7-459">Można również użyć nazwy właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-459">You can also use the property name.</span></span>  
  
-   <span data-ttu-id="371a7-460">W języku C# właściwości indeksowanych wystąpienia jest domyślna właściwość o nazwie indeksatora, a nazwa nigdy nie jest używana podczas uzyskiwania dostępu do właściwości w kodzie.</span><span class="sxs-lookup"><span data-stu-id="371a7-460">In C#, the indexed instance property is a default property called an indexer, and the name is never used when accessing the property in code.</span></span> <span data-ttu-id="371a7-461">Domyślnie, nazwa właściwości jest `Item`, musisz użyć tej nazwy podczas wyszukiwania właściwości za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="371a7-461">By default, the name of the property is `Item`, and you must use that name when you search for the property with reflection.</span></span> <span data-ttu-id="371a7-462">Można użyć <xref:System.Runtime.CompilerServices.IndexerNameAttribute> atrybutu umożliwiają indeksatora inną nazwę.</span><span class="sxs-lookup"><span data-stu-id="371a7-462">You can use the <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attribute to give the indexer a different name.</span></span> <span data-ttu-id="371a7-463">W tym przykładzie nazwa jest `IndexedInstanceProperty`.</span><span class="sxs-lookup"><span data-stu-id="371a7-463">In this example, the name is `IndexedInstanceProperty`.</span></span>  
  
-   <span data-ttu-id="371a7-464">W języku C++ `default` specyfikator można wprowadzić właściwość indeksowana domyślnie indeksowane właściwości (klasa indeksatora).</span><span class="sxs-lookup"><span data-stu-id="371a7-464">In C++, the `default` specifier can be used to make an indexed property a default indexed property (class indexer).</span></span> <span data-ttu-id="371a7-465">W takim przypadku nazwa właściwości domyślnie jest `Item`, musisz użyć tej nazwy podczas wyszukiwania właściwości za pomocą odbicia, jak w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="371a7-465">In that case, the name of the property by default is `Item`, and you must use that name when you search for the property with reflection, as in this example.</span></span> <span data-ttu-id="371a7-466">Można użyć <xref:System.Runtime.CompilerServices.IndexerNameAttribute> atrybutu umożliwić klasa indeksatora inną nazwę w odbicia, ale nie można użyć tej nazwy do dostępu do właściwości w kodzie.</span><span class="sxs-lookup"><span data-stu-id="371a7-466">You can use the <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attribute to give the class indexer a different name in reflection, but you cannot use that name to access the property in code.</span></span> <span data-ttu-id="371a7-467">Właściwość indeksowana, który nie jest klasa indeksatora dostęp jest uzyskiwany przy użyciu nazwy, zarówno w kodzie, jak i w odbicia.</span><span class="sxs-lookup"><span data-stu-id="371a7-467">An indexed property that is not a class indexer is accessed using its name, both in code and in reflection.</span></span>  
  
 [!code-cpp[PropertyInfo.SetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyInfo.SetValue/cpp/Example.cpp#1)]
 [!code-csharp[PropertyInfo.SetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyInfo.SetValue/cs/Example.cs#1)]
 [!code-vb[PropertyInfo.SetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyInfo.SetValue/vb/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="371a7-468"><paramref name="index" /> Tablicy nie zawiera typy argumentów potrzebne.</span><span class="sxs-lookup"><span data-stu-id="371a7-468">The <paramref name="index" /> array does not contain the type of arguments needed.</span></span>  
  
 <span data-ttu-id="371a7-469">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-469">-or-</span></span>  
  
 <span data-ttu-id="371a7-470">Właściwość <see langword="set" /> nie znaleziono metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-470">The property's <see langword="set" /> accessor is not found.</span></span>  
  
 <span data-ttu-id="371a7-471">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-471">-or-</span></span>  
  
 <span data-ttu-id="371a7-472"><paramref name="value" /> Nie można przekonwertować na typ <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-472"><paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="371a7-473">W <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET dla Sklepu Windows apps</see> lub <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">przenośnej biblioteki klas</see>, catch <see cref="T:System.Exception" /> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="371a7-473">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="371a7-474">Obiekt nie jest zgodny z typem docelowym lub właściwość jest właściwością wystąpienia, ale <paramref name="obj" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-474">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="371a7-475">Liczba parametrów w <paramref name="index" /> jest niezgodna z liczbą parametrów indeksowanej właściwości ma.</span><span class="sxs-lookup"><span data-stu-id="371a7-475">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span></span></exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="371a7-476">W <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET dla Sklepu Windows apps</see> lub <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">przenośnej biblioteki klas</see>, catch wyjątku klasy podstawowej <see cref="T:System.MemberAccessException" />, zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="371a7-476">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="371a7-477">Wystąpił niedozwolona próba uzyskania dostępu do prywatne lub chronione metody w klasie.</span><span class="sxs-lookup"><span data-stu-id="371a7-477">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="371a7-478">Wystąpił błąd podczas ustawiania wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-478">An error occurred while setting the property value.</span></span> <span data-ttu-id="371a7-479">Na przykład wartość indeksu określona dla właściwości indeksowanych jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="371a7-479">For example, an index value specified for an indexed property is out of range.</span></span> <span data-ttu-id="371a7-480"><see cref="P:System.Exception.InnerException" /> Właściwość wskazuje przyczynę błędu.</span><span class="sxs-lookup"><span data-stu-id="371a7-480">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-481">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-481">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-482">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-482">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="371a7-483">Obiekt, którego właściwość zostanie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="371a7-483">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="371a7-484">Nowa wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-484">The new property value.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="371a7-485">Bitowe połączenie następujące elementy członkowskie wyliczenia określających atrybut wywołania: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, lub <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-485">A bitwise combination of the following enumeration members that specify the invocation attribute: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="371a7-486">Należy określić atrybut odpowiedniego wywołania.</span><span class="sxs-lookup"><span data-stu-id="371a7-486">You must specify a suitable invocation attribute.</span></span> <span data-ttu-id="371a7-487">Na przykład, aby wywołać statyczny element członkowski, należy ustawić <see langword="Static" /> flagi.</span><span class="sxs-lookup"><span data-stu-id="371a7-487">For example, to invoke a static member, set the <see langword="Static" /> flag.</span></span></param>
        <param name="binder"><span data-ttu-id="371a7-488">Obiekt, który umożliwia powiązanie koercja argumentu typy wywołania elementów członkowskich i pobieranie <see cref="T:System.Reflection.MemberInfo" /> obiektów przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="371a7-488">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="371a7-489">Jeśli <c>integratora</c> jest <see langword="null" />, używany jest domyślny integrator.</span><span class="sxs-lookup"><span data-stu-id="371a7-489">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="371a7-490">Opcjonalne indeks wartości dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="371a7-490">Optional index values for indexed properties.</span></span> <span data-ttu-id="371a7-491">Ta wartość powinna być <see langword="null" /> nieindeksowanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-491">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="371a7-492">Kultura, dla którego ma zostać zlokalizowany zasób.</span><span class="sxs-lookup"><span data-stu-id="371a7-492">The culture for which the resource is to be localized.</span></span> <span data-ttu-id="371a7-493">Jeśli zasób nie jest zlokalizowany na tę kulturę <see cref="P:System.Globalization.CultureInfo.Parent" /> właściwość zostanie wywołana kolejno w poszukiwaniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="371a7-493">If the resource is not localized for this culture, the <see cref="P:System.Globalization.CultureInfo.Parent" /> property will be called successively in search of a match.</span></span> <span data-ttu-id="371a7-494">Jeśli ta wartość jest <see langword="null" />, informacje specyficzne dla kultury są uzyskiwane z <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-494">If this value is <see langword="null" />, the culture-specific information is obtained from the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="371a7-495">W przypadku przesłonięcia w klasie pochodnej, ustawia wartości właściwości dla określonego obiektu, który ma określone powiązanie, indeksu i informacje specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="371a7-495">When overridden in a derived class, sets the property value for a specified object that has the specified binding, index, and culture-specific information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-496">Jeśli <xref:System.Reflection.PropertyInfo> obiektu jest typem wartości i `value` jest `null`, a następnie właściwość zostanie ustawiona na wartość domyślną dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="371a7-496">If this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, then the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="371a7-497">Aby określić, czy właściwość jest indeksowana, użyj <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-497">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="371a7-498">Jeśli tablica wynikowa musi 0 (zero) elementy właściwości nie jest indeksowana.</span><span class="sxs-lookup"><span data-stu-id="371a7-498">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="371a7-499">Ograniczenia dostępu są ignorowane w przypadku całkowicie zaufanego kodu.</span><span class="sxs-lookup"><span data-stu-id="371a7-499">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="371a7-500">Oznacza to konstruktory prywatne, pola, metody i właściwości można można uzyskać dostępu do i wywoływane za pośrednictwem odbicia zawsze, gdy kod jest w pełni zaufany.</span><span class="sxs-lookup"><span data-stu-id="371a7-500">That is, private constructors, methods, fields, and properties can be accessed and invoked via Reflection whenever the code is fully trusted.</span></span>  
  
 <span data-ttu-id="371a7-501">Aby użyć `SetValue` metody, najpierw uzyskać klasy `Type`.</span><span class="sxs-lookup"><span data-stu-id="371a7-501">To use the `SetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="371a7-502">Z `Type`, Pobierz `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="371a7-502">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="371a7-503">Z `PropertyInfo`, użyj `SetValue` metody.</span><span class="sxs-lookup"><span data-stu-id="371a7-503">From the `PropertyInfo`, use the `SetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="371a7-504">Począwszy od [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ta metoda umożliwia dostęp do elementów członkowskich niepubliczne, jeśli element wywołujący zostało udzielone <xref:System.Security.Permissions.ReflectionPermission> z <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> Flaga i jeśli zestaw grant niepublicznych elementów członkowskich jest ograniczone do obiektu wywołującego udzielić zestawu lub być podzbiorem jej.</span><span class="sxs-lookup"><span data-stu-id="371a7-504">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="371a7-505">(Zobacz [zagadnienia dotyczące zabezpieczeń dla odbicia](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="371a7-505">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="371a7-506">Aby używać tej funkcji, należy docelowy aplikacji [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="371a7-506">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="371a7-507"><paramref name="index" /> Tablicy nie zawiera typy argumentów potrzebne.</span><span class="sxs-lookup"><span data-stu-id="371a7-507">The <paramref name="index" /> array does not contain the type of arguments needed.</span></span>  
  
 <span data-ttu-id="371a7-508">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-508">-or-</span></span>  
  
 <span data-ttu-id="371a7-509">Właściwość <see langword="set" /> nie znaleziono metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="371a7-509">The property's <see langword="set" /> accessor is not found.</span></span>  
  
 <span data-ttu-id="371a7-510">—lub—</span><span class="sxs-lookup"><span data-stu-id="371a7-510">-or-</span></span>  
  
 <span data-ttu-id="371a7-511"><paramref name="value" /> Nie można przekonwertować na typ <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-511"><paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="371a7-512">Obiekt nie jest zgodny z typem docelowym lub właściwość jest właściwością wystąpienia, ale <paramref name="obj" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-512">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="371a7-513">Liczba parametrów w <paramref name="index" /> jest niezgodna z liczbą parametrów indeksowanej właściwości ma.</span><span class="sxs-lookup"><span data-stu-id="371a7-513">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="371a7-514">Wystąpił niedozwolona próba uzyskania dostępu do prywatne lub chronione metody w klasie.</span><span class="sxs-lookup"><span data-stu-id="371a7-514">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="371a7-515">Wystąpił błąd podczas ustawiania wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="371a7-515">An error occurred while setting the property value.</span></span> <span data-ttu-id="371a7-516">Na przykład wartość indeksu określona dla właściwości indeksowanych jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="371a7-516">For example, an index value specified for an indexed property is out of range.</span></span> <span data-ttu-id="371a7-517"><see cref="P:System.Exception.InnerException" /> Właściwość wskazuje przyczynę błędu.</span><span class="sxs-lookup"><span data-stu-id="371a7-517">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="371a7-518">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-518">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="371a7-519">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="371a7-519">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _PropertyInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_PropertyInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="371a7-520">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="371a7-520">Reserved for future use.</span></span> <span data-ttu-id="371a7-521">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="371a7-521">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="371a7-522">Przekazana tablica nazw ma być mapowana.</span><span class="sxs-lookup"><span data-stu-id="371a7-522">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="371a7-523">Liczba nazw, które mają być mapowane.</span><span class="sxs-lookup"><span data-stu-id="371a7-523">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="371a7-524">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</span><span class="sxs-lookup"><span data-stu-id="371a7-524">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="371a7-525">Tablica przydzielana przez obiekt wywołujący, który otrzymuje numery identyfikacyjne odpowiadających nazw.</span><span class="sxs-lookup"><span data-stu-id="371a7-525">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="371a7-526">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</span><span class="sxs-lookup"><span data-stu-id="371a7-526">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-527">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="371a7-527">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="371a7-528">Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="371a7-528">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="371a7-529">Dostęp z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="371a7-529">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetType">
      <MemberSignature Language="C#" Value="Type _PropertyInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._PropertyInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _PropertyInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._PropertyInfo.GetType() = System::Runtime::InteropServices::_PropertyInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="371a7-530">Pobiera <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.Reflection.PropertyInfo" /> typu.</span><span class="sxs-lookup"><span data-stu-id="371a7-530">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.PropertyInfo" /> type.</span></span></summary>
        <returns><span data-ttu-id="371a7-531">A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.Reflection.PropertyInfo" /> typu.</span><span class="sxs-lookup"><span data-stu-id="371a7-531">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.PropertyInfo" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _PropertyInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_PropertyInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="371a7-532">Informacje o typie, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="371a7-532">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="371a7-533">Identyfikator regionalny dla informacji o typie.</span><span class="sxs-lookup"><span data-stu-id="371a7-533">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="371a7-534">Otrzymuje wskaźnik do obiektu informacji żądanego typu.</span><span class="sxs-lookup"><span data-stu-id="371a7-534">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="371a7-535">Pobiera informacje o typie dla obiektu, których następnie można użyć do uzyskania informacji o typie interfejsu.</span><span class="sxs-lookup"><span data-stu-id="371a7-535">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-536">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="371a7-536">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="371a7-537">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="371a7-537">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="371a7-538">Dostęp z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="371a7-538">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _PropertyInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_PropertyInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="371a7-539">Wskazuje lokalizację, która odbiera informację o liczbie typów dostarczanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="371a7-539">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="371a7-540">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</span><span class="sxs-lookup"><span data-stu-id="371a7-540">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-541">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="371a7-541">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="371a7-542">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="371a7-542">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="371a7-543">Dostęp z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="371a7-543">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.Invoke">
      <MemberSignature Language="C#" Value="void _PropertyInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _PropertyInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_PropertyInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="371a7-544">Określa element członkowski.</span><span class="sxs-lookup"><span data-stu-id="371a7-544">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="371a7-545">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="371a7-545">Reserved for future use.</span></span> <span data-ttu-id="371a7-546">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="371a7-546">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="371a7-547">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</span><span class="sxs-lookup"><span data-stu-id="371a7-547">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="371a7-548">Flagi opisujące kontekst wywołania.</span><span class="sxs-lookup"><span data-stu-id="371a7-548">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="371a7-549">Wskaźnik do struktury zawiera tablicę argumentów, tablicę identyfikatorów DISPID argumentu dla nazwanych argumentów i zlicza liczbę elementów w tablicach.</span><span class="sxs-lookup"><span data-stu-id="371a7-549">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="371a7-550">Wskaźnik miejsca, gdzie ma być przechowywany wynik.</span><span class="sxs-lookup"><span data-stu-id="371a7-550">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="371a7-551">Wskaźnik do struktury, która zawiera informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="371a7-551">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="371a7-552">Indeks pierwszego argumentu, który zawiera błąd.</span><span class="sxs-lookup"><span data-stu-id="371a7-552">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="371a7-553">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="371a7-553">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="371a7-554">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="371a7-554">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="371a7-555">Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="371a7-555">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="371a7-556">Dostęp z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="371a7-556">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>