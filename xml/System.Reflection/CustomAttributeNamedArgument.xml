<Type Name="CustomAttributeNamedArgument" FullName="System.Reflection.CustomAttributeNamedArgument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f3881d9c642e177213d921272b9b9360ebd93fb" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52352481" /></Metadata><TypeSignature Language="C#" Value="public struct CustomAttributeNamedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeNamedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeNamedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeNamedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeNamedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeNamedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28aaf-101">Reprezentuje nazwany argument atrybutu niestandardowego w kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="28aaf-101">Represents a named argument of a custom attribute in the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aaf-102">Nie można wykonać kod, który jest rozpatrywany w kontekstu reflection-only, dzięki czemu nie zawsze jest możliwe do sprawdzenia atrybutów niestandardowych, tworząc wystąpień je i sprawdzając ich właściwości, za pomocą metod, takich jak <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>i tak dalej .</span><span class="sxs-lookup"><span data-stu-id="28aaf-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="28aaf-103">Jeśli kod dla samego typu atrybutu jest ładowany do kontekstu reflection-only, nie można wykonać.</span><span class="sxs-lookup"><span data-stu-id="28aaf-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="28aaf-104"><xref:System.Reflection.CustomAttributeNamedArgument> Struktury jest używany przez <xref:System.Reflection.CustomAttributeData> klasy w celu zapewnienia dostępu do nazwany argument określony dla wystąpienia atrybutu niestandardowego, bez wykonywania kodu odpowiedniej właściwości typu atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.</span></span> <span data-ttu-id="28aaf-105"><xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> Właściwość zwraca <xref:System.Reflection.CustomAttributeTypedArgument> strukturę, która zawiera typ i wartość nazwanego argumentu.</span><span class="sxs-lookup"><span data-stu-id="28aaf-105">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="28aaf-106">Czy nosi nazwę argumentu pozycyjne, możesz musi uzyskać dostęp do jej typ i wartość korzystając <xref:System.Reflection.CustomAttributeTypedArgument> struktury.</span><span class="sxs-lookup"><span data-stu-id="28aaf-106">Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="28aaf-107">Do tworzenia wystąpień <xref:System.Reflection.CustomAttributeData> klasy, należy użyć `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metoda fabryki.</span><span class="sxs-lookup"><span data-stu-id="28aaf-107">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aaf-108">W poniższym przykładzie zdefiniowano niestandardowy atrybut z czterech konstruktorów i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="28aaf-108">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="28aaf-109">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="28aaf-109">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="28aaf-110">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="28aaf-110">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="28aaf-111">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="28aaf-111">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="28aaf-112">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="28aaf-112">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="28aaf-113">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="28aaf-113">Different constructors are used for these cases.</span></span> <span data-ttu-id="28aaf-114">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla informacje na temat atrybutów niestandardowych, które zostały zastosowane do niego i typów i elementów członkowskich, które zawiera.</span><span class="sxs-lookup"><span data-stu-id="28aaf-114">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="28aaf-115">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="28aaf-115">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aaf-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="28aaf-116">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeNamedArgument : System.Reflection.MemberInfo * obj -&gt; System.Reflection.CustomAttributeNamedArgument" Usage="new System.Reflection.CustomAttributeNamedArgument (memberInfo, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="memberInfo"><span data-ttu-id="28aaf-117">Pole lub właściwość atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-117">A field or property of the custom attribute.</span></span> <span data-ttu-id="28aaf-118">Nowy <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> obiekt reprezentuje tego elementu członkowskiego i jego wartość.</span><span class="sxs-lookup"><span data-stu-id="28aaf-118">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span></span></param>
        <param name="value"><span data-ttu-id="28aaf-119">Wartość pola lub właściwości atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-119">The value of the field or property of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="28aaf-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> klasy, która reprezentuje określone pole lub właściwość atrybutu niestandardowego i umożliwia określenie wartości pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="28aaf-120">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aaf-121">Ten konstruktor jest przeznaczona do użytku przez obiektów dziedziczących z <xref:System.Reflection.CustomAttributeNamedArgument> klasy.</span><span class="sxs-lookup"><span data-stu-id="28aaf-121">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="28aaf-122">Nie jest on przeznaczony do użycia w kodzie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="28aaf-122">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aaf-123"><paramref name="memberInfo" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aaf-123"><paramref name="memberInfo" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28aaf-124"><paramref name="memberInfo" /> nie jest ona polem ani właściwością atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-124"><paramref name="memberInfo" /> is not a field or property of the custom attribute.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, System.Reflection.CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, valuetype System.Reflection.CustomAttributeTypedArgument typedArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Reflection::CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeNamedArgument : System.Reflection.MemberInfo * System.Reflection.CustomAttributeTypedArgument -&gt; System.Reflection.CustomAttributeNamedArgument" Usage="new System.Reflection.CustomAttributeNamedArgument (memberInfo, typedArgument)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="typedArgument" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="memberInfo"><span data-ttu-id="28aaf-125">Pole lub właściwość atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-125">A field or property of the custom attribute.</span></span> <span data-ttu-id="28aaf-126">Nowy <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> obiekt reprezentuje tego elementu członkowskiego i jego wartość.</span><span class="sxs-lookup"><span data-stu-id="28aaf-126">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span></span></param>
        <param name="typedArgument"><span data-ttu-id="28aaf-127">Obiekt, który opisuje typu i wartości pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="28aaf-127">An object that describes the type and value of the field or property.</span></span></param>
        <summary><span data-ttu-id="28aaf-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> klasy, która reprezentuje określone pole lub właściwość atrybutu niestandardowego i określa <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> obiekt, który opisuje typu i wartości pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="28aaf-128">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> object that describes the type and value of the field or property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aaf-129">Ten konstruktor jest przeznaczona do użytku przez obiektów dziedziczących z <xref:System.Reflection.CustomAttributeNamedArgument> klasy.</span><span class="sxs-lookup"><span data-stu-id="28aaf-129">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="28aaf-130">Nie jest on przeznaczony do użycia w kodzie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="28aaf-130">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aaf-131"><paramref name="memberInfo" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aaf-131"><paramref name="memberInfo" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeNamedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="28aaf-132">Obiekt do porównania z tym wystąpieniem lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aaf-132">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="28aaf-133">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="28aaf-133">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="28aaf-134"><see langword="true" /> Jeśli <paramref name="obj" /> equals typ i wartość tego wystąpienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aaf-134"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeNamedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aaf-135">Zwraca kod skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="28aaf-135">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="28aaf-136">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="28aaf-136">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsField">
      <MemberSignature Language="C#" Value="public bool IsField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsField" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsField As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsField { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsField : bool" Usage="System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-137">Pobiera wartość wskazującą, czy nazwany argument jest polem.</span><span class="sxs-lookup"><span data-stu-id="28aaf-137">Gets a value that indicates whether the named argument is a field.</span></span></summary>
        <value><span data-ttu-id="28aaf-138"><see langword="true" /> Jeśli nazwany argument jest polem; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aaf-138"><see langword="true" /> if the named argument is a field; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo MemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo MemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberInfo As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ MemberInfo { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberInfo : System.Reflection.MemberInfo" Usage="System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-139">Pobiera element członkowski atrybutu, którego można ustawić argumentu nazwanego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-139">Gets the attribute member that would be used to set the named argument.</span></span></summary>
        <value><span data-ttu-id="28aaf-140">Element członkowski atrybutu, którego można ustawić argumentu nazwanego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-140">The attribute member that would be used to set the named argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aaf-141">W większości przypadków elementu członkowskiego jest właściwością.</span><span class="sxs-lookup"><span data-stu-id="28aaf-141">In most cases, the member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string" Usage="System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-142">Pobiera nazwę elementu członkowskiego atrybut, który będzie służyć do ustawiania argumentu nazwanego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-142">Gets the name of the attribute member that would be used to set the named argument.</span></span></summary>
        <value><span data-ttu-id="28aaf-143">Nazwa elementu członkowskiego atrybut, który będzie służyć do ustawiania argumentu nazwanego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-143">The name of the attribute member that would be used to set the named argument.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeNamedArgument * System.Reflection.CustomAttributeNamedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="28aaf-144">Struktura z lewej strony operatora równości.</span><span class="sxs-lookup"><span data-stu-id="28aaf-144">The structure to the left of the equality operator.</span></span></param>
        <param name="right"><span data-ttu-id="28aaf-145">Struktura z prawej strony operatora równości.</span><span class="sxs-lookup"><span data-stu-id="28aaf-145">The structure to the right of the equality operator.</span></span></param>
        <summary><span data-ttu-id="28aaf-146">Sprawdza, czy dwa <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> struktury są równoważne.</span><span class="sxs-lookup"><span data-stu-id="28aaf-146">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equivalent.</span></span></summary>
        <returns><span data-ttu-id="28aaf-147"><see langword="true" /> Jeśli dwa <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> struktury są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aaf-147"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="28aaf-148">Jest równoważne metodę dla tego operatora <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28aaf-148">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeNamedArgument * System.Reflection.CustomAttributeNamedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeNamedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="28aaf-149">Struktura po lewej stronie operator nierówności.</span><span class="sxs-lookup"><span data-stu-id="28aaf-149">The structure to the left of the inequality operator.</span></span></param>
        <param name="right"><span data-ttu-id="28aaf-150">Struktura po prawej stronie operator nierówności.</span><span class="sxs-lookup"><span data-stu-id="28aaf-150">The structure to the right of the inequality operator.</span></span></param>
        <summary><span data-ttu-id="28aaf-151">Sprawdza, czy dwa <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> struktury są różne.</span><span class="sxs-lookup"><span data-stu-id="28aaf-151">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different.</span></span></summary>
        <returns><span data-ttu-id="28aaf-152"><see langword="true" /> Jeśli dwa <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> struktury są różne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aaf-152"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="28aaf-153">Jest równoważne metodę dla tego operatora <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28aaf-153">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeNamedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aaf-154">Zwraca ciąg, który obejmuje nazwę argumentu, znak równości i ciąg reprezentujący wartość argumentu.</span><span class="sxs-lookup"><span data-stu-id="28aaf-154">Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.</span></span></summary>
        <returns><span data-ttu-id="28aaf-155">Ciąg, który obejmuje nazwę argumentu, znak równości i ciąg reprezentujący wartość argumentu.</span><span class="sxs-lookup"><span data-stu-id="28aaf-155">A string that consists of the argument name, the equal sign, and a string representation of the argument value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public System.Reflection.CustomAttributeTypedArgument TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CustomAttributeTypedArgument TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypedValue As CustomAttributeTypedArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CustomAttributeTypedArgument TypedValue { System::Reflection::CustomAttributeTypedArgument get(); };" />
      <MemberSignature Language="F#" Value="member this.TypedValue : System.Reflection.CustomAttributeTypedArgument" Usage="System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CustomAttributeTypedArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-156">Pobiera <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> strukturę, która może służyć do uzyskania typu i wartości bieżącego nazwany argument.</span><span class="sxs-lookup"><span data-stu-id="28aaf-156">Gets a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure that can be used to obtain the type and value of the current named argument.</span></span></summary>
        <value><span data-ttu-id="28aaf-157">Struktura, która może służyć do uzyskania typu i wartości bieżącej argumentu nazwanego.</span><span class="sxs-lookup"><span data-stu-id="28aaf-157">A structure that can be used to obtain the type and value of the current named argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aaf-158"><xref:System.Reflection.CustomAttributeNamedArgument> Struktura zawiera tylko informacje o konfiguracji wartość argumentu.</span><span class="sxs-lookup"><span data-stu-id="28aaf-158">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set.</span></span> <span data-ttu-id="28aaf-159">Ta właściwość służy do uzyskania <xref:System.Reflection.CustomAttributeTypedArgument> strukturę, która zawiera typ i wartość.</span><span class="sxs-lookup"><span data-stu-id="28aaf-159">Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aaf-160">Poniższy przykład kodu Określa atrybut niestandardowy przy użyciu czterech konstruktory i cztery właściwości.</span><span class="sxs-lookup"><span data-stu-id="28aaf-160">The following code example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="28aaf-161">Dwie właściwości są przeznaczone tylko do odczytu i są skonfigurowane przy użyciu parametry pozycyjne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="28aaf-161">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="28aaf-162">Dwie właściwości są odczytu/zapisu i może być zestaw tylko przy użyciu argumenty nazwane.</span><span class="sxs-lookup"><span data-stu-id="28aaf-162">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="28aaf-163">Jedna właściwość pozycyjne jest tablicą ciągów, a jedną właściwość o nazwie jest tablicy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="28aaf-163">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="28aaf-164">Ten atrybut jest stosowany do zestawu, do typu zadeklarowany w zestawie, do metody typu i parametru metody.</span><span class="sxs-lookup"><span data-stu-id="28aaf-164">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="28aaf-165">Różne konstruktory są używane w tych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="28aaf-165">Different constructors are used for these cases.</span></span> <span data-ttu-id="28aaf-166">Po wykonaniu zestawu ładuje się do kontekstu reflection-only i wyświetla atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="28aaf-166">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="28aaf-167">Atrybut, który jest stosowany do typu pokazuje właściwości tablicy argumentów nazwanych i pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="28aaf-167">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="28aaf-168"><xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> Właściwość jest używana w `ShowAttributeData` metodę, która wyświetla dane atrybutów niestandardowych, można uzyskać, typy i wartości atrybutów nazwanych.</span><span class="sxs-lookup"><span data-stu-id="28aaf-168">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property is used in the `ShowAttributeData` method that displays custom attribute data, to obtain the types and values of named attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CustomAttributeData" />
        <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
  </Members>
</Type>