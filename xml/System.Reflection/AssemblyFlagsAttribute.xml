<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyFlagsAttribute.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56415ecfda009d8765e3f91b8c7484e459ebd8356.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6415ecfda009d8765e3f91b8c7484e459ebd8356</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>Specifies a bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key.</source>
          <target state="translated">Określa bitowe połączenie <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi dla zestawu opisujące opcje kompilatora just in time (JIT), czy zestaw jest retargetable i czy ma pełny lub tokenami klucza publicznego.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> enumeration describes the assembly characteristics that can be set using this attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> Wyliczenie opisano charakterystyki zestawu, które można ustawić za pomocą tego atrybutu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>To access the flags that have been specified for an assembly, use the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> property to obtain an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object, then use the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property to obtain an <ph id="ph4">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> value.</source>
          <target state="translated">Aby uzyskać dostęp do flag, które zostały określone dla zestawu, należy użyć <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> właściwości w celu uzyskania <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> obiekt, a następnie użyj <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> właściwości w celu uzyskania <ph id="ph4">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>To specify <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> flags for a dynamic assembly, set the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object that you pass to the <ph id="ph4">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby określić <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> ustawione flagi dla zestawu dynamicznego, <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> właściwość <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> obiekt przekazywany do <ph id="ph4">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType&gt;</ph> — metoda.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>The following code example shows how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to an assembly, and how to read the flags at run time.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób stosowania <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> do zestawu i sposobu odczytywania flagi w czasie wykonywania.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>The example also creates an instance of the attribute, and uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> property to display the flags.</source>
          <target state="translated">Przykład również tworzy wystąpienie atrybutu, a używa <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> właściwość, aby wyświetlić flagi.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>For an example of how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to a dynamic assembly, see the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Przykład sposobu stosowania <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> do zestawu dynamicznego, zobacz <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags, cast as an integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</source>
          <target state="translated">Bitowe połączenie <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi rzutowany jako wartość całkowitą reprezentującą — opcje kompilatora just in time (JIT), trwałość, czy zestaw jest retargetable i czy ma pełny lub tokenami klucza publicznego.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> class with the specified combination of <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags, cast as an integer value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> klasy dla określonej kombinacji <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi, rzutowania w postaci liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)">
          <source>This untyped constructor is now obsolete.</source>
          <target state="translated">Ten konstruktor bez typu jest już przestarzałe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)">
          <source>Do not use.</source>
          <target state="translated">Nie używać.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</source>
          <target state="translated">Bitowe połączenie <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi — opcje kompilatora just in time (JIT), trwałość, czy zestaw jest retargetable oraz czy ma pełny lub tokenami klucza publicznego.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> class with the specified combination of <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> klasy dla określonej kombinacji <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>The following code example shows how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to an assembly, and how to read the flags at run time.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób stosowania <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> do zestawu i sposobu odczytywania flagi w czasie wykonywania.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>The example also creates an instance of the attribute, and uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> property to display the flags.</source>
          <target state="translated">Przykład również tworzy wystąpienie atrybutu, a używa <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> właściwość, aby wyświetlić flagi.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>For an example of how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to a dynamic assembly, see the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Przykład sposobu stosowania <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> do zestawu dynamicznego, zobacz <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags, cast as an unsigned integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</source>
          <target state="translated">Bitowe połączenie <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi rzutowany jako wartość całkowitą bez znaku, opcje kompilatora just in time (JIT), trwałość, czy zestaw jest retargetable oraz czy ma pełny lub tokenami klucza publicznego.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> class with the specified combination of <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags, cast as an unsigned integer value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> klasy dla określonej kombinacji <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi, rzutowania w postaci liczby całkowitej bez znaku.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)">
          <source>This untyped constructor is now obsolete.</source>
          <target state="translated">Ten konstruktor bez typu jest już przestarzałe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)">
          <source>Do not use.</source>
          <target state="translated">Nie używać.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>Gets an integer value representing the combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags specified when this attribute instance was created.</source>
          <target state="translated">Pobiera wartość całkowitą reprezentującą kombinację <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi określone podczas tworzenia wystąpienia tego atrybutu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>An integer value representing a bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags.</source>
          <target state="translated">Wartość całkowitą reprezentującą bitowe połączenie <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>This property returns an integer for backward compatibility.</source>
          <target state="translated">Ta właściwość zwraca liczbę całkowitą dla zgodności z poprzednimi wersjami.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>Cast the value to the <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> type before using it.</source>
          <target state="translated">Rzutowanie wartości <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> typu przed jego użyciem.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>The following code example shows how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to an assembly, and how to read the flags at run time.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób stosowania <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> do zestawu i sposobu odczytywania flagi w czasie wykonywania.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>The example also creates an instance of the attribute, and uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> property to display the flags.</source>
          <target state="translated">Przykład również tworzy wystąpienie atrybutu, a używa <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> właściwość, aby wyświetlić flagi.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>For an example of how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to a dynamic assembly, see the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Przykład sposobu stosowania <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> do zestawu dynamicznego, zobacz <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblyFlagsAttribute.Flags">
          <source>Gets an unsigned integer value representing the combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags specified when this attribute instance was created.</source>
          <target state="translated">Pobiera wartość całkowitą bez znaku reprezentującą kombinację <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi określone podczas tworzenia wystąpienia tego atrybutu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.Flags">
          <source>An unsigned integer value representing a bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags.</source>
          <target state="translated">Wartość całkowitą bez znaku reprezentującą bitowe połączenie <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.Flags">
          <source>This property returns an integer for backward compatibility.</source>
          <target state="translated">Ta właściwość zwraca liczbę całkowitą dla zgodności z poprzednimi wersjami.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.Flags">
          <source>Cast the value to the <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> type before using it.</source>
          <target state="translated">Rzutowanie wartości <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> typu przed jego użyciem.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>