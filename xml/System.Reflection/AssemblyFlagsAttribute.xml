<Type Name="AssemblyFlagsAttribute" FullName="System.Reflection.AssemblyFlagsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b2e84d0a9bfb98ef4be9a8f6d8bf283f4215fc4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37473334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyFlagsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyFlagsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyFlagsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyFlagsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyFlagsAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AssemblyFlagsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4c8ab-101">Bitowa kombinacja Określa <see cref="T:System.Reflection.AssemblyNameFlags" /> flagi dla zestawu, zawierająca opis — opcje kompilatora just-in-time (JIT), czy zestaw jest przekierowań i czy ma pełny lub tokenami klucza publicznego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c8ab-101">Specifies a bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key.</span>
      </span>
      <span data-ttu-id="4c8ab-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c8ab-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c8ab-103"><xref:System.Reflection.AssemblyNameFlags> Wyliczenia w tym artykule opisano charakterystyki zestawu, które można ustawić za pomocą tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-103">The <xref:System.Reflection.AssemblyNameFlags> enumeration describes the assembly characteristics that can be set using this attribute.</span></span>  
  
 <span data-ttu-id="4c8ab-104">Aby uzyskać dostęp do flag, które zostały określone dla zestawu, należy użyć <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> właściwości w celu uzyskania <xref:System.Reflection.AssemblyName> obiektu, a następnie użyj <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> właściwości w celu uzyskania <xref:System.Reflection.AssemblyNameFlags> wartość.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-104">To access the flags that have been specified for an assembly, use the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> property to obtain an <xref:System.Reflection.AssemblyName> object, then use the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property to obtain an <xref:System.Reflection.AssemblyNameFlags> value.</span></span>  
  
 <span data-ttu-id="4c8ab-105">Aby określić <xref:System.Reflection.AssemblyNameFlags> Ustaw flagi dla zestawu dynamicznego <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> właściwość <xref:System.Reflection.AssemblyName> obiektu, który jest przekazywany do <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-105">To specify <xref:System.Reflection.AssemblyNameFlags> flags for a dynamic assembly, set the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> object that you pass to the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c8ab-106">Poniższy przykład kodu pokazuje sposób stosowania <xref:System.Reflection.AssemblyFlagsAttribute> do zestawu i jak odczytać flagi w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-106">The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time.</span></span> <span data-ttu-id="4c8ab-107">Przykład również tworzy wystąpienie atrybutu i używa <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> właściwość do wyświetlenia flag.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-107">The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags.</span></span> <span data-ttu-id="4c8ab-108">Aby uzyskać przykład sposobu stosowania <xref:System.Reflection.AssemblyFlagsAttribute> do zestawu dynamicznego, zobacz <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-108">For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.AssemblyNameFlags" />
    <altmember cref="Overload:System.Reflection.Assembly.GetName" />
    <altmember cref="P:System.Reflection.AssemblyName.Flags" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c8ab-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-109">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (int assemblyFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 assemblyFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(int assemblyFlags);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyFlagsAttribute : int -&gt; System.Reflection.AssemblyFlagsAttribute" Usage="new System.Reflection.AssemblyFlagsAttribute assemblyFlags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assemblyFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="assemblyFlags">
          <span data-ttu-id="4c8ab-110">Bitowa kombinacja <see cref="T:System.Reflection.AssemblyNameFlags" /> flag rzutowany jako liczbę całkowitą reprezentującą, just-in-time (JIT) — opcje kompilatora, trwałość, czy zestaw jest przekierowań i czy ma pełny lub tokenami klucza publicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-110">A bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags, cast as an integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c8ab-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> klas z określoną kombinacją <see cref="T:System.Reflection.AssemblyNameFlags" /> flagi, rzutowania w postaci liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-111">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> class with the specified combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags, cast as an integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c8ab-112">Ten konstruktor bez typu jest obecnie przestarzała.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-112">This untyped constructor is now obsolete.</span></span> <span data-ttu-id="4c8ab-113">Nie używać.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-113">Do not use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (System.Reflection.AssemblyNameFlags assemblyFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.AssemblyNameFlags assemblyFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyFlags As AssemblyNameFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(System::Reflection::AssemblyNameFlags assemblyFlags);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyFlagsAttribute : System.Reflection.AssemblyNameFlags -&gt; System.Reflection.AssemblyFlagsAttribute" Usage="new System.Reflection.AssemblyFlagsAttribute assemblyFlags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyFlags" Type="System.Reflection.AssemblyNameFlags" />
      </Parameters>
      <Docs>
        <param name="assemblyFlags">
          <span data-ttu-id="4c8ab-114">Bitowa kombinacja <see cref="T:System.Reflection.AssemblyNameFlags" /> flagi reprezentujący — opcje kompilatora just-in-time (JIT), trwałość, czy zestaw jest przekierowań i czy ma pełny lub tokenami klucza publicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-114">A bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c8ab-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> klas z określoną kombinacją <see cref="T:System.Reflection.AssemblyNameFlags" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-115">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> class with the specified combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4c8ab-116">Poniższy przykład kodu pokazuje sposób stosowania <xref:System.Reflection.AssemblyFlagsAttribute> do zestawu i jak odczytać flagi w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-116">The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time.</span></span> <span data-ttu-id="4c8ab-117">Przykład również tworzy wystąpienie atrybutu i używa <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> właściwość do wyświetlenia flag.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-117">The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags.</span></span> <span data-ttu-id="4c8ab-118">Aby uzyskać przykład sposobu stosowania <xref:System.Reflection.AssemblyFlagsAttribute> do zestawu dynamicznego, zobacz <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-118">For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (uint flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flags As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(System::UInt32 flags);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyFlagsAttribute : uint32 -&gt; System.Reflection.AssemblyFlagsAttribute" Usage="new System.Reflection.AssemblyFlagsAttribute flags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="flags" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="flags">
          <span data-ttu-id="4c8ab-119">Bitowa kombinacja <see cref="T:System.Reflection.AssemblyNameFlags" /> flag rzutowany jako wartości liczb całkowitych bez znaku, reprezentujący — opcje kompilatora just-in-time (JIT), trwałość, czy zestaw jest przekierowań i czy ma pełny lub tokenami klucza publicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-119">A bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags, cast as an unsigned integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c8ab-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> klas z określoną kombinacją <see cref="T:System.Reflection.AssemblyNameFlags" /> flag rzutowany jako wartości liczb całkowitych bez znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-120">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> class with the specified combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags, cast as an unsigned integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c8ab-121">Ten konstruktor bez typu jest obecnie przestarzała.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-121">This untyped constructor is now obsolete.</span></span> <span data-ttu-id="4c8ab-122">Nie używać.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-122">Do not use.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyFlags">
      <MemberSignature Language="C#" Value="public int AssemblyFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssemblyFlags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyFlags As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssemblyFlags { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyFlags : int" Usage="System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c8ab-123">Pobiera wartość całkowitą reprezentującą kombinacja <see cref="T:System.Reflection.AssemblyNameFlags" /> flagi określone podczas tworzenia tego wystąpienia atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-123">Gets an integer value representing the combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags specified when this attribute instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c8ab-124">Wartość całkowitą reprezentującą bitowa kombinacja <see cref="T:System.Reflection.AssemblyNameFlags" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-124">An integer value representing a bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c8ab-125">Ta właściwość zwraca liczbę całkowitą, zgodności z poprzednimi wersjami.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-125">This property returns an integer for backward compatibility.</span></span> <span data-ttu-id="4c8ab-126">Rzutuj wartość <xref:System.Reflection.AssemblyNameFlags> typu przed jego użyciem.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-126">Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c8ab-127">Poniższy przykład kodu pokazuje sposób stosowania <xref:System.Reflection.AssemblyFlagsAttribute> do zestawu i jak odczytać flagi w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-127">The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time.</span></span> <span data-ttu-id="4c8ab-128">Przykład również tworzy wystąpienie atrybutu i używa <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> właściwość do wyświetlenia flag.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-128">The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags.</span></span> <span data-ttu-id="4c8ab-129">Aby uzyskać przykład sposobu stosowania <xref:System.Reflection.AssemblyFlagsAttribute> do zestawu dynamicznego, zobacz <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-129">For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public uint Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyFlagsAttribute.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 Flags { System::UInt32 get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : uint32" Usage="System.Reflection.AssemblyFlagsAttribute.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Please use AssemblyFlags instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c8ab-130">Pobiera nieoznaczoną wartość całkowitą reprezentującą kombinacja <see cref="T:System.Reflection.AssemblyNameFlags" /> flagi określone podczas tworzenia tego wystąpienia atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-130">Gets an unsigned integer value representing the combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags specified when this attribute instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c8ab-131">Nieoznaczoną wartość całkowitą reprezentującą bitowa kombinacja <see cref="T:System.Reflection.AssemblyNameFlags" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c8ab-131">An unsigned integer value representing a bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c8ab-132">Ta właściwość zwraca liczbę całkowitą, zgodności z poprzednimi wersjami.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-132">This property returns an integer for backward compatibility.</span></span> <span data-ttu-id="4c8ab-133">Rzutuj wartość <xref:System.Reflection.AssemblyNameFlags> typu przed jego użyciem.</span><span class="sxs-lookup"><span data-stu-id="4c8ab-133">Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
  </Members>
</Type>