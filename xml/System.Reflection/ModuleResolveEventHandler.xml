<Type Name="ModuleResolveEventHandler" FullName="System.Reflection.ModuleResolveEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="233cdc9bc9fdbf9733eb698aef9189525d1868d4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36638591" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Module ModuleResolveEventHandler(object sender, ResolveEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ModuleResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ModuleResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ModuleResolveEventHandler(sender As Object, e As ResolveEventArgs) As Module " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Module ^ ModuleResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ModuleResolveEventHandler = delegate of obj * ResolveEventArgs -&gt; Module" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Module</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Zestaw, który był źródłem zdarzenia.</param>
    <param name="e">Argumenty dostarczony przez obiekt opisujący zdarzenia.</param>
    <summary>Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Reflection.Assembly.ModuleResolve" /> zdarzenie <see cref="T:System.Reflection.Assembly" />.</summary>
    <returns>Moduł, który spełnia żądania.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli moduł ładujący klasy wspólne środowiska wykonawczego języka nie można rozpoznać odwołania do wewnętrznego modułu zestawu za pomocą normalny sposób, to zdarzenie jest wywoływane. Dla tego obiektu delegowanego obsługi zdarzeń musi zlokalizować i zwracać moduł, który spełnia żądania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano kolejność wykonywania, w którym jest wywoływana procedura obsługi zdarzeń. W tym przykładzie Serwer1 jest zewnętrzny moduł klasy MySample.  
  
### <a name="to-compile-and-run-the-example"></a>Aby skompilować i uruchomić przykład  
  
1.  Otwórz okno wiersza polecenia i przejdź do katalogu zawierającego MySample.cs.  
  
2.  Kompiluj Serwer1 za pomocą następującego polecenia:  
  
    ```console  
    csc /out:subfolder\Server1.netmodule /t:module Server1.cs  
    ```  
  
3.  Kompiluj MySample za pomocą następującego polecenia:  
  
    ```console  
    csc /out:MySample.exe /t:exe /addmodule:subfolder\Server1.netmodule MySample.cs  
    ```  
  
4.  Run MySample.exe.  
  
> [!NOTE]
>  Plik modułu Server1.netmodule musi być w podkatalogu o nazwie "podfolder" w tym przykładzie działała poprawnie.  
  
 [!code-csharp[System.Reflection.ModuleResolveEventHandler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/mysample.cs#1)]  
[!code-csharp[System.Reflection.ModuleResolveEventHandler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/server1.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>