<Type Name="Binder" FullName="System.Reflection.Binder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42b4c18690d586a6a4c119f72306253c8b6ec5bd" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39975623" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Binder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Binder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Binder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binder abstract" />
  <TypeSignature Language="F#" Value="type Binder = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5f60d-101">Wybrany element członkowski z listy kandydatów, a wykonanie konwersji typu z rzeczywisty typ argumentu do typu argumentu formalnego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5f60d-101">Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f60d-102">Implementacje <xref:System.Reflection.Binder> klasy są używane przez metody takie jak <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, która wybiera zestaw elementów członkowskich możliwych do wykonania, na podstawie zestawu typy parametrów i wartości argumentu. <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, co spowoduje wybranie metody, w zależności od typów parametrów; i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="5f60d-102">Implementations of the <xref:System.Reflection.Binder> class are used by methods such as <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, which selects a method based on parameter types; and so on.</span></span>  
  
 <span data-ttu-id="5f60d-103">Domyślna implementacja klasy <xref:System.Reflection.Binder> klasy są dostarczane przez <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5f60d-103">A default implementation of the <xref:System.Reflection.Binder> class is provided by the <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f60d-104">W poniższym przykładzie implementuje i pokazuje wszystkie elementy członkowskie `Binder` klasy.</span><span class="sxs-lookup"><span data-stu-id="5f60d-104">The following example implements and demonstrates all members of the `Binder` class.</span></span> <span data-ttu-id="5f60d-105">Metoda prywatna `CanConvertFrom` znajdzie zgodne typy dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="5f60d-105">The private method `CanConvertFrom` finds compatible types for a given type.</span></span>  
  
 [!code-cpp[Binder_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Binder_1/CPP/binder.cpp#1)]
 [!code-csharp[Binder_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Binder_1/CS/binder.cs#1)]
 [!code-vb[Binder_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Binder_1/VB/binder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="5f60d-106">
        <para>Przy dziedziczeniu z <see cref="T:System.Reflection.Binder" />, konieczne jest przesłonięcie następujących składowych: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, i <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="5f60d-106">
          <para>When you inherit from <see cref="T:System.Reflection.Binder" />, you must override the following members: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, and <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f60d-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.Binder" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-107">Initializes a new instance of the <see cref="T:System.Reflection.Binder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f60d-108">Ten konstruktor jest wywoływany przez konstruktory klas pochodnych, zainicjować stanu, w tym typie.</span><span class="sxs-lookup"><span data-stu-id="5f60d-108">This constructor is called by the constructors of derived classes, to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToField">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo BindToField(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.FieldInfo[] match, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToField (bindingAttr As BindingFlags, match As FieldInfo(), value As Object, culture As CultureInfo) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::FieldInfo ^ BindToField(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ match, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member BindToField : System.Reflection.BindingFlags * System.Reflection.FieldInfo[] * obj * System.Globalization.CultureInfo -&gt; System.Reflection.FieldInfo" Usage="binder.BindToField (bindingAttr, match, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="5f60d-109">Bitowa kombinacja <see cref="T:System.Reflection.BindingFlags" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-109">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="5f60d-110">Zestaw pól, które są kandydatami do dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-110">The set of fields that are candidates for matching.</span>
          </span>
          <span data-ttu-id="5f60d-111">Na przykład, gdy <see cref="T:System.Reflection.Binder" /> obiekt jest używany przez <see cref="Overload:System.Type.InvokeMember" />, ten parametr określa zestaw pól, które stwierdził, że odbicie jest możliwe jest zgodny, zwykle ponieważ mają one nazwy poprawne elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-111">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="5f60d-112">Domyślna implementacja dostarczone przez <see cref="P:System.Type.DefaultBinder" /> zmienia kolejność tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-112">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5f60d-113">Wartość pola używane do lokalizowania pasujące pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-113">The field value used to locate a matching field.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5f60d-114">Wystąpienie <see cref="T:System.Globalization.CultureInfo" /> , jest używane do kontrolowania wymuszanie typów danych w implementacji integratorów modeli, które wymuszone typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-114">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span>
          </span>
          <span data-ttu-id="5f60d-115">Jeśli <c>kultury</c> jest <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> dla bieżącego wątku jest używana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-115">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="5f60d-116">Uwaga na przykład jeśli implementację integratora umożliwia przekształcenie wartości ciągu na typy liczbowe, ten parametr jest niezbędne przekonwertować <see langword="String" /> reprezentujący 1000- <see langword="Double" /> wartości, ponieważ 1000 jest reprezentowana w inny sposób przez różnych kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-116">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="5f60d-117">Domyślny integrator nie są takie coercions ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-117">The default binder does not do such string coercions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f60d-118">Wybiera pola z danego zestawu pól, w oparciu o określone kryteria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-118">Selects a field from the given set of fields, based on the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f60d-119">Pasujące pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-119">The matching field.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f60d-120">Jeśli `bindingAttr` nie obejmuje <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, domyślną implementację integratora dostarczone przez <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> po prostu zwraca pierwszy element `match`.</span><span class="sxs-lookup"><span data-stu-id="5f60d-120">If `bindingAttr` does not include <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, the default binder implementation provided by <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> simply returns the first element of `match`.</span></span> <span data-ttu-id="5f60d-121">Brak zaznaczenia to zrobić.</span><span class="sxs-lookup"><span data-stu-id="5f60d-121">No selection is done.</span></span>  
  
 <span data-ttu-id="5f60d-122">Ta metoda określa powiązania dostarczane przez <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5f60d-122">This method controls the binding provided by <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="5f60d-123">Dla domyślnego integratora <paramref name="bindingAttr" /> obejmuje <see cref="F:System.Reflection.BindingFlags.SetField" />, i <paramref name="match" /> zawiera kilka pól, które są równie dobre dopasowań dla <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-123">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains multiple fields that are equally good matches for <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="5f60d-124">Na przykład <paramref name="value" /> zawiera <c>MyClass</c> obiekt, który implementuje <c>IMyClass</c> interfejsu, a <paramref name="match" /> zawiera pole o typie <c>MyClass</c> i pole typu <c>IMyClass</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-124">For example, <paramref name="value" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a field of type <c>MyClass</c> and a field of type <c>IMyClass</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingFieldException">
          <span data-ttu-id="5f60d-125">Dla domyślnego integratora <paramref name="bindingAttr" /> obejmuje <see cref="F:System.Reflection.BindingFlags.SetField" />, i <paramref name="match" /> nie zawiera żadnych pól może akceptować <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-125">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains no fields that can accept <paramref name="value" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="5f60d-126">Dla domyślnego integratora <paramref name="bindingAttr" /> obejmuje <see cref="F:System.Reflection.BindingFlags.SetField" />, i <paramref name="match" /> jest <see langword="null" /> lub pusta tablica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-126">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
          <span data-ttu-id="5f60d-127">- lub - <paramref name="bindingAttr" /> obejmuje <see cref="F:System.Reflection.BindingFlags.SetField" />, i <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-127">-or-  <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="BindToMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase BindToMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, object[]&amp; args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] names, [out] object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToMethod (bindingAttr As BindingFlags, match As MethodBase(), ByRef args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, names As String(), ByRef state As Object) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ BindToMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;System::Object ^&gt; ^ % args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ names, [Runtime::InteropServices::Out] System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member BindToMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] *  * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] *  -&gt; System.Reflection.MethodBase" Usage="binder.BindToMethod (bindingAttr, match, args, modifiers, culture, names, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="5f60d-128">Bitowa kombinacja <see cref="T:System.Reflection.BindingFlags" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-128">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="5f60d-129">Zestaw metod, które są kandydatami do dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-129">The set of methods that are candidates for matching.</span>
          </span>
          <span data-ttu-id="5f60d-130">Na przykład, gdy <see cref="T:System.Reflection.Binder" /> obiekt jest używany przez <see cref="Overload:System.Type.InvokeMember" />, ten parametr określa zestaw metod, które stwierdził, że odbicie jest możliwe jest zgodny, zwykle ponieważ mają one nazwy poprawne elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-130">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="5f60d-131">Domyślna implementacja dostarczone przez <see cref="P:System.Type.DefaultBinder" /> zmienia kolejność tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-131">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="5f60d-132">Argumenty, które są przekazywane w.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-132">The arguments that are passed in.</span>
          </span>
          <span data-ttu-id="5f60d-133">Obiekt wiążący można zmienić kolejność argumentów w tej tablicy; na przykład domyślny integrator zmienia kolejność argumentów, jeśli <c>nazwy</c> parametr jest używany do określenia kolejności niż kolejność pozycyjnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-133">The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <c>names</c> parameter is used to specify an order other than positional order.</span>
          </span>
          <span data-ttu-id="5f60d-134">Jeśli implementację integratora przekształca wynik dane typy argumentów, typy i wartości argumentów można także zmienić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-134">If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="5f60d-135">Tablica parametrów modyfikatory, umożliwiające powiązanie działało z podpisami parametru, w których typy zostały zmodyfikowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-135">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
          <span data-ttu-id="5f60d-136">Domyślna implementacja integrator nie używać tego parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-136">The default binder implementation does not use this parameter.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5f60d-137">Wystąpienie <see cref="T:System.Globalization.CultureInfo" /> , jest używane do kontrolowania wymuszanie typów danych w implementacji integratorów modeli, które wymuszone typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-137">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span>
          </span>
          <span data-ttu-id="5f60d-138">Jeśli <c>kultury</c> jest <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> dla bieżącego wątku jest używana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-138">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="5f60d-139">Uwaga na przykład jeśli implementację integratora umożliwia przekształcenie wartości ciągu na typy liczbowe, ten parametr jest niezbędne przekonwertować <see langword="String" /> reprezentujący 1000- <see langword="Double" /> wartości, ponieważ 1000 jest reprezentowana w inny sposób przez różnych kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-139">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="5f60d-140">Domyślny integrator nie są takie coercions ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-140">The default binder does not do such string coercions.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="5f60d-141">Nazwy parametrów, należy wziąć pod uwagę podczas dopasowywania, jeśli nazwy parametrów lub <see langword="null" /> Jeśli argumenty mają być traktowane jako czysto pozycyjnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-141">The parameter names, if parameter names are to be considered when matching, or <see langword="null" /> if arguments are to be treated as purely positional.</span>
          </span>
          <span data-ttu-id="5f60d-142">Na przykład nazwy parametrów należy użyć, jeśli nie podano argumentów w porządku pozycyjnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-142">For example, parameter names must be used if arguments are not supplied in positional order.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="5f60d-143">Po powrocie z metody <c>stanu</c> zawiera obiekt dostarczane przez obiekt wiążący, który śledzi zmiany kolejności argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-143">After the method returns, <c>state</c> contains a binder-provided object that keeps track of argument reordering.</span>
          </span>
          <span data-ttu-id="5f60d-144">Obiekt wiążący tworzy tego obiektu i obiekt wiążący jest jedynym konsumenta tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-144">The binder creates this object, and the binder is the sole consumer of this object.</span>
          </span>
          <span data-ttu-id="5f60d-145">Jeśli <c>stanu</c> nie jest <see langword="null" /> podczas <see langword="BindToMethod" /> zwróci wartość, należy przekazać <c>stanu</c> do <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> metody, jeśli chcesz przywrócić <c>args</c> z jej oryginalną kolejność, na przykład, tak że można pobrać wartości <see langword="ref" /> parametrów (<see langword="ByRef" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-145">If <c>state</c> is not <see langword="null" /> when <see langword="BindToMethod" /> returns, you must pass <c>state</c> to the <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> method if you want to restore <c>args</c> to its original order, for example, so that you can retrieve the values of <see langword="ref" /> parameters (<see langword="ByRef" /> parameters in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f60d-146">Wybiera metody do wywołania z danego zestawu metod, w oparciu o podanych argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-146">Selects a method to invoke from the given set of methods, based on the supplied arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f60d-147">Metody dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-147">The matching method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f60d-148">Domyślny integrator uwzględnia oba parametry, które mają wartości i `params` tablic (`ParamArray` tablic w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="5f60d-148">The default binder takes into account both parameters that have values and `params` arrays (`ParamArray` arrays in Visual Basic).</span></span> <span data-ttu-id="5f60d-149">Dlatego jest możliwe znalezienie dopasowania w przypadkach, gdzie `args` i `match` nie zawierać taką samą liczbę elementów.</span><span class="sxs-lookup"><span data-stu-id="5f60d-149">Thus, it is possible to find a match in cases where `args` and `match` do not contain the same number of elements.</span></span>  
  
 <span data-ttu-id="5f60d-150">Obiekt wiążący umożliwia klientowi mapy tablica argumentów do ich oryginalnej formie, jeśli tablica argumentów ma zostać manipulowane przez <xref:System.Reflection.Binder.BindToMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f60d-150">The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by <xref:System.Reflection.Binder.BindToMethod%2A>.</span></span> <span data-ttu-id="5f60d-151">Aby wrócić argumentów przez odwołanie, gdy taki argumentów jest obecne, należy używać tej możliwości ponownego mapowania.</span><span class="sxs-lookup"><span data-stu-id="5f60d-151">Use this remap capability to get back by-reference arguments when such arguments are present.</span></span> <span data-ttu-id="5f60d-152">Gdy argument jest przekazywany przez nazwę obiektu wiążącego zmienia kolejność tablica argumentów.</span><span class="sxs-lookup"><span data-stu-id="5f60d-152">When you pass arguments by name, the binder reorders the argument array.</span></span> <span data-ttu-id="5f60d-153">`state` Parametru śledzi informacje o argument zmiany kolejności, umożliwiając w ten sposób integratora <xref:System.Reflection.Binder.ReorderArgumentArray%2A> metodę, aby zmienić kolejność tablica argumentów do ich oryginalnej postaci.</span><span class="sxs-lookup"><span data-stu-id="5f60d-153">The `state` parameter keeps track of argument reordering, thus enabling the binder's <xref:System.Reflection.Binder.ReorderArgumentArray%2A> method to reorder the argument array to its original form.</span></span>  
  
 <span data-ttu-id="5f60d-154"><xref:System.Reflection.Binder.BindToMethod%2A> Metoda jest używana przez <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="5f60d-154">The <xref:System.Reflection.Binder.BindToMethod%2A> method is used by the <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="5f60d-155">Dla domyślnego integratora <paramref name="match" /> zawiera wiele metod, które są równie dobre dopasowań dla <paramref name="args" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-155">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for <paramref name="args" />.</span>
          </span>
          <span data-ttu-id="5f60d-156">Na przykład <paramref name="args" /> zawiera <c>MyClass</c> obiekt, który implementuje <c>IMyClass</c> interfejsu, a <paramref name="match" /> zawiera metody, która przyjmuje <c>MyClass</c> i metody, która przyjmuje <c>IMyClass</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-156">For example, <paramref name="args" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a method that takes <c>MyClass</c> and a method that takes <c>IMyClass</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="5f60d-157">Dla domyślnego integratora <paramref name="match" /> zawiera nie metod, których można zaakceptować argumenty dostarczone w <paramref name="args" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-157">For the default binder, <paramref name="match" /> contains no methods that can accept the arguments supplied in <paramref name="args" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f60d-158">Dla domyślnego integratora <paramref name="match" /> jest <see langword="null" /> lub pusta tablica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-158">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.MethodBase" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeType">
      <MemberSignature Language="C#" Value="public virtual bool CanChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.CanChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool&#xA;override this.CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool" Usage="binder.CanChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="type">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Globalization.CultureInfo -&gt; obj" Usage="binder.ChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5f60d-159">Obiekt, aby zmienić do nowego <see langword="Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-159">The object to change into a new <see langword="Type" />.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="5f60d-160">Nowy <see langword="Type" /> , <c>wartość</c> staną się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-160">The new <see langword="Type" /> that <c>value</c> will become.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5f60d-161">Wystąpienie <see cref="T:System.Globalization.CultureInfo" /> , jest używane do kontrolowania wymuszanie typów danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-161">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types.</span>
          </span>
          <span data-ttu-id="5f60d-162">Jeśli <c>kultury</c> jest <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> dla bieżącego wątku jest używana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-162">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="5f60d-163">Uwaga na przykład, ten parametr jest niezbędne przekonwertować <see langword="String" /> reprezentujący 1000- <see langword="Double" /> wartości, ponieważ 1000 jest reprezentowana w inny sposób przez różnych kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-163">Note   For example, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f60d-164">Zmienia typ danego <see langword="Object" /> do danego <see langword="Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-164">Changes the type of the given <see langword="Object" /> to the given <see langword="Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f60d-165">Obiekt, który zawiera podanej wartości jako nowego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-165">An object that contains the given value as the new type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f60d-166">Odbicie modeli reguły ułatwień dostępu wspólny system typów.</span><span class="sxs-lookup"><span data-stu-id="5f60d-166">Reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="5f60d-167">Na przykład jeśli obiekt wywołujący znajduje się w tym samym zestawie, obiekt wywołujący nie potrzebne żadne specjalne uprawnienia dla wewnętrznych składowych.</span><span class="sxs-lookup"><span data-stu-id="5f60d-167">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="5f60d-168">W przeciwnym razie wywołujący musi mieć <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="5f60d-168">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="5f60d-169">Jest to zgodne z wyszukiwania elementów członkowskich, które są chronione, prywatne i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="5f60d-169">This is consistent with lookup of members that are protected, private, and so on.</span></span>  
  
 <span data-ttu-id="5f60d-170">Ogólną zasadą jest fakt, że `ChangeType` należy wykonać tylko rozszerzanie coercions, które nigdy nie utracą danych.</span><span class="sxs-lookup"><span data-stu-id="5f60d-170">The general principle is that `ChangeType` should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="5f60d-171">Przykładem rozszerzającą wymuszenia jest coercing wartość całkowita 32-bitowa wartość całkowita 64-bitowych.</span><span class="sxs-lookup"><span data-stu-id="5f60d-171">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="5f60d-172">Jest to odróżnić od zawężające wymuszenia, która może spowodować utratę danych.</span><span class="sxs-lookup"><span data-stu-id="5f60d-172">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="5f60d-173">Przykładem zawężające wymuszenia jest coercing całkowita 64-bitowego do 32-bitowych całkowita.</span><span class="sxs-lookup"><span data-stu-id="5f60d-173">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="5f60d-174">W poniższej tabeli wymieniono coercions domyślnie przeprowadzane `ChangeType`.</span><span class="sxs-lookup"><span data-stu-id="5f60d-174">The following table lists the coercions performed by the default `ChangeType`.</span></span>  
  
|<span data-ttu-id="5f60d-175">Typ źródła</span><span class="sxs-lookup"><span data-stu-id="5f60d-175">Source type</span></span>|<span data-ttu-id="5f60d-176">Typ docelowy</span><span class="sxs-lookup"><span data-stu-id="5f60d-176">Target type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="5f60d-177">Dowolnego typu</span><span class="sxs-lookup"><span data-stu-id="5f60d-177">Any type</span></span>|<span data-ttu-id="5f60d-178">Jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="5f60d-178">Its base type.</span></span>|  
|<span data-ttu-id="5f60d-179">Dowolnego typu</span><span class="sxs-lookup"><span data-stu-id="5f60d-179">Any type</span></span>|<span data-ttu-id="5f60d-180">Interfejs, który implementuje.</span><span class="sxs-lookup"><span data-stu-id="5f60d-180">The interface it implements.</span></span>|  
|<span data-ttu-id="5f60d-181">Char</span><span class="sxs-lookup"><span data-stu-id="5f60d-181">Char</span></span>|<span data-ttu-id="5f60d-182">UInt16, UInt32, Int32, UInt64, Int64, pojedynczy Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-182">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="5f60d-183">Byte</span><span class="sxs-lookup"><span data-stu-id="5f60d-183">Byte</span></span>|<span data-ttu-id="5f60d-184">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, pojedynczy Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-184">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="5f60d-185">SByte</span><span class="sxs-lookup"><span data-stu-id="5f60d-185">SByte</span></span>|<span data-ttu-id="5f60d-186">Int16, Int32, Int64, pojedynczy Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-186">Int16, Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="5f60d-187">UInt16</span><span class="sxs-lookup"><span data-stu-id="5f60d-187">UInt16</span></span>|<span data-ttu-id="5f60d-188">UInt32, Int32, UInt64, Int64, pojedynczy Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-188">UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="5f60d-189">Int16</span><span class="sxs-lookup"><span data-stu-id="5f60d-189">Int16</span></span>|<span data-ttu-id="5f60d-190">Int32, Int64, pojedynczy Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-190">Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="5f60d-191">UInt32</span><span class="sxs-lookup"><span data-stu-id="5f60d-191">UInt32</span></span>|<span data-ttu-id="5f60d-192">UInt64, Int64, pojedynczy Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-192">UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="5f60d-193">Int32</span><span class="sxs-lookup"><span data-stu-id="5f60d-193">Int32</span></span>|<span data-ttu-id="5f60d-194">Int64, jeden dwukrotnie</span><span class="sxs-lookup"><span data-stu-id="5f60d-194">Int64, Single, Double</span></span>|  
|<span data-ttu-id="5f60d-195">UInt64</span><span class="sxs-lookup"><span data-stu-id="5f60d-195">UInt64</span></span>|<span data-ttu-id="5f60d-196">Pojedynczy Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-196">Single, Double</span></span>|  
|<span data-ttu-id="5f60d-197">Int64</span><span class="sxs-lookup"><span data-stu-id="5f60d-197">Int64</span></span>|<span data-ttu-id="5f60d-198">Pojedynczy Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-198">Single, Double</span></span>|  
|<span data-ttu-id="5f60d-199">Single</span><span class="sxs-lookup"><span data-stu-id="5f60d-199">Single</span></span>|<span data-ttu-id="5f60d-200">Double</span><span class="sxs-lookup"><span data-stu-id="5f60d-200">Double</span></span>|  
|<span data-ttu-id="5f60d-201">Non-reference</span><span class="sxs-lookup"><span data-stu-id="5f60d-201">Non-reference</span></span>|<span data-ttu-id="5f60d-202">Przez odwołanie.</span><span class="sxs-lookup"><span data-stu-id="5f60d-202">By-reference.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderArgumentArray">
      <MemberSignature Language="C#" Value="public abstract void ReorderArgumentArray (ref object[] args, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReorderArgumentArray(object[]&amp; args, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReorderArgumentArray (ByRef args As Object(), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReorderArgumentArray(cli::array &lt;System::Object ^&gt; ^ % args, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member ReorderArgumentArray :  * obj -&gt; unit" Usage="binder.ReorderArgumentArray (args, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="5f60d-203">Rzeczywiste argumenty, które są przekazywane w.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-203">The actual arguments that are passed in.</span>
          </span>
          <span data-ttu-id="5f60d-204">Można zmienić typy i wartości argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-204">Both the types and values of the arguments can be changed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="5f60d-205">Obiekt integratora — pod warunkiem, która śledzi zmiany kolejności argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-205">A binder-provided object that keeps track of argument reordering.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f60d-206">Po powrocie z <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, przywraca <paramref name="args" /> argument do chwili, z którego pochodzi <see langword="BindToMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-206">Upon returning from <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, restores the <paramref name="args" /> argument to what it was when it came from <see langword="BindToMethod" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f60d-207">Środowisko uruchomieniowe języka wspólnego wywołuje tę metodę, jeśli `state` nie `null` po powrocie z `BindToMethod`.</span><span class="sxs-lookup"><span data-stu-id="5f60d-207">The common language runtime calls this method if `state` is not `null` after a return from `BindToMethod`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase SelectMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectMethod (bindingAttr As BindingFlags, match As MethodBase(), types As Type(), modifiers As ParameterModifier()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ SelectMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodBase" Usage="binder.SelectMethod (bindingAttr, match, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="5f60d-208">Bitowa kombinacja <see cref="T:System.Reflection.BindingFlags" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-208">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="5f60d-209">Zestaw metod, które są kandydatami do dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-209">The set of methods that are candidates for matching.</span>
          </span>
          <span data-ttu-id="5f60d-210">Na przykład, gdy <see cref="T:System.Reflection.Binder" /> obiekt jest używany przez <see cref="Overload:System.Type.InvokeMember" />, ten parametr określa zestaw metod, które stwierdził, że odbicie jest możliwe jest zgodny, zwykle ponieważ mają one nazwy poprawne elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-210">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="5f60d-211">Domyślna implementacja dostarczone przez <see cref="P:System.Type.DefaultBinder" /> zmienia kolejność tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-211">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="5f60d-212">Typy parametrów, używana do lokalizowania metody dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-212">The parameter types used to locate a matching method.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="5f60d-213">Tablica parametrów modyfikatory, umożliwiające powiązanie działało z podpisami parametru, w których typy zostały zmodyfikowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-213">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f60d-214">Wybiera metodę z danego zestawu metod, w oparciu o typ argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-214">Selects a method from the given set of methods, based on the argument type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f60d-215">Metody, dopasowania, jeśli znaleziono; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-215">The matching method, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f60d-216">Ta metoda powinna zwracać `null` Jeśli żadna metoda spełnia kryteria.</span><span class="sxs-lookup"><span data-stu-id="5f60d-216">This method should return `null` if no method matches the criteria.</span></span> <span data-ttu-id="5f60d-217">Ta metoda określa wyboru dokonanego przez `GetConstructor` i `GetMethod` metod `Type`.</span><span class="sxs-lookup"><span data-stu-id="5f60d-217">This method controls the selection provided by the `GetConstructor` and `GetMethod` methods on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="5f60d-218">Dla domyślnego integratora <paramref name="match" /> zawiera wiele metod, które są równie dobre dopasowań dla typów parametrów opisanego przez <paramref name="types" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-218">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for the parameter types described by <paramref name="types" />.</span>
          </span>
          <span data-ttu-id="5f60d-219">Na przykład tablicy <paramref name="types" /> zawiera <see cref="T:System.Type" /> dla obiektu <c>MyClass</c> i tablicy <paramref name="match" /> zawiera metody, która przyjmuje jako klasa bazowa <c>MyClass</c> i metody, która przyjmuje interfejs, <c>MyClass</c> implementuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-219">For example, the array in <paramref name="types" /> contains a <see cref="T:System.Type" /> object for <c>MyClass</c> and the array in <paramref name="match" /> contains a method that takes a base class of <c>MyClass</c> and a method that takes an interface that <c>MyClass</c> implements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f60d-220">Dla domyślnego integratora <paramref name="match" /> jest <see langword="null" /> lub pusta tablica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-220">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
          <span data-ttu-id="5f60d-221">- lub - element <paramref name="types" /> pochodzi od klasy <see cref="T:System.Type" />, ale nie jest typu <see langword="RuntimeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-221">-or-  An element of <paramref name="types" /> derives from <see cref="T:System.Type" />, but is not of type <see langword="RuntimeType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectProperty">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo SelectProperty(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] indexes, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectProperty (bindingAttr As BindingFlags, match As PropertyInfo(), returnType As Type, indexes As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::PropertyInfo ^ SelectProperty(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ match, Type ^ returnType, cli::array &lt;Type ^&gt; ^ indexes, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectProperty : System.Reflection.BindingFlags * System.Reflection.PropertyInfo[] * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="binder.SelectProperty (bindingAttr, match, returnType, indexes, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="indexes" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="5f60d-222">Bitowa kombinacja <see cref="T:System.Reflection.BindingFlags" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-222">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="5f60d-223">Zbiór właściwości, które są kandydatami do dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-223">The set of properties that are candidates for matching.</span>
          </span>
          <span data-ttu-id="5f60d-224">Na przykład, gdy <see cref="T:System.Reflection.Binder" /> obiekt jest używany przez <see cref="Overload:System.Type.InvokeMember" />, ten parametr określa zestaw właściwości, które stwierdził, że odbicie jest możliwe jest zgodny, zwykle ponieważ mają one nazwy poprawne elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-224">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="5f60d-225">Domyślna implementacja dostarczone przez <see cref="P:System.Type.DefaultBinder" /> zmienia kolejność tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-225">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="5f60d-226">Musi mieć wartość zwracaną dopasowania właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-226">The return value the matching property must have.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="5f60d-227">Typy indeks właściwości wyszukane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-227">The index types of the property being searched for.</span>
          </span>
          <span data-ttu-id="5f60d-228">Używane dla właściwości indeksu, takie jak indeksatora dla klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-228">Used for index properties such as the indexer for a class.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="5f60d-229">Tablica parametrów modyfikatory, umożliwiające powiązanie działało z podpisami parametru, w których typy zostały zmodyfikowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-229">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f60d-230">Wybiera właściwości z danego zestawu właściwości, w oparciu o określone kryteria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-230">Selects a property from the given set of properties, based on the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f60d-231">Właściwość dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-231">The matching property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f60d-232">Ta metoda określa wyboru dokonanego przez `GetProperty` metody `Type`.</span><span class="sxs-lookup"><span data-stu-id="5f60d-232">This method controls the selection provided by the `GetProperty` method on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="5f60d-233">Dla domyślnego integratora <paramref name="match" /> zawiera wiele właściwości, które są równie dobre dopasowań dla <paramref name="returnType" /> i <paramref name="indexes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-233">For the default binder, <paramref name="match" /> contains multiple properties that are equally good matches for <paramref name="returnType" /> and <paramref name="indexes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f60d-234">Dla domyślnego integratora <paramref name="match" /> jest <see langword="null" /> lub pusta tablica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f60d-234">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.PropertyInfo" />
      </Docs>
    </Member>
  </Members>
</Type>