<Type Name="ExceptionHandlingClause" FullName="System.Reflection.ExceptionHandlingClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d08fc149655eb6d2d9957f8578c1564c411aa4cd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36543233" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExceptionHandlingClause" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit ExceptionHandlingClause extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ExceptionHandlingClause" />
  <TypeSignature Language="VB.NET" Value="Public Class ExceptionHandlingClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionHandlingClause" />
  <TypeSignature Language="F#" Value="type ExceptionHandlingClause = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="35468-101">Reprezentuje klauzuli strukturalnego bloku obsługi wyjątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35468-101">Represents a clause in a structured exception-handling block.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35468-102"><xref:System.Reflection.ExceptionHandlingClause> Klasa dostarcza informacji na temat klauzul `try`... `catch`...`finally`</span><span class="sxs-lookup"><span data-stu-id="35468-102">The <xref:System.Reflection.ExceptionHandlingClause> class provides information about the clauses in a `try`…`catch`…`finally`</span></span> <span data-ttu-id="35468-103">blok (`Try`... `Catch`...`Finally`</span><span class="sxs-lookup"><span data-stu-id="35468-103">block (`Try`…`Catch`…`Finally`</span></span> <span data-ttu-id="35468-104">w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="35468-104">in Visual Basic).</span></span> <span data-ttu-id="35468-105">Aby uzyskać listę klauzule obsługi wyjątków w metodzie, należy uzyskać <xref:System.Reflection.MethodInfo> reprezentujący metodę.</span><span class="sxs-lookup"><span data-stu-id="35468-105">To get a list of exception-handling clauses in a method, obtain a <xref:System.Reflection.MethodInfo> that represents the method.</span></span> <span data-ttu-id="35468-106">Użyj <xref:System.Reflection.MethodBase.GetMethodBody%2A> metodę, aby uzyskać <xref:System.Reflection.MethodBody> obiekt, a następnie użyj <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> właściwość, aby uzyskać listę klauzul.</span><span class="sxs-lookup"><span data-stu-id="35468-106">Use the <xref:System.Reflection.MethodBase.GetMethodBody%2A> method to obtain a <xref:System.Reflection.MethodBody> object, and then use the <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property to get the list of clauses.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-107">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy metadanych i formatów instrukcji języka pośredniego (MSIL) firmy Microsoft.</span><span class="sxs-lookup"><span data-stu-id="35468-107">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="35468-108">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</span><span class="sxs-lookup"><span data-stu-id="35468-108">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="35468-109">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="35468-109">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35468-110">Poniższy przykładowy kod definiuje metodę testu o nazwie `MethodBodyExample`i wyświetla jego informacje o zmiennych lokalnych i klauzule obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="35468-110">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="35468-111"><xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> Metoda jest używana do uzyskania <xref:System.Reflection.MethodBody> obiektu dla metody testowej.</span><span class="sxs-lookup"><span data-stu-id="35468-111">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="35468-112"><xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> Właściwość jest używana do uzyskiwania listy <xref:System.Reflection.ExceptionHandlingClause> obiekty i wyświetlania ich właściwości.</span><span class="sxs-lookup"><span data-stu-id="35468-112">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
 <span data-ttu-id="35468-113">Ildasm.exe służy do sprawdzenia MSIL na przykład skompilowany kod, aby zobaczyć, jak są obliczane przesunięcia i długości.</span><span class="sxs-lookup"><span data-stu-id="35468-113">You can use Ildasm.exe to examine the MSIL for the compiled code example, to see how the offsets and lengths are calculated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-114">Nie wszystkie języki komputer może generować <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> klauzul.</span><span class="sxs-lookup"><span data-stu-id="35468-114">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="35468-115">Przykład Visual Basic zawiera klauzulę filtru, za pomocą języka Visual Basic `When` wyrażenia, który został pominięty w przykładach dla innych języków.</span><span class="sxs-lookup"><span data-stu-id="35468-115">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="35468-116">Ten kod jest częścią większego przykładu znajduje się w <xref:System.Reflection.MethodBody> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="35468-116">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.MethodBody" />
    <altmember cref="P:System.Reflection.MethodBody.ExceptionHandlingClauses" />
    <altmember cref="T:System.Reflection.ExceptionHandlingClauseOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExceptionHandlingClause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ExceptionHandlingClause.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExceptionHandlingClause();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35468-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.ExceptionHandlingClause" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-117">Initializes a new instance of the <see cref="T:System.Reflection.ExceptionHandlingClause" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35468-118">Ten konstruktor jest wywoływany przez klas pochodnych podczas budowy <xref:System.Reflection.ExceptionHandlingClause> obiektów.</span><span class="sxs-lookup"><span data-stu-id="35468-118">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.ExceptionHandlingClause> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchType">
      <MemberSignature Language="C#" Value="public virtual Type CatchType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CatchType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.CatchType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CatchType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ CatchType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatchType : Type" Usage="System.Reflection.ExceptionHandlingClause.CatchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35468-119">Pobiera typ wyjątku, obsługiwane przez klauzulę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-119">Gets the type of exception handled by this clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35468-120">A <see cref="T:System.Type" /> obiekt, który reprezentuje tego typu wyjątku obsługiwane przez tę klauzulę lub <see langword="null" /> Jeśli <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> właściwość jest <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" /> lub <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Finally" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-120">A <see cref="T:System.Type" /> object that represents that type of exception handled by this clause, or <see langword="null" /> if the <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> property is <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" /> or <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Finally" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="35468-121">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy metadanych i formatów instrukcji języka pośredniego (MSIL) firmy Microsoft.</span><span class="sxs-lookup"><span data-stu-id="35468-121">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="35468-122">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</span><span class="sxs-lookup"><span data-stu-id="35468-122">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="35468-123">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="35468-123">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35468-124">Poniższy przykładowy kod definiuje metodę testu o nazwie `MethodBodyExample`i wyświetla jego informacje o zmiennych lokalnych i klauzule obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="35468-124">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="35468-125"><xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> Metoda jest używana do uzyskania <xref:System.Reflection.MethodBody> obiektu dla metody testowej.</span><span class="sxs-lookup"><span data-stu-id="35468-125">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="35468-126"><xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> Właściwość jest używana do uzyskiwania listy <xref:System.Reflection.ExceptionHandlingClause> obiekty i wyświetlania ich właściwości.</span><span class="sxs-lookup"><span data-stu-id="35468-126">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-127">Nie wszystkie języki komputer może generować <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> klauzul.</span><span class="sxs-lookup"><span data-stu-id="35468-127">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="35468-128">Przykład Visual Basic zawiera klauzulę filtru, za pomocą języka Visual Basic `When` wyrażenia, który został pominięty w przykładach dla innych języków.</span><span class="sxs-lookup"><span data-stu-id="35468-128">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="35468-129">Ten kod jest częścią większego przykładu znajduje się w <xref:System.Reflection.MethodBody> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="35468-129">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35468-130">Nieprawidłowe użycie właściwości bieżącego stanu obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-130">Invalid use of property for the object's current state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FilterOffset">
      <MemberSignature Language="C#" Value="public virtual int FilterOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.FilterOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FilterOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FilterOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterOffset : int" Usage="System.Reflection.ExceptionHandlingClause.FilterOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35468-131">Pobiera przesunięcie w treści metody w bajtach kod filtru dostarczone przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-131">Gets the offset within the method body, in bytes, of the user-supplied filter code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35468-132">Przesunięcie w treści metody, w bajtach kod filtru dostarczone przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-132">The offset within the method body, in bytes, of the user-supplied filter code.</span>
          </span>
          <span data-ttu-id="35468-133">Wartość tej właściwości nie ma znaczenia jeśli <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> właściwość ma żadnej wartości innych niż <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-133">The value of this property has no meaning if the <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> property has any value other than <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35468-134">Klauzula filtru zawiera język pośredni suppliedMicrosoft użytkownika (MSIL), który określa, czy wyjątek jest obsługiwany przez tę klauzulę.</span><span class="sxs-lookup"><span data-stu-id="35468-134">A filter clause contains user-suppliedMicrosoft intermediate language (MSIL) that determines whether an exception is handled by this clause.</span></span> <span data-ttu-id="35468-135">Na przykład klauzuli zawierający Visual Basic `When` — słowo kluczowe jest <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> klauzuli.</span><span class="sxs-lookup"><span data-stu-id="35468-135">For example, any clause containing the Visual Basic `When` keyword is a <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clause.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-136">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy formatów instrukcja MSIL i metadanych.</span><span class="sxs-lookup"><span data-stu-id="35468-136">Working with exception-handling clauses requires a thorough understanding of metadata and MSIL instruction formats.</span></span> <span data-ttu-id="35468-137">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</span><span class="sxs-lookup"><span data-stu-id="35468-137">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="35468-138">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="35468-138">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35468-139">Nie można pobrać przesunięcie, ponieważ klauzula obsługi wyjątku nie jest filtrem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-139">Cannot get the offset because the exception handling clause is not a filter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ExceptionHandlingClauseOptions Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ExceptionHandlingClauseOptions Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Flags As ExceptionHandlingClauseOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ExceptionHandlingClauseOptions Flags { System::Reflection::ExceptionHandlingClauseOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Reflection.ExceptionHandlingClauseOptions" Usage="System.Reflection.ExceptionHandlingClause.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ExceptionHandlingClauseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35468-140">Pobiera wartość wskazującą, czy klauzulę obsługi wyjątków jest klauzuli finally, klauzuli filtrować typu albo klauzulę filtrowane przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-140">Gets a value indicating whether this exception-handling clause is a finally clause, a type-filtered clause, or a user-filtered clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35468-141">
            <see cref="T:System.Reflection.ExceptionHandlingClauseOptions" /> Wartość, która wskazuje wykonuje klauzulę jakiego rodzaju akcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-141">An <see cref="T:System.Reflection.ExceptionHandlingClauseOptions" /> value that indicates what kind of action this clause performs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="35468-142">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy metadanych i formatów instrukcji języka pośredniego (MSIL) firmy Microsoft.</span><span class="sxs-lookup"><span data-stu-id="35468-142">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="35468-143">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</span><span class="sxs-lookup"><span data-stu-id="35468-143">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="35468-144">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="35468-144">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35468-145">Poniższy przykładowy kod definiuje metodę testu o nazwie `MethodBodyExample`i wyświetla jego informacje o zmiennych lokalnych i klauzule obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="35468-145">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="35468-146"><xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> Metoda jest używana do uzyskania <xref:System.Reflection.MethodBody> obiektu dla metody testowej.</span><span class="sxs-lookup"><span data-stu-id="35468-146">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="35468-147"><xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> Właściwość jest używana do uzyskiwania listy <xref:System.Reflection.ExceptionHandlingClause> obiekty i wyświetlania ich właściwości.</span><span class="sxs-lookup"><span data-stu-id="35468-147">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-148">Nie wszystkie języki komputer może generować <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> klauzul.</span><span class="sxs-lookup"><span data-stu-id="35468-148">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="35468-149">Przykład Visual Basic zawiera klauzulę filtru, za pomocą języka Visual Basic `When` wyrażenia, który został pominięty w przykładach dla innych języków.</span><span class="sxs-lookup"><span data-stu-id="35468-149">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="35468-150">Ten kod jest częścią większego przykładu znajduje się w <xref:System.Reflection.MethodBody> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="35468-150">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ExceptionHandlingClauseOptions" />
      </Docs>
    </Member>
    <Member MemberName="HandlerLength">
      <MemberSignature Language="C#" Value="public virtual int HandlerLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandlerLength" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.HandlerLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandlerLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HandlerLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlerLength : int" Usage="System.Reflection.ExceptionHandlingClause.HandlerLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35468-151">Pobiera długość w bajtach treści klauzulę obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-151">Gets the length, in bytes, of the body of this exception-handling clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35468-152">Liczba całkowita, która reprezentuje długość w bajtach MSIL, który wchodzi w skład treści klauzuli tej obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-152">An integer that represents the length, in bytes, of the MSIL that forms the body of this exception-handling clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="35468-153">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy metadanych i formatów instrukcji języka pośredniego (MSIL) firmy Microsoft.</span><span class="sxs-lookup"><span data-stu-id="35468-153">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="35468-154">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</span><span class="sxs-lookup"><span data-stu-id="35468-154">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="35468-155">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="35468-155">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35468-156">Poniższy przykładowy kod definiuje metodę testu o nazwie `MethodBodyExample`i wyświetla jego informacje o zmiennych lokalnych i klauzule obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="35468-156">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="35468-157"><xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> Metoda jest używana do uzyskania <xref:System.Reflection.MethodBody> obiektu dla metody testowej.</span><span class="sxs-lookup"><span data-stu-id="35468-157">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="35468-158"><xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> Właściwość jest używana do uzyskiwania listy <xref:System.Reflection.ExceptionHandlingClause> obiekty i wyświetlania ich właściwości.</span><span class="sxs-lookup"><span data-stu-id="35468-158">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-159">Nie wszystkie języki komputer może generować <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> klauzul.</span><span class="sxs-lookup"><span data-stu-id="35468-159">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="35468-160">Przykład Visual Basic zawiera klauzulę filtru, za pomocą języka Visual Basic `When` wyrażenia, który został pominięty w przykładach dla innych języków.</span><span class="sxs-lookup"><span data-stu-id="35468-160">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="35468-161">Ten kod jest częścią większego przykładu znajduje się w <xref:System.Reflection.MethodBody> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="35468-161">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerOffset">
      <MemberSignature Language="C#" Value="public virtual int HandlerOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandlerOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.HandlerOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandlerOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HandlerOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlerOffset : int" Usage="System.Reflection.ExceptionHandlingClause.HandlerOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35468-162">Pobiera przesunięcie w treści metody w bajtach klauzulę obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-162">Gets the offset within the method body, in bytes, of this exception-handling clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35468-163">Liczba całkowita, która reprezentuje przesunięcie w treści metody, w bajtach klauzulę obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-163">An integer that represents the offset within the method body, in bytes, of this exception-handling clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="35468-164">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy metadanych i formatów instrukcji języka pośredniego (MSIL) firmy Microsoft.</span><span class="sxs-lookup"><span data-stu-id="35468-164">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="35468-165">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</span><span class="sxs-lookup"><span data-stu-id="35468-165">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="35468-166">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="35468-166">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35468-167">Poniższy przykładowy kod definiuje metodę testu o nazwie `MethodBodyExample`i wyświetla jego informacje o zmiennych lokalnych i klauzule obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="35468-167">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="35468-168"><xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> Metoda jest używana do uzyskania <xref:System.Reflection.MethodBody> obiektu dla metody testowej.</span><span class="sxs-lookup"><span data-stu-id="35468-168">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="35468-169"><xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> Właściwość jest używana do uzyskiwania listy <xref:System.Reflection.ExceptionHandlingClause> obiekty i wyświetlania ich właściwości.</span><span class="sxs-lookup"><span data-stu-id="35468-169">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-170">Nie wszystkie języki komputer może generować <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> klauzul.</span><span class="sxs-lookup"><span data-stu-id="35468-170">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="35468-171">Przykład Visual Basic zawiera klauzulę filtru, za pomocą języka Visual Basic `When` wyrażenia, który został pominięty w przykładach dla innych języków.</span><span class="sxs-lookup"><span data-stu-id="35468-171">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="35468-172">Ten kod jest częścią większego przykładu znajduje się w <xref:System.Reflection.MethodBody> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="35468-172">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ExceptionHandlingClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exceptionHandlingClause.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35468-173">Reprezentacja ciągu klauzuli obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-173">A string representation of the exception-handling clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35468-174">Ciąg, który zawiera wartości odpowiednich właściwości dla typu klauzuli filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-174">A string that lists appropriate property values for the filter clause type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLength">
      <MemberSignature Language="C#" Value="public virtual int TryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TryLength" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.TryLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TryLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TryLength : int" Usage="System.Reflection.ExceptionHandlingClause.TryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35468-175">Całkowita długość, w bajtach bloku try, która zawiera klauzulę obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-175">The total length, in bytes, of the try block that includes this exception-handling clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35468-176">Całkowita długość, w bajtach bloku try, która zawiera klauzulę obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-176">The total length, in bytes, of the try block that includes this exception-handling clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35468-177">Liczba całkowita, która reprezentuje całkowita długość w bajtach bloku try, która zawiera klauzulę obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="35468-177">An integer that represents the total length, in bytes, of the try block that includes this exception-handling clause.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-178">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy metadanych i formatów instrukcji języka pośredniego (MSIL) firmy Microsoft.</span><span class="sxs-lookup"><span data-stu-id="35468-178">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="35468-179">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</span><span class="sxs-lookup"><span data-stu-id="35468-179">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="35468-180">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="35468-180">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35468-181">Poniższy przykładowy kod definiuje metodę testu o nazwie `MethodBodyExample`i wyświetla jego informacje o zmiennych lokalnych i klauzule obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="35468-181">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="35468-182"><xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> Metoda jest używana do uzyskania <xref:System.Reflection.MethodBody> obiektu dla metody testowej.</span><span class="sxs-lookup"><span data-stu-id="35468-182">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="35468-183"><xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> Właściwość jest używana do uzyskiwania listy <xref:System.Reflection.ExceptionHandlingClause> obiekty i wyświetlania ich właściwości.</span><span class="sxs-lookup"><span data-stu-id="35468-183">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-184">Nie wszystkie języki komputer może generować <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> klauzul.</span><span class="sxs-lookup"><span data-stu-id="35468-184">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="35468-185">Przykład Visual Basic zawiera klauzulę filtru, za pomocą języka Visual Basic `When` wyrażenia, który został pominięty w przykładach dla innych języków.</span><span class="sxs-lookup"><span data-stu-id="35468-185">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="35468-186">Ten kod jest częścią większego przykładu znajduje się w <xref:System.Reflection.MethodBody> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="35468-186">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryOffset">
      <MemberSignature Language="C#" Value="public virtual int TryOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TryOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.TryOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TryOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TryOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TryOffset : int" Usage="System.Reflection.ExceptionHandlingClause.TryOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35468-187">Przesunięcie w metodzie, w bajtach bloku try, która zawiera klauzulę obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-187">The offset within the method, in bytes, of the try block that includes this exception-handling clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35468-188">Liczba całkowita, która reprezentuje przesunięcie w metodzie, w bajtach bloku try, która zawiera klauzulę obsługi wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35468-188">An integer that represents the offset within the method, in bytes, of the try block that includes this exception-handling clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="35468-189">Praca z klauzule obsługi wyjątków wymaga dogłębnej wiedzy metadanych i formatów instrukcji języka pośredniego (MSIL) firmy Microsoft.</span><span class="sxs-lookup"><span data-stu-id="35468-189">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="35468-190">Informacje można znaleźć w dokumentacji infrastruktury języka wspólnego (CLI), szczególnie "Partycji II: metadane definicji i semantyki" i "Partycji III: CIL instrukcji Set".</span><span class="sxs-lookup"><span data-stu-id="35468-190">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="35468-191">Dokumentacja jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="35468-191">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35468-192">Poniższy przykładowy kod definiuje metodę testu o nazwie `MethodBodyExample`i wyświetla jego informacje o zmiennych lokalnych i klauzule obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="35468-192">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="35468-193"><xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> Metoda jest używana do uzyskania <xref:System.Reflection.MethodBody> obiektu dla metody testowej.</span><span class="sxs-lookup"><span data-stu-id="35468-193">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="35468-194"><xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> Właściwość jest używana do uzyskiwania listy <xref:System.Reflection.ExceptionHandlingClause> obiekty i wyświetlania ich właściwości.</span><span class="sxs-lookup"><span data-stu-id="35468-194">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35468-195">Nie wszystkie języki komputer może generować <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> klauzul.</span><span class="sxs-lookup"><span data-stu-id="35468-195">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="35468-196">Przykład Visual Basic zawiera klauzulę filtru, za pomocą języka Visual Basic `When` wyrażenia, który został pominięty w przykładach dla innych języków.</span><span class="sxs-lookup"><span data-stu-id="35468-196">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="35468-197">Ten kod jest częścią większego przykładu znajduje się w <xref:System.Reflection.MethodBody> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="35468-197">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>