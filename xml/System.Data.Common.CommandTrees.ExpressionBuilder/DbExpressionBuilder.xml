<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5811cf713ecdfcd883e8f0eb8cdbb1b233e59366" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69377996" /></Metadata><TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type DbExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="554d1-101">Udostępnia interfejs API do konstruowania <see cref="T:System.Data.Common.CommandTrees.DbExpression" />i umożliwia dostęp do tego interfejsu API jako metody rozszerzające samego typu wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="554d1-102">Funkcja, która definiuje operację agregowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-102">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="554d1-103">Argument, do którego należy obliczyć funkcję agregującą.</span><span class="sxs-lookup"><span data-stu-id="554d1-103">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="554d1-104">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-105">Nowa funkcja agregacji z odwołaniem do danej funkcji i argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-105">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="554d1-106">Właściwość DISTINCT funkcji Aggregate ma wartość <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-107"><paramref name="function" />lub <paramref name="argument" /> wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-107"><paramref name="function" /> or <paramref name="argument" /> null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-108"><paramref name="function" />nie jest funkcją agregującą lub ma więcej niż jeden argument lub typ <paramref name="argument" /> wyniku nie jest równy lub awansowany do <paramref name="function" />typu parametru.</span><span class="sxs-lookup"><span data-stu-id="554d1-108"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member AggregateDistinct : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="554d1-109">Funkcja, która definiuje operację agregowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-109">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="554d1-110">Argument, do którego należy obliczyć funkcję agregującą.</span><span class="sxs-lookup"><span data-stu-id="554d1-110">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="554d1-111">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> , który jest stosowany w różny sposób.</span><span class="sxs-lookup"><span data-stu-id="554d1-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span></span></summary>
        <returns><span data-ttu-id="554d1-112">Nowa funkcja agregacji z odwołaniem do danej funkcji i argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-112">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="554d1-113">Właściwość DISTINCT funkcji Aggregate ma wartość <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-114"><paramref name="function" />lub <paramref name="argument" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-114"><paramref name="function" /> or <paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-115"><paramref name="function" />nie jest funkcją agregującą lub ma więcej niż jeden argument lub typ <paramref name="argument" /> wyniku nie jest równy lub awansowany do <paramref name="function" />typu parametru.</span><span class="sxs-lookup"><span data-stu-id="554d1-115"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-116">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> , który określa, czy dany predykat jest przechowywany dla wszystkich elementów zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-117">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-117">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="554d1-118">Metoda reprezentująca predykat do obliczenia dla każdego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-118">A method representing a predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="554d1-119">Ta metoda musi generować wyrażenie z typem wyniku Boolean, który udostępnia logikę predykatu.</span><span class="sxs-lookup"><span data-stu-id="554d1-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="554d1-120">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> , który określa, czy dany predykat jest przechowywany dla wszystkich elementów zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="554d1-121">Nowy DbQuantifierExpression reprezentujący całą operację.</span><span class="sxs-lookup"><span data-stu-id="554d1-121">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-122"><paramref name="source" />lub <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-122"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="554d1-123">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-123">-or-</span></span>

<span data-ttu-id="554d1-124">Wyrażenie utworzone przez <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-124">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-125"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-125"><paramref name="source" />  does not have a collection result type.</span></span>

<span data-ttu-id="554d1-126">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-126">-or-</span></span>

<span data-ttu-id="554d1-127">Wyrażenie utworzone przez <paramref name="Predicate" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-127">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-128">Powiązanie wyrażenia, które określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-128">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="554d1-129">Wyrażenie reprezentujące predykat do obliczenia dla każdego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-129">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-130">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> , który określa, czy dany predykat jest przechowywany dla wszystkich elementów zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-130">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="554d1-131">Nowy DbQuantifierExpression reprezentujący całą operację.</span><span class="sxs-lookup"><span data-stu-id="554d1-131">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-132"><paramref name="input" />lub <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-132"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-133"><paramref name="predicate" />nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-133"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member And : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbAndExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-134">Wyrażenie logiczne określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-134">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-135">Wyrażenie logiczne określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-135">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-136">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> , który wykonuje wartości logiczne i z lewego i prawego argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-136">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="554d1-137">Nowy Metoda DbAndExpression z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="554d1-137">A new DbAndExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-138"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-138"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-139"><paramref name="left" />i <paramref name="right" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-139"><paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-140">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa, czy określony argument zestawu nie jest pusty.</span><span class="sxs-lookup"><span data-stu-id="554d1-140">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-141">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-141">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-142">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa, czy określony argument zestawu nie jest pusty.</span><span class="sxs-lookup"><span data-stu-id="554d1-142">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="554d1-143">Nowe <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> zastosowana do nowego <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> z określonym argumentem.</span><span class="sxs-lookup"><span data-stu-id="554d1-143">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-144"><paramref name="source" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-144"><paramref name="source" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-145"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-145"><paramref name="source" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-146">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-146">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="554d1-147">Metoda reprezentująca predykat do obliczenia dla każdego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-147">A method representing the predicate to evaluate for each member of the input set.</span></span> <span data-ttu-id="554d1-148">Ta metoda musi generować wyrażenie z typem wyniku Boolean, który udostępnia logikę predykatu.</span><span class="sxs-lookup"><span data-stu-id="554d1-148">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="554d1-149">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> , który określa, czy dany predykat jest przechowywany dla dowolnego elementu zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-149">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="554d1-150">Nowy DbQuantifierExpression, który reprezentuje dowolną operację.</span><span class="sxs-lookup"><span data-stu-id="554d1-150">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-151"><paramref name="source" />lub <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-151"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="554d1-152">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-152">-or-</span></span>

<span data-ttu-id="554d1-153">Wyrażenie utworzone przez <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-153">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-154"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-154"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-155">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-155">-or-</span></span> 
<span data-ttu-id="554d1-156">Wyrażenie utworzone przez <paramref name="predicate" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-156">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-157">Powiązanie wyrażenia, które określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-157">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="554d1-158">Wyrażenie reprezentujące predykat do obliczenia dla każdego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-158">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-159">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> , który określa, czy dany predykat jest przechowywany dla dowolnego elementu zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-159">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="554d1-160">Nowy DbQuantifierExpression, który reprezentuje dowolną operację.</span><span class="sxs-lookup"><span data-stu-id="554d1-160">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-161"><paramref name="input" />lub <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-161"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-162">Wyrażenie utworzone przez <paramref name="predicate" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-162">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-163">Zwraca określone argumenty jako obiekt pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-163">Returns the specified arguments as a key/value pair object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbAggregate * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="alias" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="554d1-164">Wartość w parze klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-164">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="554d1-165">Klucz w parze klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-165">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="554d1-166">Zwraca określone argumenty jako obiekt pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-166">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="554d1-167">Obiekt pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-167">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="alias" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="554d1-168">Wartość w parze klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-168">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="554d1-169">Klucz w parze klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-169">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="554d1-170">Zwraca określone argumenty jako obiekt pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-170">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="554d1-171">Obiekt pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="554d1-171">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member Bind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-172">Wyrażenie, które ma zostać powiązane.</span><span class="sxs-lookup"><span data-stu-id="554d1-172">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="554d1-173">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> , który używa wygenerowanej nazwy zmiennej do powiązania danego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-173">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="554d1-174">Nowe wyrażenie powiązania z określonym wyrażeniem i wygenerowaną nazwą zmiennej.</span><span class="sxs-lookup"><span data-stu-id="554d1-174">A new expression binding with the specified expression and a generated variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-175"><paramref name="input" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-175"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-176"><paramref name="input" />nie ma wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-176"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberSignature Language="F#" Value="static member BindAs : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs (input, varName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="varName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-177">Wyrażenie, które ma zostać powiązane.</span><span class="sxs-lookup"><span data-stu-id="554d1-177">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="554d1-178">Nazwa zmiennej, która powinna być używana dla powiązania.</span><span class="sxs-lookup"><span data-stu-id="554d1-178">The variable name that should be used for the binding.</span></span></param>
        <summary><span data-ttu-id="554d1-179">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> , który używa określonej nazwy zmiennej do powiązania danego wyrażenia</span><span class="sxs-lookup"><span data-stu-id="554d1-179">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span></span></summary>
        <returns><span data-ttu-id="554d1-180">Nowe wyrażenie powiązania z określonym wyrażeniem i nazwą zmiennej.</span><span class="sxs-lookup"><span data-stu-id="554d1-180">A new expression binding with the specified expression and variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-181"><paramref name="input" />lub <paramref name="varName" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-181"><paramref name="input" /> or <paramref name="varName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-182"><paramref name="input" />nie ma wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-182"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberSignature Language="F#" Value="static member Case : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbCaseExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case (whenExpressions, thenExpressions, elseExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="whenExpressions"><span data-ttu-id="554d1-183">Lista wyrażeń, które dostarczają warunku dla każdego przypadku.</span><span class="sxs-lookup"><span data-stu-id="554d1-183">A list of expressions that provide the conditional for of each case.</span></span></param>
        <param name="thenExpressions"><span data-ttu-id="554d1-184">Lista wyrażeń, które dostarczają wynik każdego przypadku.</span><span class="sxs-lookup"><span data-stu-id="554d1-184">A list of expressions that provide the result of each case.</span></span></param>
        <param name="elseExpression"><span data-ttu-id="554d1-185">Wyrażenie, które definiuje wynik w przypadku braku dopasowania przypadku.</span><span class="sxs-lookup"><span data-stu-id="554d1-185">An expression that defines the result when no case is matched.</span></span></param>
        <summary><span data-ttu-id="554d1-186">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-186">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-187">Nowy Metoda DbCaseExpression z określonymi przypadkami i wynikami domyślnymi.</span><span class="sxs-lookup"><span data-stu-id="554d1-187">A new DbCaseExpression with the specified cases and default result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-188"><paramref name="whenExpressions" />lub <paramref name="thenExpressions" /> ma wartość null lub zawiera wartość null <paramref name="elseExpression" /> lub ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-188"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-189"><paramref name="whenExpressions" />lub <paramref name="thenExpressions" /> jest pusty lub <paramref name="whenExpressions" /> zawiera wyrażenie z typem wyniku innym niż Boolean lub nie istnieje wspólny typ wyników dla wszystkich wyrażeń w <paramref name="thenExpressions" /> i <paramref name="elseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-189"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberSignature Language="F#" Value="static member CastTo : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbCastExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo (argument, toType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-190">Argument, do którego należy zastosować rzutowanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-190">The argument to which the cast should be applied.</span></span></param>
        <param name="toType"><span data-ttu-id="554d1-191">Typ metadanych, który określa typ do rzutowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-191">Type metadata that specifies the type to cast to.</span></span></param>
        <summary><span data-ttu-id="554d1-192">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> , która stosuje operację Cast do argumentu polimorficznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-192">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-193">Nowy DbCastExpression o określonym argumencie i typie docelowym.</span><span class="sxs-lookup"><span data-stu-id="554d1-193">A new DbCastExpression with the specified argument and target type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-194"><paramref name="Argument" />lub <paramref name="toType" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-194"><paramref name="Argument" /> or <paramref name="toType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-195">Określone Rzutowanie jest nieprawidłowe.</span><span class="sxs-lookup"><span data-stu-id="554d1-195">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-196">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="554d1-197">Stała wartość do przedstawienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-197">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="554d1-198">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> o danej wartości stałej.</span><span class="sxs-lookup"><span data-stu-id="554d1-198">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="554d1-199">Nowy DbConstantExpression z podaną wartością.</span><span class="sxs-lookup"><span data-stu-id="554d1-199">A new DbConstantExpression with the given value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-200"><paramref name="value" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-200"><paramref name="value" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-201"><paramref name="value" />nie jest wystąpieniem prawidłowego typu stałej.</span><span class="sxs-lookup"><span data-stu-id="554d1-201"><paramref name="value" /> is not an instance of a valid constant type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : System.Data.Metadata.Edm.TypeUsage * obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant (constantType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="constantType"><span data-ttu-id="554d1-202">Typ wartości stałej.</span><span class="sxs-lookup"><span data-stu-id="554d1-202">The type of the constant value.</span></span></param>
        <param name="value"><span data-ttu-id="554d1-203">Stała wartość do przedstawienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-203">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="554d1-204">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> typ pierwotny o podanej wartości stałej.</span><span class="sxs-lookup"><span data-stu-id="554d1-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="554d1-205">Nowy DbConstantExpression z daną wartością i typem <paramref name="constantType" />wyniku.</span><span class="sxs-lookup"><span data-stu-id="554d1-205">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-206"><paramref name="value" />lub <paramref name="constantType" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-206"><paramref name="value" /> or <paramref name="constantType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-207"><paramref name="value" />nie jest wystąpieniem prawidłowego typu stałej, <paramref name="constantType" /> nie reprezentuje typu pierwotnego lub <paramref name="value" /> ma inny typ pierwotny niż reprezentowany przez <paramref name="constantType" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-207"><paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-208">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> , który koduje odwołanie do określonej jednostki danego typu na podstawie wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-208">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="554d1-209">Zestaw jednostek, w którym znajduje się element, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-209">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="554d1-210">Kolekcja <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s, która dostarcza wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-210">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="554d1-211">Te wyrażenia muszą być zgodne (w liczbie, typie i porządku) właściwości klucza obiektu typu jednostki, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-211">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="554d1-212">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> , który koduje odwołanie do określonej jednostki na podstawie wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-212">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="554d1-213">Nowy obiekt DbRefExpression, który odwołuje się do elementu o określonych wartościach klucza w danym zestawie jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-213">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-214"><paramref name="entitySet" />ma wartość null <paramref name="keyValues" /> lub ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-214"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-215">Liczba <paramref name="keyValues" /> nie jest zgodna z liczbą elementów członkowskich klucza zadeklarowanych <paramref name="entitySet" />przez typ elementu lub <paramref name="keyValues" /> zawiera wyrażenie z typem wyniku, który jest niezgodny z typem odpowiedniego elementu członkowskiego klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-215">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="554d1-216">Zestaw jednostek, w którym znajduje się element, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-216">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="554d1-217">Kolekcja <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s, która dostarcza wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-217">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="554d1-218">Te wyrażenia muszą być zgodne (w liczbie, typie i porządku) właściwości klucza obiektu typu jednostki, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-218">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="554d1-219">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> , który koduje odwołanie do określonej jednostki na podstawie wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-219">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="554d1-220">Nowy obiekt DbRefExpression, który odwołuje się do elementu o określonych wartościach klucza w danym zestawie jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-220">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-221"><paramref name="entitySet" />ma wartość null <paramref name="keyValues" /> lub ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-221"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-222">Liczba <paramref name="keyValues" /> nie jest zgodna z liczbą elementów członkowskich klucza zadeklarowanych <paramref name="entitySet" />przez typ elementu lub <paramref name="keyValues" /> zawiera wyrażenie z typem wyniku, który jest niezgodny z typem odpowiedniego elementu członkowskiego klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-222">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="554d1-223">Zestaw jednostek, w którym znajduje się element, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-223">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="554d1-224">Konkretny typ jednostki, do której istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-224">The specific type of the referenced entity.</span></span> <span data-ttu-id="554d1-225">Musi to być typ jednostki z tej samej hierarchii co typ elementu zestawu jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-225">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="554d1-226">Kolekcja <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s, która dostarcza wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-226">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="554d1-227">Te wyrażenia muszą być zgodne (w liczbie, typie i porządku) właściwości klucza obiektu typu jednostki, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-227">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="554d1-228">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> , który koduje odwołanie do określonej jednostki danego typu na podstawie wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-228">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="554d1-229">Nowy obiekt DbRefExpression, który odwołuje się do elementu o określonych wartościach klucza w danym zestawie jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-229">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-230"><paramref name="entitySet" />lub <paramref name="entityType" /> ma<paramref name="keyValues" /> wartość null lub ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-230"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-231"><paramref name="entityType" />nie znajduje się w tej samej hierarchii typów (podtyp, podtyp lub tego samego typu) co <paramref name="entitySet" />typ elementu.</span><span class="sxs-lookup"><span data-stu-id="554d1-231"><paramref name="entityType" /> is not from the same type hierarchy (a subtype, supertype, or the same type) as <paramref name="entitySet" />'s element type.</span></span>

<span data-ttu-id="554d1-232">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-232">-or-</span></span>

<span data-ttu-id="554d1-233">Liczba <paramref name="keyValues" /> nie jest zgodna z liczbą elementów członkowskich klucza zadeklarowanych <paramref name="entitySet" />przez typ elementu lub <paramref name="keyValues" /> zawiera wyrażenie z typem wyniku, który jest niezgodny z typem odpowiedniego elementu członkowskiego klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-233">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="554d1-234">Zestaw jednostek, w którym znajduje się element, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-234">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="554d1-235">Konkretny typ jednostki, do której istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-235">The specific type of the referenced entity.</span></span> <span data-ttu-id="554d1-236">Musi to być typ jednostki z tej samej hierarchii co typ elementu zestawu jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-236">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="554d1-237">Kolekcja <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s, która dostarcza wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-237">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="554d1-238">Te wyrażenia muszą być zgodne (w liczbie, typie i porządku) właściwości klucza obiektu typu jednostki, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-238">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="554d1-239">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> , który koduje odwołanie do określonej jednostki danego typu na podstawie wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-239">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="554d1-240">Nowy obiekt DbRefExpression, który odwołuje się do elementu o określonych wartościach klucza w danym zestawie jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-240">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-241"><paramref name="entitySet" />lub <paramref name="entityType" /> ma<paramref name="keyValues" /> wartość null lub ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-241"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-242"><paramref name="entityType" />nie znajduje się w tej samej hierarchii typów (podtyp, podtyp lub tego samego typu) co <paramref name="entitySet" />typ elementu.</span><span class="sxs-lookup"><span data-stu-id="554d1-242"><paramref name="entityType" /> is not from the same type hierarchy (a subtype, supertype, or the same type) as <paramref name="entitySet" />'s element type.</span></span>

<span data-ttu-id="554d1-243">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-243">-or-</span></span>

<span data-ttu-id="554d1-244">Liczba <paramref name="keyValues" /> nie jest zgodna z liczbą elementów członkowskich klucza zadeklarowanych <paramref name="entitySet" />przez typ elementu lub <paramref name="keyValues" /> zawiera wyrażenie z typem wyniku, który jest niezgodny z typem odpowiedniego elementu członkowskiego klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-244">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-245">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> , która oblicza dane <paramref name="apply" /> wyrażenie jeden raz dla każdego elementu danego zestawu danych wejściowych, generując kolekcję wierszy z odpowiednimi kolumnami wejściowymi i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-245">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-246">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-246">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="554d1-247">Metoda, która określa logikę do obliczenia jednokrotnie dla każdego elementu członkowskiego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-247">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-248">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> , która oblicza dane <paramref name="apply" /> wyrażenie jeden raz dla każdego elementu danego zestawu danych wejściowych, generując kolekcję wierszy z odpowiednimi kolumnami wejściowymi i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="554d1-249">Wiersze, dla <paramref name="apply" /> których są obliczane puste zestawie, nie są uwzględniane.</span><span class="sxs-lookup"><span data-stu-id="554d1-249">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="554d1-250">Nowy DbApplyExpression z określonymi powiązaniami wejściowymi i zastosowaniem oraz <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> CrossApply.</span><span class="sxs-lookup"><span data-stu-id="554d1-250">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-251"><paramref name="source" />lub <paramref name="apply" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-251"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="554d1-252">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-252">-or-</span></span>

<span data-ttu-id="554d1-253">Wynik <paramref name="apply" /> zawiera nazwę lub wyrażenie, które ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-253">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-254"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-254"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-255">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-255">-or-</span></span> 
<span data-ttu-id="554d1-256">Wynik <paramref name="apply" /> zawiera nazwę lub wyrażenie, które nie jest prawidłowe w powiązaniu wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-256">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-257"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-257">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="554d1-258"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Określa logikę do obliczenia jednokrotnie dla każdego elementu członkowskiego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-258">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-259">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> , która oblicza dane <paramref name="apply" /> wyrażenie jeden raz dla każdego elementu danego zestawu danych wejściowych, generując kolekcję wierszy z odpowiednimi kolumnami wejściowymi i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="554d1-260">Wiersze, dla <paramref name="apply" /> których są obliczane puste zestawie, nie są uwzględniane.</span><span class="sxs-lookup"><span data-stu-id="554d1-260">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="554d1-261">Nowy DbApplyExpression z określonymi powiązaniami wejściowymi i zastosowaniem oraz <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> CrossApply.</span><span class="sxs-lookup"><span data-stu-id="554d1-261">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-262"><paramref name="input" />lub <paramref name="apply" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-262"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="static member CrossJoin : seq&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Data.Common.CommandTrees.DbCrossJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin inputs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="inputs"><span data-ttu-id="554d1-263">Lista powiązań wyrażeń, które określają zestawy wejściowe.</span><span class="sxs-lookup"><span data-stu-id="554d1-263">A list of expression bindings that specifies the input sets.</span></span></param>
        <summary><span data-ttu-id="554d1-264">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> , która bezwarunkowo przyłącza zestawy określone przez listę powiązań wyrażeń wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-264">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span></span></summary>
        <returns><span data-ttu-id="554d1-265">Nowy obiekt DbCrossJoinExpression z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> niekrzyżowym, który reprezentuje sprzężenie bezwarunkowe zestawów wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-265">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-266"><paramref name="inputs" />ma wartość null lub zawiera element o wartości null.</span><span class="sxs-lookup"><span data-stu-id="554d1-266"><paramref name="inputs" /> is null or contains null element.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-267"><paramref name="inputs" />zawiera mniej niż 2 powiązania wyrażeń.</span><span class="sxs-lookup"><span data-stu-id="554d1-267"><paramref name="inputs" /> contains fewer than 2 expression bindings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Deref : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDerefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-268"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , Który zawiera odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-268">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span></span> <span data-ttu-id="554d1-269">To wyrażenie musi mieć typ referencyjny.</span><span class="sxs-lookup"><span data-stu-id="554d1-269">This expression must have a reference Type.</span></span></param>
        <summary><span data-ttu-id="554d1-270">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> , który pobiera określoną jednostkę danego wyrażenia odwołania.</span><span class="sxs-lookup"><span data-stu-id="554d1-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span></span></summary>
        <returns><span data-ttu-id="554d1-271">Nowy obiekt DbDerefExpression, który pobiera określoną jednostkę.</span><span class="sxs-lookup"><span data-stu-id="554d1-271">A new DbDerefExpression that retrieves the specified Entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-272"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-272"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-273"><paramref name="argument" />nie ma typu wyniku odwołania.</span><span class="sxs-lookup"><span data-stu-id="554d1-273"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDistinctExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-274">Wyrażenie definiujące zestaw, do którego ma zostać wykonana operacja DISTINCT.</span><span class="sxs-lookup"><span data-stu-id="554d1-274">An expression that defines the set over which to perform the distinct operation.</span></span></param>
        <summary><span data-ttu-id="554d1-275">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> , który usuwa duplikaty z danego argumentu zestawu.</span><span class="sxs-lookup"><span data-stu-id="554d1-275">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-276">Nowy DbDistinctExpression, który reprezentuje operacje DISTINCT zastosowane do określonego argumentu zestawu.</span><span class="sxs-lookup"><span data-stu-id="554d1-276">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-277"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-277"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-278"><paramref name="argument" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-278"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-279">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-279">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-280">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-280">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-281">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> , który dzieli lewy argument według prawego argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-281">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-282">Nowy metody DbArithmeticExpression reprezentujący operację dzielenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-282">A new DbArithmeticExpression representing the division operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-283"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-283"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-284">Nie istnieje wspólny typ wyników liczbowych <paramref name="left" /> między <paramref name="right" />lub.</span><span class="sxs-lookup"><span data-stu-id="554d1-284">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Element : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbElementExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-285">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-285">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-286">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> , który konwertuje zestaw na pojedynczy.</span><span class="sxs-lookup"><span data-stu-id="554d1-286">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span></span></summary>
        <returns><span data-ttu-id="554d1-287">Element DbElementExpression, który reprezentuje konwersję argumentu zestawu na pojedynczy.</span><span class="sxs-lookup"><span data-stu-id="554d1-287">A DbElementExpression that represents the conversion of the set argument to a singleton.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-288"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-288"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-289"><paramref name="argument" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-289"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Equal : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-290">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-290">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-291">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-291">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-292">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> , który porównuje lewe i prawe argumenty dla równości.</span><span class="sxs-lookup"><span data-stu-id="554d1-292">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span></span></summary>
        <returns><span data-ttu-id="554d1-293">Nowy obiekt DbComparisonExpression reprezentujący porównanie równości.</span><span class="sxs-lookup"><span data-stu-id="554d1-293">A new DbComparisonExpression representing the equality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-294"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-294"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-295">Nie istnieje wspólny typ wyniku równości równość między <paramref name="left" /> i. <paramref name="right" /></span><span class="sxs-lookup"><span data-stu-id="554d1-295">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Except : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExceptExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-296">Wyrażenie definiujące argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-296">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-297">Wyrażenie definiujące prawy argument zestawu.</span><span class="sxs-lookup"><span data-stu-id="554d1-297">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="554d1-298">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> , który oblicza odejmowanie argumentu zestawu po lewej od argumentu ustawionego przez lewo.</span><span class="sxs-lookup"><span data-stu-id="554d1-298">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-299">Nowy wyrażenia DbExceptExpression, który reprezentuje różnicę argumentu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-299">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-300"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-300"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-301">Nie istnieje wspólny typ wyników kolekcji między <paramref name="left" /> i <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-301">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Exists : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-302">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-302">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-303">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa, czy określony argument zestawu nie jest pusty.</span><span class="sxs-lookup"><span data-stu-id="554d1-303">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="554d1-304">Nowe <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> zastosowana do nowego <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> z określonym argumentem.</span><span class="sxs-lookup"><span data-stu-id="554d1-304">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-305"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-305"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-306"><paramref name="argument" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-306"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.False : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="554d1-307">Pobiera wartość <see langword="false" />o wartości logicznej. <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /></span><span class="sxs-lookup"><span data-stu-id="554d1-307">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="554d1-308">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> z wartością <see langword="false" />logiczną.</span><span class="sxs-lookup"><span data-stu-id="554d1-308">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Filter : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-309">Powiązanie wyrażenia, które określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-309">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="554d1-310">Wyrażenie reprezentujące predykat do obliczenia dla każdego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-310">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-311">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> , który filtruje elementy w danym zestawie danych wejściowych przy użyciu określonego predykatu.</span><span class="sxs-lookup"><span data-stu-id="554d1-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="554d1-312">Nowy DbFilterExpression, który produkuje zestaw filtrowany.</span><span class="sxs-lookup"><span data-stu-id="554d1-312">A new DbFilterExpression that produces the filtered set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-313"><paramref name="input" />lub <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-313"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-314"><paramref name="predicate" />nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-314"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-315">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe wyrażenia, w określonym warunku sprzężenia, przy użyciu FullOuterJoin <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-315">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-316">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-316">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-317">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu po prawej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-317">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="554d1-318">Metoda reprezentująca warunek do przyłączenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-318">A method representing the condition on which to join.</span></span> <span data-ttu-id="554d1-319">Ta metoda musi generować wyrażenie z typem wyniku Boolean, który udostępnia logikę warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-319">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="554d1-320">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe wyrażenia, w określonym warunku sprzężenia, przy użyciu FullOuterJoin <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-320">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-321">Nowy DbJoinExpression z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> FullOuterJoin, który reprezentuje operację pełnego sprzężenia zewnętrznego zastosowana do lewego i prawego zestawu danych wejściowych w ramach danego warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-321">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-322"><paramref name="left" /><paramref name="right" /> lub<paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-322"><paramref name="left" />, <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="554d1-323">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-323">-or-</span></span>

<span data-ttu-id="554d1-324">Wyrażenie utworzone przez <paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-324">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-325"><paramref name="left" />lub <paramref name="right" /> nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-325"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-326">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-326">-or-</span></span> 
<span data-ttu-id="554d1-327">Wyrażenie utworzone przez <paramref name="joinCondition" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-327">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-328"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Określa argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-328">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-329">Element <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> określający argument Ustaw po prawej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-329">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="554d1-330">Wyrażenie określające warunek do przyłączenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-330">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="554d1-331">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe powiązania wyrażenia, w określonym warunku sprzężenia, przy użyciu FullOuterJoin <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-331">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-332">Nowy DbJoinExpression z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> FullOuterJoin, który reprezentuje operację pełnego sprzężenia zewnętrznego zastosowana do lewego i prawego zestawu danych wejściowych w ramach danego warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-332">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-333"><paramref name="left" /><paramref name="right" /> lub<paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-333"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-334">Wyrażenie utworzone przez <paramref name="joinCondition" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-334">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetEntityRef : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbEntityRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-335">Wyrażenie, które dostarcza jednostkę.</span><span class="sxs-lookup"><span data-stu-id="554d1-335">The expression that provides the entity.</span></span> <span data-ttu-id="554d1-336">To wyrażenie musi mieć typ wyniku jednostki.</span><span class="sxs-lookup"><span data-stu-id="554d1-336">This expression must have an entity result type.</span></span></param>
        <summary><span data-ttu-id="554d1-337">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> , który pobiera odwołanie do określonej jednostki w formie strukturalnej.</span><span class="sxs-lookup"><span data-stu-id="554d1-337">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specified entity in structural form.</span></span></summary>
        <returns><span data-ttu-id="554d1-338">Nowy obiekt DbEntityRefExpression, który pobiera odwołanie do określonej jednostki.</span><span class="sxs-lookup"><span data-stu-id="554d1-338">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-339"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-339"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-340"><paramref name="argument" />nie ma typu wyniku jednostki.</span><span class="sxs-lookup"><span data-stu-id="554d1-340"><paramref name="argument" /> does not have an entity result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetRefKey : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefKeyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-341">Wyrażenie, które zawiera odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-341">The expression that provides the reference.</span></span> <span data-ttu-id="554d1-342">To wyrażenie musi mieć typ referencyjny z typem elementu jednostki.</span><span class="sxs-lookup"><span data-stu-id="554d1-342">This expression must have a reference Type with an Entity element type.</span></span></param>
        <summary><span data-ttu-id="554d1-343">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> , który pobiera wartości klucza określonego odwołania w formie strukturalnej.</span><span class="sxs-lookup"><span data-stu-id="554d1-343">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specified reference in structural form.</span></span></summary>
        <returns><span data-ttu-id="554d1-344">Nowy obiekt DbRefKeyExpression, który pobiera wartości klucza określonego odwołania.</span><span class="sxs-lookup"><span data-stu-id="554d1-344">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-345"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-345"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-346"><paramref name="argument" />nie ma typu wyniku odwołania.</span><span class="sxs-lookup"><span data-stu-id="554d1-346"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-347">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-347">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-348">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-348">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-349">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> , który określa, czy lewy argument jest większy niż prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-349">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-350">Nowy obiekt DbComparisonExpression reprezentujący większe niż porównanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-350">A new DbComparisonExpression representing the greater-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-351"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-351"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-352">Nie istnieje wspólny typ wyników porównywalnych dla zamówienia <paramref name="left" /> między <paramref name="right" />i.</span><span class="sxs-lookup"><span data-stu-id="554d1-352">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-353">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-353">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-354">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-354">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-355">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> , który określa, czy lewy argument jest większy lub równy argumentowi praw.</span><span class="sxs-lookup"><span data-stu-id="554d1-355">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-356">Nowy obiekt DbComparisonExpression reprezentujący porównanie większe niż lub równe.</span><span class="sxs-lookup"><span data-stu-id="554d1-356">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-357"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-357"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-358">Nie istnieje wspólny typ wyników porównywalnych dla zamówienia <paramref name="left" /> między <paramref name="right" />i.</span><span class="sxs-lookup"><span data-stu-id="554d1-358">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member GroupBind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-359">Wyrażenie, które ma zostać powiązane.</span><span class="sxs-lookup"><span data-stu-id="554d1-359">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="554d1-360">Tworzy nowe powiązanie wyrażenia grupy, które używa wygenerowanej zmiennej i nazw zmiennych grupy w celu powiązania danego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-360">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="554d1-361">Nowe wyrażenie grupy powiązania z określonym wyrażeniem i wygenerowaną nazwą zmiennej i nazwą zmiennej grupy.</span><span class="sxs-lookup"><span data-stu-id="554d1-361">A new group expression binding with the specified expression and a generated variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-362"><paramref name="input" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-362"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-363"><paramref name="input" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-363"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberSignature Language="F#" Value="static member GroupBindAs : System.Data.Common.CommandTrees.DbExpression * string * string -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs (input, varName, groupVarName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="varName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="groupVarName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-364">Wyrażenie, które ma zostać powiązane.</span><span class="sxs-lookup"><span data-stu-id="554d1-364">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="554d1-365">Nazwa zmiennej, która powinna być używana dla powiązania.</span><span class="sxs-lookup"><span data-stu-id="554d1-365">The variable name that should be used for the binding.</span></span></param>
        <param name="groupVarName"><span data-ttu-id="554d1-366">Nazwa zmiennej, która powinna być używana do odwoływania się do grupy w przypadku użycia nowego powiązania wyrażenia grupy w wyrażeniu grupowym.</span><span class="sxs-lookup"><span data-stu-id="554d1-366">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span></span></param>
        <summary><span data-ttu-id="554d1-367">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> , który używa określonej nazwy zmiennej i nazw zmiennych grupy do powiązania danego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-367">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="554d1-368">Nowe wyrażenie grupy powiązania z określonym wyrażeniem, nazwą zmiennej i nazwą zmiennej grupy.</span><span class="sxs-lookup"><span data-stu-id="554d1-368">A new group expression binding with the specified expression, variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-369"><paramref name="input" /><paramref name="varName" /> lub<paramref name="groupVarName" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-369"><paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-370"><paramref name="input" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-370"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Data.Common.CommandTrees.DbGroupExpressionBinding * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbGroupByExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy (input, keys, aggregates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-371">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-371">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="keys"><span data-ttu-id="554d1-372">Lista par wyrażeń ciągów, które definiują kolumny grupowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-372">A list of string-expression pairs that define the grouping columns.</span></span></param>
        <param name="aggregates"><span data-ttu-id="554d1-373">Lista wyrażeń, które określają Agregaty do zastosowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-373">A list of expressions that specify aggregates to apply.</span></span></param>
        <summary><span data-ttu-id="554d1-374">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> , który grupuje elementy zestawu wejściowego zgodnie z określonymi kluczami grupy i stosuje dane zagregowane.</span><span class="sxs-lookup"><span data-stu-id="554d1-374">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span></span></summary>
        <returns><span data-ttu-id="554d1-375">Nowy DbGroupAggregate z określonym zestawem wejściowym, grupowaniem kluczy i agregacjami.</span><span class="sxs-lookup"><span data-stu-id="554d1-375">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-376">DbGroupAggregate umożliwia listę kluczy lub listę agregacji, które mają być puste, ale nie oba.</span><span class="sxs-lookup"><span data-stu-id="554d1-376">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-377"><paramref name="input" />, <paramref name="keys" /> <paramref name="keys" /> <paramref name="aggregates" /> lub <paramref name="aggregates" /> ma wartość null, zawiera klucz kolumny lub wyrażenie o wartości null albo zawiera nazwę kolumny agregującej o wartości null lub wartość zagregowaną.</span><span class="sxs-lookup"><span data-stu-id="554d1-377"><paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-378">W <paramref name="keys" /> obu <paramref name="aggregates" /> przypadkach i są puste lub określono nieprawidłową lub zduplikowaną nazwę kolumny.</span><span class="sxs-lookup"><span data-stu-id="554d1-378">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-379">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe wyrażenia, w określonym warunku sprzężenia, przy użyciu InnerJoin <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-379">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-380">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-380">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-381">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu po prawej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-381">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="554d1-382">Metoda reprezentująca warunek do przyłączenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-382">A method representing the condition on which to join.</span></span> <span data-ttu-id="554d1-383">Ta metoda musi generować wyrażenie z typem wyniku Boolean, który udostępnia logikę warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-383">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="554d1-384">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe wyrażenia, w określonym warunku sprzężenia, przy użyciu InnerJoin <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-385">Nowy DbJoinExpression z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> InnerJoin, który reprezentuje operację INNER JOIN zastosowana do lewego i prawego zestawu wejściowego w ramach danego warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-385">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-386"><paramref name="left" /><paramref name="right" /> lub<paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-386"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="554d1-387">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-387">-or-</span></span>

<span data-ttu-id="554d1-388">Wyrażenie utworzone przez <paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-388">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-389"><paramref name="left" />lub <paramref name="right" /> nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-389"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-390">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-390">-or-</span></span>

<span data-ttu-id="554d1-391">Wyrażenie utworzone przez <paramref name="joinCondition" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-391">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-392"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Określa argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-392">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-393">Element <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> określający argument Ustaw po prawej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-393">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="554d1-394">Wyrażenie określające warunek do przyłączenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-394">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="554d1-395">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe powiązania wyrażenia, w określonym warunku sprzężenia, przy użyciu InnerJoin <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-395">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-396">Nowy DbJoinExpression z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> InnerJoin, który reprezentuje operację INNER JOIN zastosowana do lewego i prawego zestawu wejściowego w ramach danego warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-396">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-397"><paramref name="left" /><paramref name="right" /> lub<paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-397"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-398"><paramref name="joinCondition" />nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-398"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIntersectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-399">Wyrażenie definiujące argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-399">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-400">Wyrażenie definiujące prawy argument zestawu.</span><span class="sxs-lookup"><span data-stu-id="554d1-400">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="554d1-401">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> , który obliczy przecięcie argumentów dla lewego i prawego zestawu.</span><span class="sxs-lookup"><span data-stu-id="554d1-401">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span></span></summary>
        <returns><span data-ttu-id="554d1-402">Nowy DbIntersectExpression reprezentujący przecięcie argumentów lewego i prawego.</span><span class="sxs-lookup"><span data-stu-id="554d1-402">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-403"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-403"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-404">Nie istnieje wspólny typ wyników kolekcji między <paramref name="left" /> lub <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-404">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-405">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> element reprezentujący aplikację określonej funkcji lambda do podanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="554d1-405">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="554d1-406"><see cref="T:System.Data.Common.CommandTrees.DbLambda" /> Wystąpienie reprezentujące funkcję lambda do zastosowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-406">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="554d1-407">Lista wyrażeń, które zawierają argumenty.</span><span class="sxs-lookup"><span data-stu-id="554d1-407">A list of expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="554d1-408">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> element reprezentujący aplikację określonej funkcji lambda do podanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="554d1-408">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="554d1-409">Nowy DbLambdaExpression reprezentujący aplikację funkcji lambda.</span><span class="sxs-lookup"><span data-stu-id="554d1-409">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-410"><paramref name="lambda" />lub <paramref name="arguments" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-410"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-411">Liczba <paramref name="arguments" /> nie jest równa liczbie zmiennych zadeklarowanych przez <paramref name="lambda" />lub <paramref name="arguments" /> zawiera wyrażenie, które ma typ wynikowy, który nie jest równy lub promocja do odpowiadającego typu zmiennej.</span><span class="sxs-lookup"><span data-stu-id="554d1-411">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="554d1-412"><see cref="T:System.Data.Common.CommandTrees.DbLambda" /> Wystąpienie reprezentujące funkcję lambda do zastosowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-412">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="554d1-413">Wyrażenia, które zawierają argumenty.</span><span class="sxs-lookup"><span data-stu-id="554d1-413">Expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="554d1-414">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> element reprezentujący aplikację określonej funkcji lambda do podanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="554d1-414">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="554d1-415">Nowy DbLambdaExpression reprezentujący aplikację funkcji lambda.</span><span class="sxs-lookup"><span data-stu-id="554d1-415">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-416"><paramref name="lambda" />lub <paramref name="arguments" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-416"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-417">Liczba <paramref name="arguments" /> nie jest równa liczbie zmiennych zadeklarowanych przez <paramref name="lambda" />lub <paramref name="arguments" /> zawiera wyrażenie, które ma typ wynikowy, który nie jest równy lub promocja do odpowiadającego typu zmiennej.</span><span class="sxs-lookup"><span data-stu-id="554d1-417">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="554d1-418">Metadane dla funkcji, która ma zostać wywołana.</span><span class="sxs-lookup"><span data-stu-id="554d1-418">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="554d1-419">Lista wyrażeń, które dostarczają argumenty do funkcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-419">A list of expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="554d1-420">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> element reprezentujący wywołanie określonej funkcji z podanymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="554d1-420">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="554d1-421">Nowy obiekcie DbFunctionExpression reprezentujący wywołanie funkcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-421">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-422"><paramref name="function" />ma wartość null <paramref name="arguments" /> lub ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-422"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-423">Liczba <paramref name="arguments" /> nie jest równa liczbie parametrów zadeklarowanych przez <paramref name="function" />lub <paramref name="arguments" /> zawiera wyrażenie, które ma typ wynikowy, który nie jest równy lub nie ma promocji do odpowiadającego mu typu parametru funkcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-423">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="554d1-424">Metadane dla funkcji, która ma zostać wywołana.</span><span class="sxs-lookup"><span data-stu-id="554d1-424">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="554d1-425">Wyrażenia, które dostarczają argumenty do funkcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-425">Expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="554d1-426">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> element reprezentujący wywołanie określonej funkcji z podanymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="554d1-426">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="554d1-427">Nowy obiekcie DbFunctionExpression reprezentujący wywołanie funkcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-427">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-428"><paramref name="function" />ma wartość null <paramref name="arguments" /> lub ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-428"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-429">Liczba <paramref name="arguments" /> nie jest równa liczbie parametrów zadeklarowanych przez <paramref name="function" />lub <paramref name="arguments" /> zawiera wyrażenie, które ma typ wynikowy, który nie jest równy lub nie ma promocji do odpowiadającego mu typu parametru funkcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-429">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsEmpty : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsEmptyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-430">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-430">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-431">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> , który określa, czy określony argument zestawu jest pustym zestawem.</span><span class="sxs-lookup"><span data-stu-id="554d1-431">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span></span></summary>
        <returns><span data-ttu-id="554d1-432">Nowy DbIsEmptyExpression z określonym argumentem.</span><span class="sxs-lookup"><span data-stu-id="554d1-432">A new DbIsEmptyExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-433"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-433"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-434"><paramref name="argument" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-434"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsNull : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-435">Wyrażenie określające argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-435">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="554d1-436">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> , który określa, czy określony argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-436">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span></span></summary>
        <returns><span data-ttu-id="554d1-437">Nowy DbIsNullExpression z określonym argumentem.</span><span class="sxs-lookup"><span data-stu-id="554d1-437">A new DbIsNullExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-438"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-438"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-439"><paramref name="argument" />ma typ wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-439"><paramref name="argument" /> has a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-440">Wyrażenie określające wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="554d1-440">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="554d1-441">Typ metadanych, który określa typ, do którego należy porównywać typ wyniku wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-441">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="554d1-442">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> , który określa, czy dany argument jest określonego typu czy podtyp.</span><span class="sxs-lookup"><span data-stu-id="554d1-442">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span></span></summary>
        <returns><span data-ttu-id="554d1-443">Nowy DbIsOfExpression z określonym wystąpieniem i typem oraz DbExpressionKind IsOf.</span><span class="sxs-lookup"><span data-stu-id="554d1-443">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-444">DbIsOfExpression wymaga, `argument` aby miały typ wyników polimorficznych, `type` który jest typem z tej samej hierarchii typów, co ten typ wyniku.</span><span class="sxs-lookup"><span data-stu-id="554d1-444">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-445"><paramref name="argument" />lub <paramref name="type" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-445"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-446"><paramref name="type" />nie znajduje się w tej samej hierarchii typów co typ <paramref name="argument" />wyniku.</span><span class="sxs-lookup"><span data-stu-id="554d1-446"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOfOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-447">Wyrażenie określające wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="554d1-447">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="554d1-448">Typ metadanych, który określa typ, do którego należy porównywać typ wyniku wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-448">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="554d1-449">Tworzy nowe <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> wyrażenie określające, czy dany argument jest określonego typu, i tylko ten typ (nie podtyp).</span><span class="sxs-lookup"><span data-stu-id="554d1-449">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span></span></summary>
        <returns><span data-ttu-id="554d1-450">Nowy DbIsOfExpression z określonym wystąpieniem i typem oraz DbExpressionKind IsOfOnly.</span><span class="sxs-lookup"><span data-stu-id="554d1-450">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-451">DbIsOfExpression wymaga, `argument` aby miały typ wyników polimorficznych, `type` który jest typem z tej samej hierarchii typów, co ten typ wyniku.</span><span class="sxs-lookup"><span data-stu-id="554d1-451">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-452"><paramref name="argument" />lub <paramref name="type" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-452"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-453"><paramref name="type" />nie znajduje się w tej samej hierarchii typów co typ <paramref name="argument" />wyniku.</span><span class="sxs-lookup"><span data-stu-id="554d1-453"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="outer"><span data-ttu-id="554d1-454">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu zewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-454">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="554d1-455">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-455">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="554d1-456">Metoda określająca sposób, w jaki wartość zewnętrznego klucza powinna pochodzić od elementu zestawu zewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-456">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="554d1-457">Metoda określająca, jak wewnętrzna wartość klucza powinna pochodzić od elementu zestawu wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-457">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <summary><span data-ttu-id="554d1-458">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który sprzęga zestawy określone przez wyrażenie zewnętrzne i wewnętrzne, na warunek równości między określonymi kluczami zewnętrznymi i wewnętrznymi przy użyciu InnerJoin <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-458">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-459">Nowy DbJoinExpression, z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> InnerJoin, reprezentujący wewnętrzną operację sprzężenia zastosowany do lewego i prawego zestawu danych wejściowych w ramach warunku sprzężenia porównującego wartości zewnętrzne i wewnętrzne klucza dla równości.</span><span class="sxs-lookup"><span data-stu-id="554d1-459">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-460"><paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" /> lub<paramref name="innerKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-460"><paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span>

<span data-ttu-id="554d1-461">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-461">-or-</span></span> 
<span data-ttu-id="554d1-462">Wyrażenie utworzone przez <paramref name="outerKey" /> lub <paramref name="innerKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-462">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-463"><paramref name="outer" />lub <paramref name="inner" /> nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-463"><paramref name="outer" /> or <paramref name="inner" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-464">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-464">-or-</span></span>

<span data-ttu-id="554d1-465">Wyrażenia utworzone przez <paramref name="outerKey" /> i <paramref name="innerKey" /> nie są porównywalne ze względu na równość.</span><span class="sxs-lookup"><span data-stu-id="554d1-465">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="554d1-466">Typ <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-466">The type of the <paramref name="selector" />.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="554d1-467">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu zewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-467">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="554d1-468">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-468">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="554d1-469">Metoda określająca sposób, w jaki wartość zewnętrznego klucza powinna pochodzić od elementu zestawu zewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-469">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="554d1-470">Metoda określająca, jak wewnętrzna wartość klucza powinna pochodzić od elementu zestawu wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-470">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <param name="selector"><span data-ttu-id="554d1-471">Metoda, która określa, jak element zestawu wyników powinien pochodzić od elementów zestawów wewnętrznych i zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="554d1-471">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span></span> <span data-ttu-id="554d1-472">Ta metoda musi generować wystąpienie typu zgodnego z przyłączaniem i można je rozpoznać w <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-472">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="554d1-473">Wymagania dotyczące zgodności dla <c>TSelector</c> są opisane w uwagi.</span><span class="sxs-lookup"><span data-stu-id="554d1-473">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="554d1-474">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> projekt, który projektuje określony selektor dla zestawów określonych przez wyrażenie zewnętrzne i wewnętrzne, dołączone do warunku równości między określonymi kluczami zewnętrznymi i wewnętrznymi przy użyciu InnerJoin <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-474">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-475">Nowy DbProjectExpression z określonym selektorem jako projekcją i nową DbJoinExpression jako dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="554d1-475">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span></span> <span data-ttu-id="554d1-476">Dane wejściowe DbJoinExpression są tworzone z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> InnerJoin, które reprezentuje operację INNER JOIN zastosowana do lewego i prawego zestawu wejściowego w ramach warunku sprzężenia porównującego wartości zewnętrzne i wewnętrzne klucza dla równości.</span><span class="sxs-lookup"><span data-stu-id="554d1-476">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-477">Aby była zgodna z funkcją Join `TSelector` , musi pochodzić od <xref:System.Data.Common.CommandTrees.DbExpression>elementu lub musi być typem anonimowym z właściwościami pochodnymi DbExpression.</span><span class="sxs-lookup"><span data-stu-id="554d1-477">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="554d1-478">Poniżej przedstawiono przykłady obsługiwanych typów dla `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="554d1-478">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="554d1-479">(`TSelector` is<xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="554d1-479">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="554d1-480">(`TSelector` jest typem anonimowym z właściwościami pochodnymi DbExpression).</span><span class="sxs-lookup"><span data-stu-id="554d1-480">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-481"><paramref name="outer" />, <paramref name="inner" /> ,<paramref name="outerKey" /> lub<paramref name="selector" />ma wartość null. <paramref name="innerKey" /></span><span class="sxs-lookup"><span data-stu-id="554d1-481"><paramref name="outer" />,  <paramref name="inner" />,  <paramref name="outerKey" />,  <paramref name="innerKey" /> or <paramref name="selector" /> is null.</span></span>

<span data-ttu-id="554d1-482">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-482">-or-</span></span>

<span data-ttu-id="554d1-483">Wyrażenie utworzone przez <paramref name="outerKey" /> lub <paramref name="innerKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-483">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span>

<span data-ttu-id="554d1-484">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-484">-or-</span></span>

<span data-ttu-id="554d1-485">Wynik <paramref name="selector" /> ma wartość null po konwersji na DbExpression.</span><span class="sxs-lookup"><span data-stu-id="554d1-485">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-486"><paramref name="outer" />lub <paramref name="inner" /> nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-486"><paramref name="outer" /> or <paramref name="inner" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-487">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-487">-or-</span></span>

<span data-ttu-id="554d1-488">Wyrażenia utworzone przez <paramref name="outerKey" /> i <paramref name="innerKey" /> nie są porównywalne ze względu na równość.</span><span class="sxs-lookup"><span data-stu-id="554d1-488">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> is not comparable for equality.</span></span>

<span data-ttu-id="554d1-489">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-489">-or-</span></span> 
<span data-ttu-id="554d1-490">Wynik <paramref name="selector" /> nie jest zgodny z SelectMany.</span><span class="sxs-lookup"><span data-stu-id="554d1-490">The result of <paramref name="selector" /> is not compatible with SelectMany.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-491">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> z określoną wbudowaną implementacją funkcji lambda i formalnymi parametrami.</span><span class="sxs-lookup"><span data-stu-id="554d1-491">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="554d1-492">Wyrażenie definiujące logikę funkcji lambda.</span><span class="sxs-lookup"><span data-stu-id="554d1-492">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="554d1-493"><see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> Kolekcja, która reprezentuje parametry formalne funkcji lambda.</span><span class="sxs-lookup"><span data-stu-id="554d1-493">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="554d1-494">Te zmienne są prawidłowe do użycia w <paramref name="body" /> wyrażeniu.</span><span class="sxs-lookup"><span data-stu-id="554d1-494">These variables are valid for use in the <paramref name="body" /> expression.</span></span></param>
        <summary><span data-ttu-id="554d1-495">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> z określoną wbudowaną implementacją funkcji lambda i formalnymi parametrami.</span><span class="sxs-lookup"><span data-stu-id="554d1-495">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="554d1-496">Nowa DbLambda opisująca wbudowaną funkcję lambda z określonymi parametrami treści i formalnymi.</span><span class="sxs-lookup"><span data-stu-id="554d1-496">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-497"><paramref name="variables" />ma wartość null lub zawiera <paramref name="body" /> wartość null lub ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-497"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-498"><paramref name="variables" />zawiera więcej niż jeden element o tej samej nazwie zmiennej.</span><span class="sxs-lookup"><span data-stu-id="554d1-498"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression[] -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="554d1-499">Wyrażenie definiujące logikę funkcji lambda.</span><span class="sxs-lookup"><span data-stu-id="554d1-499">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="554d1-500"><see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> Kolekcja, która reprezentuje parametry formalne funkcji lambda.</span><span class="sxs-lookup"><span data-stu-id="554d1-500">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="554d1-501">Te zmienne są prawidłowe do użycia w <paramref name="body" /> wyrażeniu.</span><span class="sxs-lookup"><span data-stu-id="554d1-501">These variables are valid for use in the <paramref name="body" /> expression.</span></span></param>
        <summary><span data-ttu-id="554d1-502">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> z określoną wbudowaną implementacją funkcji lambda i formalnymi parametrami.</span><span class="sxs-lookup"><span data-stu-id="554d1-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="554d1-503">Nowa DbLambda opisująca wbudowaną funkcję lambda z określonymi parametrami treści i formalnymi.</span><span class="sxs-lookup"><span data-stu-id="554d1-503">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-504"><paramref name="variables" />ma wartość null lub zawiera <paramref name="body" /> wartość null lub ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-504"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-505"><paramref name="variables" />zawiera więcej niż jeden element o tej samej nazwie zmiennej.</span><span class="sxs-lookup"><span data-stu-id="554d1-505"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-506">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe wyrażenia, w określonym warunku sprzężenia, przy użyciu LeftOuterJoin — <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-506">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-507">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-507">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-508">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który określa argument zestawu po prawej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-508">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="554d1-509">Metoda reprezentująca warunek do przyłączenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-509">A method representing the condition on which to join.</span></span> <span data-ttu-id="554d1-510">Ta metoda musi generować wyrażenie z typem wyniku Boolean, który udostępnia logikę warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-510">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="554d1-511">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe wyrażenia, w określonym warunku sprzężenia, przy użyciu LeftOuterJoin — <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-511">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-512">Nowy DbJoinExpression, z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> LeftOuterJoin —, reprezentujący lewą operację sprzężenia zewnętrznego zastosowany do lewego i prawego zestawu danych wejściowych w ramach danego warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-512">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-513"><paramref name="left" /><paramref name="right" /> lub<paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-513"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="554d1-514">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-514">-or-</span></span>

<span data-ttu-id="554d1-515">Wyrażenie utworzone przez <paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-515">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-516"><paramref name="left" />lub <paramref name="right" /> nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-516"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-517">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-517">-or-</span></span>

<span data-ttu-id="554d1-518">Wyrażenie utworzone przez <paramref name="joinCondition" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-518">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-519"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Określa argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-519">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-520">Element <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> określający argument Ustaw po prawej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-520">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="554d1-521">Wyrażenie określające warunek do przyłączenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-521">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="554d1-522">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> , który dołącza do zestawów określonych przez lewe i prawe powiązania wyrażenia, w określonym warunku sprzężenia, przy użyciu LeftOuterJoin — <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />jako.</span><span class="sxs-lookup"><span data-stu-id="554d1-522">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-523">Nowy DbJoinExpression, z <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> LeftOuterJoin —, reprezentujący lewą operację sprzężenia zewnętrznego zastosowany do lewego i prawego zestawu danych wejściowych w ramach danego warunku sprzężenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-523">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-524"><paramref name="left" /><paramref name="right" /> lub<paramref name="joinCondition" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-524"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-525"><paramref name="joinCondition" />nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-525"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-526">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-526">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-527">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-527">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-528">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> , który określa, czy lewy argument jest mniejszy niż prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-528">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-529">Nowy obiekt DbComparisonExpression reprezentujący mniej niż porównanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-529">A new DbComparisonExpression representing the less-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-530"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-530"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-531">Nie istnieje wspólny typ wyników porównywalnych dla zamówienia <paramref name="left" /> między <paramref name="right" />i.</span><span class="sxs-lookup"><span data-stu-id="554d1-531">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-532">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-532">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-533">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-533">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-534">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> , który określa, czy lewy argument jest mniejszy niż lub równy argumentowi praw.</span><span class="sxs-lookup"><span data-stu-id="554d1-534">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-535">Nowy obiekt DbComparisonExpression reprezentujący porównanie mniejsze niż lub równe.</span><span class="sxs-lookup"><span data-stu-id="554d1-535">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-536"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-536"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-537">Nie istnieje wspólny typ wyników, który ma zarówno równość równości, jak i kolejności <paramref name="left" /> , <paramref name="right" />między i.</span><span class="sxs-lookup"><span data-stu-id="554d1-537">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-538">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> , który porównuje określony ciąg wejściowy z danym wzorcem.</span><span class="sxs-lookup"><span data-stu-id="554d1-538">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-539">Wyrażenie określające ciąg wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-539">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="554d1-540">Wyrażenie określające ciąg wzorca.</span><span class="sxs-lookup"><span data-stu-id="554d1-540">An expression that specifies the pattern string.</span></span></param>
        <summary><span data-ttu-id="554d1-541">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> , który porównuje określony ciąg wejściowy z danym wzorcem.</span><span class="sxs-lookup"><span data-stu-id="554d1-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
        <returns><span data-ttu-id="554d1-542">Nowy DbLikeExpression z określonym wejściem, wzorcem i ucieczką o wartości null.</span><span class="sxs-lookup"><span data-stu-id="554d1-542">A new DbLikeExpression with the specified input, pattern and a null escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-543"><paramref name="Argument" />lub <paramref name="pattern" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-543"><paramref name="Argument" /> or <paramref name="pattern" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-544"><paramref name="Argument" />lub <paramref name="pattern" /> nie ma typu wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="554d1-544"><paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-545">Wyrażenie określające ciąg wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-545">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="554d1-546">Wyrażenie określające ciąg wzorca.</span><span class="sxs-lookup"><span data-stu-id="554d1-546">An expression that specifies the pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="554d1-547">Opcjonalne wyrażenie określające ciąg ucieczki.</span><span class="sxs-lookup"><span data-stu-id="554d1-547">An optional expression that specifies the escape string.</span></span></param>
        <summary><span data-ttu-id="554d1-548">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> , który porównuje określony ciąg wejściowy z danym wzorcem przy użyciu opcjonalnej ucieczki.</span><span class="sxs-lookup"><span data-stu-id="554d1-548">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span></span></summary>
        <returns><span data-ttu-id="554d1-549">Nowy DbLikeExpression z określonym wejściem, wzorcem i ucieczką.</span><span class="sxs-lookup"><span data-stu-id="554d1-549">A new DbLikeExpression with the specified input, pattern and escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-550"><paramref name="argument" /><paramref name="pattern" /> lub<paramref name="escape" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-550"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-551"><paramref name="argument" /><paramref name="pattern" /> lub<paramref name="escape" /> nie ma typu wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="554d1-551"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Limit : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-552">Wyrażenie określające kolekcję wejściową.</span><span class="sxs-lookup"><span data-stu-id="554d1-552">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="554d1-553">Wyrażenie określające wartość limitu.</span><span class="sxs-lookup"><span data-stu-id="554d1-553">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="554d1-554">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> , który ogranicza liczbę elementów w kolekcji argumentów do określonej wartości limitu liczby.</span><span class="sxs-lookup"><span data-stu-id="554d1-554">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="554d1-555">Wyniki powiązane nie są uwzględniane w danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-555">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="554d1-556">Nowy DbLimitExpression z określonym argumentem i wartościami limitu liczby, które nie zawierają powiązanych wyników.</span><span class="sxs-lookup"><span data-stu-id="554d1-556">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-557"><paramref name="argument" />lub <paramref name="count" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-557"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-558"><paramref name="argument" />nie ma typu wyników kolekcji lub <paramref name="count" /> nie ma typu wyniku, który jest równy lub promocyjny do 64-bitowej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="554d1-558"><paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Minus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-559">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-559">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-560">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-560">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-561">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> , która odejmuje prawy argument od lewego argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-561">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-562">Nowy metody DbArithmeticExpression reprezentujący operację odejmowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-562">A new DbArithmeticExpression representing the subtraction operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-563"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-563"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-564">Nie istnieje wspólny typ wyników liczbowych <paramref name="left" /> między <paramref name="right" />i.</span><span class="sxs-lookup"><span data-stu-id="554d1-564">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Modulo : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-565">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-565">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-566">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-566">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-567">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> , który obliczy resztę lewego argumentu podzieloną przez prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-567">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-568">Nowy metody DbArithmeticExpression reprezentujący operację modulo.</span><span class="sxs-lookup"><span data-stu-id="554d1-568">A new DbArithmeticExpression representing the modulo operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-569"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-569"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-570">Nie istnieje wspólny typ wyników liczbowych <paramref name="left" /> między <paramref name="right" />i.</span><span class="sxs-lookup"><span data-stu-id="554d1-570">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-571">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-571">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-572">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-572">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-573">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> , który mnoży lewy argument przez prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-573">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-574">Nowy metody DbArithmeticExpression reprezentujący operację mnożenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-574">A new DbArithmeticExpression representing the multiplication operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-575"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-575"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-576">Nie istnieje wspólny typ wyników liczbowych <paramref name="left" /> między <paramref name="right" />i.</span><span class="sxs-lookup"><span data-stu-id="554d1-576">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-577">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> element reprezentujący nawigację w ramach kompozycji lub relacji skojarzenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-577">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (navigateFrom, fromEnd, toEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="navigateFrom"><span data-ttu-id="554d1-578">Wyrażenie określające wystąpienie, z którego powinna się odbywać nawigacja.</span><span class="sxs-lookup"><span data-stu-id="554d1-578">An expression that specifies the instance from which navigation should occur.</span></span></param>
        <param name="fromEnd"><span data-ttu-id="554d1-579">Metadane dla właściwości reprezentującej koniec relacji, z której powinien się odbywać nawigacja.</span><span class="sxs-lookup"><span data-stu-id="554d1-579">Metadata for the property that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEnd"><span data-ttu-id="554d1-580">Metadane dla właściwości reprezentującej koniec relacji, z którą powinna się odbywać nawigacja.</span><span class="sxs-lookup"><span data-stu-id="554d1-580">Metadata for the property that represents the end of the relationship to which navigation should occur.</span></span></param>
        <summary><span data-ttu-id="554d1-581">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> element reprezentujący nawigację w ramach kompozycji lub relacji skojarzenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-581">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="554d1-582">Nowy DbRelationshipNavigationExpression reprezentujący przechodzenie określonych typów relacji z i do relacji na końcach określonego typu z określonego wystąpienia źródłowego nawigacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-582">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-583"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>wymaga, aby Nawigacja zawsze odbywała się z odwołania, `navigateFrom` i dlatego musi zawsze mieć typ wyniku odwołania.</span><span class="sxs-lookup"><span data-stu-id="554d1-583"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-584"><paramref name="fromEnd" /><paramref name="toEnd" /> lub<paramref name="navigateFrom" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-584"><paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-585"><paramref name="fromEnd" />i <paramref name="toEnd" /> nie są deklarowane przez ten sam typ relacji lub <paramref name="navigateFrom" /> mają typ wyniku, który jest niezgodny <paramref name="fromEnd" />z typem właściwości.</span><span class="sxs-lookup"><span data-stu-id="554d1-585"><paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Metadata.Edm.RelationshipType * string * string * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (type, fromEndName, toEndName, navigateFrom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fromEndName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toEndName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="554d1-586">Metadane dla typu relacji, który reprezentuje relację.</span><span class="sxs-lookup"><span data-stu-id="554d1-586">Metadata for the relation type that represents the relationship.</span></span></param>
        <param name="fromEndName"><span data-ttu-id="554d1-587">Nazwa właściwości typu relacji reprezentująca koniec relacji, z której powinien się odbywać nawigacja.</span><span class="sxs-lookup"><span data-stu-id="554d1-587">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEndName"><span data-ttu-id="554d1-588">Nazwa właściwości typu relacji reprezentująca koniec relacji, z którą powinna się odbywać nawigacja.</span><span class="sxs-lookup"><span data-stu-id="554d1-588">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span></span></param>
        <param name="navigateFrom"><span data-ttu-id="554d1-589">Wyrażenie określa wystąpienie, z którego powinna się odbywać nawigacja.</span><span class="sxs-lookup"><span data-stu-id="554d1-589">An expression the specifies the instance from which navigation should occur.</span></span></param>
        <summary><span data-ttu-id="554d1-590">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> element reprezentujący nawigację w ramach kompozycji lub relacji skojarzenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-590">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="554d1-591">Nowy DbRelationshipNavigationExpression reprezentujący przechodzenie określonych typów relacji z i do relacji na końcach określonego typu z określonego wystąpienia źródłowego nawigacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-591">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-592"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>wymaga, aby Nawigacja zawsze odbywała się z odwołania, `navigateFrom` i dlatego musi zawsze mieć typ wyniku odwołania.</span><span class="sxs-lookup"><span data-stu-id="554d1-592"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-593"><paramref name="type" />, <paramref name="fromEndName" />, <paramref name="toEndName" /> lub<paramref name="navigateFrom" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-593"><paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-594"><paramref name="type" />nie jest skojarzony z obszarem roboczym metadanych tego drzewa <paramref name="navigateFrom" /> poleceń lub jest skojarzony z innym drzewem poleceń <paramref name="type" /> lub nie deklaruje właściwości End relacji o nazwie <paramref name="toEndName" /> lub <paramref name="fromEndName" />lub <paramref name="navigateFrom" /> ma wynik Typ, który nie jest zgodny z typem właściwości właściwości End relacji o nazwie <paramref name="fromEndName" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-594"><paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-595">Wyrażenie określające argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-595">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="554d1-596">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> , który negacj wartość argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-596">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-597">Nowy metody DbArithmeticExpression reprezentujący operację negacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-597">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-598"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-598"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-599">Nie istnieje typ wyniku liczbowego <paramref name="argument" />dla elementu.</span><span class="sxs-lookup"><span data-stu-id="554d1-599">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-600">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-600">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="554d1-601">Typ nowego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-601">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="554d1-602">Wyrażenia, które określają wartości nowych wystąpień, interpretowane według typu wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-602">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="554d1-603">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-603">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="554d1-604">Jeśli argument typu jest typem kolekcji, argumenty określają elementy kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-604">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="554d1-605">W przeciwnym razie argumenty są używane jako wartości właściwości lub kolumn w nowym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="554d1-605">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="554d1-606">Nowy obiekt DbNewInstanceExpression o określonym typie i argumentach.</span><span class="sxs-lookup"><span data-stu-id="554d1-606">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-607">Jeśli `instanceType` jest typem kolekcji, każde wyrażenie w `arguments` musi mieć typ wynikowy, który jest promocyjny do typu `instanceType`elementu.</span><span class="sxs-lookup"><span data-stu-id="554d1-607">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="554d1-608">Jeśli `instanceType` jest typem wiersza, `arguments` musi zawierać tyle wyrażeń, ile zawiera kolumny w typie wiersza, a typ wyniku każdego wyrażenia musi być równy lub promocyjny do typu odpowiadającej kolumny.</span><span class="sxs-lookup"><span data-stu-id="554d1-608">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="554d1-609">Typ wiersza, który nie deklaruje żadnych kolumn, jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-609">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="554d1-610">Jeśli `instanceType` jest typem jednostki, `arguments` musi zawierać tyle wyrażeń, ile istnieją właściwości zdefiniowane przez typ, a typ wyniku każdego wyrażenia musi być równy lub promocyjny do typu odpowiedniej właściwości.</span><span class="sxs-lookup"><span data-stu-id="554d1-610">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-611"><paramref name="instanceType" />lub <paramref name="arguments" /> ma wartość null lub <paramref name="arguments" /> zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-611"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-612"><paramref name="arguments" />jest pusty lub typy wyników zawartych wyrażeń nie są zgodne z wymaganiami <paramref name="instanceType" /> (jak wyjaśniono w sekcji Uwagi).</span><span class="sxs-lookup"><span data-stu-id="554d1-612"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="554d1-613">Typ nowego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-613">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="554d1-614">Wyrażenia, które określają wartości nowych wystąpień, interpretowane według typu wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-614">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="554d1-615">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-615">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="554d1-616">Jeśli argument typu jest typem kolekcji, argumenty określają elementy kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-616">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="554d1-617">W przeciwnym razie argumenty są używane jako wartości właściwości lub kolumn w nowym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="554d1-617">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="554d1-618">Nowy obiekt DbNewInstanceExpression o określonym typie i argumentach.</span><span class="sxs-lookup"><span data-stu-id="554d1-618">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-619">Jeśli `instanceType` jest typem kolekcji, każde wyrażenie w `arguments` musi mieć typ wynikowy, który jest promocyjny do typu `instanceType`elementu.</span><span class="sxs-lookup"><span data-stu-id="554d1-619">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="554d1-620">Jeśli `instanceType` jest typem wiersza, `arguments` musi zawierać tyle wyrażeń, ile zawiera kolumny w typie wiersza, a typ wyniku każdego wyrażenia musi być równy lub promocyjny do typu odpowiadającej kolumny.</span><span class="sxs-lookup"><span data-stu-id="554d1-620">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="554d1-621">Typ wiersza, który nie deklaruje żadnych kolumn, jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-621">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="554d1-622">Jeśli `instanceType` jest typem jednostki, `arguments` musi zawierać tyle wyrażeń, ile istnieją właściwości zdefiniowane przez typ, a typ wyniku każdego wyrażenia musi być równy lub promocyjny do typu odpowiedniej właściwości.</span><span class="sxs-lookup"><span data-stu-id="554d1-622">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-623"><paramref name="instanceType" />lub <paramref name="arguments" /> ma wartość null lub <paramref name="arguments" /> zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-623"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-624"><paramref name="arguments" />jest pusty lub typy wyników zawartych wyrażeń nie są zgodne z wymaganiami <paramref name="instanceType" /> (jak wyjaśniono w sekcji Uwagi).</span><span class="sxs-lookup"><span data-stu-id="554d1-624"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-625">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> , która konstruuje kolekcję zawierającą określone elementy.</span><span class="sxs-lookup"><span data-stu-id="554d1-625">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="554d1-626">Lista wyrażeń, które dostarczają elementy kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-626">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="554d1-627">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> , która konstruuje kolekcję zawierającą określone elementy.</span><span class="sxs-lookup"><span data-stu-id="554d1-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="554d1-628">Typ kolekcji jest oparty na typie wspólnym elementów.</span><span class="sxs-lookup"><span data-stu-id="554d1-628">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="554d1-629">Jeśli żaden wspólny typ elementu nie istnieje, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="554d1-629">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="554d1-630">Nowy obiekt DbNewInstanceExpression z określonym typem kolekcji i argumentami.</span><span class="sxs-lookup"><span data-stu-id="554d1-630">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-631"><paramref name="elements" />ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-631"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-632"><paramref name="elements" />jest pusty lub zawiera wyrażenia, dla których nie istnieje wspólny typ wyników.</span><span class="sxs-lookup"><span data-stu-id="554d1-632"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="554d1-633">Lista wyrażeń, które dostarczają elementy kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-633">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="554d1-634">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> , która konstruuje kolekcję zawierającą określone elementy.</span><span class="sxs-lookup"><span data-stu-id="554d1-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="554d1-635">Typ kolekcji jest oparty na typie wspólnym elementów.</span><span class="sxs-lookup"><span data-stu-id="554d1-635">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="554d1-636">Jeśli żaden wspólny typ elementu nie istnieje, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="554d1-636">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="554d1-637">Nowy obiekt DbNewInstanceExpression z określonym typem kolekcji i argumentami.</span><span class="sxs-lookup"><span data-stu-id="554d1-637">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-638"><paramref name="elements" />ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-638"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-639"><paramref name="elements" />jest pusty lub zawiera wyrażenia, dla których nie istnieje wspólny typ wyników.</span><span class="sxs-lookup"><span data-stu-id="554d1-639"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberSignature Language="F#" Value="static member NewEmptyCollection : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection collectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collectionType"><span data-ttu-id="554d1-640">Metadane typu dla kolekcji do utworzenia</span><span class="sxs-lookup"><span data-stu-id="554d1-640">The type metadata for the collection to create</span></span></param>
        <summary><span data-ttu-id="554d1-641">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> , która konstruuje pustą kolekcję określonego typu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-641">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span></span></summary>
        <returns><span data-ttu-id="554d1-642">Nowy obiekt DbNewInstanceExpression z określonym typem kolekcji i pustą <paramref name="Arguments" /> listą.</span><span class="sxs-lookup"><span data-stu-id="554d1-642">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-643"><paramref name="collectionType" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-643"><paramref name="collectionType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-644"><paramref name="collectionType" />nie jest typem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-644"><paramref name="collectionType" /> is not a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberSignature Language="F#" Value="static member NewRow : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow columnValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnValues"><span data-ttu-id="554d1-645">Lista par klucz-wartość DbExpression, które definiują strukturę i wartości wiersza.</span><span class="sxs-lookup"><span data-stu-id="554d1-645">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span></span></param>
        <summary><span data-ttu-id="554d1-646">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> , który tworzy wiersz z określonymi nazwanymi kolumnami i podanymi wartościami określonymi jako wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-646">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span></span></summary>
        <returns><span data-ttu-id="554d1-647">Nowy obiekt DbNewInstanceExpression, który reprezentuje konstrukcję wiersza.</span><span class="sxs-lookup"><span data-stu-id="554d1-647">A new DbNewInstanceExpression that represents the construction of the row.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-648"><paramref name="columnValues" />ma wartość null lub zawiera element z nazwą kolumny lub wyrażeniem o wartości null.</span><span class="sxs-lookup"><span data-stu-id="554d1-648"><paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-649"><paramref name="columnValues" />jest pusty lub zawiera zduplikowaną lub nieprawidłową nazwę kolumny.</span><span class="sxs-lookup"><span data-stu-id="554d1-649"><paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Not : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbNotExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-650">Wyrażenie logiczne, które określa argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-650">A Boolean expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="554d1-651">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> , który wykonuje logiczne Negacja danego argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-651">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-652">Nowy obiekt DbNotExpression z określonym argumentem.</span><span class="sxs-lookup"><span data-stu-id="554d1-652">A new DbNotExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-653"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-653"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-654"><paramref name="argument" />nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-654"><paramref name="argument" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member NotEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-655">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-655">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-656">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-656">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-657">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> , który porównuje lewe i prawe argumenty dla nierówności.</span><span class="sxs-lookup"><span data-stu-id="554d1-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span></span></summary>
        <returns><span data-ttu-id="554d1-658">Nowy obiekt DbComparisonExpression reprezentujący nierówność porównania.</span><span class="sxs-lookup"><span data-stu-id="554d1-658">A new DbComparisonExpression representing the inequality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-659"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-659"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-660">Nie istnieje wspólny typ wyniku równości równość między <paramref name="left" /> i. <paramref name="right" /></span><span class="sxs-lookup"><span data-stu-id="554d1-660">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberSignature Language="F#" Value="static member Null : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null nullType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="nullType"><span data-ttu-id="554d1-661">Typ wartości null.</span><span class="sxs-lookup"><span data-stu-id="554d1-661">The type of the null value.</span></span></param>
        <summary><span data-ttu-id="554d1-662">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, która reprezentuje wpisaną wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span></span></summary>
        <returns><span data-ttu-id="554d1-663">Wystąpienie elementu DbNullExpression.</span><span class="sxs-lookup"><span data-stu-id="554d1-663">An instance of DbNullExpression.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-664"><paramref name="nullType" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-664"><paramref name="nullType" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-665">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-665">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="554d1-666">Metadane typu dla typu, który elementy zestawu wejściowego muszą być zawarte w zestawie wyników.</span><span class="sxs-lookup"><span data-stu-id="554d1-666">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="554d1-667">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> , który tworzy zestaw składający się z elementów danego zestawu wejściowego, który jest określonego typu.</span><span class="sxs-lookup"><span data-stu-id="554d1-667">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span></span></summary>
        <returns><span data-ttu-id="554d1-668">Nowy DbOfTypeExpression o określonym argumencie zestawu i typie oraz ExpressionKind <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-668">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-669">DbOfTypeExpression wymaga, `argument` aby miał typ wyniku kolekcji z typem elementu polimorficznego, który `type` jest typem z tej samej hierarchii typów co ten typ elementu.</span><span class="sxs-lookup"><span data-stu-id="554d1-669">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-670"><paramref name="argument" />lub <paramref name="type" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-670"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-671"><paramref name="argument" />nie ma typu wyników kolekcji lub <paramref name="type" /> nie jest typem w tej samej hierarchii typów co typ elementu <paramref name="argument" />typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-671"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfTypeOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-672"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> Określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-672">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="554d1-673">Metadane typu dla typu, który elementy zestawu wejściowego muszą być dokładnie zgodne, aby można je było uwzględnić w wyznaczonym zestawie.</span><span class="sxs-lookup"><span data-stu-id="554d1-673">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="554d1-674">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> , który tworzy zestaw składający się z elementów danego zestawu wejściowego, który jest dokładnie określonym typem.</span><span class="sxs-lookup"><span data-stu-id="554d1-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span></span></summary>
        <returns><span data-ttu-id="554d1-675">Nowy DbOfTypeExpression o określonym argumencie zestawu i typie oraz ExpressionKind <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-675">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-676">DbOfTypeExpression wymaga, `argument` aby miał typ wyniku kolekcji z typem elementu polimorficznego, który `type` jest typem z tej samej hierarchii typów co ten typ elementu.</span><span class="sxs-lookup"><span data-stu-id="554d1-676">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-677"><paramref name="argument" />lub <paramref name="type" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-677"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-678"><paramref name="argument" />nie ma typu wyników kolekcji lub <paramref name="type" /> nie jest typem w tej samej hierarchii typów co typ elementu <paramref name="argument" />typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-678"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Or : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbOrExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-679">Wyrażenie logiczne określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-679">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-680">Wyrażenie logiczne określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-680">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-681">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> , który wykonuje logiczne lub lewe i prawe argumenty.</span><span class="sxs-lookup"><span data-stu-id="554d1-681">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="554d1-682">Nowy obiekt DbOrExpression z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="554d1-682">A new DbOrExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-683"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-683"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-684"><paramref name="left" />lub <paramref name="right" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-684"><paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-685">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , która sortuje dany zestaw danych wejściowych według określonego klucza sortowania z rosnącą kolejnością sortowania i sortowania domyślnego.</span><span class="sxs-lookup"><span data-stu-id="554d1-685">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-686">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-686">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="554d1-687">Metoda, która określa, jak utworzyć wyrażenie klucza sortowania danego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-687">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="554d1-688">Ta metoda musi generować wyrażenie z typem wyniku porównywalnym z kolejnością, który zawiera definicję klucza sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-688">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="554d1-689">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , która sortuje dany zestaw danych wejściowych według określonego klucza sortowania z rosnącą kolejnością sortowania i sortowania domyślnego.</span><span class="sxs-lookup"><span data-stu-id="554d1-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-690">Nowy DbSortExpression, który reprezentuje operację order by.</span><span class="sxs-lookup"><span data-stu-id="554d1-690">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-691"><paramref name="source" />lub <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-691"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="554d1-692">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-692">-or-</span></span>

<span data-ttu-id="554d1-693">Wyrażenie utworzone przez <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-693">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-694"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-694"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-695">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-695">-or-</span></span>

<span data-ttu-id="554d1-696">Wyrażenie utworzone przez <paramref name="sortKey" /> nie ma typu wyniku porównywalnego z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-696">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-697">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-697">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="554d1-698">Metoda, która określa, jak utworzyć wyrażenie klucza sortowania danego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-698">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="554d1-699">Ta metoda musi generować wyrażenie z typem wyniku porównywalnym z kolejnością, który zawiera definicję klucza sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-699">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="554d1-700">Sortowanie, w ramach którego ma zostać wykonane sortowanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-700">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="554d1-701">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , która sortuje dany zestaw danych wejściowych według określonego klucza sortowania przy rosnącej kolejności sortowania i określonym sortowaniu.</span><span class="sxs-lookup"><span data-stu-id="554d1-701">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-702">Nowy DbSortExpression, który reprezentuje operację order by.</span><span class="sxs-lookup"><span data-stu-id="554d1-702">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-703"><paramref name="source" /><paramref name="sortKey" /> lub<paramref name="collation" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-703"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="554d1-704">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-704">-or-</span></span> 
<span data-ttu-id="554d1-705">Wyrażenie utworzone przez <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-705">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-706"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-706"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-707">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-707">-or-</span></span>

<span data-ttu-id="554d1-708">Wyrażenie utworzone przez <paramref name="sortKey" /> nie ma typu wyniku ciąg porównywalny z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-708">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="554d1-709"><paramref name="collation" />jest pusty lub zawiera tylko spacje.</span><span class="sxs-lookup"><span data-stu-id="554d1-709"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-710">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , która sortuje dane wejściowe określonego przez określony klucz sortowania przy użyciu malejącego porządku sortowania i sortowania domyślnego.</span><span class="sxs-lookup"><span data-stu-id="554d1-710">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-711">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-711">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="554d1-712">Metoda, która określa, jak utworzyć wyrażenie klucza sortowania danego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-712">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="554d1-713">Ta metoda musi generować wyrażenie z typem wyniku porównywalnym z kolejnością, który zawiera definicję klucza sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-713">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="554d1-714">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , która sortuje dane wejściowe określonego przez określony klucz sortowania przy użyciu malejącego porządku sortowania i sortowania domyślnego.</span><span class="sxs-lookup"><span data-stu-id="554d1-714">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-715">Nowy DbSortExpression, który reprezentuje operację order by.</span><span class="sxs-lookup"><span data-stu-id="554d1-715">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-716"><paramref name="source" />lub <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-716"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="554d1-717">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-717">-or-</span></span>

<span data-ttu-id="554d1-718">Wyrażenie utworzone przez <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-718">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-719"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-719"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-720">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-720">-or-</span></span>

<span data-ttu-id="554d1-721">Wyrażenie utworzone przez <paramref name="sortKey" /> nie ma typu wyniku porównywalnego z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-721">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-722">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-722">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="554d1-723">Metoda, która określa, jak utworzyć wyrażenie klucza sortowania danego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-723">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="554d1-724">Ta metoda musi generować wyrażenie z typem wyniku porównywalnym z kolejnością, który zawiera definicję klucza sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-724">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="554d1-725">Sortowanie, w ramach którego ma zostać wykonane sortowanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-725">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="554d1-726">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , która sortuje dane wejściowe określonego przez określony klucz sortowania, z malejącą kolejnością sortowania i określonym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-726">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-727">Nowy DbSortExpression, który reprezentuje operację order by.</span><span class="sxs-lookup"><span data-stu-id="554d1-727">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-728"><paramref name="source" /><paramref name="sortKey" /> lub<paramref name="collation" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-728"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="554d1-729">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-729">-or-</span></span>

<span data-ttu-id="554d1-730">Wyrażenie utworzone przez <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-730">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-731"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-731"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-732">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-732">-or-</span></span>

<span data-ttu-id="554d1-733">Wyrażenie utworzone przez <paramref name="sortKey" /> nie ma typu wyniku ciąg porównywalny z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-733">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="554d1-734"><paramref name="collation" />jest pusty lub zawiera tylko spacje.</span><span class="sxs-lookup"><span data-stu-id="554d1-734"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-735">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> , która oblicza dane <paramref name="apply" /> wyrażenie jeden raz dla każdego elementu danego zestawu danych wejściowych, generując kolekcję wierszy z odpowiednimi kolumnami wejściowymi i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-736">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-736">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="554d1-737">Metoda, która określa logikę do obliczenia jednokrotnie dla każdego elementu członkowskiego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-737">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-738">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> , która oblicza dane <paramref name="apply" /> wyrażenie jeden raz dla każdego elementu danego zestawu danych wejściowych, generując kolekcję wierszy z odpowiednimi kolumnami wejściowymi i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-738">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="554d1-739">Wiersze, dla <paramref name="apply" /> których jest obliczany pusty zestaw, mają <see langword="null" />wartość kolumny Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-739">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-740">Nowy DbApplyExpression z określonymi powiązaniami wejściowymi i zastosowaniem oraz <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> OuterApply.</span><span class="sxs-lookup"><span data-stu-id="554d1-740">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-741"><paramref name="source" />lub <paramref name="apply" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-741"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="554d1-742">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-742">-or-</span></span> 
<span data-ttu-id="554d1-743">Wynik <paramref name="apply" /> zawiera nazwę lub wyrażenie, które ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-743">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-744"><paramref name="Source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-744"><paramref name="Source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-745">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-745">-or-</span></span>

<span data-ttu-id="554d1-746">Wynik <paramref name="apply" /> zawiera nazwę lub wyrażenie, które nie jest prawidłowe w powiązaniu wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="554d1-746">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-747"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-747">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="554d1-748"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Określa logikę do obliczenia jednokrotnie dla każdego elementu członkowskiego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-748">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-749">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> , która oblicza dane <paramref name="apply" /> wyrażenie jeden raz dla każdego elementu danego zestawu danych wejściowych, generując kolekcję wierszy z odpowiednimi kolumnami wejściowymi i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-749">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="554d1-750">Wiersze, dla <paramref name="apply" /> których jest obliczany pusty zestaw, mają <see langword="null" />wartość kolumny Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-750">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-751">Nowy DbApplyExpression z określonymi powiązaniami wejściowymi i zastosowaniem oraz <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> OuterApply.</span><span class="sxs-lookup"><span data-stu-id="554d1-751">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-752"><paramref name="input" />lub <paramref name="apply" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-752"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Parameter : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbParameterReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="554d1-753">Typ parametru, do którego istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-753">The type of the referenced parameter.</span></span></param>
        <param name="name"><span data-ttu-id="554d1-754">Nazwa parametru, do którego istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-754">The name of the referenced parameter.</span></span></param>
        <summary><span data-ttu-id="554d1-755">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> , który odwołuje się do parametru o określonej nazwie i typie.</span><span class="sxs-lookup"><span data-stu-id="554d1-755">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="554d1-756">Element DbParameterReferenceExpression, który reprezentuje odwołanie do parametru o określonej nazwie i typie.</span><span class="sxs-lookup"><span data-stu-id="554d1-756">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span></span> <span data-ttu-id="554d1-757">Typ wyniku wyrażenia będzie taki sam jak <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-757">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Plus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-758">Wyrażenie określające lewy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-758">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-759">Wyrażenie określające prawy argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-759">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="554d1-760">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> , który dodaje lewy argument do prawego argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-760">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-761">Nowy metody DbArithmeticExpression reprezentujący operację dodawania.</span><span class="sxs-lookup"><span data-stu-id="554d1-761">A new DbArithmeticExpression representing the addition operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-762"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-762"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-763">Nie istnieje wspólny typ wyników liczbowych <paramref name="left" /> między <paramref name="right" />i.</span><span class="sxs-lookup"><span data-stu-id="554d1-763">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberSignature Language="F#" Value="static member Project : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project (input, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-764">Powiązanie wyrażenia, które określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-764">An expression binding that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="554d1-765">Wyrażenie, które ma być rzutowane na zestaw.</span><span class="sxs-lookup"><span data-stu-id="554d1-765">An expression to project over the set.</span></span></param>
        <summary><span data-ttu-id="554d1-766">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> projekt, który ma określone wyrażenie względem danego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-766">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="554d1-767">Nowy DbProjectExpression, który reprezentuje operację projekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-767">A new DbProjectExpression that represents the projection operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-768"><paramref name="input" />lub <paramref name="projection" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-768"><paramref name="input" /> or <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-769">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> element reprezentujący pobieranie określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="554d1-769">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EdmProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="554d1-770">Wystąpienie, z którego ma zostać pobrana właściwość.</span><span class="sxs-lookup"><span data-stu-id="554d1-770">The instance from which to retrieve the property.</span></span> <span data-ttu-id="554d1-771">Może mieć wartość null, jeśli właściwość jest statyczna.</span><span class="sxs-lookup"><span data-stu-id="554d1-771">May be null if the property is static.</span></span></param>
        <param name="propertyMetadata"><span data-ttu-id="554d1-772">Metadane dla właściwości do pobrania.</span><span class="sxs-lookup"><span data-stu-id="554d1-772">Metadata for the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="554d1-773">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> element reprezentujący pobieranie określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="554d1-773">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
        <returns><span data-ttu-id="554d1-774">Nowy DbPropertyExpression reprezentujący pobieranie właściwości.</span><span class="sxs-lookup"><span data-stu-id="554d1-774">A new DbPropertyExpression representing the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-775"><paramref name="propertyMetadata" />ma wartość null <paramref name="instance" /> lub ma wartość null, a właściwość nie jest statyczna.</span><span class="sxs-lookup"><span data-stu-id="554d1-775"><paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.NavigationProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, navigationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="554d1-776">Wystąpienie, z którego ma zostać pobrana właściwość nawigacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-776">The instance from which to retrieve the navigation property.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="554d1-777">Metadane dla właściwości nawigacji do pobrania.</span><span class="sxs-lookup"><span data-stu-id="554d1-777">Metadata for the navigation property to retrieve.</span></span></param>
        <summary><span data-ttu-id="554d1-778">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> element reprezentujący pobieranie określonej właściwości nawigacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-778">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span></span></summary>
        <returns><span data-ttu-id="554d1-779">Nowy DbPropertyExpression reprezentujący pobieranie właściwości nawigacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-779">A new DbPropertyExpression representing the navigation property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-780"><paramref name="navigationProperty" />lub <paramref name="instance" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-780"><paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, relationshipEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="554d1-781">Wystąpienie, z którego ma zostać pobrany element członkowski końca relacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-781">The instance from which to retrieve the relationship end member.</span></span></param>
        <param name="relationshipEnd"><span data-ttu-id="554d1-782">Metadane dla elementu członkowskiego końca relacji do pobrania.</span><span class="sxs-lookup"><span data-stu-id="554d1-782">Metadata for the relationship end member to retrieve.</span></span></param>
        <summary><span data-ttu-id="554d1-783">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> reprezentujący pobieranie określonego elementu członkowskiego końcowego relacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-783">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span></span></summary>
        <returns><span data-ttu-id="554d1-784">Nowy DbPropertyExpression reprezentujący pobieranie członka końcowego relacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-784">A new DbPropertyExpression representing the relationship end member retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-785"><paramref name="relationshipEnd" />ma wartość null <paramref name="instance" /> lub ma wartość null, a właściwość nie jest statyczna.</span><span class="sxs-lookup"><span data-stu-id="554d1-785"><paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="propertyName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="554d1-786">Wystąpienie, z którego ma zostać pobrana właściwość.</span><span class="sxs-lookup"><span data-stu-id="554d1-786">The instance from which to retrieve the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="554d1-787">Nazwa właściwości do pobrania.</span><span class="sxs-lookup"><span data-stu-id="554d1-787">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="554d1-788">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> element reprezentujący pobieranie właściwości wystąpienia o określonej nazwie z danego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="554d1-788">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span></span></summary>
        <returns><span data-ttu-id="554d1-789">Nowy DbPropertyExpression, który reprezentuje pobieranie właściwości.</span><span class="sxs-lookup"><span data-stu-id="554d1-789">A new DbPropertyExpression that represents the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-790"><paramref name="propertyName" />ma wartość null <paramref name="instance" /> lub ma wartość null, a właściwość nie jest statyczna.</span><span class="sxs-lookup"><span data-stu-id="554d1-790"><paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="554d1-791">Typ elementu <paramref name="instance" />nie deklaruje żadnej właściwości o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="554d1-791">No property with the specified name is declared by the type of <paramref name="instance" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-792">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> , który koduje odwołanie do określonej jednostki na podstawie wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-792">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="554d1-793">Zestaw jednostek, w którym znajduje się element, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-793">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="554d1-794">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który tworzy rekord z kolumnami, które pasują (w liczbie, typie i porządku) właściwości klucza typu jednostki, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-794">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <summary><span data-ttu-id="554d1-795">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> , który koduje odwołanie do określonej jednostki na podstawie wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-795">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="554d1-796">Nowy obiekt DbRefExpression, który odwołuje się do elementu o określonych wartościach klucza w danym zestawie jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-796">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-797">`keyRow`powinno być wyrażeniem, które określa wartości klucza, które identyfikują przywoływaną jednostkę w ramach danego zestawu jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-797">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="554d1-798">Typ `keyRow` wyniku powinien zawierać odpowiadającą kolumnę dla każdej właściwości klucza zdefiniowanej przez `entitySet's` typ jednostki.</span><span class="sxs-lookup"><span data-stu-id="554d1-798">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-799"><paramref name="entitySet" />lub <paramref name="keyRow" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-799"><paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-800"><paramref name="keyRow" />nie ma typu wyniku rekordu zgodnego z właściwościami klucza typu jednostki zestawu jednostek, do których się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-800"><paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EntityType -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="554d1-801">Zestaw jednostek, w którym znajduje się element, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-801">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="554d1-802">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , który tworzy rekord z kolumnami, które pasują (w liczbie, typie i porządku) właściwości klucza typu jednostki, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-802">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <param name="entityType"><span data-ttu-id="554d1-803">Typ jednostki, do której odwołuje się odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-803">The type of the Entity that the reference should refer to.</span></span></param>
        <summary><span data-ttu-id="554d1-804">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> , który koduje odwołanie do określonej jednostki na podstawie wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="554d1-804">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="554d1-805">Nowy obiekt DbRefExpression, który odwołuje się do elementu o określonych wartościach klucza w danym zestawie jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-805">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-806">`keyRow`powinno być wyrażeniem, które określa wartości klucza, które identyfikują przywoływaną jednostkę w ramach danego zestawu jednostek.</span><span class="sxs-lookup"><span data-stu-id="554d1-806">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="554d1-807">Typ `keyRow` wyniku powinien zawierać odpowiadającą kolumnę dla każdej właściwości klucza zdefiniowanej przez `entitySet's` typ jednostki.</span><span class="sxs-lookup"><span data-stu-id="554d1-807">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-808"><paramref name="entitySet" /><paramref name="keyRow" /> lub<paramref name="entityType" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-808"><paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-809"><paramref name="entityType" />nie znajduje się w tej samej hierarchii typów co typ jednostki zestawu jednostek lub <paramref name="keyRow" /> nie ma typu wyniku rekordu zgodnego z właściwościami klucza typu jednostki zestawu jednostek, do których się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="554d1-809"><paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberSignature Language="F#" Value="static member Scan : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Common.CommandTrees.DbScanExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan targetSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetSet"><span data-ttu-id="554d1-810">Metadane dla jednostki lub relacji zestawu do odwołania.</span><span class="sxs-lookup"><span data-stu-id="554d1-810">Metadata for the entity or relationship set to reference.</span></span></param>
        <summary><span data-ttu-id="554d1-811">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> , który odwołuje się do określonej jednostki lub zestawu relacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-811">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span></span></summary>
        <returns><span data-ttu-id="554d1-812">Nowy DbScanExpression w oparciu o określoną jednostkę lub zestaw relacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-812">A new DbScanExpression based on the specified entity or relationship set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-813"><paramref name="targetSet" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-813"><paramref name="targetSet" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, 'Projection&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select (source, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection"><span data-ttu-id="554d1-814">Typ wyniku metody <paramref name="projection" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-814">The method result type of <paramref name="projection" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="554d1-815">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-815">An expression that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="554d1-816">Metoda, która określa, jak utworzyć rzutowane wyrażenie, które jest elementem członkowskim zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-816">A method that specifies how to derive the projected expression given a member of the input set.</span></span> <span data-ttu-id="554d1-817">Ta metoda musi generować wystąpienie typu zgodnego z elementem SELECT i można je rozpoznać w <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-817">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="554d1-818">Wymagania dotyczące zgodności dla <c>TProjection</c> są opisane w uwagi.</span><span class="sxs-lookup"><span data-stu-id="554d1-818">Compatibility requirements for <c>TProjection</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="554d1-819">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> , który wybiera określone wyrażenie względem danego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-819">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="554d1-820">Nowy DbProjectExpression reprezentujący operację SELECT.</span><span class="sxs-lookup"><span data-stu-id="554d1-820">A new DbProjectExpression that represents the select operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-821">Aby była zgodna z opcją SELECT `TProjection` , musi pochodzić od <xref:System.Data.Common.CommandTrees.DbExpression>elementu lub musi być typem anonimowym z właściwościami pochodnymi DbExpression.</span><span class="sxs-lookup"><span data-stu-id="554d1-821">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="554d1-822">Poniżej przedstawiono przykłady obsługiwanych typów dla `TProjection`:</span><span class="sxs-lookup"><span data-stu-id="554d1-822">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="554d1-823">`TProjection`is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="554d1-823">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="554d1-824">(`TProjection` jest typem anonimowym z właściwością DbExpression-pochodną).</span><span class="sxs-lookup"><span data-stu-id="554d1-824">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-825"><paramref name="source" />lub <paramref name="projection" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-825"><paramref name="source" /> or <paramref name="projection" /> is null.</span></span>

<span data-ttu-id="554d1-826">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-826">-or-</span></span>

<span data-ttu-id="554d1-827">Wynik <paramref name="projection" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-827">The result of <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-828">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-828">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="554d1-829">Metoda, która reprezentuje logikę do obliczenia jednokrotnie dla każdego elementu członkowskiego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-829">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="554d1-830">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> , która oblicza dane <paramref name="apply" /> wyrażenie jeden raz dla każdego elementu danego zestawu danych wejściowych, generując kolekcję wierszy z odpowiednimi kolumnami wejściowymi i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="554d1-831">Wiersze, dla <paramref name="apply" /> których są obliczane puste zestawie, nie są uwzględniane.</span><span class="sxs-lookup"><span data-stu-id="554d1-831">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="554d1-832">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> następnie zostanie utworzony, który <paramref name="apply" /> wybiera kolumnę z każdego wiersza, <paramref name="apply" /> generując ogólną kolekcję wyników.</span><span class="sxs-lookup"><span data-stu-id="554d1-832">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span></span></summary>
        <returns><span data-ttu-id="554d1-833">Nowy DbProjectExpression, który wybiera kolumnę Zastosuj z nowego DbApplyExpression z określonymi danymi wejściowymi i Zastosuj powiązania oraz <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> z elementu CrossApply.</span><span class="sxs-lookup"><span data-stu-id="554d1-833">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-834"><paramref name="source" />lub <paramref name="apply" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-834"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="554d1-835">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-835">-or-</span></span>

<span data-ttu-id="554d1-836">Wyrażenie utworzone przez <paramref name="apply" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-836">The expression produced by <paramref name="apply" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-837"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-837"><paramref name="source" />  does not have a collection result type.</span></span>

<span data-ttu-id="554d1-838">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-838">-or-</span></span>

<span data-ttu-id="554d1-839">Wyrażenie utworzone przez <paramref name="apply" /> nie ma typu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-839">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="554d1-840">Typ wyniku metody <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-840">The method result type of <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="554d1-841">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-841">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="554d1-842">Metoda, która reprezentuje logikę do obliczenia jednokrotnie dla każdego elementu członkowskiego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-842">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <param name="selector"><span data-ttu-id="554d1-843">Metoda, która określa, w jaki sposób element zestawu wyników powinien być pochodny, przyjmując element danych wejściowych i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-843">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span></span> <span data-ttu-id="554d1-844">Ta metoda musi generować wystąpienie typu zgodnego z SelectMany i może zostać rozpoznane w <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-844">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="554d1-845">Wymagania dotyczące zgodności <typeparamref name="TSelector" /> dla programu zostały opisane w uwagach.</span><span class="sxs-lookup"><span data-stu-id="554d1-845">Compatibility requirements for <typeparamref name="TSelector" /> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="554d1-846">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> , która oblicza dane <paramref name="apply" /> wyrażenie jeden raz dla każdego elementu danego zestawu danych wejściowych, generując kolekcję wierszy z odpowiednimi kolumnami wejściowymi i Zastosuj.</span><span class="sxs-lookup"><span data-stu-id="554d1-846">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="554d1-847">Wiersze, dla <paramref name="apply" /> których są obliczane puste zestawie, nie są uwzględniane.</span><span class="sxs-lookup"><span data-stu-id="554d1-847">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="554d1-848">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> następnie zostanie utworzony, który wybiera określony <paramref name="selector" /> dla każdego wiersza w celu wyprodukowania ogólnej kolekcji wyników.</span><span class="sxs-lookup"><span data-stu-id="554d1-848">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span></span></summary>
        <returns><span data-ttu-id="554d1-849">Nowy DbProjectExpression, który wybiera wynik danego selektora z nowego DbApplyExpression z określonymi danymi wejściowymi i Zastosuj powiązania oraz <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> z CrossApply.</span><span class="sxs-lookup"><span data-stu-id="554d1-849">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-850">Aby była zgodna z SelectMany, `TSelector` musi pochodzić od <xref:System.Data.Common.CommandTrees.DbExpression>elementu lub musi być typem anonimowym z właściwościami pochodnymi DbExpression.</span><span class="sxs-lookup"><span data-stu-id="554d1-850">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="554d1-851">Poniżej przedstawiono przykłady obsługiwanych typów dla `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="554d1-851">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="554d1-852">(`TSelector` is<xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="554d1-852">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="554d1-853">(`TSelector` jest typem anonimowym z właściwościami pochodnymi DbExpression).</span><span class="sxs-lookup"><span data-stu-id="554d1-853">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-854"><paramref name="source" /><paramref name="apply" /> lub<paramref name="selector" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-854"><paramref name="source" />,  <paramref name="apply" /> or <paramref name="selector" /> is null.</span></span>

<span data-ttu-id="554d1-855">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-855">-or-</span></span>

<span data-ttu-id="554d1-856">Wyrażenie utworzone przez <paramref name="apply" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-856">The expression produced by <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="554d1-857">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-857">-or-</span></span>

<span data-ttu-id="554d1-858">Wynik <paramref name="selector" /> ma wartość null podczas konwersji na DbExpression.</span><span class="sxs-lookup"><span data-stu-id="554d1-858">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-859"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-859"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-860">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-860">-or-</span></span> 
<span data-ttu-id="554d1-861">Wyrażenie utworzone przez <paramref name="apply" /> nie ma typu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-861">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span> <span data-ttu-id="554d1-862">nie ma typu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-862">does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-863">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> , która sortuje dany zestaw danych wejściowych przez podane specyfikacje sortowania przed pominięciem określonej liczby elementów.</span><span class="sxs-lookup"><span data-stu-id="554d1-863">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbSortExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-864">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , który określa sortowany zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-864">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span></span></param>
        <param name="count"><span data-ttu-id="554d1-865">Wyrażenie określające, ile elementów uporządkowanego zestawu ma pominąć.</span><span class="sxs-lookup"><span data-stu-id="554d1-865">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="554d1-866">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> , który pomija określoną liczbę elementów z danego posortowanego zestawu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-866">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span></span></summary>
        <returns><span data-ttu-id="554d1-867">Nowy DbSkipExpression reprezentujący operację pomijania.</span><span class="sxs-lookup"><span data-stu-id="554d1-867">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-868"><paramref name="argument" />lub <paramref name="count" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-868"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-869"><paramref name="count" />nie <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> jest lub <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> ma typu wynikowego, który nie jest równy ani nie jest promocyjny do 64-bitowej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="554d1-869"><paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (input, sortOrder, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-870">Powiązanie wyrażenia, które określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-870">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="554d1-871">Lista specyfikacji sortowania, która określa, jak należy sortować elementy zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-871">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <param name="count"><span data-ttu-id="554d1-872">Wyrażenie określające, ile elementów uporządkowanego zestawu ma pominąć.</span><span class="sxs-lookup"><span data-stu-id="554d1-872">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="554d1-873">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> , która sortuje dany zestaw danych wejściowych przez podane specyfikacje sortowania przed pominięciem określonej liczby elementów.</span><span class="sxs-lookup"><span data-stu-id="554d1-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="554d1-874">Nowy DbSkipExpression reprezentujący operację pomijania.</span><span class="sxs-lookup"><span data-stu-id="554d1-874">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-875"><paramref name="input" />, <paramref name="sortOrder" /> <paramref name="sortOrder" /> lub <paramref name="count" /> ma wartość null lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-875"><paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-876"><paramref name="sortOrder" />jest pusty <paramref name="count" /> lub nie <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> jest lub <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> ma typ wynikowy, który nie jest równy lub nie jest zgodny z 64-bitową liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="554d1-876"><paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberSignature Language="F#" Value="static member Sort : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort (input, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="554d1-877">Powiązanie wyrażenia, które określa zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-877">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="554d1-878">Lista specyfikacji sortowania, która określa, jak należy sortować elementy zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-878">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <summary><span data-ttu-id="554d1-879">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , która sortuje dane wejściowe według określonych specyfikacji sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-879">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span></span></summary>
        <returns><span data-ttu-id="554d1-880">Nowy DbSortExpression, który reprezentuje operację sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-880">A new DbSortExpression that represents the sort operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-881"><paramref name="input" />lub <paramref name="sortOrder" /> ma wartość null lub <paramref name="sortOrder" /> zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-881"><paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-882"><paramref name="sortOrder" />jest puste.</span><span class="sxs-lookup"><span data-stu-id="554d1-882"><paramref name="sortOrder" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-883">Wyrażenie określające kolekcję wejściową.</span><span class="sxs-lookup"><span data-stu-id="554d1-883">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="554d1-884">Wyrażenie określające wartość limitu.</span><span class="sxs-lookup"><span data-stu-id="554d1-884">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="554d1-885">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> , który ogranicza liczbę elementów w kolekcji argumentów do określonej wartości limitu liczby.</span><span class="sxs-lookup"><span data-stu-id="554d1-885">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="554d1-886">Wyniki powiązane nie są uwzględniane w danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-886">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="554d1-887">Nowy DbLimitExpression z określonym argumentem i wartościami limitu liczby, które nie zawierają powiązanych wyników.</span><span class="sxs-lookup"><span data-stu-id="554d1-887">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-888"><paramref name="argument" />lub <paramref name="count" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-888"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-889"><paramref name="argument" />nie ma typu wyników kolekcji, <paramref name="count" /> nie ma typu wyników, który jest równy lub promocyjny do 64-bitowej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="554d1-889"><paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-890">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , który z porządkiem sortowania zawierający porządek sortowania danego zestawu danych wejściowych zamówienia wraz z określonym kluczem sortowania w rosnącej kolejności sortowania i z domyślnym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-890">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-891">Element DbSortExpression, który określa uporządkowany zestaw danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-891">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="554d1-892">Metoda, która określa, jak utworzyć dodatkowe wyrażenie klucza sortowania danego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-892">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="554d1-893">Ta metoda musi generować wyrażenie z typem wyniku porównywalnym z kolejnością, który zawiera definicję klucza sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-893">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="554d1-894">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , który z porządkiem sortowania zawierający porządek sortowania danego zestawu danych wejściowych zamówienia wraz z określonym kluczem sortowania w rosnącej kolejności sortowania i z domyślnym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-895">Nowy DbSortExpression, który reprezentuje nową ogólną całość operacji order by.</span><span class="sxs-lookup"><span data-stu-id="554d1-895">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-896"><paramref name="source" />lub <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-896"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="554d1-897">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-897">-or-</span></span>

<span data-ttu-id="554d1-898">Wyrażenie utworzone przez <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-898">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-899"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-899"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-900">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-900">-or-</span></span>

<span data-ttu-id="554d1-901"><paramref name="sortKey" />nie ma typu wyniku porównywalnego z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-901"><paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-902">Element DbSortExpression, który określa uporządkowany zestaw danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-902">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="554d1-903">Metoda, która określa, jak utworzyć dodatkowe wyrażenie klucza sortowania danego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-903">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="554d1-904">Ta metoda musi generować wyrażenie z typem wyniku porównywalnym z kolejnością, który zawiera definicję klucza sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-904">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="554d1-905">Sortowanie, w ramach którego ma zostać wykonane sortowanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-905">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="554d1-906">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> , który z porządkiem sortowania zawierającym porządek sortowania danego zestawu danych wejściowych zamówienia wraz z określonym kluczem sortowania w rosnącej kolejności sortowania i z określonym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-907">Nowy DbSortExpression, który reprezentuje nową ogólną całość operacji order by.</span><span class="sxs-lookup"><span data-stu-id="554d1-907">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-908"><paramref name="source" /><paramref name="sortKey" /> lub<paramref name="collation" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-908"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="554d1-909">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-909">-or-</span></span> 
<span data-ttu-id="554d1-910">Wyrażenie utworzone przez <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-910">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-911"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-911"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-912">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-912">-or-</span></span>

<span data-ttu-id="554d1-913">Wyrażenie utworzone przez <paramref name="sortKey" /> nie ma typu wyniku ciąg porównywalny z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-913">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="554d1-914"><paramref name="collation" />jest pusty lub zawiera tylko spacje.</span><span class="sxs-lookup"><span data-stu-id="554d1-914"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-915">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> obiekt z kolejnością sortowania, który zawiera porządek sortowania danego zestawu danych wejściowych zamówienia wraz z określonym kluczem sortowania w kolejności sortowania malejącego i z sortowaniem domyślnym.</span><span class="sxs-lookup"><span data-stu-id="554d1-915">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-916">Element DbSortExpression, który określa uporządkowany zestaw danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-916">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="554d1-917">Metoda, która określa, jak utworzyć dodatkowe wyrażenie klucza sortowania danego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-917">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="554d1-918">Ta metoda musi generować wyrażenie z typem wyniku porównywalnym z kolejnością, który zawiera definicję klucza sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-918">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="554d1-919">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> obiekt z kolejnością sortowania, który zawiera porządek sortowania danego zestawu danych wejściowych zamówienia wraz z określonym kluczem sortowania w kolejności sortowania malejącego i z sortowaniem domyślnym.</span><span class="sxs-lookup"><span data-stu-id="554d1-919">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-920">Nowy DbSortExpression, który reprezentuje nową ogólną całość operacji order by.</span><span class="sxs-lookup"><span data-stu-id="554d1-920">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-921"><paramref name="source" />lub <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-921"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="554d1-922">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-922">-or-</span></span>

<span data-ttu-id="554d1-923">Wyrażenie utworzone przez <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-923">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-924"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-924"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-925">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-925">-or-</span></span> 
<span data-ttu-id="554d1-926">Wyrażenie utworzone przez <paramref name="sortKey" /> nie ma typu wyniku porównywalnego z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-926">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-927">Element DbSortExpression, który określa uporządkowany zestaw danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="554d1-927">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="554d1-928">Metoda, która określa, jak utworzyć dodatkowe wyrażenie klucza sortowania danego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-928">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="554d1-929">Ta metoda musi generować wyrażenie z typem wyniku porównywalnym z kolejnością, który zawiera definicję klucza sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-929">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="554d1-930">Sortowanie, w ramach którego ma zostać wykonane sortowanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-930">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="554d1-931">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> obiekt z kolejnością sortowania, który zawiera porządek sortowania danego zestawu danych wejściowych zamówienia wraz z określonym kluczem sortowania w kolejności sortowania malejącego i z określonym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-931">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-932">Nowy DbSortExpression, który reprezentuje nową ogólną całość operacji order by.</span><span class="sxs-lookup"><span data-stu-id="554d1-932">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-933"><paramref name="source" /><paramref name="sortKey" /> lub<paramref name="collation" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-933"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="554d1-934">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-934">-or-</span></span>

<span data-ttu-id="554d1-935">Wyrażenie utworzone przez <paramref name="sortKey" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-935">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-936"><paramref name="source" />nie ma typu wyniku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="554d1-936"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="554d1-937">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-937">-or-</span></span> 
<span data-ttu-id="554d1-938">Wyrażenie utworzone przez <paramref name="sortKey" /> nie ma typu wyniku ciąg porównywalny z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-938">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="554d1-939"><paramref name="collation" />jest pusty lub zawiera tylko spacje.</span><span class="sxs-lookup"><span data-stu-id="554d1-939"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-940">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> z rosnącą kolejnością sortowania i domyślnym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-940">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="554d1-941">Wyrażenie definiujące klucz sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-941">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="554d1-942">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> z rosnącą kolejnością sortowania i domyślnym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-942">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-943">Nowa klauzula sortowania z podanym kluczem sortowania i rosnącą kolejnością sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-943">A new sort clause with the given sort key and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-944"><paramref name="key" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-944"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-945"><paramref name="key" />nie ma typu wyniku porównywalnego z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-945"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="554d1-946">Wyrażenie definiujące klucz sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-946">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="554d1-947">Sortowanie, w ramach którego ma zostać wykonane sortowanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-947">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="554d1-948">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> z rosnącą kolejnością sortowania i określonym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-948">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-949">Nowa klauzula sortowania z danym kluczem sortowania i sortowaniem oraz rosnącą kolejnością sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-949">A new sort clause with the given sort key and collation, and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-950"><paramref name="key" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-950"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="554d1-951"><paramref name="collation" />jest pusty lub zawiera tylko spacje.</span><span class="sxs-lookup"><span data-stu-id="554d1-951"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-952"><paramref name="key" />nie ma typu wyniku porównywalnego z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-952"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="554d1-953">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> z malejącą kolejnością sortowania i sortowania domyślnego.</span><span class="sxs-lookup"><span data-stu-id="554d1-953">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="554d1-954">Wyrażenie definiujące klucz sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-954">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="554d1-955">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> z malejącą kolejnością sortowania i sortowania domyślnego.</span><span class="sxs-lookup"><span data-stu-id="554d1-955">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-956">Nowa klauzula sortowania z podanym kluczem sortowania i malejącą kolejnością sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-956">A new sort clause with the given sort key and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-957"><paramref name="key" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-957"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-958"><paramref name="key" />nie ma typu wyniku porównywalnego z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-958"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="554d1-959">Wyrażenie definiujące klucz sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-959">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="554d1-960">Sortowanie, w ramach którego ma zostać wykonane sortowanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-960">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="554d1-961">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> z malejącą kolejnością sortowania i określonym sortowaniem.</span><span class="sxs-lookup"><span data-stu-id="554d1-961">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="554d1-962">Nowa klauzula sortowania z podanym kluczem sortowania i sortowaniem i malejącą kolejnością sortowania.</span><span class="sxs-lookup"><span data-stu-id="554d1-962">A new sort clause with the given sort key and collation, and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-963"><paramref name="key" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-963"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="554d1-964"><paramref name="collation" />jest pusty lub zawiera tylko spacje.</span><span class="sxs-lookup"><span data-stu-id="554d1-964"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-965"><paramref name="key" />nie ma typu wyniku porównywalnego z kolejnością.</span><span class="sxs-lookup"><span data-stu-id="554d1-965"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberSignature Language="F#" Value="static member TreatAs : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbTreatExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs (argument, treatType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-966">Wyrażenie określające wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="554d1-966">An expression that specifies the instance.</span></span></param>
        <param name="treatType"><span data-ttu-id="554d1-967">Wpisz metadane dla typu "Traktuj jako".</span><span class="sxs-lookup"><span data-stu-id="554d1-967">Type metadata for the treat-as type.</span></span></param>
        <summary><span data-ttu-id="554d1-968">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-968">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span></span></summary>
        <returns><span data-ttu-id="554d1-969">Nowy DbTreatExpression z określonym argumentem i typem.</span><span class="sxs-lookup"><span data-stu-id="554d1-969">A new DbTreatExpression with the specified argument and type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="554d1-970">DbTreatExpression wymaga, `argument` aby miały typ wyników polimorficznych, `treatType` który jest typem z tej samej hierarchii typów, co ten typ wyniku.</span><span class="sxs-lookup"><span data-stu-id="554d1-970">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-971"><paramref name="argument" />lub <paramref name="treatType" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-971"><paramref name="argument" /> or <paramref name="treatType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-972"><paramref name="treatType" />nie znajduje się w tej samej hierarchii typów co typ <paramref name="argument" />wyniku.</span><span class="sxs-lookup"><span data-stu-id="554d1-972"><paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.True : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="554d1-973">Pobiera wartość <see langword="true" />o wartości logicznej. <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /></span><span class="sxs-lookup"><span data-stu-id="554d1-973">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="554d1-974">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> z wartością <see langword="true" />logiczną.</span><span class="sxs-lookup"><span data-stu-id="554d1-974">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member UnaryMinus : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="554d1-975">Wyrażenie określające argument.</span><span class="sxs-lookup"><span data-stu-id="554d1-975">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="554d1-976">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> , który negacj wartość argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-976">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="554d1-977">Nowy metody DbArithmeticExpression reprezentujący operację negacji.</span><span class="sxs-lookup"><span data-stu-id="554d1-977">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-978"><paramref name="argument" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-978"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-979">Nie istnieje typ wyniku liczbowego <paramref name="argument" />dla elementu.</span><span class="sxs-lookup"><span data-stu-id="554d1-979">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Union : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-980">Wyrażenie definiujące argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-980">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-981">Wyrażenie definiujące prawy argument zestawu.</span><span class="sxs-lookup"><span data-stu-id="554d1-981">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="554d1-982">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , która oblicza Unię dla argumentów zestawu po lewej i po prawej stronie z usuniętymi duplikatami.</span><span class="sxs-lookup"><span data-stu-id="554d1-982">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span></span></summary>
        <returns><span data-ttu-id="554d1-983">Nowy DbExpression, który oblicza Unię, bez duplikatów, z lewego i prawego argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-983">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-984"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-984"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-985">Nie istnieje wspólny typ wyników kolekcji z typem elementu, który jest porównywalny <paramref name="left" /> do <paramref name="right" />równości, między i.</span><span class="sxs-lookup"><span data-stu-id="554d1-985">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member UnionAll : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbUnionAllExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="554d1-986">Wyrażenie definiujące argument zestawu po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="554d1-986">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="554d1-987">Wyrażenie definiujące prawy argument zestawu.</span><span class="sxs-lookup"><span data-stu-id="554d1-987">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="554d1-988">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> , który oblicza złożenie argumentów z lewej strony i z prawej strony i nie usuwa duplikatów.</span><span class="sxs-lookup"><span data-stu-id="554d1-988">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span></span></summary>
        <returns><span data-ttu-id="554d1-989">Nowy DbUnionAllExpression, w tym duplikaty, lewego i prawego argumentu.</span><span class="sxs-lookup"><span data-stu-id="554d1-989">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-990"><paramref name="left" />lub <paramref name="right" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-990"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-991">Nie istnieje wspólny typ wyników kolekcji z typem elementu, który jest porównywalny <paramref name="left" /> do <paramref name="right" />równości, między i.</span><span class="sxs-lookup"><span data-stu-id="554d1-991">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Variable : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbVariableReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="554d1-992">Typ zmiennej, do której istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-992">The type of the referenced variable.</span></span></param>
        <param name="name"><span data-ttu-id="554d1-993">Nazwa zmiennej, do której istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="554d1-993">The name of the referenced variable.</span></span></param>
        <summary><span data-ttu-id="554d1-994">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> , który odwołuje się do zmiennej o określonej nazwie i typie.</span><span class="sxs-lookup"><span data-stu-id="554d1-994">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="554d1-995">Element DbVariableReferenceExpression, który reprezentuje odwołanie do zmiennej o określonej nazwie i typie.</span><span class="sxs-lookup"><span data-stu-id="554d1-995">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span></span> <span data-ttu-id="554d1-996">Typ wyniku wyrażenia będzie taki sam jak <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="554d1-996">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="554d1-997">Wyrażenie określające zestaw wejściowy.</span><span class="sxs-lookup"><span data-stu-id="554d1-997">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="554d1-998">Metoda reprezentująca predykat do obliczenia dla każdego elementu członkowskiego zestawu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="554d1-998">A method representing the predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="554d1-999">Ta metoda musi generować wyrażenie z typem wyniku Boolean, który udostępnia logikę predykatu.</span><span class="sxs-lookup"><span data-stu-id="554d1-999">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="554d1-1000">Tworzy nowy <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> , który filtruje elementy w danym zestawie danych wejściowych przy użyciu określonego predykatu.</span><span class="sxs-lookup"><span data-stu-id="554d1-1000">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="554d1-1001">Nowy DbQuantifierExpression, który reprezentuje dowolną operację.</span><span class="sxs-lookup"><span data-stu-id="554d1-1001">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="554d1-1002"><paramref name="source" />lub <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-1002"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="554d1-1003">—lub—</span><span class="sxs-lookup"><span data-stu-id="554d1-1003">-or-</span></span> 
<span data-ttu-id="554d1-1004">Wyrażenie utworzone przez <paramref name="predicate" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="554d1-1004">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="554d1-1005">Wyrażenie utworzone przez <paramref name="predicate" /> nie ma typu wyniku logicznego.</span><span class="sxs-lookup"><span data-stu-id="554d1-1005">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
