<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d23b740d732b5e61661f2c7879d7b0c51cc2a1ac" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36694829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <TypeSignature Language="F#" Value="type EdmFunctions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="503a6-101">Udostępnia interfejs API do skonstruowania <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s wywoływać funkcje EDM canonical, która umożliwia tego interfejsu API można uzyskać dostępu do metody rozszerzenia na sam typ wyrażenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="503a6-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="503a6-102">Wyrażenie, które określa wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-102">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-103">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Abs" z określonego argumentu musi mieć typ wyników liczbowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span>
          </span>
          <span data-ttu-id="503a6-104">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-104">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-105">Nowe obiekcie DbFunctionExpression, która zwraca wartość bezwzględną liczby ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-105">A new DbFunctionExpression that returns the absolute value of **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-106">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-106">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-107">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-107">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="503a6-108">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-108">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-109">Wyrażenie, które określa liczbę dni, aby dodać do ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-109">An expression that specifies the number of days to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-110">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddDays" z określonymi argumentami, które muszą mieć typów DateTime i DateTimeOffset i integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-111">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-111">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-112">Nowe obiekcie DbFunctionExpression, który dodaje liczbę dni określoną przez ** addValue ** wartość określoną przez ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-113">** Data ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-113">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-114">** Data ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-114">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-115">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-115">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-116">Wyrażenie określające liczbę godzin, aby dodać do ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-116">An expression that specifies the number of hours to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-117">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddHours" z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-118">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-118">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-119">Nowe obiekcie DbFunctionExpression dodające liczbę godzin, określony przez ** addValue ** wartość określoną przez ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-120">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-120">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-121">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-121">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-122">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-122">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-123">Wyrażenie określające liczbę mikrosekundach, aby dodać do ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-123">An expression that specifies the number of microseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-124">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddMicroseconds" z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-125">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-125">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-126">Nowe obiekcie DbFunctionExpression dodające liczba mikrosekundach określony przez ** addValue ** wartość określoną przez ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-127">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-127">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-128">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-128">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-129">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-129">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-130">Wyrażenie określające liczbę milisekund do dodania do ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-131">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddMilliseconds" z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-132">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-132">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-133">Nowe obiekcie DbFunctionExpression dodające wyrażony w milisekundach czas określony przez ** addValue ** wartość określoną przez ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-134">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-134">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-135">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-135">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-136">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-136">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-137">Wyrażenie, które określa liczbę minut, aby dodać do ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-137">An expression that specifies the number of minutes to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-138">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddMinutes" z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-139">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-139">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-140">Nowe obiekcie DbFunctionExpression dodające liczbę minut określoną przez ** addValue ** wartość określoną przez ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-141">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-141">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-142">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-142">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="503a6-143">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-143">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-144">Wyrażenie określające liczbę miesięcy do dodania do ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-144">An expression that specifies the number of months to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-145">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddMonths" z określonymi argumentami, które muszą mieć typów DateTime i DateTimeOffset i integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-146">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-146">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-147">Nowe obiekcie DbFunctionExpression dodające liczba miesięcy, określony przez ** addValue ** wartość określoną przez ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-148">** Data ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-148">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-149">** Data ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-149">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-150">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-150">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-151">Wyrażenie określające liczbę nanosekundach, aby dodać do ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-152">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddNanoseconds" z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-153">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-153">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-154">Nowe obiekcie DbFunctionExpression dodające liczba określona przez nanosekundach ** addValue ** wartość określoną przez ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-155">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-155">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-156">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-156">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-157">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-157">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-158">Wyrażenie określające liczbę sekund, aby dodać do ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-158">An expression that specifies the number of seconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-159">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddSeconds" z określonymi argumentami, które muszą mieć DateTime, DateTimeOffset lub czas i typy wyników liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-160">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-160">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-161">Nowe obiekcie DbFunctionExpression, który dodaje liczby sekund określonej przez ** addValue ** wartość określoną przez ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-162">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-162">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-163">** Czas ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-163">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="503a6-164">Wyrażenie, które określa wartość, do której ** addValue ** powinny zostać dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-164">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="503a6-165">Wyrażenie określające liczbę lat do dodania do ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-165">An expression that specifies the number of years to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-166">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "AddYears" z określonymi argumentami, które muszą mieć typów DateTime i DateTimeOffset i integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-167">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-167">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-168">Nowe obiekcie DbFunctionExpression dodające liczba lat określona przez ** addValue ** wartość określoną przez ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-169">** Data ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-169">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-170">** Data ** ** addValue **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-170">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Average : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-171">Wyrażenie, które określa kolekcję, w którym można obliczyć średnią wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-171">An expression that specifies the collection from which the average value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-172">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> funkcji kanonicznej "Średni" który wywołuje w określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-173">Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-173">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-174">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie średnia wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-174">A new DbFunctionExpression that produces the average value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-175">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-175">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-176">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-176">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="503a6-177">Wyrażenie określające pierwszy argument operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-177">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="503a6-178">Wyrażenie, które określa drugi argument operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-178">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-179">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "BitwiseAnd" z określonymi argumentami, które muszą mieć ten sam typ wyników liczbowych liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="503a6-180">Typ wyniku wyrażenia jest taka sama jak typy argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-180">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-181">Nowe obiekcie DbFunctionExpression, która zwraca wartość produkowane przez wykonanie iloczynu bitowego AND z ** wartość1 ** i ** wartość2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-182">** Wartość1 ** ** wartość2 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-182">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-183">** Wartość1 ** ** wartość2 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-183">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member BitwiseNot : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="503a6-184">Wyrażenie określające pierwszy argument operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-184">An expression that specifies the first operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-185">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "BitwiseNot" z określony argument musi być typu liczbowego Wynik liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span>
          </span>
          <span data-ttu-id="503a6-186">Typ wyniku wyrażenia jest taka sama jak typy argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-186">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-187">Nowe obiekcie DbFunctionExpression, która zwraca wartość produkowane przez wykonanie operatora testu koniunkcji nie ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-188">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-188">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-189">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-189">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="503a6-190">Wyrażenie określające pierwszy argument operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-190">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="503a6-191">Wyrażenie, które określa drugi argument operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-191">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-192">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "BitwiseOr" z określonymi argumentami, które muszą mieć ten sam typ wyników liczbowych liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="503a6-193">Typ wyniku wyrażenia jest taka sama jak typy argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-193">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-194">Nowe obiekcie DbFunctionExpression, która zwraca wartość utworzonego przez wykonanie wartości bitowe lub ** wartość1 ** i ** wartość2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-195">** Wartość1 ** ** wartość2 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-195">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-196">** Wartość1 ** ** wartość2 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-196">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseXor : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="503a6-197">Wyrażenie określające pierwszy argument operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-197">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="503a6-198">Wyrażenie, które określa drugi argument operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-198">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-199">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "BitwiseXor" z określonymi argumentami, które muszą mieć ten sam typ wyników liczbowych liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="503a6-200">Typ wyniku wyrażenia jest taka sama jak typy argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-200">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-201">Utworzone nowe obiekcie DbFunctionExpression, która zwraca wartość wykonując z bitowego XOR (OR wyłączne) z ** wartość1 ** i ** wartość2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-202">** Wartość1 ** ** wartość2 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-202">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-203">** Wartość1 ** ** wartość2 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-203">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="503a6-204">Wyrażenie, które określa wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-204">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-205">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Ceiling" z określonego argumentu musi mieć typ wyniku single, double lub decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="503a6-206">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-206">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-207">Nowe obiekcie DbFunctionExpression, która zwraca najmniejszą wartość całkowitą nie mniejszą niż niż ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-207">A new DbFunctionExpression that returns the smallest integer value not less than than **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-208">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-208">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-209">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-209">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="503a6-210">Wyrażenie, które określa ciąg, który powinien zostać wyświetlony pierwszy w ciągu połączonych wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-210">An expression that specifies the string that should appear first in the concatenated result string.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="503a6-211">Wyrażenie, które określa ciąg, który powinien zostać wyświetlony drugi ciąg połączonych wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-211">An expression that specifies the string that should appear second in the concatenated result string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-212">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje kanonicznej funkcji "Concat" z określonymi argumentami, które musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-213">Typ wyniku wyrażenia jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-213">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-214">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie połączony ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-214">A new DbFunctionExpression that produces the concatenated string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-215">** ciąg1 ** ** ciąg2 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-215">**string1** **string2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-216">** ciąg1 ** ** ciąg2 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-216">**string1** **string2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains (searchedString, searchedForString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchedString">
          <span data-ttu-id="503a6-217">Wyrażenie, które określa ciąg do wyszukania dowolne wystąpienie ** searchedForString **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-217">An expression that specifies the string to search for any occurence of **searchedForString**.</span>
          </span>
        </param>
        <param name="searchedForString">
          <span data-ttu-id="503a6-218">Wyrażenie, które określa ciąg do wyszukania w ** searchedString **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-218">An expression that specifies the string to search for in **searchedString**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-219">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Contains" z określonymi argumentami, które musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-220">Typ wyniku wyrażenia jest wartość logiczna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-220">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-221">Nowe obiekcie DbFunctionExpression, która zwraca wartość Boolean wskazującą czy ** searchedForString ** występuje w ciągu ** searchedString **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-222">** searchedString ** ** searchedForString **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-222">**searchedString** **searchedForString**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-223">** searchedString ** ** searchedForString **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-223">**searchedString** **searchedForString**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Count : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-224">Wyrażenie, które określa kolekcję, w którym można obliczyć wartości licznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-224">An expression that specifies the collection over which the count value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-225">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> funkcji kanonicznej "Count" który wywołuje w określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-226">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-226">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-227">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość licznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-227">A new DbFunctionExpression that produces the count value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-228">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-228">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-229">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-229">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateDateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime (year, month, day, hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="503a6-230">Wyrażenie zawiera wartość roku dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-230">An expression that provides the year value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="503a6-231">Wyrażenie zawiera wartość miesiąca dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-231">An expression that provides the month value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="503a6-232">Wyrażenie zawiera wartość dnia dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-232">An expression that provides the day value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="503a6-233">Wyrażenie zawiera wartość godziny dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-233">An expression that provides the hour value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="503a6-234">Wyrażenie zawiera wartość minuty dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-234">An expression that provides the minute value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="503a6-235">Wyrażenie zawiera drugiej wartości dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-235">An expression that provides the second value for the new DateTime instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-236">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "CreateDateTime" z określonymi argumentami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="503a6-237">** drugi ** musi mieć typ wyniku Edm.Double, podczas gdy inne argumenty muszą mieć typ wyniku z typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="503a6-238">Typ wyniku wyrażenia jest Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-238">The result type of the expression is Edm.DateTime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-239">Nowe obiekcie DbFunctionExpression, która zwraca wartość typu DateTime nowe na podstawie określonej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-240">** roku ** ** miesiąca ** ** dzień ** ** godzina ** ** minutę ** ** drugi **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-240">**year** **month** **day** **hour** **minute** **second**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-241">** roku ** ** miesiąca ** ** dzień ** ** godzina ** ** minutę ** ** drugi **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-241">**year** **month** **day** **hour** **minute** **second**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffset : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset (year, month, day, hour, minute, second, timeZoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="503a6-242">Wyrażenie zawiera wartość roku dla nowego wystąpienia typu DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-242">An expression that provides the year value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="503a6-243">Wyrażenie zawiera wartość miesiąca dla nowego wystąpienia typu DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-243">An expression that provides the month value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="503a6-244">Wyrażenie zawiera wartość dnia dla nowego wystąpienia typu DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-244">An expression that provides the day value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="503a6-245">Wyrażenie zawiera wartość godziny dla nowego wystąpienia typu DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-245">An expression that provides the hour value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="503a6-246">Wyrażenie zawiera wartość minuty dla nowego wystąpienia typu DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-246">An expression that provides the minute value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="503a6-247">Wyrażenie zawiera drugiej wartości dla nowego wystąpienia typu DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-247">An expression that provides the second value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="timeZoneOffset">
          <span data-ttu-id="503a6-248">Wyrażenie zawiera liczbę minut w wartości przesunięcia strefy czasowej dla nowego wystąpienia typu DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-249">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "CreateDateTimeOffset" z określonymi argumentami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="503a6-250">** drugi ** musi mieć typ wyniku Edm.Double, podczas gdy inne argumenty muszą mieć typ wyniku z typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="503a6-251">Typ wyniku wyrażenia jest Edm.DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-251">The result type of the expression is Edm.DateTimeOffset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-252">Nowe obiekcie DbFunctionExpression zwracające nowe DateTimeOffset na podstawie określonej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-253">** roku ** ** miesiąca ** ** dzień ** ** godzina ** ** minutę ** ** drugi ** ** wartości timeZoneOffset **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-254">** roku ** ** miesiąca ** ** dzień ** ** godzina ** ** minutę ** ** drugi ** ** wartości timeZoneOffset **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime (hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="hour">
          <span data-ttu-id="503a6-255">Wyrażenie zawiera wartość godziny dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-255">An expression that provides the hour value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="503a6-256">Wyrażenie zawiera wartość minuty dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-256">An expression that provides the minute value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="503a6-257">Wyrażenie zawiera drugiej wartości dla nowego wystąpienia daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-257">An expression that provides the second value for the new DateTime instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-258">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "CreateTime" z określonymi argumentami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="503a6-259">** drugi ** musi mieć typ wyniku Edm.Double, podczas gdy inne argumenty muszą mieć typ wyniku z typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="503a6-260">Typ wyniku wyrażenia jest Edm.Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-260">The result type of the expression is Edm.Time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-261">Nowe obiekcie DbFunctionExpression, która zwraca nową godzinę na podstawie określonej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-262">** Godzina ** ** minutę ** ** drugi **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-262">**hour** **minute** **second**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-263">** Godzina ** ** minutę ** ** drugi **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-263">**hour** **minute** **second**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503a6-264">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "CurrentDateTime".</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-265">Nowe obiekcie DbFunctionExpression, która zwraca bieżącą datę i godzinę jako wystąpienie Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTimeOffset : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503a6-266">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "CurrentDateTimeOffset".</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-267">Nowe obiekcie DbFunctionExpression, która zwraca bieżącą datę i godzinę jako wystąpienie Edm.DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentUtcDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503a6-268">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "CurrentUtcDateTime".</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-269">Nowe obiekcie DbFunctionExpression, która zwraca bieżąca data i Godzina UTC jako wystąpienie Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Day : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="503a6-270">Wyrażenie, które określa wartość, z którego można pobrać dnia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-270">An expression that specifies the value from which the day should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-271">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Dzień" z określony argument musi być typu wyniku DateTime i DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-272">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-272">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-273">Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita dnia z ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-274">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-274">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-275">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-275">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member DayOfYear : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="503a6-276">Wyrażenie, które określa wartość, z którego dzień w roku powinny zostać pobrane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-276">An expression that specifies the value from which the day within the year should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-277">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Dzieńroku" z określony argument musi być typu wyniku DateTime i DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-278">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-278">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-279">Nowe obiekcie DbFunctionExpression, która zwraca dzień całkowitą wartość roku z ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-280">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-280">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-281">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-281">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="503a6-282">Wyrażenie określające pierwszy argument wartość Data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-282">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="503a6-283">Wyrażenie, które określa drugi argument wartość Data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-283">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-284">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffDays" z określonymi argumentami, które musi mieć wynik DateTime i DateTimeOffset typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-285">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-285">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-286">Nowe obiekcie DbFunctionExpression, która zwraca liczbę dni, która różni się od ** dateValue1 ** i ** dateValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="503a6-287">Wyrażenie określające pierwszy argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-287">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="503a6-288">Wyrażenie, które określa drugi argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-288">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-289">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffHours" z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-290">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-290">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-291">Nowe obiekcie DbFunctionExpression, która zwraca liczbę godzin, która różni się od ** timeValue1 ** i ** timeValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="503a6-292">Wyrażenie określające pierwszy argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-292">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="503a6-293">Wyrażenie, które określa drugi argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-293">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-294">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffMicroseconds" z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-295">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-295">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-296">Nowe obiekcie DbFunctionExpression, która zwraca liczbę mikrosekundach różni się od ** timeValue1 ** i ** timeValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="503a6-297">Wyrażenie określające pierwszy argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-297">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="503a6-298">Wyrażenie, które określa drugi argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-298">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-299">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffMilliseconds" z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-300">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-300">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-301">Nowe obiekcie DbFunctionExpression, która zwraca liczbę milisekund, która różni się od ** timeValue1 ** i ** timeValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="503a6-302">Wyrażenie określające pierwszy argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-302">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="503a6-303">Wyrażenie, które określa drugi argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-303">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-304">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffMinutes" z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-305">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-305">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-306">Nowe obiekcie DbFunctionExpression, która zwraca liczbę minut, która różni się od ** timeValue1 ** i ** timeValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="503a6-307">Wyrażenie określające pierwszy argument wartość Data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-307">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="503a6-308">Wyrażenie, które określa drugi argument wartość Data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-308">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-309">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffMonths" z określonymi argumentami, które musi mieć wynik DateTime i DateTimeOffset typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-310">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-310">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-311">Nowe obiekcie DbFunctionExpression, która zwraca liczbę miesięcy, która różni się od ** dateValue1 ** i ** dateValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="503a6-312">Wyrażenie określające pierwszy argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-312">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="503a6-313">Wyrażenie, które określa drugi argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-313">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-314">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffNanoseconds" z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-315">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-315">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-316">Nowe obiekcie DbFunctionExpression, która zwraca liczbę nanosekundach różni się od ** timeValue1 ** i ** timeValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="503a6-317">Wyrażenie określające pierwszy argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-317">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="503a6-318">Wyrażenie, które określa drugi argument wartość czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-318">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-319">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffSeconds" z określonymi argumentami, które musi mieć DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-320">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-320">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-321">Nowe obiekcie DbFunctionExpression, która zwraca liczbę sekund, która różni się od ** timeValue1 ** i ** timeValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="503a6-322">Wyrażenie określające pierwszy argument wartość Data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-322">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="503a6-323">Wyrażenie, które określa drugi argument wartość Data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-323">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-324">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "DiffYears" z określonymi argumentami, które musi mieć wynik DateTime i DateTimeOffset typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-325">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-325">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-326">Nowe obiekcie DbFunctionExpression, która zwraca liczbę lat, która różni się od ** dateValue1 ** i ** dateValue2 **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberSignature Language="F#" Value="static member EndsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith (stringArgument, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-327">Wyrażenie, które określa ciąg, który jest przeszukiwany na końcu ciągu ** sufiks **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-327">An expression that specifies the string that is searched at the end for string **suffix**.</span>
          </span>
        </param>
        <param name="suffix">
          <span data-ttu-id="503a6-328">Wyrażenie, które określa ciąg docelowego, który jest wyszukiwany na końcu ** stringArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-329">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "EndsWith" z określonymi argumentami, które musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-330">Typ wyniku wyrażenia jest wartość logiczna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-330">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-331">Nowe obiekcie DbFunctionExpression, która zwraca wartość Boolean wskazującą czy ** stringArgument ** kończy ** sufiks **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Floor : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="503a6-332">Wyrażenie, które określa wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-332">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-333">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Floor" z określonego argumentu musi mieć typ wyniku single, double lub decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="503a6-334">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-334">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-335">Nowe obiekcie DbFunctionExpression, która zwraca największą liczbę całkowitą nie większą niż ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-336">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-336">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-337">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-337">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberSignature Language="F#" Value="static member GetTotalOffsetMinutes : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes dateTimeOffsetArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument">
          <span data-ttu-id="503a6-338">Wyrażenie, które określa wartość DateTimeOffset, z którego można pobrać minutę przesunięcie od GMT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-339">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "GetTotalOffsetMinutes" z określony argument musi być typu wyniku DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-340">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-340">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-341">Nowe obiekcie DbFunctionExpression, która zwraca liczbę minut ** dateTimeOffsetArgument ** przesunięcia względem GMT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-342">** dateTimeOffsetArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-342">**dateTimeOffsetArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-343">** dateTimeOffsetArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-343">**dateTimeOffsetArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-344">Wyrażenie, które określa wartość, z którego można pobrać godzinę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-344">An expression that specifies the value from which the hour should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-345">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Hour" z określony argument musi być typu DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-346">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-346">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-347">Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita godzinę z ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-348">** Czas **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-348">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-349">** Czas **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-349">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf (searchString, stringToFind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchString">
          <span data-ttu-id="503a6-350">Wyrażenie, które określa ciąg do wyszukania ** stringToFind **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-350">An expression that specifies the string to search for **stringToFind**.</span>
          </span>
        </param>
        <param name="stringToFind">
          <span data-ttu-id="503a6-351">Wyrażenie, które określa ciąg do zlokalizowania w ** parametru Wyszukiwany_ciąg ** powinna być sprawdzana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-351">An expression that specifies the string to locate within **searchString** should be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-352">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "IndexOf" z określonymi argumentami, które musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-353">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-353">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-354">Nowe obiekcie DbFunctionExpression, która zwraca indeks pierwszego ** stringToFind ** w ** parametru Wyszukiwany_ciąg **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503a6-355">Indeks zwrócony przez IndexOf \<b > na podstawie 1\</b >.</span><span class="sxs-lookup"><span data-stu-id="503a6-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-356">** parametru Wyszukiwany_ciąg ** ** stringToFind **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-356">**searchString** **stringToFind**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-357">** parametru Wyszukiwany_ciąg ** ** stringToFind **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-357">**searchString** **stringToFind**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Left : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-358">Wyrażenie, które określa ciąg, z którego mają zostać wyodrębnione podciąg po lewej stronie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-358">An expression that specifies the string from which to extract the leftmost substring.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="503a6-359">Wyrażenie, które określa długość lewej podciąg do wyodrębniania ** stringArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-360">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Left" z określonymi argumentami, które muszą mieć string i integer wyniku numerycznego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span>
          </span>
          <span data-ttu-id="503a6-361">Typ wyniku wyrażenia jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-361">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-362">Nowe obiekcie DbFunctionExpression zwracające lewej podciąg długość ** długość ** z ** stringArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-363">** stringArgument ** ** długość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-363">**stringArgument** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-364">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-364">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Length : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-365">Wyrażenie, które określa ciąg, dla którego można obliczyć długość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-365">An expression that specifies the string for which the length should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-366">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Length" z określonego argumentu musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-367">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-367">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-368">Nowe obiekcie DbFunctionExpression, która zwraca długość ** stringArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-369">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-369">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-370">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-370">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-371">Wyrażenie, które określa kolekcję, w którym można obliczyć wartości licznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-371">An expression that specifies the collection over which the count value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-372">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> funkcji kanonicznej "BigCount" który wywołuje w określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-373">Typ wyniku wyrażenia jest Edm.Int64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-373">The result type of the expression is Edm.Int64.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-374">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość licznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-374">A new DbFunctionExpression that produces the count value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-375">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-375">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-376">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-376">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Max : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-377">Wyrażenie, które określa kolekcję, w którym ma być pobrana wartość maksymalna</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-377">An expression that specifies the collection from which the maximum value should be retrieved</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-378">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Max" w określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-379">Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-379">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-380">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość maksymalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-380">A new DbFunctionExpression that produces the maximum value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-381">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-381">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-382">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-382">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Millisecond : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-383">Wyrażenie, które określa wartość, z którego można pobrać milisekundy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-383">An expression that specifies the value from which the millisecond should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-384">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Millisecond" z określony argument musi być typu DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-385">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-385">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-386">Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita milisekund z ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-387">** Czas **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-387">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-388">** Czas **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-388">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Min : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-389">Wyrażenie, które określa kolekcję, w którym ma być pobrana wartość minimalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-389">An expression that specifies the collection from which the minimum value should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-390">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> funkcji kanonicznej "Min" który wywołuje w określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-391">Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-391">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-392">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość minimalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-392">A new DbFunctionExpression that produces the minimum value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-393">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-393">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-394">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-394">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-395">Wyrażenie, które określa wartość, z którego można pobrać ciągu minuty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-395">An expression that specifies the value from which the minute should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-396">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Minute" z określony argument musi być typu DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-397">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-397">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-398">Nowe obiekcie DbFunctionExpression zwracający wartość minuty liczby całkowitej z ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-399">** Czas **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-399">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-400">** Czas **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-400">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Month : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="503a6-401">Wyrażenie, które określa wartość, z którego można pobrać miesiąca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-401">An expression that specifies the value from which the month should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-402">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Month" z określony argument musi być typu wyniku DateTime i DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-403">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-403">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-404">Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita miesiąca z ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-405">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-405">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-406">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-406">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberSignature Language="F#" Value="static member NewGuid : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503a6-407">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "NewGuid".</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-408">Nowe obiekcie DbFunctionExpression, która zwraca nową wartość identyfikatora GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-408">A new DbFunctionExpression that returns a new GUID value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberSignature Language="F#" Value="static member Power : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power (baseArgument, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="baseArgument">
          <span data-ttu-id="503a6-409">Wyrażenie, które określa wartość liczbową, do której zostaną podniesione do danej potęgi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-409">An expression that specifies the numeric value to raise to the given power.</span>
          </span>
        </param>
        <param name="exponent">
          <span data-ttu-id="503a6-410">Wyrażenie określające zasilania, do którego ** baseArgument ** powinien być wywoływany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-410">An expression that specifies the power to which **baseArgument** should be raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-411">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje kanonicznej funkcji "Power" z określonymi argumentami, które są wymagane typy wyników liczbowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span>
          </span>
          <span data-ttu-id="503a6-412">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** baseArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-412">The result type of the expression is the same as the result type of **baseArgument**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-413">Nowe obiekcie DbFunctionExpression, która zwraca wartość ** baseArgument ** podniesionej do potęgi określonej przez ** wykładnik **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-414">** baseArgument ** ** wykładnik **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-414">**baseArgument** **exponent**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-415">** baseArgument ** ** wykładnik **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-415">**baseArgument** **exponent**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace (stringArgument, toReplace, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-416">Wyrażenie, które określa ciąg, w którym można wykonać operacji wymiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-416">An expression that specifies the string in which to perform the replacement operation.</span>
          </span>
        </param>
        <param name="toReplace">
          <span data-ttu-id="503a6-417">Wyrażenie, które określa ciąg, który zostanie zastąpiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-417">An expression that specifies the string that is replaced.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="503a6-418">Wyrażenie, które określa ciąg zastępczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-418">An expression that specifies the replacement string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-419">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje kanonicznej funkcji "Replace" z określonymi argumentami, które musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-420">Typ wyniku wyrażenia również jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-420">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-421">Nowe obiekcie DbFunctionExpression niż zwraca nowy ciąg oparte na ** stringArgument ** gdzie każde wystąpienie ** toReplace ** zastępuje ** zastępczy **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurence of **toReplace** is replaced by **replacement**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-422">** stringArgument ** ** toReplace ** ** zastępczy **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-422">**stringArgument** **toReplace** **replacement**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-423">** stringArgument ** ** toReplace ** ** zastępczy **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-423">**stringArgument** **toReplace** **replacement**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-424">Wyrażenie, które określa ciąg, aby odwrócić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-424">An expression that specifies the string to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-425">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje kanonicznej funkcji "Wycofać" z określonego argumentu musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-426">Typ wyniku wyrażenia również jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-426">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-427">Nowe obiekcie DbFunctionExpression tworzącego odwróconej wartość ** stringArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-428">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-428">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-429">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-429">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Right : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-430">Wyrażenie, które określa ciąg, z którego mają zostać wyodrębnione podciąg po prawej stronie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-430">An expression that specifies the string from which to extract the rightmost substring.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="503a6-431">Wyrażenie, które określa długość po prawej stronie podciąg do wyodrębniania ** stringArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-432">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Right" z określonymi argumentami, które muszą mieć string i integer wyniku numerycznego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span>
          </span>
          <span data-ttu-id="503a6-433">Typ wyniku wyrażenia jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-433">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-434">Nowe obiekcie DbFunctionExpression, która zwraca podciąg po prawej stronie długość ** długość ** z ** stringArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-435">** stringArgument ** ** długość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-435">**stringArgument** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-436">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-436">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="503a6-437">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Round".</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="503a6-438">Wyrażenie, które określa wartość liczbową zostać zaokrąglona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-438">An expression that specifies the numeric value to round.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-439">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Round" z określonego argumentu musi mieć typ wyniku single, double lub decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="503a6-440">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-440">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-441">Nowe obiekcie DbFunctionExpression, który powoduje zaokrąglenie do najbliższej liczby całkowitej wartości określonego argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-442">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-442">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-443">** wartość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-443">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="503a6-444">Wyrażenie, które określa wartość liczbową zostać zaokrąglona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-444">An expression that specifies the numeric value to round.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="503a6-445">Wyrażenie, które określa liczbę cyfr precyzji do użycia podczas zaokrąglania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-445">An expression that specifies the number of digits of precision to use when rounding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-446">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Round" określone argumenty, które musi mieć dokładnie jeden lub decimal i typy wyników liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-447">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-447">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-448">Nowe obiekcie DbFunctionExpression, który powoduje zaokrąglenie do najbliższej wartości całkowitej, z dokładnością określoną przez określony argument ** cyfr **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-449">** wartość ** ** cyfr **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-449">**value** **digits**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-450">** wartość ** ** cyfr **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-450">**value** **digits**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Second : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="503a6-451">Wyrażenie, które określa wartość, z którego można pobrać drugi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-451">An expression that specifies the value from which the second should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-452">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Drugi" z określony argument musi być typu DateTime, DateTimeOffset lub czas typ wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="503a6-453">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-453">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-454">Nowe obiekcie DbFunctionExpression zwracający wartość drugiego liczby całkowitej z ** czas **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-455">** Czas **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-455">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-456">** Czas **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-456">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberSignature Language="F#" Value="static member StartsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith (stringArgument, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-457">Wyrażenie, które określa ciąg, który jest przeszukiwany na początku ciąg ** prefiks **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-457">An expression that specifies the string that is searched at the start for string **prefix**.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="503a6-458">Wyrażenie, które określa ciąg docelowego, który jest wyszukiwany w chwili rozpoczęcia ** stringArgument **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-459">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "StartsWith" z określonymi argumentami, które musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-460">Typ wyniku wyrażenia jest wartość logiczna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-460">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-461">Nowe obiekcie DbFunctionExpression, która zwraca wartość Boolean wskazującą czy ** stringArgument ** rozpoczyna się od ** prefiks **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDev : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-462">Wyrażenie, które określa kolekcję, dla którego można obliczyć odchylenie standardowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-462">An expression that specifies the collection for which the standard deviation should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-463">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> funkcji kanonicznej "StDev" który wywołuje w określonej kolekcji elementów członkowskich innych niż null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-464">Typ wyniku wyrażenia jest Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-464">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-465">Nowe obiekcie DbFunctionExpression, tworzącego wartość odchylenia standardowego przez inną niż null członków kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-466">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-466">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-467">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-467">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDevP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-468">Wyrażenie, które określa kolekcję, dla którego można obliczyć odchylenie standardowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-468">An expression that specifies the collection for which the standard deviation should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-469">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> funkcji kanonicznej "StDevP" który wywołuje za pośrednictwem populacji określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-470">Typ wyniku wyrażenia jest Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-470">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-471">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość odchylenia standardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-471">A new DbFunctionExpression that produces the standard deviation value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-472">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-472">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-473">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-473">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Substring : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring (stringArgument, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-474">Wyrażenie, które określa ciąg, z którego mają zostać wyodrębnione podciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-474">An expression that specifies the string from which to extract the substring.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="503a6-475">Wyrażenie, które określa indeks początkowy z którego należy podjąć podciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-475">An expression that specifies the starting index from which the substring should be taken.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="503a6-476">Wyrażenie, które określa długość podciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-476">An expression that specifies the length of the substring.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-477">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje kanonicznej funkcji "Substring" z określonymi argumentami, które muszą mieć typy wyników liczbowych string i integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span>
          </span>
          <span data-ttu-id="503a6-478">Typ wyniku wyrażenia jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-478">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-479">Nowe obiekcie DbFunctionExpression, która zwraca podciąg długość ** długość ** z ** stringArgument ** zaczynając od ** start **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503a6-480">Substring wymaga określenia indeksu przez **start** można \<b > na podstawie 1\</b >.</span><span class="sxs-lookup"><span data-stu-id="503a6-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-481">** stringArgument ** ** start ** ** długość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-481">**stringArgument** **start** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-482">** stringArgument ** ** start ** ** długość **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-482">**stringArgument** **start** **length**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-483">Wyrażenie, które określa kolekcję, w którym można obliczyć sumy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-483">An expression that specifies the collection from which the sum should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-484">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> funkcji kanonicznej "Sum" który wywołuje w określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-485">Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-485">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-486">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie suma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-486">A new DbFunctionExpression that produces the sum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-487">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-487">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-488">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-488">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-489">Wyrażenie, które określa ciąg, który powinien zostać przekonwertowany na małe litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-489">An expression that specifies the string that should be converted to lower case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-490">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "ToLower" z określonego argumentu musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-491">Typ wyniku wyrażenia również jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-491">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-492">Nowe obiekcie DbFunctionExpression, która zwraca wartość ** stringArgument ** przekonwertowany na małe litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-493">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-493">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-494">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-494">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-495">Wyrażenie, które określa ciąg, który powinny być konwertowane na wielkie litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-495">An expression that specifies the string that should be converted to upper case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-496">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "ToUpper" z określonego argumentu musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-497">Typ wyniku wyrażenia również jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-497">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-498">Nowe obiekcie DbFunctionExpression, która zwraca wartość ** stringArgument ** przekonwertowany na wielkie litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-499">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-499">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-500">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-500">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Trim : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-501">Wyrażenie, które określa ciąg, z którego początkowe i końcowe miejsca powinna zostać usunięta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-501">An expression that specifies the string from which leading and trailing space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-502">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje kanonicznej funkcji "Przycinanie" z określonego argumentu musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-503">Typ wyniku wyrażenia również jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-503">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-504">Nowe obiekcie DbFunctionExpression, która zwraca wartość ** stringArgument ** z spacji wiodących i końcowych usunięta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-505">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-505">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-506">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-506">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimEnd : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-507">Wyrażenie, które określa ciąg, z którego spacja końcowa powinna zostać usunięta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-507">An expression that specifies the string from which trailing space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-508">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "RTrim" z określonego argumentu musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-509">Typ wyniku wyrażenia również jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-509">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-510">Nowe obiekcie DbFunctionExpression, która zwraca wartość ** stringArgument ** spacją usunięta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-511">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-511">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-512">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-512">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimStart : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="503a6-513">Wyrażenie, które określa ciąg, z którego powinny zostać usunięte spacje na początku miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-513">An expression that specifies the string from which leading space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-514">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "LTrim" z określonego argumentu musi mieć typ wyniku ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="503a6-515">Typ wyniku wyrażenia również jest ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-515">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-516">Nowe obiekcie DbFunctionExpression, która zwraca wartość ** stringArgument ** prowadzącymi usunięta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-517">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-517">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-518">** stringArgument **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-518">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Truncate : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="503a6-519">Wyrażenie, które określa wartość liczbową obcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-519">An expression that specifies the numeric value to truncate.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="503a6-520">Wyrażenie, które określa liczbę cyfr precyzji do użycia podczas obcinanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-520">An expression that specifies the number of digits of precision to use when truncating.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-521">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Truncate" określone argumenty, które musi mieć dokładnie jeden lub decimal i typy wyników liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span>
          </span>
          <span data-ttu-id="503a6-522">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** wartość **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-522">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-523">Nowe obiekcie DbFunctionExpression skracającą określony argument do najbliższej wartości całkowitej, z dokładnością określoną przez ** cyfr **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-524">** wartość ** ** cyfr **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-524">**value** **digits**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-525">** wartość ** ** cyfr **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-525">**value** **digits**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member TruncateTime : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="503a6-526">Wyrażenie, które określa wartość, dla której części czasu zostaną obcięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-526">An expression that specifies the value for which the time portion should be truncated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-527">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "TruncateTime" z określony argument musi być typu wyniku DateTime i DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-528">Typ wyniku wyrażenia jest taki sam jak typ wyniku ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-528">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-529">Nowe obiekcie DbFunctionExpression, która zwraca wartość ** Data ** z czasem ustawić na zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-530">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-530">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-531">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-531">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Var : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-532">Wyrażenie, które określa kolekcję, dla którego można obliczyć wariancji statystycznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-532">An expression that specifies the collection for which the statistical variance should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-533">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Var" w określonej kolekcji elementów członkowskich innych niż null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-534">Typ wyniku wyrażenia jest Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-534">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-535">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość wariancji statystycznych dla elementów innych niż null w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-536">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-536">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-537">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-537">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member VarP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="503a6-538">Wyrażenie, które określa kolekcję, dla którego można obliczyć wariancji statystycznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-538">An expression that specifies the collection for which the statistical variance should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-539">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> funkcji kanonicznej "VarP" który wywołuje za pośrednictwem populacji określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span>
          </span>
          <span data-ttu-id="503a6-540">Typ wyniku wyrażenia Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-540">The result type of the expression Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-541">Nowe obiekcie DbFunctionExpression, który spowoduje utworzenie wartość wariancji statystycznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-541">A new DbFunctionExpression that produces the statistical variance value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-542">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-542">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-543">** kolekcji **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-543">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Year : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="503a6-544">Wyrażenie, które określa wartość, z którego można pobrać roku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-544">An expression that specifies the value from which the year should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503a6-545">Tworzy <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcji kanonicznej "Year" z określony argument musi być typu wyniku DateTime i DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="503a6-546">Typ wyniku wyrażenia jest typem Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-546">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503a6-547">Nowe obiekcie DbFunctionExpression zwracającej wartość całkowita roku z ** Data **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503a6-548">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-548">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503a6-549">** Data **</span>
          <span class="sxs-lookup">
            <span data-stu-id="503a6-549">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>