<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7aad046b4ca34e78048b6c45d12a755fbbf4a1a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69128734" /></Metadata><TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <TypeSignature Language="F#" Value="type EdmFunctions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ad712-101">Udostępnia interfejs API służący <see cref="T:System.Data.Common.CommandTrees.DbExpression" />do konstruowania kanonicznych funkcji EDM i umożliwia dostęp do tego interfejsu API jako metody rozszerzające dla samego typu wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="ad712-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad712-102">Wyrażenie określające wartość liczbową.</span><span class="sxs-lookup"><span data-stu-id="ad712-102">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="ad712-103">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "ABS" z określonym argumentem, który musi mieć typ wyniku liczbowego.</span><span class="sxs-lookup"><span data-stu-id="ad712-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span></span> <span data-ttu-id="ad712-104">Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartości**.</span><span class="sxs-lookup"><span data-stu-id="ad712-104">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="ad712-105">Nowy obiekcie DbFunctionExpression, który zwraca wartość bezwzględną **wartości**.</span><span class="sxs-lookup"><span data-stu-id="ad712-105">A new DbFunctionExpression that returns the absolute value of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-106">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-106">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-107">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-107">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="ad712-108">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-108">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-109">Wyrażenie określające liczbę dni, które mają zostać dodane do **DateValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-109">An expression that specifies the number of days to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-110">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "AddDays" z określonymi argumentami, które muszą mieć typy wyników DateTime i DateTimeOffset oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="ad712-111">Typ wyniku wyrażenia jest taki sam jak typ wyniku **DateValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-111">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-112">Nowy obiekcie DbFunctionExpression, który dodaje liczbę dni określoną przez AddValue \*\*\*\* do wartości określonej przez DateValue. \*\*\*\*</span><span class="sxs-lookup"><span data-stu-id="ad712-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-113">**Data/Date** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-113">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-114">**Data/Date** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-114">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-115">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-115">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-116">Wyrażenie określające liczbę godzin, które mają zostać dodane do **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-116">An expression that specifies the number of hours to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-117">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "AddHours" z określonymi argumentami, które muszą mieć typy wyników DateTime, DateTimeOffset lub Time oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="ad712-118">Typ wyniku wyrażenia jest taki sam jak typ wyniku **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-118">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-119">Nowy obiekcie DbFunctionExpression, który dodaje liczbę godzin określonych przez AddValue \*\*\*\* do wartości określonej przez czas TimeValue \*\*\*\*.</span><span class="sxs-lookup"><span data-stu-id="ad712-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-120">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-120">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-121">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-121">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-122">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-122">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-123">Wyrażenie określające liczbę mikrosekund, które mają zostać dodane do wartości **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-123">An expression that specifies the number of microseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-124">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "AddMicroseconds" z określonymi argumentami, które muszą mieć typy wyników DateTime, DateTimeOffset lub Time oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="ad712-125">Typ wyniku wyrażenia jest taki sam jak typ wyniku **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-125">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-126">Nowy obiekcie DbFunctionExpression, który dodaje liczbę mikrosekund określoną przez AddValue do \*\*\*\* wartości określonej przez wartość TimeValue. \*\*\*\*</span><span class="sxs-lookup"><span data-stu-id="ad712-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-127">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-127">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-128">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-128">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-129">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-129">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-130">Wyrażenie określające liczbę milisekund do dodania do wartości TimeValue \*\*\*\*.</span><span class="sxs-lookup"><span data-stu-id="ad712-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-131">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "addmilisekund" z określonymi argumentami, które muszą mieć typy wyników DateTime, DateTimeOffset lub Time oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="ad712-132">Typ wyniku wyrażenia jest taki sam jak typ wyniku **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-132">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-133">Nowy obiekcie DbFunctionExpression, który dodaje liczbę milisekund określony przez AddValue \*\*\*\* do wartości określonej przez wartość TimeValue \*\*\*\*.</span><span class="sxs-lookup"><span data-stu-id="ad712-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-134">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-134">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-135">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-135">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-136">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-136">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-137">Wyrażenie określające liczbę minut, które mają zostać dodane do \*\*\*\* czasu TimeValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-137">An expression that specifies the number of minutes to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-138">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "addminuts" z określonymi argumentami, które muszą mieć typy wyników DateTime, DateTimeOffset lub Time oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="ad712-139">Typ wyniku wyrażenia jest taki sam jak typ wyniku **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-139">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-140">Nowy obiekcie DbFunctionExpression, który dodaje liczbę minut określoną przez AddValue \*\*\*\* do wartości określonej przez wartość TimeValue \*\*\*\*.</span><span class="sxs-lookup"><span data-stu-id="ad712-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-141">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-141">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-142">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-142">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="ad712-143">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-143">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-144">Wyrażenie określające liczbę miesięcy, które mają zostać dodane do \*\*\*\* daty/końca.</span><span class="sxs-lookup"><span data-stu-id="ad712-144">An expression that specifies the number of months to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-145">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "AddMonths" z określonymi argumentami, które muszą mieć typy wyników DateTime i DateTimeOffset oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="ad712-146">Typ wyniku wyrażenia jest taki sam jak typ wyniku **DateValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-146">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-147">Nowy obiekcie DbFunctionExpression, który dodaje liczbę miesięcy określoną przez AddValue \*\*\*\* do wartości określonej przez DateValue. \*\*\*\*</span><span class="sxs-lookup"><span data-stu-id="ad712-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-148">**Data/Date** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-148">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-149">**Data/Date** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-149">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-150">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-150">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-151">Wyrażenie określające liczbę nanosekund do dodania do wartości TimeValue. \*\*\*\*</span><span class="sxs-lookup"><span data-stu-id="ad712-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-152">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "addnanosekunds" z określonymi argumentami, które muszą mieć typy wyników DateTime, DateTimeOffset lub Time oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="ad712-153">Typ wyniku wyrażenia jest taki sam jak typ wyniku **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-153">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-154">Nowy obiekcie DbFunctionExpression, który dodaje liczbę nanosekund określony przez AddValue do \*\*\*\* wartości określonej przez wartość TimeValue. \*\*\*\*</span><span class="sxs-lookup"><span data-stu-id="ad712-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-155">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-155">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-156">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-156">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-157">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-157">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-158">Wyrażenie określające liczbę sekund, które mają zostać dodane do \*\*\*\* czasu TimeValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-158">An expression that specifies the number of seconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-159">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "AddSeconds" z określonymi argumentami, które muszą mieć typy wyników DateTime, DateTimeOffset lub Time oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="ad712-160">Typ wyniku wyrażenia jest taki sam jak typ wyniku **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-160">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-161">Nowy obiekcie DbFunctionExpression, który dodaje liczbę sekund określoną przez AddValue \*\*\*\* do wartości określonej przez wartość TimeValue \*\*\*\*.</span><span class="sxs-lookup"><span data-stu-id="ad712-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-162">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-162">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-163">**TimeValue** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-163">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="ad712-164">Wyrażenie określające wartość, do której należy \*\*\*\* dodać AddValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-164">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="ad712-165">Wyrażenie określające liczbę lat, które mają zostać dodane do **DateValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-165">An expression that specifies the number of years to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="ad712-166">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "AddYears" z określonymi argumentami, które muszą mieć typy wyników DateTime i DateTimeOffset oraz Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="ad712-167">Typ wyniku wyrażenia jest taki sam jak typ wyniku **DateValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-167">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-168">Nowy obiekcie DbFunctionExpression, który dodaje liczbę lat określoną przez AddValue \*\*\*\* do wartości określonej przez DateValue. \*\*\*\*</span><span class="sxs-lookup"><span data-stu-id="ad712-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-169">**Data/Date** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-169">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-170">**Data/Date** **AddValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-170">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Average : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-171">Wyrażenie określające kolekcję, z której ma zostać obliczona wartość średnia.</span><span class="sxs-lookup"><span data-stu-id="ad712-171">An expression that specifies the collection from which the average value should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-172">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "AVG" w określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span></span> <span data-ttu-id="ad712-173">Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-173">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="ad712-174">Nowy obiekcie DbFunctionExpression, który tworzy średnią wartość.</span><span class="sxs-lookup"><span data-stu-id="ad712-174">A new DbFunctionExpression that produces the average value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-175">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-175">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-176">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-176">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="ad712-177">Wyrażenie określające pierwszy operand.</span><span class="sxs-lookup"><span data-stu-id="ad712-177">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="ad712-178">Wyrażenie określające drugi operand.</span><span class="sxs-lookup"><span data-stu-id="ad712-178">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="ad712-179">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "BitwiseAnd" z określonymi argumentami, które muszą mieć ten sam typ wyniku liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="ad712-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="ad712-180">Typ wyniku wyrażenia jest taki sam jak typ argumentów.</span><span class="sxs-lookup"><span data-stu-id="ad712-180">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="ad712-181">Nowy obiekcie DbFunctionExpression, który zwraca wartość wygenerowaną przez wykonywanie bitowe i **wartość1** i **wartość2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-182">**wartość1** **wartość2**</span><span class="sxs-lookup"><span data-stu-id="ad712-182">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-183">**wartość1** **wartość2**</span><span class="sxs-lookup"><span data-stu-id="ad712-183">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member BitwiseNot : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad712-184">Wyrażenie określające pierwszy operand.</span><span class="sxs-lookup"><span data-stu-id="ad712-184">An expression that specifies the first operand.</span></span></param>
        <summary><span data-ttu-id="ad712-185">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "BitwiseNot" z określonym argumentem, który musi mieć typ dodatnich liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="ad712-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span></span> <span data-ttu-id="ad712-186">Typ wyniku wyrażenia jest taki sam jak typ argumentów.</span><span class="sxs-lookup"><span data-stu-id="ad712-186">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="ad712-187">Nowy obiekcie DbFunctionExpression, który zwraca wartość wygenerowaną przez wykonanie bitowej nie **wartości**.</span><span class="sxs-lookup"><span data-stu-id="ad712-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-188">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-188">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-189">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-189">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="ad712-190">Wyrażenie określające pierwszy operand.</span><span class="sxs-lookup"><span data-stu-id="ad712-190">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="ad712-191">Wyrażenie określające drugi operand.</span><span class="sxs-lookup"><span data-stu-id="ad712-191">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="ad712-192">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "bitowego" z określonymi argumentami, które muszą mieć ten sam typ wyniku liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="ad712-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="ad712-193">Typ wyniku wyrażenia jest taki sam jak typ argumentów.</span><span class="sxs-lookup"><span data-stu-id="ad712-193">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="ad712-194">Nowy obiekcie DbFunctionExpression, który zwraca wartość wygenerowaną przez wykonywanie bitowe lub **wartość1** i **wartość2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-195">**wartość1** **wartość2**</span><span class="sxs-lookup"><span data-stu-id="ad712-195">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-196">**wartość1** **wartość2**</span><span class="sxs-lookup"><span data-stu-id="ad712-196">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseXor : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="ad712-197">Wyrażenie określające pierwszy operand.</span><span class="sxs-lookup"><span data-stu-id="ad712-197">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="ad712-198">Wyrażenie określające drugi operand.</span><span class="sxs-lookup"><span data-stu-id="ad712-198">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="ad712-199">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "BitwiseXor" z określonymi argumentami, które muszą mieć ten sam typ wyniku liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="ad712-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="ad712-200">Typ wyniku wyrażenia jest taki sam jak typ argumentów.</span><span class="sxs-lookup"><span data-stu-id="ad712-200">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="ad712-201">Nowy obiekcie DbFunctionExpression, który zwraca wartość wygenerowaną przez wykonywanie bitowe XOR (wyłącznych lub) z **wartość1** i **wartość2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-202">**wartość1** **wartość2**</span><span class="sxs-lookup"><span data-stu-id="ad712-202">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-203">**wartość1** **wartość2**</span><span class="sxs-lookup"><span data-stu-id="ad712-203">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad712-204">Wyrażenie określające wartość liczbową.</span><span class="sxs-lookup"><span data-stu-id="ad712-204">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="ad712-205">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje funkcję "sufit" kanoniczną z określonym argumentem, który musi mieć pojedynczy, podwójny lub dziesiętny typ wynik.</span><span class="sxs-lookup"><span data-stu-id="ad712-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="ad712-206">Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartości**.</span><span class="sxs-lookup"><span data-stu-id="ad712-206">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="ad712-207">Nowy obiekcie DbFunctionExpression, który zwraca najmniejszą liczbę całkowitą nie mniejszą niż **wartość**.</span><span class="sxs-lookup"><span data-stu-id="ad712-207">A new DbFunctionExpression that returns the smallest integer value not less than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-208">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-208">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-209">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-209">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="ad712-210">Wyrażenie określające ciąg, który powinien być wyświetlany jako pierwszy w połączonym ciągu wynikowym.</span><span class="sxs-lookup"><span data-stu-id="ad712-210">An expression that specifies the string that should appear first in the concatenated result string.</span></span></param>
        <param name="string2"><span data-ttu-id="ad712-211">Wyrażenie określające ciąg, który powinien zostać wyświetlony sekundy w połączonym ciągu wynikowym.</span><span class="sxs-lookup"><span data-stu-id="ad712-211">An expression that specifies the string that should appear second in the concatenated result string.</span></span></param>
        <summary><span data-ttu-id="ad712-212">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "concat" z określonymi argumentami, które muszą mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="ad712-213">Typ wyniku wyrażenia jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-213">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="ad712-214">Nowy obiekcie DbFunctionExpression, który generuje ciąg połączony.</span><span class="sxs-lookup"><span data-stu-id="ad712-214">A new DbFunctionExpression that produces the concatenated string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-215">**ciąg1** **ciąg2**</span><span class="sxs-lookup"><span data-stu-id="ad712-215">**string1** **string2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-216">**ciąg1** **ciąg2**</span><span class="sxs-lookup"><span data-stu-id="ad712-216">**string1** **string2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains (searchedString, searchedForString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchedString"><span data-ttu-id="ad712-217">Wyrażenie określające ciąg w celu wyszukania dowolnego wystąpienia **searchedForString**.</span><span class="sxs-lookup"><span data-stu-id="ad712-217">An expression that specifies the string to search for any occurrence of **searchedForString**.</span></span></param>
        <param name="searchedForString"><span data-ttu-id="ad712-218">Wyrażenie określające ciąg do wyszukania w **searchedString**.</span><span class="sxs-lookup"><span data-stu-id="ad712-218">An expression that specifies the string to search for in **searchedString**.</span></span></param>
        <summary><span data-ttu-id="ad712-219">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Contains" z określonymi argumentami, które muszą mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="ad712-220">Typ wyniku wyrażenia jest wartością logiczną.</span><span class="sxs-lookup"><span data-stu-id="ad712-220">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="ad712-221">Nowy obiekcie DbFunctionExpression, który zwraca wartość logiczną wskazującą, czy **searchedForString** występuje w **searchedString**.</span><span class="sxs-lookup"><span data-stu-id="ad712-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-222">**searchedString** **searchedForString**</span><span class="sxs-lookup"><span data-stu-id="ad712-222">**searchedString** **searchedForString**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-223">**searchedString** **searchedForString**</span><span class="sxs-lookup"><span data-stu-id="ad712-223">**searchedString** **searchedForString**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Count : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-224">Wyrażenie określające kolekcję, w której ma zostać obliczona wartość liczby.</span><span class="sxs-lookup"><span data-stu-id="ad712-224">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-225">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje funkcję "Count" kanoniczną w określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span></span> <span data-ttu-id="ad712-226">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-226">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-227">Nowy obiekcie DbFunctionExpression, który tworzy wartość Count.</span><span class="sxs-lookup"><span data-stu-id="ad712-227">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-228">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-228">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-229">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-229">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateDateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime (year, month, day, hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="ad712-230">Wyrażenie, które dostarcza wartość year dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-230">An expression that provides the year value for the new DateTime instance.</span></span></param>
        <param name="month"><span data-ttu-id="ad712-231">Wyrażenie, które dostarcza wartość miesiąca dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-231">An expression that provides the month value for the new DateTime instance.</span></span></param>
        <param name="day"><span data-ttu-id="ad712-232">Wyrażenie, które dostarcza wartość Day dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-232">An expression that provides the day value for the new DateTime instance.</span></span></param>
        <param name="hour"><span data-ttu-id="ad712-233">Wyrażenie, które dostarcza wartość godziny dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-233">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="ad712-234">Wyrażenie, które dostarcza wartość minuty dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-234">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="ad712-235">Wyrażenie, które zawiera drugą wartość dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-235">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="ad712-236">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "xmldatetime" z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="ad712-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span></span> <span data-ttu-id="ad712-237">**sekunda** musi mieć typ wynikowy modelu EDM. Double, podczas gdy wszystkie inne argumenty muszą mieć typ wynikowy EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="ad712-238">Typ wyniku wyrażenia to EDM. DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-238">The result type of the expression is Edm.DateTime.</span></span></summary>
        <returns><span data-ttu-id="ad712-239">Nowy obiekcie DbFunctionExpression, który zwraca nowy element DateTime na podstawie określonych wartości.</span><span class="sxs-lookup"><span data-stu-id="ad712-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-240">**rok** **miesiąc** **dzień** **godzina** **minuta** **drugi**</span><span class="sxs-lookup"><span data-stu-id="ad712-240">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-241">**rok** **miesiąc** **dzień** **godzina** **minuta** **drugi**</span><span class="sxs-lookup"><span data-stu-id="ad712-241">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffset : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset (year, month, day, hour, minute, second, timeZoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" Index="6" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="ad712-242">Wyrażenie, które dostarcza wartość year dla nowego wystąpienia DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-242">An expression that provides the year value for the new DateTimeOffset instance.</span></span></param>
        <param name="month"><span data-ttu-id="ad712-243">Wyrażenie, które dostarcza wartość miesiąca dla nowego wystąpienia DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-243">An expression that provides the month value for the new DateTimeOffset instance.</span></span></param>
        <param name="day"><span data-ttu-id="ad712-244">Wyrażenie, które dostarcza wartość Day dla nowego wystąpienia DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-244">An expression that provides the day value for the new DateTimeOffset instance.</span></span></param>
        <param name="hour"><span data-ttu-id="ad712-245">Wyrażenie, które dostarcza wartość godziny dla nowego wystąpienia DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-245">An expression that provides the hour value for the new DateTimeOffset instance.</span></span></param>
        <param name="minute"><span data-ttu-id="ad712-246">Wyrażenie, które dostarcza wartość minuty dla nowego wystąpienia DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-246">An expression that provides the minute value for the new DateTimeOffset instance.</span></span></param>
        <param name="second"><span data-ttu-id="ad712-247">Wyrażenie, które zawiera drugą wartość nowego wystąpienia DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-247">An expression that provides the second value for the new DateTimeOffset instance.</span></span></param>
        <param name="timeZoneOffset"><span data-ttu-id="ad712-248">Wyrażenie, które zapewnia liczbę minut w wartości przesunięcia strefy czasowej dla nowego wystąpienia DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span></span></param>
        <summary><span data-ttu-id="ad712-249">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "xmldatetimeoffset" z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="ad712-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span></span> <span data-ttu-id="ad712-250">**sekunda** musi mieć typ wynikowy modelu EDM. Double, podczas gdy wszystkie inne argumenty muszą mieć typ wynikowy EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="ad712-251">Typ wyniku wyrażenia to EDM. DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-251">The result type of the expression is Edm.DateTimeOffset.</span></span></summary>
        <returns><span data-ttu-id="ad712-252">Nowy obiekcie DbFunctionExpression, który zwraca nowy DateTimeOffset na podstawie określonych wartości.</span><span class="sxs-lookup"><span data-stu-id="ad712-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-253">**rok** **miesiąc** **dzień** **godzina** **minuta** **drugi** **timeZoneOffset**</span><span class="sxs-lookup"><span data-stu-id="ad712-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-254">**rok** **miesiąc** **dzień** **godzina** **minuta** **drugi** **timeZoneOffset**</span><span class="sxs-lookup"><span data-stu-id="ad712-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime (hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hour"><span data-ttu-id="ad712-255">Wyrażenie, które dostarcza wartość godziny dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-255">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="ad712-256">Wyrażenie, które dostarcza wartość minuty dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-256">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="ad712-257">Wyrażenie, które zawiera drugą wartość dla nowego wystąpienia DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-257">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="ad712-258">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "SetTime" z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="ad712-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span></span> <span data-ttu-id="ad712-259">**sekunda** musi mieć typ wynikowy modelu EDM. Double, podczas gdy wszystkie inne argumenty muszą mieć typ wynikowy EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="ad712-260">Typ wyniku wyrażenia to EDM. Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-260">The result type of the expression is Edm.Time.</span></span></summary>
        <returns><span data-ttu-id="ad712-261">Nowy obiekcie DbFunctionExpression, który zwraca nową godzinę na podstawie określonych wartości.</span><span class="sxs-lookup"><span data-stu-id="ad712-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-262">**godzina** **minuta** **drugi**</span><span class="sxs-lookup"><span data-stu-id="ad712-262">**hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-263">**godzina** **minuta** **drugi**</span><span class="sxs-lookup"><span data-stu-id="ad712-263">**hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad712-264">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "CurrentDateTime".</span><span class="sxs-lookup"><span data-stu-id="ad712-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="ad712-265">Nowy obiekcie DbFunctionExpression, który zwraca bieżącą datę i godzinę jako wystąpienie Edm. DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTimeOffset : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad712-266">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "CurrentDateTimeOffset".</span><span class="sxs-lookup"><span data-stu-id="ad712-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span></span></summary>
        <returns><span data-ttu-id="ad712-267">Nowy obiekcie DbFunctionExpression, który zwraca bieżącą datę i godzinę jako wystąpienie Edm. DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentUtcDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad712-268">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "CurrentUtcDateTime".</span><span class="sxs-lookup"><span data-stu-id="ad712-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="ad712-269">Nowy obiekcie DbFunctionExpression, który zwraca bieżącą datę i godzinę UTC jako wystąpienie Edm. DateTime.</span><span class="sxs-lookup"><span data-stu-id="ad712-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Day : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="ad712-270">Wyrażenie określające wartość, z której ma zostać pobrany dzień.</span><span class="sxs-lookup"><span data-stu-id="ad712-270">An expression that specifies the value from which the day should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-271">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje funkcję kanoniczną "Day" z określonym argumentem, który musi mieć typ wynikowy DateTime lub DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-272">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-272">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-273">Nowy obiekcie DbFunctionExpression, który zwraca wartość z zakresu od daty \*\*\*\*/miesiąca.</span><span class="sxs-lookup"><span data-stu-id="ad712-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-274">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-274">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-275">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-275">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member DayOfYear : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="ad712-276">Wyrażenie określające wartość, z której ma zostać pobrany dzień w roku.</span><span class="sxs-lookup"><span data-stu-id="ad712-276">An expression that specifies the value from which the day within the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-277">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "dzieńroku" z określonym argumentem, który musi mieć typ wynikowy DateTime lub DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-278">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-278">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-279">Nowy obiekcie DbFunctionExpression, który zwraca liczbę całkowitą dnia roku z wartości daty \*\*\*\*/czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-280">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-280">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-281">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-281">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="ad712-282">Wyrażenie określające pierwszy argument wartości daty.</span><span class="sxs-lookup"><span data-stu-id="ad712-282">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="ad712-283">Wyrażenie określające drugi argument wartości daty.</span><span class="sxs-lookup"><span data-stu-id="ad712-283">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-284">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffDays" z określonymi argumentami, które muszą mieć typ wynik DateTime lub DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-285">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-285">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-286">Nowa obiekcie DbFunctionExpression, która zwraca liczbę dni, która jest różnicą między **dateValue1** i **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="ad712-287">Wyrażenie określające pierwszy argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-287">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="ad712-288">Wyrażenie określające drugi argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-288">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-289">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffHours" z określonymi argumentami, które muszą mieć każdy typ wynik DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-290">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-290">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-291">Nowa obiekcie DbFunctionExpression, która zwraca liczbę godzin, jaka jest różnica między **timeValue1** i **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="ad712-292">Wyrażenie określające pierwszy argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-292">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="ad712-293">Wyrażenie określające drugi argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-293">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-294">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffMicroseconds" z określonymi argumentami, które muszą mieć każdy typ wynik DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-295">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-295">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-296">Nowa obiekcie DbFunctionExpression, która zwraca liczbę mikrosekund, która jest różnicą między **timeValue1** i **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="ad712-297">Wyrażenie określające pierwszy argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-297">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="ad712-298">Wyrażenie określające drugi argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-298">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-299">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffMilliseconds" z określonymi argumentami, które muszą mieć każdy typ wynik DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-300">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-300">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-301">Nowa obiekcie DbFunctionExpression, która zwraca liczbę milisekund, która jest różnicą między **timeValue1** i **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="ad712-302">Wyrażenie określające pierwszy argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-302">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="ad712-303">Wyrażenie określające drugi argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-303">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-304">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffMinutes" z określonymi argumentami, które muszą mieć każdy typ wynik DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-305">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-305">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-306">Nowa obiekcie DbFunctionExpression, która zwraca liczbę minut, jaka jest różnica między **timeValue1** i **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="ad712-307">Wyrażenie określające pierwszy argument wartości daty.</span><span class="sxs-lookup"><span data-stu-id="ad712-307">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="ad712-308">Wyrażenie określające drugi argument wartości daty.</span><span class="sxs-lookup"><span data-stu-id="ad712-308">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-309">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffMonths" z określonymi argumentami, które muszą mieć typ wynik DateTime lub DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-310">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-310">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-311">Nowa obiekcie DbFunctionExpression, która zwraca liczbę miesięcy, która jest różnicą między **dateValue1** i **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="ad712-312">Wyrażenie określające pierwszy argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-312">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="ad712-313">Wyrażenie określające drugi argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-313">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-314">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffNanoseconds" z określonymi argumentami, które muszą mieć każdy typ wynik DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-315">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-315">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-316">Nowa obiekcie DbFunctionExpression, która zwraca liczbę nanosekund, która jest różnicą między **timeValue1** i **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="ad712-317">Wyrażenie określające pierwszy argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-317">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="ad712-318">Wyrażenie określające drugi argument wartości czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-318">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-319">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffSeconds" z określonymi argumentami, które muszą mieć każdy typ wynik DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-320">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-320">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-321">Nowa obiekcie DbFunctionExpression, która zwraca liczbę sekund, jaka jest różnica między **timeValue1** i **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="ad712-322">Wyrażenie określające pierwszy argument wartości daty.</span><span class="sxs-lookup"><span data-stu-id="ad712-322">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="ad712-323">Wyrażenie określające drugi argument wartości daty.</span><span class="sxs-lookup"><span data-stu-id="ad712-323">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="ad712-324">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "DiffYears" z określonymi argumentami, które muszą mieć typ wynik DateTime lub DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-325">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-325">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-326">Nowa obiekcie DbFunctionExpression, która zwraca liczbę lat, jaka jest różnica między **dateValue1** i **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="ad712-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberSignature Language="F#" Value="static member EndsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith (stringArgument, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-327">Wyrażenie określające ciąg, który jest przeszukiwany na końcu dla **sufiksu**ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-327">An expression that specifies the string that is searched at the end for string **suffix**.</span></span></param>
        <param name="suffix"><span data-ttu-id="ad712-328">Wyrażenie określające docelowy ciąg, który jest wyszukiwany na końcu **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="ad712-329">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "EndsWith" z określonymi argumentami, które muszą mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="ad712-330">Typ wyniku wyrażenia jest wartością logiczną.</span><span class="sxs-lookup"><span data-stu-id="ad712-330">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="ad712-331">Nowy obiekcie DbFunctionExpression, który zwraca wartość logiczną wskazującą, czy **stringArgument** ma kończyć się **sufiksem**.</span><span class="sxs-lookup"><span data-stu-id="ad712-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Floor : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad712-332">Wyrażenie określające wartość liczbową.</span><span class="sxs-lookup"><span data-stu-id="ad712-332">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="ad712-333">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Floor" z określonym argumentem, który musi mieć pojedynczy, podwójny lub dziesiętny typ wynik.</span><span class="sxs-lookup"><span data-stu-id="ad712-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="ad712-334">Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartości**.</span><span class="sxs-lookup"><span data-stu-id="ad712-334">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="ad712-335">Nowy obiekcie DbFunctionExpression, który zwraca największą wartość całkowitą nie większą niż **wartość**.</span><span class="sxs-lookup"><span data-stu-id="ad712-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-336">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-336">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-337">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-337">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberSignature Language="F#" Value="static member GetTotalOffsetMinutes : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes dateTimeOffsetArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument"><span data-ttu-id="ad712-338">Wyrażenie określające wartość DateTimeOffset, z której należy pobrać przesunięcie minuty od GMT.</span><span class="sxs-lookup"><span data-stu-id="ad712-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-339">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "GetTotalOffsetMinutes" z określonym argumentem, który musi mieć typ wyniku DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-340">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-340">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-341">Nowy obiekcie DbFunctionExpression, który zwraca liczbę minut, **dateTimeOffsetArgument** jest przesunięty od GMT.</span><span class="sxs-lookup"><span data-stu-id="ad712-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-342">**dateTimeOffsetArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-342">**dateTimeOffsetArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-343">**dateTimeOffsetArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-343">**dateTimeOffsetArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-344">Wyrażenie określające wartość, z której ma być pobierana godzina.</span><span class="sxs-lookup"><span data-stu-id="ad712-344">An expression that specifies the value from which the hour should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-345">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje funkcję kanoniczną "Hour" z określonym argumentem, który musi mieć typ DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-346">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-346">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-347">Nowa obiekcie DbFunctionExpression, która zwraca wartość godziny z przedziału czasu. \*\*\*\*</span><span class="sxs-lookup"><span data-stu-id="ad712-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-348">**Time**</span><span class="sxs-lookup"><span data-stu-id="ad712-348">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-349">**Time**</span><span class="sxs-lookup"><span data-stu-id="ad712-349">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf (searchString, stringToFind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchString"><span data-ttu-id="ad712-350">Wyrażenie określające ciąg, który ma być wyszukiwany dla **stringToFind**.</span><span class="sxs-lookup"><span data-stu-id="ad712-350">An expression that specifies the string to search for **stringToFind**.</span></span></param>
        <param name="stringToFind"><span data-ttu-id="ad712-351">Należy sprawdzić wyrażenie określające ciąg, który ma zostać zlokalizowany w **ciągwyszukiwania** .</span><span class="sxs-lookup"><span data-stu-id="ad712-351">An expression that specifies the string to locate within **searchString** should be checked.</span></span></param>
        <summary><span data-ttu-id="ad712-352">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "IndexOf" z określonymi argumentami, które muszą mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="ad712-353">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-353">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-354">Nowy obiekcie DbFunctionExpression, który zwraca pierwszy indeks **stringToFind** w **ciągwyszukiwania**.</span><span class="sxs-lookup"><span data-stu-id="ad712-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad712-355">Indeks zwrócony przez IndexOf to \<b > 1-based\</b >.</span><span class="sxs-lookup"><span data-stu-id="ad712-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-356">**ciągwyszukiwania** **stringToFind**</span><span class="sxs-lookup"><span data-stu-id="ad712-356">**searchString** **stringToFind**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-357">**ciągwyszukiwania** **stringToFind**</span><span class="sxs-lookup"><span data-stu-id="ad712-357">**searchString** **stringToFind**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Left : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-358">Wyrażenie określające ciąg, z którego ma zostać wyodrębniony podciąg z lewej strony.</span><span class="sxs-lookup"><span data-stu-id="ad712-358">An expression that specifies the string from which to extract the leftmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="ad712-359">Wyrażenie określające długość podciągu z lewej strony do wyodrębnienia z **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="ad712-360">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Left" z określonymi argumentami, które muszą mieć liczbowy typ wynikowy String i Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="ad712-361">Typ wyniku wyrażenia jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-361">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="ad712-362">Nowa obiekcie DbFunctionExpression, która zwraca podciąg z lewej strony **długości** z **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-363">**stringArgument** **Długość**</span><span class="sxs-lookup"><span data-stu-id="ad712-363">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-364">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-364">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Length : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-365">Wyrażenie określające ciąg, dla którego ma zostać obliczona długość.</span><span class="sxs-lookup"><span data-stu-id="ad712-365">An expression that specifies the string for which the length should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-366">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje funkcję "Length" kanoniczną z określonym argumentem, który musi mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="ad712-367">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-367">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-368">Nowy obiekcie DbFunctionExpression, który zwraca długość **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-369">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-369">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-370">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-370">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-371">Wyrażenie określające kolekcję, w której ma zostać obliczona wartość liczby.</span><span class="sxs-lookup"><span data-stu-id="ad712-371">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-372">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "BigCount" w określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span></span> <span data-ttu-id="ad712-373">Typ wyniku wyrażenia to EDM. Int64.</span><span class="sxs-lookup"><span data-stu-id="ad712-373">The result type of the expression is Edm.Int64.</span></span></summary>
        <returns><span data-ttu-id="ad712-374">Nowy obiekcie DbFunctionExpression, który tworzy wartość Count.</span><span class="sxs-lookup"><span data-stu-id="ad712-374">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-375">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-375">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-376">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-376">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Max : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-377">Wyrażenie określające kolekcję, z której ma zostać pobrana wartość maksymalna</span><span class="sxs-lookup"><span data-stu-id="ad712-377">An expression that specifies the collection from which the maximum value should be retrieved</span></span></param>
        <summary><span data-ttu-id="ad712-378">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Max" w określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span></span> <span data-ttu-id="ad712-379">Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-379">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="ad712-380">Nowy obiekcie DbFunctionExpression, który tworzy wartość maksymalną.</span><span class="sxs-lookup"><span data-stu-id="ad712-380">A new DbFunctionExpression that produces the maximum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-381">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-381">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-382">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-382">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Millisecond : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-383">Wyrażenie określające wartość, z której ma zostać pobrana milisekunda.</span><span class="sxs-lookup"><span data-stu-id="ad712-383">An expression that specifies the value from which the millisecond should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-384">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "milisekundy" z określonym argumentem, który musi mieć typ DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-385">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-385">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-386">Nowy obiekcie DbFunctionExpression, który zwraca liczbę całkowitą milisekund z wartości \*\*\*\* czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-387">**Time**</span><span class="sxs-lookup"><span data-stu-id="ad712-387">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-388">**Time**</span><span class="sxs-lookup"><span data-stu-id="ad712-388">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Min : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-389">Wyrażenie określające kolekcję, z której ma zostać pobrana wartość minimalna.</span><span class="sxs-lookup"><span data-stu-id="ad712-389">An expression that specifies the collection from which the minimum value should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-390">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "min" w określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span></span> <span data-ttu-id="ad712-391">Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-391">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="ad712-392">Nowy obiekcie DbFunctionExpression, który generuje wartość minimalną.</span><span class="sxs-lookup"><span data-stu-id="ad712-392">A new DbFunctionExpression that produces the minimum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-393">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-393">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-394">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-394">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-395">Wyrażenie określające wartość, z której ma być pobierana minuta.</span><span class="sxs-lookup"><span data-stu-id="ad712-395">An expression that specifies the value from which the minute should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-396">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "min" z określonym argumentem, który musi mieć typ DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-397">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-397">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-398">Nowa obiekcie DbFunctionExpression, która zwraca liczbę całkowitą minuty z wartości \*\*\*\* czasu.</span><span class="sxs-lookup"><span data-stu-id="ad712-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-399">**Time**</span><span class="sxs-lookup"><span data-stu-id="ad712-399">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-400">**Time**</span><span class="sxs-lookup"><span data-stu-id="ad712-400">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Month : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="ad712-401">Wyrażenie określające wartość, z której ma zostać pobrany miesiąc.</span><span class="sxs-lookup"><span data-stu-id="ad712-401">An expression that specifies the value from which the month should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-402">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "miesiąc" z określonym argumentem, który musi mieć typ wynikowy DateTime lub DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-403">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-403">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-404">Nowy obiekcie DbFunctionExpression, który zwraca wartość miesiąca Integer z **DateValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-405">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-405">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-406">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-406">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberSignature Language="F#" Value="static member NewGuid : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad712-407">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "NewGuid".</span><span class="sxs-lookup"><span data-stu-id="ad712-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span></span></summary>
        <returns><span data-ttu-id="ad712-408">Nowy obiekcie DbFunctionExpression, który zwraca nową wartość identyfikatora GUID.</span><span class="sxs-lookup"><span data-stu-id="ad712-408">A new DbFunctionExpression that returns a new GUID value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberSignature Language="F#" Value="static member Power : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power (baseArgument, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="baseArgument"><span data-ttu-id="ad712-409">Wyrażenie określające wartość liczbową, która ma zostać podniesiona do danej potęgi.</span><span class="sxs-lookup"><span data-stu-id="ad712-409">An expression that specifies the numeric value to raise to the given power.</span></span></param>
        <param name="exponent"><span data-ttu-id="ad712-410">Wyrażenie określające potęgę, do której ma zostać wywołane **baseArgument** .</span><span class="sxs-lookup"><span data-stu-id="ad712-410">An expression that specifies the power to which **baseArgument** should be raised.</span></span></param>
        <summary><span data-ttu-id="ad712-411">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "potęgi" z określonymi argumentami, które muszą mieć liczbowe typy wyników.</span><span class="sxs-lookup"><span data-stu-id="ad712-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span></span> <span data-ttu-id="ad712-412">Typ wyniku wyrażenia jest taki sam jak typ wyniku **baseArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-412">The result type of the expression is the same as the result type of **baseArgument**.</span></span></summary>
        <returns><span data-ttu-id="ad712-413">Nowy obiekcie DbFunctionExpression, który zwraca wartość **baseArgument** podniesioną do potęgi określonej przez **wykładnik**.</span><span class="sxs-lookup"><span data-stu-id="ad712-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-414">**baseArgument** **wykładnik**</span><span class="sxs-lookup"><span data-stu-id="ad712-414">**baseArgument** **exponent**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-415">**baseArgument** **wykładnik**</span><span class="sxs-lookup"><span data-stu-id="ad712-415">**baseArgument** **exponent**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace (stringArgument, toReplace, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-416">Wyrażenie określające ciąg, w którym ma zostać wykonana operacja zamiany.</span><span class="sxs-lookup"><span data-stu-id="ad712-416">An expression that specifies the string in which to perform the replacement operation.</span></span></param>
        <param name="toReplace"><span data-ttu-id="ad712-417">Wyrażenie określające zamieniony ciąg.</span><span class="sxs-lookup"><span data-stu-id="ad712-417">An expression that specifies the string that is replaced.</span></span></param>
        <param name="replacement"><span data-ttu-id="ad712-418">Wyrażenie określające ciąg zastępczy.</span><span class="sxs-lookup"><span data-stu-id="ad712-418">An expression that specifies the replacement string.</span></span></param>
        <summary><span data-ttu-id="ad712-419">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Replace" z określonymi argumentami, które muszą mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="ad712-420">Typ wyniku wyrażenia jest również ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-420">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="ad712-421">Nowy obiekcie DbFunctionExpression niż zwraca nowy ciąg w oparciu o **stringArgument** , gdzie każde wystąpienie **toReplace** jest zastępowane przez **zastąpienie**.</span><span class="sxs-lookup"><span data-stu-id="ad712-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurrence of **toReplace** is replaced by **replacement**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-422">**stringArgument** **toReplace** **zastąpienie**</span><span class="sxs-lookup"><span data-stu-id="ad712-422">**stringArgument** **toReplace** **replacement**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-423">**stringArgument** **toReplace** **zastąpienie**</span><span class="sxs-lookup"><span data-stu-id="ad712-423">**stringArgument** **toReplace** **replacement**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-424">Wyrażenie określające ciąg do odwrócenia.</span><span class="sxs-lookup"><span data-stu-id="ad712-424">An expression that specifies the string to reverse.</span></span></param>
        <summary><span data-ttu-id="ad712-425">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Wstecz" z określonym argumentem, który musi mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="ad712-426">Typ wyniku wyrażenia jest również ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-426">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="ad712-427">Nowy obiekcie DbFunctionExpression, który generuje odwróconą wartość **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-428">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-428">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-429">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-429">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Right : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-430">Wyrażenie określające ciąg, z którego ma zostać wyodrębniony podciąg z prawej stronie.</span><span class="sxs-lookup"><span data-stu-id="ad712-430">An expression that specifies the string from which to extract the rightmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="ad712-431">Wyrażenie określające długość podciągu z prawej klasy do wyodrębnienia z **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="ad712-432">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Right" z określonymi argumentami, które muszą mieć liczbowy typ wyniku String i Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="ad712-433">Typ wyniku wyrażenia jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-433">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="ad712-434">Nowy obiekcie DbFunctionExpression, który zwraca podciąg z prawej stronie **Długość długości** z **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-435">**stringArgument** **Długość**</span><span class="sxs-lookup"><span data-stu-id="ad712-435">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-436">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-436">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad712-437">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Round".</span><span class="sxs-lookup"><span data-stu-id="ad712-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad712-438">Wyrażenie określające wartość liczbową do zaokrąglenia.</span><span class="sxs-lookup"><span data-stu-id="ad712-438">An expression that specifies the numeric value to round.</span></span></param>
        <summary><span data-ttu-id="ad712-439">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Round" z określonym argumentem, który musi mieć pojedynczy, podwójny lub dziesiętny typ wynik.</span><span class="sxs-lookup"><span data-stu-id="ad712-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="ad712-440">Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartości**.</span><span class="sxs-lookup"><span data-stu-id="ad712-440">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="ad712-441">Nowy obiekcie DbFunctionExpression, który zaokrągla określony argument do najbliższej wartości całkowitej.</span><span class="sxs-lookup"><span data-stu-id="ad712-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-442">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-442">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-443">**value**</span><span class="sxs-lookup"><span data-stu-id="ad712-443">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad712-444">Wyrażenie określające wartość liczbową do zaokrąglenia.</span><span class="sxs-lookup"><span data-stu-id="ad712-444">An expression that specifies the numeric value to round.</span></span></param>
        <param name="digits"><span data-ttu-id="ad712-445">Wyrażenie określające liczbę cyfr dokładności do użycia podczas zaokrąglania.</span><span class="sxs-lookup"><span data-stu-id="ad712-445">An expression that specifies the number of digits of precision to use when rounding.</span></span></param>
        <summary><span data-ttu-id="ad712-446">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Round" z określonymi argumentami, które muszą mieć jeden, podwójny lub dziesiętny typ wyniku oraz liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="ad712-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="ad712-447">Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartości**.</span><span class="sxs-lookup"><span data-stu-id="ad712-447">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="ad712-448">Nowy obiekcie DbFunctionExpression, który zaokrągla określony argument do najbliższej wartości całkowitej, z dokładnością określoną przez **cyfry**.</span><span class="sxs-lookup"><span data-stu-id="ad712-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-449">**wartość** **cyfry**</span><span class="sxs-lookup"><span data-stu-id="ad712-449">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-450">**wartość** **cyfry**</span><span class="sxs-lookup"><span data-stu-id="ad712-450">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Second : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="ad712-451">Wyrażenie określające wartość, z której ma zostać pobrana sekunda.</span><span class="sxs-lookup"><span data-stu-id="ad712-451">An expression that specifies the value from which the second should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-452">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Second" z określonym argumentem, który musi mieć typ DateTime, DateTimeOffset lub Time.</span><span class="sxs-lookup"><span data-stu-id="ad712-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="ad712-453">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-453">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-454">Nowy obiekcie DbFunctionExpression, który zwraca liczbę całkowitą drugą z wartości **TimeValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-455">**Time**</span><span class="sxs-lookup"><span data-stu-id="ad712-455">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-456">**Time**</span><span class="sxs-lookup"><span data-stu-id="ad712-456">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberSignature Language="F#" Value="static member StartsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith (stringArgument, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-457">Wyrażenie określające ciąg, który jest przeszukiwany na początku dla **prefiksu**ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-457">An expression that specifies the string that is searched at the start for string **prefix**.</span></span></param>
        <param name="prefix"><span data-ttu-id="ad712-458">Wyrażenie określające docelowy ciąg, który jest wyszukiwany na początku **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="ad712-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="ad712-459">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "StartsWith" z określonymi argumentami, które muszą mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="ad712-460">Typ wyniku wyrażenia jest wartością logiczną.</span><span class="sxs-lookup"><span data-stu-id="ad712-460">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="ad712-461">Nowy obiekcie DbFunctionExpression, który zwraca wartość logiczną wskazującą, czy **stringArgument** rozpoczyna się od **prefiksu**.</span><span class="sxs-lookup"><span data-stu-id="ad712-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDev : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-462">Wyrażenie określające kolekcję, dla której ma zostać obliczone odchylenie standardowe.</span><span class="sxs-lookup"><span data-stu-id="ad712-462">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-463">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "STDEV" nad niezerowymi elementami członkowskimi określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="ad712-464">Typem wyniku wyrażenia jest Edm. Double.</span><span class="sxs-lookup"><span data-stu-id="ad712-464">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="ad712-465">Nowy obiekcie DbFunctionExpression, który generuje wartość odchylenia standardowego dla elementów członkowskich o wartości innej niż null.</span><span class="sxs-lookup"><span data-stu-id="ad712-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-466">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-466">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-467">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-467">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDevP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-468">Wyrażenie określające kolekcję, dla której ma zostać obliczone odchylenie standardowe.</span><span class="sxs-lookup"><span data-stu-id="ad712-468">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-469">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "STDEVP" na wypełnieniu określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span></span> <span data-ttu-id="ad712-470">Typem wyniku wyrażenia jest Edm. Double.</span><span class="sxs-lookup"><span data-stu-id="ad712-470">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="ad712-471">Nowy obiekcie DbFunctionExpression, który generuje wartość odchylenia standardowego.</span><span class="sxs-lookup"><span data-stu-id="ad712-471">A new DbFunctionExpression that produces the standard deviation value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-472">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-472">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-473">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-473">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Substring : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring (stringArgument, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-474">Wyrażenie określające ciąg, z którego ma zostać wyodrębniony podciąg.</span><span class="sxs-lookup"><span data-stu-id="ad712-474">An expression that specifies the string from which to extract the substring.</span></span></param>
        <param name="start"><span data-ttu-id="ad712-475">Wyrażenie określające początkowy indeks, z którego ma zostać wykonany podciąg.</span><span class="sxs-lookup"><span data-stu-id="ad712-475">An expression that specifies the starting index from which the substring should be taken.</span></span></param>
        <param name="length"><span data-ttu-id="ad712-476">Wyrażenie określające długość podciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-476">An expression that specifies the length of the substring.</span></span></param>
        <summary><span data-ttu-id="ad712-477">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje funkcję "podciąg kanoniczny" z określonymi argumentami, które muszą mieć typ wynikowy String i Integer.</span><span class="sxs-lookup"><span data-stu-id="ad712-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span></span> <span data-ttu-id="ad712-478">Typ wyniku wyrażenia jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-478">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="ad712-479">Nowa obiekcie DbFunctionExpression, która zwraca podciąg długości długość z \*\*\*\* **stringArgument** , zaczynając od **początku**.</span><span class="sxs-lookup"><span data-stu-id="ad712-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad712-480">Podciąg wymaga, aby indeks określony przez **początek** miał \<wartość b > 1 na\<podstawie/b >.</span><span class="sxs-lookup"><span data-stu-id="ad712-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-481">**stringArgument** **Rozpocznij** **Długość**</span><span class="sxs-lookup"><span data-stu-id="ad712-481">**stringArgument** **start** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-482">**stringArgument** **Rozpocznij** **Długość**</span><span class="sxs-lookup"><span data-stu-id="ad712-482">**stringArgument** **start** **length**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-483">Wyrażenie określające kolekcję, z której ma zostać obliczona suma.</span><span class="sxs-lookup"><span data-stu-id="ad712-483">An expression that specifies the collection from which the sum should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-484">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Sum" w określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span></span> <span data-ttu-id="ad712-485">Typ wyniku wyrażenia jest taki sam jak typ elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-485">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="ad712-486">Nowy obiekcie DbFunctionExpression, który generuje sumę.</span><span class="sxs-lookup"><span data-stu-id="ad712-486">A new DbFunctionExpression that produces the sum.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-487">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-487">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-488">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-488">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-489">Wyrażenie określające ciąg, który ma zostać przekonwertowany na małe litery.</span><span class="sxs-lookup"><span data-stu-id="ad712-489">An expression that specifies the string that should be converted to lower case.</span></span></param>
        <summary><span data-ttu-id="ad712-490">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "ToLower" z określonym argumentem, który musi mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="ad712-491">Typ wyniku wyrażenia jest również ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-491">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="ad712-492">Nowe obiekcie DbFunctionExpression zwracające wartość **stringArgument** konwertowane na małe litery.</span><span class="sxs-lookup"><span data-stu-id="ad712-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-493">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-493">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-494">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-494">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-495">Wyrażenie określające ciąg, który ma zostać przekonwertowany na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="ad712-495">An expression that specifies the string that should be converted to upper case.</span></span></param>
        <summary><span data-ttu-id="ad712-496">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "ToUpper" z określonym argumentem, który musi mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="ad712-497">Typ wyniku wyrażenia jest również ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-497">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="ad712-498">Nowy obiekcie DbFunctionExpression zwracający wartość **stringArgument** przekonwertowaną na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="ad712-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-499">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-499">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-500">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-500">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Trim : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-501">Wyrażenie określające ciąg, z którego mają zostać usunięte spacje wiodące i końcowe.</span><span class="sxs-lookup"><span data-stu-id="ad712-501">An expression that specifies the string from which leading and trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="ad712-502">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Trim" z określonym argumentem, który musi mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="ad712-503">Typ wyniku wyrażenia jest również ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-503">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="ad712-504">Nowy obiekcie DbFunctionExpression zwracający wartość **stringArgument** z usuniętym wiodącym i końcowym miejscem.</span><span class="sxs-lookup"><span data-stu-id="ad712-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-505">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-505">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-506">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-506">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimEnd : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-507">Wyrażenie określające ciąg, z którego należy usunąć miejsce końcowe.</span><span class="sxs-lookup"><span data-stu-id="ad712-507">An expression that specifies the string from which trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="ad712-508">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "RTRIM" z określonym argumentem, który musi mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="ad712-509">Typ wyniku wyrażenia jest również ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-509">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="ad712-510">Nowe obiekcie DbFunctionExpression zwracające wartość **stringArgument** z usuniętym miejscem końcowym.</span><span class="sxs-lookup"><span data-stu-id="ad712-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-511">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-511">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-512">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-512">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimStart : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="ad712-513">Wyrażenie określające ciąg, z którego należy usunąć spację wiodącą.</span><span class="sxs-lookup"><span data-stu-id="ad712-513">An expression that specifies the string from which leading space should be removed.</span></span></param>
        <summary><span data-ttu-id="ad712-514">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "LTRIM" z określonym argumentem, który musi mieć typ wyniku ciągu.</span><span class="sxs-lookup"><span data-stu-id="ad712-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="ad712-515">Typ wyniku wyrażenia jest również ciągiem.</span><span class="sxs-lookup"><span data-stu-id="ad712-515">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="ad712-516">Nowa obiekcie DbFunctionExpression, która zwraca wartość **stringArgument** z usuniętym spacją.</span><span class="sxs-lookup"><span data-stu-id="ad712-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-517">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-517">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-518">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="ad712-518">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Truncate : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad712-519">Wyrażenie określające wartość liczbową do obcięcia.</span><span class="sxs-lookup"><span data-stu-id="ad712-519">An expression that specifies the numeric value to truncate.</span></span></param>
        <param name="digits"><span data-ttu-id="ad712-520">Wyrażenie określające liczbę cyfr dokładności do użycia podczas obcinania.</span><span class="sxs-lookup"><span data-stu-id="ad712-520">An expression that specifies the number of digits of precision to use when truncating.</span></span></param>
        <summary><span data-ttu-id="ad712-521">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "Truncate" z określonymi argumentami, które muszą mieć jeden, podwójny lub dziesiętny typ wyniku.</span><span class="sxs-lookup"><span data-stu-id="ad712-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="ad712-522">Typ wyniku wyrażenia jest taki sam jak typ wyniku **wartości**.</span><span class="sxs-lookup"><span data-stu-id="ad712-522">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="ad712-523">Nowy obiekcie DbFunctionExpression, który obcina określony argument do najbliższej wartości całkowitej, z dokładnością określoną przez **cyfry**.</span><span class="sxs-lookup"><span data-stu-id="ad712-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-524">**wartość** **cyfry**</span><span class="sxs-lookup"><span data-stu-id="ad712-524">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-525">**wartość** **cyfry**</span><span class="sxs-lookup"><span data-stu-id="ad712-525">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member TruncateTime : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="ad712-526">Wyrażenie określające wartość, dla której część czasu powinna zostać obcięta.</span><span class="sxs-lookup"><span data-stu-id="ad712-526">An expression that specifies the value for which the time portion should be truncated.</span></span></param>
        <summary><span data-ttu-id="ad712-527">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "TruncateTime" z określonym argumentem, który musi mieć typ wynikowy DateTime lub DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-528">Typ wyniku wyrażenia jest taki sam jak typ wyniku **DateValue**.</span><span class="sxs-lookup"><span data-stu-id="ad712-528">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="ad712-529">Nowy obiekcie DbFunctionExpression, który zwraca wartość DateValue \*\*\*\* z wartością czasu ustawioną na zero.</span><span class="sxs-lookup"><span data-stu-id="ad712-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-530">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-530">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-531">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-531">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Var : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-532">Wyrażenie określające kolekcję, dla której ma zostać obliczona WARIANCJA statystyczna.</span><span class="sxs-lookup"><span data-stu-id="ad712-532">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-533">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "var" na elementy członkowskie inne niż null określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="ad712-534">Typem wyniku wyrażenia jest Edm. Double.</span><span class="sxs-lookup"><span data-stu-id="ad712-534">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="ad712-535">Nowy obiekcie DbFunctionExpression, który produkuje wartość wariancji statystycznej dla elementów członkowskich o wartości innej niż null.</span><span class="sxs-lookup"><span data-stu-id="ad712-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-536">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-536">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-537">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-537">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member VarP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ad712-538">Wyrażenie określające kolekcję, dla której ma zostać obliczona WARIANCJA statystyczna.</span><span class="sxs-lookup"><span data-stu-id="ad712-538">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="ad712-539">Tworzy obiekt <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> , który wywołuje kanoniczną funkcję "VARP" na wypełnieniu określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ad712-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span></span> <span data-ttu-id="ad712-540">Typ wyniku wyrażenia EDM. Double.</span><span class="sxs-lookup"><span data-stu-id="ad712-540">The result type of the expression Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="ad712-541">Nowy obiekcie DbFunctionExpression, który generuje wartość wariancji statystycznej.</span><span class="sxs-lookup"><span data-stu-id="ad712-541">A new DbFunctionExpression that produces the statistical variance value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-542">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-542">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-543">**zbiera**</span><span class="sxs-lookup"><span data-stu-id="ad712-543">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Year : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="ad712-544">Wyrażenie określające wartość, z której ma zostać pobrany rok.</span><span class="sxs-lookup"><span data-stu-id="ad712-544">An expression that specifies the value from which the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="ad712-545">Tworzy, <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> który wywołuje funkcję "Year" w postaci kanonicznej z określonym argumentem, który musi mieć typ wynikowy DateTime lub DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="ad712-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="ad712-546">Typ wyniku wyrażenia to EDM. Int32.</span><span class="sxs-lookup"><span data-stu-id="ad712-546">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="ad712-547">Nowy obiekcie DbFunctionExpression, który zwraca wartość określającą rok, \*\*\*\* z wartości DateValue.</span><span class="sxs-lookup"><span data-stu-id="ad712-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad712-548">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-548">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad712-549">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="ad712-549">**dateValue**</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
