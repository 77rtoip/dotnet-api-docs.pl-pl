<Type Name="ITargetBlock&lt;TInput&gt;" FullName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3a9796c2127440691212bcdcfc5e2edefdb5acd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69230097" /></Metadata><TypeSignature Language="C#" Value="public interface ITargetBlock&lt;in TInput&gt; : System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITargetBlock`1&lt;- TInput&gt; implements class System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITargetBlock(Of In TInput)&#xA;Implements IDataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput&gt;&#xA;public interface class ITargetBlock : System::Threading::Tasks::Dataflow::IDataflowBlock" />
  <TypeSignature Language="F#" Value="type ITargetBlock&lt;'Input&gt; = interface&#xA;    interface IDataflowBlock" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="24560-101">Określa typ danych zaakceptowanych przez <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="24560-101">Specifies the type of data accepted by the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="24560-102">Reprezentuje blok przepływu danych, który jest elementem docelowym dla danych.</span><span class="sxs-lookup"><span data-stu-id="24560-102">Represents a dataflow block that is a target for data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OfferMessage">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Dataflow.DataflowMessageStatus OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;in TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of In TInput), consumeToAccept As Boolean) As DataflowMessageStatus" />
      <MemberSignature Language="F#" Value="abstract member OfferMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * 'Input * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Input&gt; * bool -&gt; System.Threading.Tasks.Dataflow.DataflowMessageStatus" Usage="iTargetBlock.OfferMessage (messageHeader, messageValue, source, consumeToAccept)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="24560-103"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> Wystąpienie, które reprezentuje nagłówek oferowanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="24560-103">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance that represents the header of the message being offered.</span></span></param>
        <param name="messageValue"><span data-ttu-id="24560-104">Wartość proponowanego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="24560-104">The value of the message being offered.</span></span></param>
        <param name="source"><span data-ttu-id="24560-105"><see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> Oferta wiadomości.</span><span class="sxs-lookup"><span data-stu-id="24560-105">The <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> offering the message.</span></span> <span data-ttu-id="24560-106">Może to być wartość null.</span><span class="sxs-lookup"><span data-stu-id="24560-106">This may be null.</span></span></param>
        <param name="consumeToAccept"><span data-ttu-id="24560-107">Ustaw na <see langword="true" /> , aby określić, że element <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> docelowy ma być wywoływany synchronicznie podczas wywołania do <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, przed zwróceniem, aby można było użyć komunikatu.</span><span class="sxs-lookup"><span data-stu-id="24560-107">Set to <see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message.</span></span></param>
        <summary><span data-ttu-id="24560-108">Oferuje komunikat do <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, co daje obiektowi docelowemu możliwość użycia lub odroczenia wiadomości.</span><span class="sxs-lookup"><span data-stu-id="24560-108">Offers a message to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, giving the target the opportunity to consume or postpone the message.</span></span></summary>
        <returns><span data-ttu-id="24560-109">Stan proponowanego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="24560-109">The status of the offered message.</span></span> <span data-ttu-id="24560-110">Jeśli komunikat został zaakceptowany przez obiekt docelowy <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> , jest zwracany, a źródło nie powinno już korzystać z proponowanego komunikatu, ponieważ jest teraz własnością obiektu docelowego.</span><span class="sxs-lookup"><span data-stu-id="24560-110">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span></span> <span data-ttu-id="24560-111">Jeśli komunikat został odroczony przez obiekt docelowy, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> jest zwracany jako powiadomienie, że obiekt docelowy może później próbować wykorzystać lub zastrzec komunikat; w międzyczasie Źródło nadal jest właścicielem komunikatu i może oferować inne bloki.</span><span class="sxs-lookup"><span data-stu-id="24560-111">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span></span>  
  
<span data-ttu-id="24560-112">Jeśli obiektem docelowym może być komunikat odroczony, ale zamiast niego <see langword="null" />zwracany <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> jest element source.</span><span class="sxs-lookup"><span data-stu-id="24560-112">If the target would have otherwise postponed message, but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is instead returned.</span></span>  
  
<span data-ttu-id="24560-113">Jeśli obiekt docelowy próbował zaakceptować komunikat, ale został pominięty z powodu źródła dostarczającego komunikat do innego obiektu docelowego lub po prostu odrzuca, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="24560-113">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span></span>  
  
<span data-ttu-id="24560-114">Jeśli element docelowy nie zaakceptował wiadomości, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="24560-114">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span> <span data-ttu-id="24560-115">Jeśli obiekt docelowy nie zaakceptował wiadomości i nigdy nie zaakceptuje kolejnego komunikatu z tego źródła, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="24560-115">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24560-116"><paramref name="messageHeader" /> Nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="24560-116">The  <paramref name="messageHeader" /> is not valid.</span></span>  
  
<span data-ttu-id="24560-117">-lub- <paramref name="consumeToAccept" /> może mieć wartość true tylko wtedy, gdy jest dostarczony z <paramref name="source" />wartością różną od null.</span><span class="sxs-lookup"><span data-stu-id="24560-117">-or- <paramref name="consumeToAccept" /> may only be true if provided with a non-null <paramref name="source" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
