<Type Name="ITargetBlock&lt;TInput&gt;" FullName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8acdc4f452bc7e4455e3f120340be132eb5d1fff" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36407269" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITargetBlock&lt;in TInput&gt; : System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITargetBlock`1&lt;- TInput&gt; implements class System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITargetBlock(Of In TInput)&#xA;Implements IDataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput&gt;&#xA;public interface class ITargetBlock : System::Threading::Tasks::Dataflow::IDataflowBlock" />
  <TypeSignature Language="F#" Value="type ITargetBlock&lt;'Input&gt; = interface&#xA;    interface IDataflowBlock" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TInput">Określa typ danych zaakceptowane przez <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</typeparam>
    <summary>Reprezentuje blok przepływu danych, który jest docelowym dla danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OfferMessage">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Dataflow.DataflowMessageStatus OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;in TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of In TInput), consumeToAccept As Boolean) As DataflowMessageStatus" />
      <MemberSignature Language="F#" Value="abstract member OfferMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * 'Input * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Input&gt; * bool -&gt; System.Threading.Tasks.Dataflow.DataflowMessageStatus" Usage="iTargetBlock.OfferMessage (messageHeader, messageValue, source, consumeToAccept)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> wystąpienie, które reprezentuje nagłówek komunikatu oferowany.</param>
        <param name="messageValue">Wartość oferowany wiadomości.</param>
        <param name="source">
          <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> Oferty wiadomości. Może to być wartość null.</param>
        <param name="consumeToAccept">Ustaw <see langword="true" /> nakazać docelowych do wywołania <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronicznie podczas wywołania <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, przed zwróceniem <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, aby można było korzystać z wiadomości.</param>
        <summary>Oferuje komunikat do <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, dadzą element docelowy do otwierania i odłożyć wiadomości.</summary>
        <returns>Stan oferowany wiadomości. Jeśli komunikat został zaakceptowany przez element docelowy <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> jest zwracany, i źródła już nie należy używać oferowany wiadomości, ponieważ obecnie jest właścicielem obiektu docelowego. Jeśli wiadomość została przełożona przez element docelowy <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> jest zwracany jako powiadomienie, że element docelowy później mogą próbować używają lub zarezerwować komunikat; w tym czasie źródło nadal jest właścicielem wiadomości i może oferować innych bloków.  Jeśli element docelowy będzie mieć w przeciwnym razie odroczone wiadomości, ale został źródła <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> zamiast tego jest zwracany.  Jeśli element docelowy próbowano zaakceptować komunikat ale pominięte go ze względu na źródle wysłania wiadomości do innego obiektu docelowego lub po prostu odrzuceniem, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> jest zwracany.  Jeśli nie zaakceptować komunikat, element docelowy <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> jest zwracany. Jeśli element docelowy nie zaakceptować komunikat i nigdy nie będzie akceptować kolejną wiadomość z tego źródła <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> jest zwracany.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="messageHeader" /> Jest nieprawidłowy.  - lub - <paramref name="consumeToAccept" /> mogą być tylko wartość true, jeśli dostarczane z inną niż null <paramref name="source" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>