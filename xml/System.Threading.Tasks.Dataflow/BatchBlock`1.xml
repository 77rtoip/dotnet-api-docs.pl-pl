<Type Name="BatchBlock&lt;T&gt;" FullName="System.Threading.Tasks.Dataflow.BatchBlock&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a91d329f1bd9f61eebe4017bc974a59a8c2e79c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69144464" /></Metadata><TypeSignature Language="C#" Value="public sealed class BatchBlock&lt;T&gt; : System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;T,T[]&gt;, System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T[]&gt;, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BatchBlock`1&lt;T&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!T, !T[]&gt;, class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!T[]&gt;, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!T[]&gt;, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BatchBlock(Of T)&#xA;Implements IPropagatorBlock(Of T, T()), IReceivableSourceBlock(Of T()), ISourceBlock(Of T()), ITargetBlock(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BatchBlock sealed : System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;T, cli::array &lt;T&gt; ^&gt;, System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;cli::array &lt;T&gt; ^&gt;, System::Threading::Tasks::Dataflow::ISourceBlock&lt;cli::array &lt;T&gt; ^&gt;, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type BatchBlock&lt;'T&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface IPropagatorBlock&lt;'T, 'T[]&gt;&#xA;    interface ISourceBlock&lt;'T[]&gt;&#xA;    interface ITargetBlock&lt;'T&gt;&#xA;    interface IReceivableSourceBlock&lt;'T[]&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;T,T[]&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T[]&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayContent,nq}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.Dataflow.BatchBlock`1/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="8c661-101">Określa typ danych, które są umieszczane w partiach.</span><span class="sxs-lookup"><span data-stu-id="8c661-101">Specifies the type of data put into batches.</span></span></typeparam>
    <summary><span data-ttu-id="8c661-102">Udostępnia blok przepływu danych, który przetwarza dane wejściowe do tablic.</span><span class="sxs-lookup"><span data-stu-id="8c661-102">Provides a dataflow block that batches inputs into arrays.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BatchBlock (int batchSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 batchSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (batchSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BatchBlock(int batchSize);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt; : int -&gt; System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt;" Usage="new System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt; batchSize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="batchSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="batchSize"><span data-ttu-id="8c661-103">Liczba elementów, które mają zostać zgrupowane w partii.</span><span class="sxs-lookup"><span data-stu-id="8c661-103">The number of items to group into a batch.</span></span></param>
        <summary><span data-ttu-id="8c661-104">Inicjuje nowy <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> z określonym rozmiarem partii.</span><span class="sxs-lookup"><span data-stu-id="8c661-104">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> with the specified batch size.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8c661-105">Wartość <paramref name="batchSize" /> musi być dodatnia.</span><span class="sxs-lookup"><span data-stu-id="8c661-105">The <paramref name="batchSize" /> must be positive.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BatchBlock (int batchSize, System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 batchSize, class System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (batchSize As Integer, dataflowBlockOptions As GroupingDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BatchBlock(int batchSize, System::Threading::Tasks::Dataflow::GroupingDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt; : int * System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt;" Usage="new System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt; (batchSize, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="batchSize" Type="System.Int32" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="batchSize"><span data-ttu-id="8c661-106">Liczba elementów, które mają zostać zgrupowane w partii.</span><span class="sxs-lookup"><span data-stu-id="8c661-106">The number of items to group into a batch.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="8c661-107">Opcje, które należy skonfigurować <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="8c661-107">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</span></span></param>
        <summary><span data-ttu-id="8c661-108">Inicjuje nowy <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> z określonym rozmiarem partii, opcją odrzucania i opcjami blokowania.</span><span class="sxs-lookup"><span data-stu-id="8c661-108">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> with the specified batch size, declining option, and block options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8c661-109">Wartość <paramref name="batchSize" /> musi być dodatnia.</span><span class="sxs-lookup"><span data-stu-id="8c661-109">The <paramref name="batchSize" /> must be positive.</span></span>  
  
<span data-ttu-id="8c661-110">—lub—</span><span class="sxs-lookup"><span data-stu-id="8c661-110">-or-</span></span> 
<span data-ttu-id="8c661-111">Wartość musi być mniejsza niż wartość <see cref="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity" /> opcji w przypadku ustawienia wartości innej niż domyślna. <paramref name="batchSize" /></span><span class="sxs-lookup"><span data-stu-id="8c661-111">The <paramref name="batchSize" /> must be smaller than the value of the <see cref="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity" /> option if a non-default value has been set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c661-112"><paramref name="dataflowBlockOptions" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="8c661-112">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BatchSize : int" Usage="System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt;.BatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c661-113">Pobiera rozmiar partii generowanych przez ten <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />program.</span><span class="sxs-lookup"><span data-stu-id="8c661-113">Gets the size of the batches generated by this  <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</span></span></summary>
        <value><span data-ttu-id="8c661-114">Rozmiar wsadu.</span><span class="sxs-lookup"><span data-stu-id="8c661-114">The batch size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-115">Jeśli liczba elementów dostarczonych do bloku nie jest równo widoczna przez rozmiar wsadu podany dla konstruktora bloku, końcowa partia bloku może zawierać mniej niż żądana liczba elementów.</span><span class="sxs-lookup"><span data-stu-id="8c661-115">If the number of items provided to the block is not evenly divisible by the batch size provided to the block's constructor, the block's final batch may contain fewer than the requested number of items.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="batchBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c661-116">Sygnalizuje <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> , że nie powinna akceptować ani generować więcej komunikatów ani nie zużywać więcej komunikatów.</span><span class="sxs-lookup"><span data-stu-id="8c661-116">Signals to the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> that it should not accept nor produce any more messages nor consume any more postponed messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-117">Po <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Complete%2A> wywołaniu w bloku przepływu danych ten blok zostanie ukończony, a jego <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> zadanie przejdzie do stanu końcowego po przetworzeniu wszystkich wcześniej dostępnych danych.</span><span class="sxs-lookup"><span data-stu-id="8c661-117">After <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Complete%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> task will enter a final state after it has processed all previously available data.</span></span> <span data-ttu-id="8c661-118"><xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Complete%2A>nie będzie blokować oczekiwanie na zakończenie, ale zamiast zainicjuje żądanie; aby poczekać na zakończenie, <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> zadanie może być używane.</span><span class="sxs-lookup"><span data-stu-id="8c661-118"><xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> task may be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BatchBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c661-119">Pobiera wartość <see cref="T:System.Threading.Tasks.Task" /> reprezentującą operację asynchroniczną i zakończenie bloku przepływu danych.</span><span class="sxs-lookup"><span data-stu-id="8c661-119">Gets a <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation and completion of the dataflow block.</span></span></summary>
        <value><span data-ttu-id="8c661-120">Zadanie.</span><span class="sxs-lookup"><span data-stu-id="8c661-120">The task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-121">Blok przepływu danych jest uznawany za zakończony, gdy nie przetwarza aktualnie komunikatu i gdy nie zagwarantuje, że nie przetworzy więcej komunikatów.</span><span class="sxs-lookup"><span data-stu-id="8c661-121">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="8c661-122">Zwrócony <xref:System.Threading.Tasks.Task> element przejdzie do stanu ukończenia po zakończeniu skojarzonego bloku.</span><span class="sxs-lookup"><span data-stu-id="8c661-122">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed.</span></span> <span data-ttu-id="8c661-123">Nastąpi przejście do <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> stanu, gdy blok zakończy działanie pomyślnie, zgodnie ze zdefiniowaną semantyką bloku przepływu danych.</span><span class="sxs-lookup"><span data-stu-id="8c661-123">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block's defined semantics.</span></span> <span data-ttu-id="8c661-124"><xref:System.Threading.Tasks.TaskStatus> Przejdzie do <xref:System.Threading.Tasks.TaskStatus.Faulted> stanu, gdy blok przepływu danych zakończył przetwarzanie przedwcześnie ze względu na nieobsługiwany wyjątek i przejdzie do <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Canceled> stanu po zakończeniu bloku przepływu danych przetwarzanie przedwcześnie spowodowane odebraniem żądania anulowania.</span><span class="sxs-lookup"><span data-stu-id="8c661-124">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</span></span> <span data-ttu-id="8c661-125">Jeśli zadanie zostanie ukończone w <xref:System.Threading.Tasks.TaskStatus.Faulted> stanie, jego `Exception` właściwość zwróci <xref:System.AggregateException> zawierający co najmniej jeden wyjątek, który spowodował niepowodzenie bloku.</span><span class="sxs-lookup"><span data-stu-id="8c661-125">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T[]&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of T()), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;cli::array &lt;T&gt; ^&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberSignature Language="F#" Value="abstract member LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'T[]&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable&#xA;override this.LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'T[]&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable" Usage="batchBlock.LinkTo (target, linkOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c661-126">, <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Do którego ma zostać połączone to źródło.</span><span class="sxs-lookup"><span data-stu-id="8c661-126">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect this source.</span></span></param>
        <param name="linkOptions"><span data-ttu-id="8c661-127"><see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> Wystąpienie, które konfiguruje link.</span><span class="sxs-lookup"><span data-stu-id="8c661-127">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> instance that configures the link.</span></span></param>
        <summary><span data-ttu-id="8c661-128">Łączy do określonego <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />. <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /></span><span class="sxs-lookup"><span data-stu-id="8c661-128">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> .</span></span></summary>
        <returns><span data-ttu-id="8c661-129">Interfejs IDisposable, który po wywołaniu metody Dispose spowoduje odłączenie źródła od obiektu docelowego.</span><span class="sxs-lookup"><span data-stu-id="8c661-129">An IDisposable that, upon calling Dispose, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c661-130"><paramref name="target" />ma wartość null (Nothing w Visual Basic) <paramref name="linkOptions" /> lub ma wartość null (Nothing w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8c661-130"><paramref name="target" /> is null (Nothing in Visual Basic) or  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OutputCount">
      <MemberSignature Language="C#" Value="public int OutputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BatchBlock`1.OutputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputCount : int" Usage="System.Threading.Tasks.Dataflow.BatchBlock&lt;'T&gt;.OutputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c661-131">Pobiera liczbę elementów wyjściowych dostępnych do odebrania z tego bloku.</span><span class="sxs-lookup"><span data-stu-id="8c661-131">Gets the number of output items available to be received from this block.</span></span></summary>
        <value><span data-ttu-id="8c661-132">Liczba elementów wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="8c661-132">The number of output items.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="8c661-133"><see cref="T:System.Exception" /> Spowodował błąd.</span><span class="sxs-lookup"><span data-stu-id="8c661-133">The <see cref="T:System.Exception" /> that caused the faulting.</span></span></param>
        <summary><span data-ttu-id="8c661-134"><see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> Powoduje zakończenie<see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> w stanie.</span><span class="sxs-lookup"><span data-stu-id="8c661-134">Causes the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> to complete in a  <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-135">Po <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> wywołaniu w bloku przepływu danych ten blok zostanie ukończony, a jego <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> zadanie przejdzie do stanu końcowego.</span><span class="sxs-lookup"><span data-stu-id="8c661-135">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="8c661-136">Błąd bloku, podobnie jak w przypadku anulowania bloku, powoduje, że komunikaty buforowane (nieprzetworzone komunikaty wejściowe oraz nieoferowane komunikaty wyjściowe) zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="8c661-136">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c661-137"><paramref name="exception" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="8c661-137">The <paramref name="exception" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ConsumeMessage">
      <MemberSignature Language="C#" Value="T[] ISourceBlock&lt;T[]&gt;.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !T[] System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T[]&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T()), ByRef messageConsumed As Boolean) As T() Implements ISourceBlock(Of T()).ConsumeMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;T&gt; ^ System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ConsumeMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;cli::array &lt;T&gt; ^&gt; ^ target, [Runtime::InteropServices::Out] bool % messageConsumed) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;cli::array &lt;T&gt; ^&gt;::ConsumeMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="8c661-138"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> Używanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="8c661-138">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being consumed.</span></span></param>
        <param name="target"><span data-ttu-id="8c661-139"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Zużywany komunikat.</span><span class="sxs-lookup"><span data-stu-id="8c661-139">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consuming the message.</span></span></param>
        <param name="messageConsumed"><span data-ttu-id="8c661-140"><see langword="true" />Jeśli komunikat został pomyślnie użyty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8c661-140"><see langword="true" /> if the message was successfully consumed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8c661-141">Wywoływane przez połączony <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> , aby akceptować i korzystać <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> z wcześniej oferowanych przez <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> nią.</span><span class="sxs-lookup"><span data-stu-id="8c661-141">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to accept and consume a <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> previously offered by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> .</span></span></summary>
        <returns><span data-ttu-id="8c661-142">Wartość wykorzystanego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="8c661-142">The value of the consumed message.</span></span> <span data-ttu-id="8c661-143">Może to odpowiadać wystąpieniu innego <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> wystąpienia niż zostało wcześniej zarezerwowane i przesłane <paramref name="messageHeader" /> jako do <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span><span class="sxs-lookup"><span data-stu-id="8c661-143">This may correspond to a different <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance than was previously reserved and passed as the <paramref name="messageHeader" /> to <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span></span> <span data-ttu-id="8c661-144">Zużywanie <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> musi używać zwracanej wartości zamiast wartości przekazana jako messageValue przez <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="8c661-144">The consuming <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> must use the returned value instead of the value passed as messageValue through <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span></span>  
  
<span data-ttu-id="8c661-145">Jeśli żądany komunikat nie jest dostępny, wartość zwracana będzie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8c661-145">If the message requested is not available, the return value will be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-146">Tylko [ISourceBlock (T\<linki XREF: System. Threading. Tasks. przepływu danych. ITargetBlock% 601 > wystąpienia połączone z tym [ISourceBlock (\<t linki XREF: System. Threading. Tasks. przepływu danych. ISourceBlock% 601 > wystąpienie może używać [ISourceBlock ( T\<linki XREF: System. Threading. Tasks. przepływu danych. ISourceBlock% 601. ConsumeMessage% 2a > i musi być używany tylko do użycia [ISourceBlock (T\<linki XREF: System. Threading. Tasks. przepływu danych. DataflowMessageHeader > Instances wcześniej oferowane przez to źródło dla elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="8c661-146">Only [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> , and it must only be used to consume [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c661-147"><paramref name="messageHeader" /> Nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="8c661-147">The  <paramref name="messageHeader" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c661-148"><paramref name="target" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="8c661-148">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReleaseReservation">
      <MemberSignature Language="C#" Value="void ISourceBlock&lt;T[]&gt;.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T[]&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})" />
      <MemberSignature Language="VB.NET" Value="Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T())) Implements ISourceBlock(Of T()).ReleaseReservation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;cli::array &lt;T&gt; ^&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;cli::array &lt;T&gt; ^&gt;::ReleaseReservation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="8c661-149"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> Wydano zastrzeżony komunikat.</span><span class="sxs-lookup"><span data-stu-id="8c661-149">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the reserved message being released.</span></span></param>
        <param name="target"><span data-ttu-id="8c661-150"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Zwalnia komunikat, który wcześniej zarezerwował.</span><span class="sxs-lookup"><span data-stu-id="8c661-150">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> releasing the message it previously reserved.</span></span></param>
        <summary><span data-ttu-id="8c661-151">Wywoływane przez połączenie <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> z wydaną wcześniej zarezerwowaną <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />wersją.</span><span class="sxs-lookup"><span data-stu-id="8c661-151">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to release a previously reserved <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-152">Tylko [ISourceBlock (T\<linki XREF: System. Threading. Tasks. przepływu danych. ITargetBlock% 601 > wystąpienia połączone z tym [ISourceBlock (\<t linki XREF: System. Threading. Tasks. przepływu danych. ISourceBlock% 601 > może `ReleaseReservation` używać wystąpienia i musi być używany tylko do wydania [ISourceBlock (T\<linki XREF: System. Threading. Tasks. przepływu danych. DataflowMessageHeader > Instances poprzednio i pomyślnie zarezerwowane przez element docelowy.</span><span class="sxs-lookup"><span data-stu-id="8c661-152">Only [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use `ReleaseReservation`, and it must only be used to release [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c661-153"><paramref name="messageHeader" /> Nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="8c661-153">The <paramref name="messageHeader" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c661-154"><paramref name="target" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="8c661-154">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c661-155"><paramref name="target" /> Wiadomość nie została zarezerwowana.</span><span class="sxs-lookup"><span data-stu-id="8c661-155">The <paramref name="target" /> did not have the message reserved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReserveMessage">
      <MemberSignature Language="C#" Value="bool ISourceBlock&lt;T[]&gt;.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T[]&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})" />
      <MemberSignature Language="VB.NET" Value="Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T())) As Boolean Implements ISourceBlock(Of T()).ReserveMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;cli::array &lt;T&gt; ^&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;cli::array &lt;T&gt; ^&gt;::ReserveMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="8c661-156"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> Zastrzeżona wiadomość.</span><span class="sxs-lookup"><span data-stu-id="8c661-156">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being reserved.</span></span></param>
        <param name="target"><span data-ttu-id="8c661-157"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Zachowywanie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="8c661-157">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> reserving the message.</span></span></param>
        <summary><span data-ttu-id="8c661-158">Wywoływane przez połączony <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> , aby zarezerwować wcześniej oferowane <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> przez <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />nią.</span><span class="sxs-lookup"><span data-stu-id="8c661-158">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to reserve a previously offered <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="8c661-159"><see langword="true" />Jeśli komunikat został pomyślnie zarezerwowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8c661-159"><see langword="true" /> if the message was successfully reserved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-160">Tylko [ISourceBlock (T\<linki XREF: System. Threading. Tasks. przepływu danych. ITargetBlock% 601 > wystąpienia połączone z tym [ISourceBlock (\<t linki XREF: System. Threading. Tasks. przepływu danych. ISourceBlock% 601 > wystąpienie może używać [ISourceBlock ( T\<linki XREF: System. Threading. Tasks. przepływu danych. ISourceBlock% 601. ReserveMessage% 2a > i musi być używany tylko w celu zarezerwowania [ISourceBlock\<(T linki XREF: System. Threading. Tasks. przepływu danych. DataflowMessageHeader > Instances wcześniej oferowane przez to źródło dla elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="8c661-160">Only [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 <span data-ttu-id="8c661-161">Jeśli `true` jest zwracany, parametr [ISourceBlock (t\<linki XREF: System. Threading. Tasks. przepływu danych. ITargetBlock% 601 > musi następnie wywołać metodę [ISourceBlock (\<t linki XREF: System. Threading. Tasks. przepływu danych. ISourceBlock% 601. ConsumeMessage% 2a > lub [ISourceBlock (T\<linki XREF: System. Threading. Tasks. przepływu danych. ISourceBlock% 601. ReleaseReservation% 2a > dla tego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="8c661-161">If `true` is returned, the  [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either  [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message.</span></span> <span data-ttu-id="8c661-162">Niewykonanie tej czynności może spowodować, że źródło nie będzie w stanie propagować żadnych dalszych komunikatów do tego lub innych elementów docelowych.</span><span class="sxs-lookup"><span data-stu-id="8c661-162">Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</span></span>  
  
 <span data-ttu-id="8c661-163">[ISourceBlock (T\<linki XREF: System. Threading. Tasks. przepływu danych. ISourceBlock% 601. ReserveMessage% 2a > nie może być wywoływana, gdy element docelowy utrzymuje wewnętrzne blokady.</span><span class="sxs-lookup"><span data-stu-id="8c661-163">[ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span></span> <span data-ttu-id="8c661-164">W ten sposób będzie naruszać hierarchię blokad niezbędną do uniknięcia zakleszczeń w sieci przepływu danych.</span><span class="sxs-lookup"><span data-stu-id="8c661-164">Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c661-165"><paramref name="messageHeader" /> Nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="8c661-165">The <paramref name="messageHeader" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c661-166"><paramref name="target" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="8c661-166">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;T&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, T messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !T messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!T&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;T&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As T, source As ISourceBlock(Of T), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of T).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, T messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="T" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="8c661-167"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> Wystąpienie, które reprezentuje nagłówek oferowanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="8c661-167">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance that represents the header of the message being offered.</span></span></param>
        <param name="messageValue"><span data-ttu-id="8c661-168">Wartość proponowanego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="8c661-168">The value of the message being offered.</span></span></param>
        <param name="source"><span data-ttu-id="8c661-169"><see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> Oferta wiadomości.</span><span class="sxs-lookup"><span data-stu-id="8c661-169">The <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> offering the message.</span></span> <span data-ttu-id="8c661-170">Może to być wartość null.</span><span class="sxs-lookup"><span data-stu-id="8c661-170">This may be null.</span></span></param>
        <param name="consumeToAccept"><span data-ttu-id="8c661-171">Ustaw na <see langword="true" /> , aby określić, że element <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> docelowy ma być wywoływany synchronicznie podczas wywołania do <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, przed zwróceniem, aby można było użyć komunikatu.</span><span class="sxs-lookup"><span data-stu-id="8c661-171">Set to <see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message.</span></span></param>
        <summary><span data-ttu-id="8c661-172">Oferuje komunikat do <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, co daje obiektowi docelowemu możliwość użycia lub odroczenia wiadomości.</span><span class="sxs-lookup"><span data-stu-id="8c661-172">Offers a message to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, giving the target the opportunity to consume or postpone the message.</span></span></summary>
        <returns><span data-ttu-id="8c661-173">Stan proponowanego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="8c661-173">The status of the offered message.</span></span> <span data-ttu-id="8c661-174">Jeśli komunikat został zaakceptowany przez obiekt docelowy <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> , jest zwracany, a źródło nie powinno już korzystać z proponowanego komunikatu, ponieważ jest teraz własnością obiektu docelowego.</span><span class="sxs-lookup"><span data-stu-id="8c661-174">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span></span> <span data-ttu-id="8c661-175">Jeśli komunikat został odroczony przez obiekt docelowy, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> jest zwracany jako powiadomienie, że obiekt docelowy może później próbować wykorzystać lub zastrzec komunikat; w międzyczasie Źródło nadal jest właścicielem komunikatu i może oferować inne bloki.</span><span class="sxs-lookup"><span data-stu-id="8c661-175">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span></span>  
  
<span data-ttu-id="8c661-176">Jeśli obiektem docelowym może być komunikat odroczony, ale <paramref name="source" /> <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> został <see langword="null" />on zwrócony.</span><span class="sxs-lookup"><span data-stu-id="8c661-176">If the target would have otherwise postponed message, but <paramref name="source" /> was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is instead returned.</span></span>  
  
<span data-ttu-id="8c661-177">Jeśli obiekt docelowy próbował zaakceptować komunikat, ale został pominięty z powodu źródła dostarczającego komunikat do innego obiektu docelowego lub po prostu odrzuca, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="8c661-177">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span></span>  
  
<span data-ttu-id="8c661-178">Jeśli element docelowy nie zaakceptował wiadomości, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="8c661-178">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span> <span data-ttu-id="8c661-179">Jeśli obiekt docelowy nie zaakceptował wiadomości i nigdy nie zaakceptuje kolejnego komunikatu z tego źródła, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="8c661-179">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c661-180"><paramref name="messageHeader" /> Nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="8c661-180">The  <paramref name="messageHeader" /> is not valid.</span></span>  
  
<span data-ttu-id="8c661-181">-lub- <paramref name="consumeToAccept" /> może mieć wartość true tylko wtedy, gdy jest dostarczony z <paramref name="source" />wartością różną od null.</span><span class="sxs-lookup"><span data-stu-id="8c661-181">-or- <paramref name="consumeToAccept" /> may only be true if provided with a non-null <paramref name="source" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="batchBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c661-182">Zwraca ciąg, który reprezentuje sformatowaną nazwę tego <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8c661-182">Returns a string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></summary>
        <returns><span data-ttu-id="8c661-183">Ciąg, który reprezentuje sformatowaną nazwę tego <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8c661-183">A string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-184">Dziedziczone z <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="8c661-184">Inherited from <xref:System.Object>.</span></span> <span data-ttu-id="8c661-185"><xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> Używa opcji.</span><span class="sxs-lookup"><span data-stu-id="8c661-185">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerBatch">
      <MemberSignature Language="C#" Value="public void TriggerBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TriggerBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TriggerBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub TriggerBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TriggerBatch();" />
      <MemberSignature Language="F#" Value="member this.TriggerBatch : unit -&gt; unit" Usage="batchBlock.TriggerBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c661-186">Wyzwala, <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> aby zainicjować operację wsadową nawet wtedy, gdy liczba aktualnie umieszczonych w kolejce lub odroczonych elementów jest mniejsza <see cref="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />niż.</span><span class="sxs-lookup"><span data-stu-id="8c661-186">Triggers the <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> to initiate a batching operation even if the number of currently queued or postponed items is less than the <see cref="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-187">W trybie zachłanne, partia zostanie wygenerowana z elementów umieszczonych w kolejce, nawet jeśli nie ma rozmiaru partii.</span><span class="sxs-lookup"><span data-stu-id="8c661-187">In greedy mode, a batch will be generated from queued items even if fewer exist than the batch size.</span></span>  
  
 <span data-ttu-id="8c661-188">W trybie innym niż zachłanne zadanie wsadowe zostanie wygenerowane asynchronicznie z odroczonych elementów nawet wtedy, gdy liczba elementów, które nie zostały określone przez rozmiar partii, może być zużyta.</span><span class="sxs-lookup"><span data-stu-id="8c661-188">In non-greedy mode, a batch will be generated asynchronously from postponed items even if fewer items than specified by the batch size can be consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (Predicate&lt;T[]&gt; filter, out T[] item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(class System.Predicate`1&lt;!T[]&gt; filter, [out] !T[]&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceive(System.Predicate{`0[]},`0[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (filter As Predicate(Of T()), ByRef item As T()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceive(Predicate&lt;cli::array &lt;T&gt; ^&gt; ^ filter, [Runtime::InteropServices::Out] cli::array &lt;T&gt; ^ % item);" />
      <MemberSignature Language="F#" Value="abstract member TryReceive : Predicate&lt;'T[]&gt; *  -&gt; bool&#xA;override this.TryReceive : Predicate&lt;'T[]&gt; *  -&gt; bool" Usage="batchBlock.TryReceive (filter, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Predicate&lt;T[]&gt;" />
        <Parameter Name="item" Type="T[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="8c661-189">Predykat wartość musi zostać pomyślnie przekazana, aby można było ją odebrać.</span><span class="sxs-lookup"><span data-stu-id="8c661-189">The predicate a value must successfully pass in order for it to be received.</span></span>  <span data-ttu-id="8c661-190"><paramref name="filter" />może tak <see langword="null" />być, w którym przypadku zostaną przekazane wszystkie elementy.</span><span class="sxs-lookup"><span data-stu-id="8c661-190"><paramref name="filter" /> may be <see langword="null" />, in which case all items will pass.</span></span></param>
        <param name="item"><span data-ttu-id="8c661-191">Element otrzymany ze źródła.</span><span class="sxs-lookup"><span data-stu-id="8c661-191">The item received from the source.</span></span></param>
        <summary><span data-ttu-id="8c661-192">Próbuje synchronicznie odebrać dostęp do <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />dostępnego elementu wyjściowego z.</span><span class="sxs-lookup"><span data-stu-id="8c661-192">Attempts to synchronously receive an available output item from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="8c661-193"><see langword="true" />Jeśli można odebrać element; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8c661-193"><see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-194">Ta metoda nie blokuje oczekiwania na dostarczenie elementu przez źródło.</span><span class="sxs-lookup"><span data-stu-id="8c661-194">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="8c661-195">Zostanie zwrócony po sprawdzeniu elementu, niezależnie od tego, czy element jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="8c661-195">It will return after checking for an element, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveAll">
      <MemberSignature Language="C#" Value="public bool TryReceiveAll (out System.Collections.Generic.IList&lt;T[]&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveAll([out] class System.Collections.Generic.IList`1&lt;!T[]&gt;&amp; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0[]}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveAll (ByRef items As IList(Of T())) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceiveAll([Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;cli::array &lt;T&gt; ^&gt; ^ % items);" />
      <MemberSignature Language="F#" Value="abstract member TryReceiveAll :  -&gt; bool&#xA;override this.TryReceiveAll :  -&gt; bool" Usage="batchBlock.TryReceiveAll items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;T[]&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="8c661-196">Elementy otrzymane ze źródła.</span><span class="sxs-lookup"><span data-stu-id="8c661-196">The items received from the source.</span></span></param>
        <summary><span data-ttu-id="8c661-197">Próbuje synchronicznie odebrać wszystkie dostępne elementy z <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="8c661-197">Attempts to synchronously receive all available items from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="8c661-198"><see langword="true" />Jeśli co najmniej jeden element może zostać odebrany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8c661-198"><see langword="true" /> if one or more items could be received; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c661-199">Ta metoda nie blokuje oczekiwania na dostarczenie elementu przez źródło.</span><span class="sxs-lookup"><span data-stu-id="8c661-199">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="8c661-200">Zostanie zwrócony po sprawdzeniu elementów, niezależnie od tego, czy element jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="8c661-200">It will return after checking for elements, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
