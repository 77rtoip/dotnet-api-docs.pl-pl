<Type Name="ISourceBlock&lt;TOutput&gt;" FullName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61f8d4ebd7a10a66bea8da1e3765df22aca4ae93" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56066868" /></Metadata><TypeSignature Language="C#" Value="public interface ISourceBlock&lt;out TOutput&gt; : System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISourceBlock`1&lt;+ TOutput&gt; implements class System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISourceBlock(Of Out TOutput)&#xA;Implements IDataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOutput&gt;&#xA;public interface class ISourceBlock : System::Threading::Tasks::Dataflow::IDataflowBlock" />
  <TypeSignature Language="F#" Value="type ISourceBlock&lt;'Output&gt; = interface&#xA;    interface IDataflowBlock" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOutput">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TOutput">Określa typ danych dostarczanych przez <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</typeparam>
    <summary>Reprezentuje blok przepływu danych, który jest źródłem danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConsumeMessage">
      <MemberSignature Language="C#" Value="public TOutput ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;out TOutput&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TOutput ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of Out TOutput), ByRef messageConsumed As Boolean) As TOutput" />
      <MemberSignature Language="F#" Value="abstract member ConsumeMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; *  -&gt; 'Output" Usage="iSourceBlock.ConsumeMessage (messageHeader, target, messageConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> Wiadomości są używane.</param>
        <param name="target"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Konsumentem komunikatu.</param>
        <param name="messageConsumed"><see langword="true" /> Jeśli komunikat został pomyślnie wykorzystany; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wywoływane przez połączone <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> akceptować i korzystanie z niej <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> oferowane wcześniej to <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
        <returns>Wartość zużyto komunikatu. Może odpowiadać na inne <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> wystąpienia nie został wcześniej zarezerwowany i przekazywane jako <paramref name="messageHeader" /> do <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Korzystanie z <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> muszą używać zwrócona wartość zamiast wartości przekazanej jako <paramref name="messageValue" /> za pośrednictwem <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Jeśli żądanej wiadomości nie jest dostępna, zwracana wartość będzie równa null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> wystąpienia połączone z tym <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> może używać wystąpienia <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, i może być używana tylko z <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> wystąpienia wcześniej oferowane przez to źródło do obiektu docelowego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">MessageHeader jest nieprawidłowa.</exception>
        <exception cref="T:System.ArgumentNullException">Element docelowy jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;out TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of Out TOutput), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberSignature Language="F#" Value="abstract member LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable" Usage="iSourceBlock.LinkTo (target, linkOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Do połączenia tego źródła.</param>
        <param name="linkOptions">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> wystąpienia, który konfiguruje łącze.</param>
        <summary>Linki <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> określonej <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
        <returns>Interfejs IDisposable, który podczas wywoływania metody Dispose, spowoduje to odłączenie źródła z obiektu docelowego.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> ma wartość null (Nothing w języku Visual Basic) lub <paramref name="linkOptions" /> ma wartość null (Nothing w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseReservation">
      <MemberSignature Language="C#" Value="public void ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;out TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of Out TOutput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseReservation : System.Threading.Tasks.Dataflow.DataflowMessageHeader * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; -&gt; unit" Usage="iSourceBlock.ReleaseReservation (messageHeader, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> z zarezerwowanej wiadomości, które zostały udostępnione.</param>
        <param name="target"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Przy zwalnianiu komunikat wcześniej zarezerwowany.</param>
        <summary>Wywoływane przez połączone <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> zwolnić wcześniej zarezerwowanych <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> to <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> wystąpienia połączone z tym <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> może używać wystąpienia `ReleaseReservation`, i może być używana tylko do wersji <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> wystąpień wcześniej i pomyślnie zastrzeżone przez element docelowy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="messageHeader" /> Jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="target" /> Nie miał komunikat zastrzeżone.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveMessage">
      <MemberSignature Language="C#" Value="public bool ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;out TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of Out TOutput)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="abstract member ReserveMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; -&gt; bool" Usage="iSourceBlock.ReserveMessage (messageHeader, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> Komunikatu pozostaje zarezerwowane.</param>
        <param name="target"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Zarezerwowanie wiadomości.</param>
        <summary>Wywoływane przez połączone <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> zarezerwować oferowanych wcześniej <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> to <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
        <returns><see langword="true" /> Jeśli komunikat został pomyślnie zarezerwowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> wystąpienia połączone z tym <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> może używać wystąpienia <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, i może być używana tylko do zarezerwowania <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> wystąpienia wcześniej oferowane przez to źródło do obiektu docelowego.  
  
 Jeśli `true` zwracany jest <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> później należy wywołać albo <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> lub <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> dla tego komunikatu. Niewykonanie tej czynności może spowodować źródłem nie można propagować wszelkie dalsze komunikaty do tego lub innych elementów docelowych.  
  
 <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> nie musi być wywoływana, gdy miejsce docelowe nie posiada żadnych blokad wewnętrznego. Ten sposób naruszy niezbędne w celu uniknięcia zakleszczenia w sieci przepływu danych w hierarchii blokady.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="messageHeader" /> Jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>