<Type Name="IDataflowBlock" FullName="System.Threading.Tasks.Dataflow.IDataflowBlock">
  <Metadata><Meta Name="ms.openlocfilehash" Value="922e51c4535f569d191ae9d794114b2b515e0aa2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69230159" /></Metadata><TypeSignature Language="C#" Value="public interface IDataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataflowBlock" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataflowBlock" />
  <TypeSignature Language="F#" Value="type IDataflowBlock = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje blok przepływu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit" Usage="iDataflowBlock.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnalizuje <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> , że nie powinna akceptować ani generować więcej komunikatów ani nie zużywać więcej komunikatów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> wywołaniu w bloku przepływu danych ten blok zostanie ukończony, a jego <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> zadanie przejdzie do stanu końcowego po przetworzeniu wszystkich wcześniej dostępnych danych. <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A>nie będzie blokować oczekiwanie na zakończenie, ale zamiast zainicjuje żądanie; aby poczekać na zakończenie, <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> zadanie może być używane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.IDataflowBlock.Completion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość <see cref="T:System.Threading.Tasks.Task" /> reprezentującą operację asynchroniczną i zakończenie bloku przepływu danych.</summary>
        <value>Zadanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Blok przepływu danych jest uznawany za zakończony, gdy nie przetwarza aktualnie komunikatu i gdy nie zagwarantuje, że nie przetworzy więcej komunikatów. Zwrócony <xref:System.Threading.Tasks.Task> element przejdzie do stanu ukończenia po zakończeniu skojarzonego bloku. Nastąpi przejście do <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> stanu, gdy blok zakończy działanie pomyślnie, zgodnie ze zdefiniowaną semantyką bloku przepływu danych. <xref:System.Threading.Tasks.TaskStatus> Przejdzie do <xref:System.Threading.Tasks.TaskStatus.Faulted> stanu, gdy blok przepływu danych zakończył przetwarzanie przedwcześnie ze względu na nieobsługiwany wyjątek i przejdzie do <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Canceled> stanu po zakończeniu bloku przepływu danych przetwarzanie przedwcześnie spowodowane odebraniem żądania anulowania. Jeśli zadanie zostanie ukończone w <xref:System.Threading.Tasks.TaskStatus.Faulted> stanie, jego `Exception` właściwość zwróci <xref:System.AggregateException> zawierający co najmniej jeden wyjątek, który spowodował niepowodzenie bloku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="public void Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Fault(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="abstract member Fault : Exception -&gt; unit" Usage="iDataflowBlock.Fault exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><see cref="T:System.Exception" /> Spowodował błąd.</param>
        <summary><see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> Powoduje zakończenie<see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> w stanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> wywołaniu w bloku przepływu danych ten blok zostanie ukończony, a jego <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> zadanie przejdzie do stanu końcowego. Błąd bloku, podobnie jak w przypadku anulowania bloku, powoduje, że komunikaty buforowane (nieprzetworzone komunikaty wejściowe oraz nieoferowane komunikaty wyjściowe) zostaną utracone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="exception" /> Ma<see langword="null" />wartość.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
