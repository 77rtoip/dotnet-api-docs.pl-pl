<Type Name="IDataflowBlock" FullName="System.Threading.Tasks.Dataflow.IDataflowBlock">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34711813963d940018412100f9cfc38705ee40d3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36407607" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataflowBlock" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataflowBlock" />
  <TypeSignature Language="F#" Value="type IDataflowBlock = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje blok przepływu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit" Usage="iDataflowBlock.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnalizuje <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> czy go powinien nie akceptują wygenerować więcej wiadomości ani zużywać więcej odroczone komunikaty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> została wywołana w bloku przepływu danych, zakończy się tego bloku, a jego <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> zadanie przejdzie stan końcowy po zostało przetworzone wszystkie dane były dostępne. <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> będzie blokuje oczekiwanie na ukończenie wystąpienia, ale raczej zainicjuje żądania; czekać na zakończenie zachodzić <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> zadania mogą być używane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.IDataflowBlock.Completion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną i uzupełniania bloku przepływu danych.</summary>
        <value>Zadanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W bloku przepływu danych jest uznawany za ukończone, gdy nie obecnie przetwarza komunikat i kiedy ma gwarancję, że nie będzie przetwarzać więcej wiadomości. Zwrócony <xref:System.Threading.Tasks.Task> spowoduje przejście do stanu ukończenia, po ukończeniu skojarzony blok. Zostanie zastąpiona usługą <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> stan po bloku ukończeniu jego przetwarzania pomyślnie zgodnie z bloku przepływu danych zdefiniować semantyki. Zostanie zastąpiona usługą <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Faulted> stan bloku przepływu danych zakończeniu przetwarzania przedwcześnie z powodu nieobsługiwanego wyjątku, gdy zostanie zastąpiona usługą <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Canceled> stanu po zakończeniu w bloku przepływu danych Przetwarzanie przedwcześnie z powodu odebrania żądania anulowania. Jeśli zadanie zakończy się w <xref:System.Threading.Tasks.TaskStatus.Faulted> stanu, jego `Exception` zwróci właściwość <xref:System.AggregateException> zawierające jeden lub kilka wyjątków, które spowodowały bloku nie powiedzie się.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="public void Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Fault(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="abstract member Fault : Exception -&gt; unit" Usage="iDataflowBlock.Fault exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <see cref="T:System.Exception" /> , Która spowodowała błąd.</param>
        <summary>Powoduje, że <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> do wykonania w <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> została wywołana w bloku przepływu danych, zakończy się tego bloku, a jego <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> zadanie przejdzie w stan końcowy. Powodujący błąd bloku, jako anulowanie bloku, powoduje, że buforowane wiadomości (nieprzetworzone komunikaty wejściowe także komunikaty wyjściowe unoffered), zostanie utracone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exception" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>