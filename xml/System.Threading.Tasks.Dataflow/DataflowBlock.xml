<Type Name="DataflowBlock" FullName="System.Threading.Tasks.Dataflow.DataflowBlock">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2d890bbd6c3d63d2119a30d850e7ee602429b37" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69099389" /></Metadata><TypeSignature Language="C#" Value="public static class DataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataflowBlock extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.DataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Module DataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataflowBlock abstract sealed" />
  <TypeSignature Language="F#" Value="type DataflowBlock = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="39a35-101">Zawiera zestaw statycznych (współużytkowanych w Visual Basic) metod do pracy z blokami przepływu danych.</span><span class="sxs-lookup"><span data-stu-id="39a35-101">Provides a set of static (Shared in Visual Basic) methods for working with dataflow blocks.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsObservable&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IObservable&lt;TOutput&gt; AsObservable&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObservable`1&lt;!!TOutput&gt; AsObservable&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObservable(Of TOutput) (source As ISourceBlock(Of TOutput)) As IObservable(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObservable&lt;TOutput&gt; ^ AsObservable(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsObservable : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; IObservable&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObservable&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-102">Określa typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-102">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-103">Źródło do oblewania.</span><span class="sxs-lookup"><span data-stu-id="39a35-103">The source to wrap.</span></span></param>
        <summary><span data-ttu-id="39a35-104">Tworzy nowe <see cref="T:System.IObservable`1" /> streszczenie <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />na.</span><span class="sxs-lookup"><span data-stu-id="39a35-104">Creates a new <see cref="T:System.IObservable`1" /> abstraction over the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="39a35-105"><see cref="T:System.IObservable`1" /> , Który umożliwia obserwatorom subskrybowanie źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-105">An <see cref="T:System.IObservable`1" /> that enables observers to be subscribed to the source.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-106"><paramref name="source" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-106">The <paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsObserver&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static IObserver&lt;TInput&gt; AsObserver&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObserver`1&lt;!!TInput&gt; AsObserver&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObserver(Of TInput) (target As ITargetBlock(Of TInput)) As IObserver(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObserver&lt;TInput&gt; ^ AsObserver(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="static member AsObserver : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; -&gt; IObserver&lt;'Input&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObserver&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="39a35-107">Określa typ danych wejściowych akceptowanych przez blok docelowy.</span><span class="sxs-lookup"><span data-stu-id="39a35-107">Specifies the type of input accepted by the target block.</span></span></typeparam>
        <param name="target"><span data-ttu-id="39a35-108">Element docelowy do zawinięcia.</span><span class="sxs-lookup"><span data-stu-id="39a35-108">The target to wrap.</span></span></param>
        <summary><span data-ttu-id="39a35-109">Tworzy nowe <see cref="T:System.IObserver`1" /> streszczenie <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />na.</span><span class="sxs-lookup"><span data-stu-id="39a35-109">Creates a new <see cref="T:System.IObserver`1" /> abstraction over the  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="39a35-110">Obserwator zawijający blok docelowy.</span><span class="sxs-lookup"><span data-stu-id="39a35-110">An observer that wraps the target block.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="39a35-111">Określa typ danych zawartych w pierwszym źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-111">Specifies type of data contained in the first source.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="39a35-112">Określa typ danych zawartych w drugim źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-112">Specifies type of data contained in the second source.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="39a35-113">Pierwsze źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-113">The first source.</span></span></param>
        <param name="action1"><span data-ttu-id="39a35-114">Program obsługi do wykonania na danych z pierwszego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-114">The handler to execute on data from the first source.</span></span></param>
        <param name="source2"><span data-ttu-id="39a35-115">Drugie źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-115">The second source.</span></span></param>
        <param name="action2"><span data-ttu-id="39a35-116">Program obsługi do wykonania na danych z drugiego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-116">The handler to execute on data from the second source.</span></span></param>
        <summary><span data-ttu-id="39a35-117">Monitoruje dwa źródła przepływu danych, wywołując podaną procedurę obsługi dla danego źródła, sprawia, że dane są dostępne jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="39a35-117">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span></span></summary>
        <returns><span data-ttu-id="39a35-118"><see cref="T:System.Threading.Tasks.Task`1" /> Reprezentuje wybór asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="39a35-118">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span></span> <span data-ttu-id="39a35-119">Jeśli oba źródła zostaną zakończone przed ukończeniem wyboru, zadanie zostanie anulowane.</span><span class="sxs-lookup"><span data-stu-id="39a35-119">If both sources are completed prior to the choice completing, the resulting task will be canceled.</span></span> <span data-ttu-id="39a35-120">Gdy jedno ze źródeł ma dostępne dane i pomyślnie propaguje je do wyboru, wynikiem zadania zakończy się po zakończeniu obsługi; Jeśli procedura obsługi zgłasza wyjątek, zadanie zakończy się w <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanie i będzie zawierać nieobsłużony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="39a35-120">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span></span> <span data-ttu-id="39a35-121">W przeciwnym razie zadanie zostanie zakończone z <see cref="P:System.Threading.Tasks.Task`1.Result" /> ustawioną wartością 0 lub 1, aby reprezentować odpowiednio pierwsze lub drugie źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-121">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span></span>  
  
<span data-ttu-id="39a35-122">Ta metoda będzie używać tylko elementu z jednego z dwóch źródeł danych, nigdy nie obu.</span><span class="sxs-lookup"><span data-stu-id="39a35-122">This method will only consume an element from one of the two data sources, never both.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-123"><paramref name="source1" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-123">The <paramref name="source1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-124">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-124">-or-</span></span> 
<span data-ttu-id="39a35-125"><paramref name="action1" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-125">The  <paramref name="action1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-126">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-126">-or-</span></span> 
<span data-ttu-id="39a35-127"><paramref name="source2" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-127">The <paramref name="source2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-128">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-128">-or-</span></span> 
<span data-ttu-id="39a35-129"><paramref name="action2" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-129">The <paramref name="action2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.DataflowBlockOptions -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, dataflowBlockOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="39a35-130">Określa typ danych zawartych w pierwszym źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-130">Specifies type of data contained in the first source.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="39a35-131">Określa typ danych zawartych w drugim źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-131">Specifies type of data contained in the second source.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="39a35-132">Pierwsze źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-132">The first source.</span></span></param>
        <param name="action1"><span data-ttu-id="39a35-133">Program obsługi do wykonania na danych z pierwszego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-133">The handler to execute on data from the first source.</span></span></param>
        <param name="source2"><span data-ttu-id="39a35-134">Drugie źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-134">The second source.</span></span></param>
        <param name="action2"><span data-ttu-id="39a35-135">Program obsługi do wykonania na danych z drugiego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-135">The handler to execute on data from the second source.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="39a35-136">Opcje konfigurowania tego wyboru.</span><span class="sxs-lookup"><span data-stu-id="39a35-136">The options with which to configure this choice.</span></span></param>
        <summary><span data-ttu-id="39a35-137">Monitoruje dwa źródła przepływu danych, wywołując podaną procedurę obsługi dla danego źródła, sprawia, że dane są dostępne jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="39a35-137">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span></span></summary>
        <returns><span data-ttu-id="39a35-138"><see cref="T:System.Threading.Tasks.Task`1" /> Reprezentuje wybór asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="39a35-138">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span></span> <span data-ttu-id="39a35-139">Jeśli oba źródła są ukończone przed ukończeniem wyboru, lub jeśli <see cref="T:System.Threading.CancellationToken" /> podane jako <paramref name="dataflowBlockOptions" /> część jest anulowane przed zakończeniem, zadanie zostanie anulowane.</span><span class="sxs-lookup"><span data-stu-id="39a35-139">If both sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span></span> <span data-ttu-id="39a35-140">Gdy jedno ze źródeł ma dostępne dane i pomyślnie propaguje je do wyboru, wynikiem zadania zakończy się po zakończeniu obsługi; Jeśli procedura obsługi zgłasza wyjątek, zadanie zakończy się w <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanie i będzie zawierać nieobsłużony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="39a35-140">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span></span> <span data-ttu-id="39a35-141">W przeciwnym razie zadanie zostanie zakończone z <see cref="P:System.Threading.Tasks.Task`1.Result" /> ustawioną wartością 0 lub 1, aby reprezentować odpowiednio pierwsze lub drugie źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-141">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-142"><paramref name="source1" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-142">The <paramref name="source1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-143">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-143">-or-</span></span> 
<span data-ttu-id="39a35-144"><paramref name="action1" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-144">The <paramref name="action1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-145">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-145">-or-</span></span> 
<span data-ttu-id="39a35-146"><paramref name="source2" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-146">The <paramref name="source2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-147">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-147">-or-</span></span> 
<span data-ttu-id="39a35-148"><paramref name="action2" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-148">The <paramref name="action2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-149">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-149">-or-</span></span> 
<span data-ttu-id="39a35-150"><paramref name="dataflowBlockOptions" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-150">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2, T3) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2), source3 As ISourceBlock(Of T3), action3 As Action(Of T3)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T3&gt; * Action&lt;'T3&gt; -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, source3, action3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="39a35-151">Określa typ danych zawartych w pierwszym źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-151">Specifies type of data contained in the first source.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="39a35-152">Określa typ danych zawartych w drugim źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-152">Specifies type of data contained in the second source.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="39a35-153">Określa typ danych zawartych w trzecim źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-153">Specifies type of data contained in the third source.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="39a35-154">Pierwsze źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-154">The first source.</span></span></param>
        <param name="action1"><span data-ttu-id="39a35-155">Program obsługi do wykonania na danych z pierwszego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-155">The handler to execute on data from the first source.</span></span></param>
        <param name="source2"><span data-ttu-id="39a35-156">Drugie źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-156">The second source.</span></span></param>
        <param name="action2"><span data-ttu-id="39a35-157">Program obsługi do wykonania na danych z drugiego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-157">The handler to execute on data from the second source.</span></span></param>
        <param name="source3"><span data-ttu-id="39a35-158">Trzecie źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-158">The third source.</span></span></param>
        <param name="action3"><span data-ttu-id="39a35-159">Program obsługi do wykonania na danych z trzeciego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-159">The handler to execute on data from the third source.</span></span></param>
        <summary><span data-ttu-id="39a35-160">Monitoruje trzy źródła przepływu danych, wywołując podaną procedurę obsługi dla danego źródła, sprawia, że dane są dostępne jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="39a35-160">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span></span></summary>
        <returns><span data-ttu-id="39a35-161"><see cref="T:System.Threading.Tasks.Task`1" /> Reprezentuje wybór asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="39a35-161">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span></span> <span data-ttu-id="39a35-162">Jeśli wszystkie źródła zostaną zakończone przed ukończeniem wyboru, zadanie zostanie anulowane.</span><span class="sxs-lookup"><span data-stu-id="39a35-162">If all sources are completed prior to the choice completing, the resulting task will be canceled.</span></span> <span data-ttu-id="39a35-163">Gdy jedno ze źródeł ma dostępne dane i pomyślnie propaguje je do wyboru, wynikiem zadania zakończy się po zakończeniu obsługi; Jeśli procedura obsługi zgłasza wyjątek, zadanie zakończy się w <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanie i będzie zawierać nieobsłużony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="39a35-163">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span></span> <span data-ttu-id="39a35-164">W przeciwnym razie zadanie zostanie zakończone z <see cref="P:System.Threading.Tasks.Task`1.Result" /> ustawionym indeksem równym 0 względem źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-164">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span></span>  
  
<span data-ttu-id="39a35-165">Ta metoda będzie używać tylko elementu z jednego źródła danych, nigdy więcej niż jeden.</span><span class="sxs-lookup"><span data-stu-id="39a35-165">This method will only consume an element from one of the data sources, never more than one.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-166"><paramref name="source1" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-166">The <paramref name="source1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-167">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-167">-or-</span></span> 
<span data-ttu-id="39a35-168"><paramref name="action1" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-168">The <paramref name="action1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-169">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-169">-or-</span></span> 
<span data-ttu-id="39a35-170"><paramref name="source2" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-170">The <paramref name="source2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-171">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-171">-or-</span></span> 
<span data-ttu-id="39a35-172"><paramref name="action2" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-172">The <paramref name="action2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-173">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-173">-or-</span></span> 
<span data-ttu-id="39a35-174"><paramref name="source3" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-174">The <paramref name="source3" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-175">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-175">-or-</span></span> 
<span data-ttu-id="39a35-176"><paramref name="action3" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-176">The <paramref name="action3" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T3&gt; * Action&lt;'T3&gt; * System.Threading.Tasks.Dataflow.DataflowBlockOptions -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, source3, action3, dataflowBlockOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="39a35-177">Określa typ danych zawartych w pierwszym źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-177">Specifies type of data contained in the first source.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="39a35-178">Określa typ danych zawartych w drugim źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-178">Specifies type of data contained in the second source.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="39a35-179">Określa typ danych zawartych w trzecim źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-179">Specifies type of data contained in the third source.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="39a35-180">Pierwsze źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-180">The first source.</span></span></param>
        <param name="action1"><span data-ttu-id="39a35-181">Program obsługi do wykonania na danych z pierwszego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-181">The handler to execute on data from the first source.</span></span></param>
        <param name="source2"><span data-ttu-id="39a35-182">Drugie źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-182">The second source.</span></span></param>
        <param name="action2"><span data-ttu-id="39a35-183">Program obsługi do wykonania na danych z drugiego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-183">The handler to execute on data from the second source.</span></span></param>
        <param name="source3"><span data-ttu-id="39a35-184">Trzecie źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-184">The third source.</span></span></param>
        <param name="action3"><span data-ttu-id="39a35-185">Program obsługi do wykonania na danych z trzeciego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-185">The handler to execute on data from the third source.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="39a35-186">Opcje konfigurowania tego wyboru.</span><span class="sxs-lookup"><span data-stu-id="39a35-186">The options with which to configure this choice.</span></span></param>
        <summary><span data-ttu-id="39a35-187">Monitoruje trzy źródła przepływu danych, wywołując podaną procedurę obsługi dla danego źródła, sprawia, że dane są dostępne jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="39a35-187">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span></span></summary>
        <returns><span data-ttu-id="39a35-188"><see cref="T:System.Threading.Tasks.Task`1" /> Reprezentuje wybór asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="39a35-188">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span></span> <span data-ttu-id="39a35-189">Jeśli wszystkie źródła zostały ukończone przed zakończeniem, lub jeśli <see cref="T:System.Threading.CancellationToken" /> dostarczone jako część elementu <paramref name="dataflowBlockOptions" /> zostało anulowane przed zakończeniem, zadanie zostanie anulowane.</span><span class="sxs-lookup"><span data-stu-id="39a35-189">If all sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span></span> <span data-ttu-id="39a35-190">Gdy jedno ze źródeł ma dostępne dane i pomyślnie propaguje je do wyboru, wynikiem zadania zakończy się po zakończeniu obsługi; Jeśli procedura obsługi zgłasza wyjątek, zadanie zakończy się w <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanie i będzie zawierać nieobsłużony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="39a35-190">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span></span> <span data-ttu-id="39a35-191">W przeciwnym razie zadanie zostanie zakończone z <see cref="P:System.Threading.Tasks.Task`1.Result" /> ustawionym indeksem równym 0 względem źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-191">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span></span>  
  
<span data-ttu-id="39a35-192">Ta metoda będzie używać tylko elementu z jednego źródła danych, nigdy więcej niż jeden.</span><span class="sxs-lookup"><span data-stu-id="39a35-192">This method will only consume an element from one of the data sources, never more than one.</span></span> <span data-ttu-id="39a35-193">Jeśli po odebraniu elementu zażądano anulowania, żądanie anulowania zostanie zignorowane i będzie można wykonać odpowiednią procedurę obsługi.</span><span class="sxs-lookup"><span data-stu-id="39a35-193">If cancellation is requested after an element has been received, the cancellation request will be ignored, and the relevant handler will be allowed to execute.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-194"><paramref name="source1" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-194">The <paramref name="source1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-195">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-195">-or-</span></span> 
<span data-ttu-id="39a35-196"><paramref name="action1" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-196">The <paramref name="action1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-197">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-197">-or-</span></span> 
<span data-ttu-id="39a35-198"><paramref name="source2" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-198">The <paramref name="source2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-199">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-199">-or-</span></span> 
<span data-ttu-id="39a35-200"><paramref name="action2" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-200">The <paramref name="action2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-201">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-201">-or-</span></span> 
<span data-ttu-id="39a35-202"><paramref name="source3" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-202">The <paramref name="source3" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-203">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-203">-or-</span></span> 
<span data-ttu-id="39a35-204"><paramref name="action3" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-204">The <paramref name="action3" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-205">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-205">-or-</span></span> 
<span data-ttu-id="39a35-206"><paramref name="dataflowBlockOptions" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-206">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encapsulate&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt; Encapsulate&lt;TInput,TOutput&gt; (System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!!TInput, !!TOutput&gt; Encapsulate&lt;TInput, TOutput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encapsulate(Of TInput, TOutput) (target As ITargetBlock(Of TInput), source As ISourceBlock(Of TOutput)) As IPropagatorBlock(Of TInput, TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;TInput, TOutput&gt; ^ Encapsulate(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Encapsulate : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;'Input, 'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate (target, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="39a35-207">Określa typ danych wejściowych oczekiwanych przez element docelowy.</span><span class="sxs-lookup"><span data-stu-id="39a35-207">Specifies the type of input expected by the target.</span></span></typeparam>
        <typeparam name="TOutput"><span data-ttu-id="39a35-208">Określa typ danych wyjściowych generowanych przez źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-208">Specifies the type of output produced by the source.</span></span></typeparam>
        <param name="target"><span data-ttu-id="39a35-209">Obiekt docelowy do hermetyzacji.</span><span class="sxs-lookup"><span data-stu-id="39a35-209">The target to encapsulate.</span></span></param>
        <param name="source"><span data-ttu-id="39a35-210">Źródło do hermetyzacji.</span><span class="sxs-lookup"><span data-stu-id="39a35-210">The source to encapsulate.</span></span></param>
        <summary><span data-ttu-id="39a35-211">Hermetyzuje miejsce docelowe i źródło w pojedynczym propagator.</span><span class="sxs-lookup"><span data-stu-id="39a35-211">Encapsulates a target and a source into a single propagator.</span></span></summary>
        <returns><span data-ttu-id="39a35-212">Hermetyzowane miejsce docelowe i źródło.</span><span class="sxs-lookup"><span data-stu-id="39a35-212">The encapsulated target and source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a35-213">Metoda wymaga dwóch istniejących bloków: blok docelowy (wystąpienie klasy, która implementuje <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) i blok źródłowy (wystąpienie klasy, która implementuje <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>). <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A></span><span class="sxs-lookup"><span data-stu-id="39a35-213">The <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> method requires two existing blocks: a target block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) and a source block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>).</span></span> <span data-ttu-id="39a35-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A>Tworzy nowe wystąpienie wewnętrznej klasy <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> , która łączy składowe interfejsu `target` z parametrem i <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> elementami członkowskimi interfejsu do `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="39a35-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> creates a new instance of an internal class that connects the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> interface members to the `target` parameter and the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> interface members to the `source` parameter.</span></span>  <span data-ttu-id="39a35-215">Oba <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> i <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> pochodne od <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>.</span><span class="sxs-lookup"><span data-stu-id="39a35-215">Both <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> and <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> derive from <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>.</span></span> <span data-ttu-id="39a35-216">Uzupełnianie bloków jest jawnie przesyłane z źródeł do obiektów docelowych.</span><span class="sxs-lookup"><span data-stu-id="39a35-216">Block completion is explicitly passed from sources to targets.</span></span> <span data-ttu-id="39a35-217">W <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> związku z tym <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> metody i są połączone <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> z elementem docelowym, podczas gdy właściwość jest połączona ze źródłem.</span><span class="sxs-lookup"><span data-stu-id="39a35-217">Therefore, the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> and <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> methods are connected to the target while the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> property is connected to the source.</span></span>  <span data-ttu-id="39a35-218">Należy upewnić się, że po połowie docelowej połowa zostanie ukończona w najbardziej odpowiednim sposób. na przykład:</span><span class="sxs-lookup"><span data-stu-id="39a35-218">You must ensure that when the target half  completes, the source half gets completed in the most appropriate manner; for example:</span></span>  
  
 `target.Completion.ContinueWith(completion => source.Complete());`  
  
 <span data-ttu-id="39a35-219">Lub, jeśli chcesz propagować typ uzupełniania, możesz użyć tego bardziej zaawansowanego kodu:</span><span class="sxs-lookup"><span data-stu-id="39a35-219">Or, if you want to propagate the completion type, you can use this more sophisticated code:</span></span>  
  
```  
target.Completion.ContinueWith(completion => { if (completion.IsFaulted)    
  
((IDataflowBlock)batchBlock).Fault(completion.Exception);   
else   
batchBlock.Complete();   
});  
  
```  
  
 <span data-ttu-id="39a35-220">Należy również jawnie dostarczyć propagację komunikatów z elementu docelowego do źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-220">You must also explicitly provide the message propagation from target to source.</span></span> <span data-ttu-id="39a35-221">Korzyść tego jawnego połączenia polega na tym, że zapewnia to swobodę wykonywania dowolnego nieograniczonego przetwarzania między dwoma hermetyzowanymi blokami.</span><span class="sxs-lookup"><span data-stu-id="39a35-221">The benefit of this explicit connection is that it gives you the freedom to perform any unconstrained processing between the two encapsulated blocks.</span></span> <span data-ttu-id="39a35-222">Można to zrobić przez zakodowanie niezbędnego przetwarzania do delegatów bloków (jeśli bloki mają delegatów) lub osadza podsieć bloków między nimi.</span><span class="sxs-lookup"><span data-stu-id="39a35-222">You may do that either by encoding the necessary processing into the blocks' delegates (if the blocks take delegates), or by embedding a sub-network of blocks between them.</span></span> <span data-ttu-id="39a35-223">Łatwiejszym sposobem jest użycie bloku, który ma delegatów; na przykład użyj <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (jeśli dotyczy) lub bloku niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="39a35-223">The easier way is to use a block that takes delegates; for example, use <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (if applicable), or a custom block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-224">Określa typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-224">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-225">Źródło, z którego ma zostać utworzone połączenie.</span><span class="sxs-lookup"><span data-stu-id="39a35-225">The source from which to link.</span></span></param>
        <param name="target"><span data-ttu-id="39a35-226">, <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Z którym ma zostać nawiązane połączenie źródłowe.</span><span class="sxs-lookup"><span data-stu-id="39a35-226">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span></span></param>
        <summary><span data-ttu-id="39a35-227">Łączy do określonego <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />. <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /></span><span class="sxs-lookup"><span data-stu-id="39a35-227">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="39a35-228">To po wywołaniu <see langword="Dispose" />, spowoduje odłączenie źródła od obiektu docelowego. <see cref="T:System.IDisposable" /></span><span class="sxs-lookup"><span data-stu-id="39a35-228">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-229"><paramref name="source" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-229">The <paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-230">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-230">-or-</span></span> 
<span data-ttu-id="39a35-231"><paramref name="target" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-231">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * Predicate&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-232">Określa typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-232">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-233">Źródło, z którego ma zostać utworzone połączenie.</span><span class="sxs-lookup"><span data-stu-id="39a35-233">The source from which to link.</span></span></param>
        <param name="target"><span data-ttu-id="39a35-234">, <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Z którym ma zostać nawiązane połączenie źródłowe.</span><span class="sxs-lookup"><span data-stu-id="39a35-234">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span></span></param>
        <param name="predicate"><span data-ttu-id="39a35-235">Filtr musi być przekazywany przez komunikat, aby można było go propagować ze źródła do obiektu docelowego.</span><span class="sxs-lookup"><span data-stu-id="39a35-235">The filter a message must pass in order for it to propagate from the source to the target.</span></span></param>
        <summary><span data-ttu-id="39a35-236">Łączy do określonego <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> przy użyciu określonego filtru. <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /></span><span class="sxs-lookup"><span data-stu-id="39a35-236">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span></span></summary>
        <returns><span data-ttu-id="39a35-237">To po wywołaniu <see langword="Dispose" />, spowoduje odłączenie źródła od obiektu docelowego. <see cref="T:System.IDisposable" /></span><span class="sxs-lookup"><span data-stu-id="39a35-237">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-238"><paramref name="source" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-238">The <paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-239">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-239">-or-</span></span> 
<span data-ttu-id="39a35-240"><paramref name="target" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-240">The <paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="39a35-241">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-241">-or-</span></span> 
<span data-ttu-id="39a35-242"><paramref name="predicate" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-242">The <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), linkOptions As DataflowLinkOptions, predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions * Predicate&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target, linkOptions, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-243">Określa typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-243">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-244">Źródło, z którego ma zostać utworzone połączenie.</span><span class="sxs-lookup"><span data-stu-id="39a35-244">The source from which to link.</span></span></param>
        <param name="target"><span data-ttu-id="39a35-245">, <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Z którym ma zostać nawiązane połączenie źródłowe.</span><span class="sxs-lookup"><span data-stu-id="39a35-245">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span></span></param>
        <param name="linkOptions"><span data-ttu-id="39a35-246">Jedna z wartości wyliczenia, która określa, jak skonfigurować łącze między blokami przepływu danych.</span><span class="sxs-lookup"><span data-stu-id="39a35-246">One of the enumeration values that specifies how to configure a link between dataflow blocks.</span></span></param>
        <param name="predicate"><span data-ttu-id="39a35-247">Filtr musi być przekazywany przez komunikat, aby można było go propagować ze źródła do obiektu docelowego.</span><span class="sxs-lookup"><span data-stu-id="39a35-247">The filter a message must pass in order for it to propagate from the source to the target.</span></span></param>
        <summary><span data-ttu-id="39a35-248">Łączy do określonego <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> przy użyciu określonego filtru. <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /></span><span class="sxs-lookup"><span data-stu-id="39a35-248">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span></span></summary>
        <returns><span data-ttu-id="39a35-249">To po wywołaniu <see langword="Dispose" />, spowoduje odłączenie źródła od obiektu docelowego. <see cref="T:System.IDisposable" /></span><span class="sxs-lookup"><span data-stu-id="39a35-249">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-250"><paramref name="source" /> Ma wartość null (Nothing w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="39a35-250">The  <paramref name="source" /> is null (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="39a35-251">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-251">-or-</span></span> 
<span data-ttu-id="39a35-252"><paramref name="target" /> Ma wartość null (Nothing w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="39a35-252">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="39a35-253">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-253">-or-</span></span> 
<span data-ttu-id="39a35-254"><paramref name="linkOptions" /> Ma wartość null (Nothing w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="39a35-254">The  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="39a35-255">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-255">-or-</span></span> 
<span data-ttu-id="39a35-256"><paramref name="predicate" /> Ma wartość null (Nothing w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="39a35-256">The  <paramref name="predicate" /> is null (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NullTarget&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; NullTarget&lt;TInput&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; NullTarget&lt;TInput&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1" />
      <MemberSignature Language="VB.NET" Value="Public Function NullTarget(Of TInput) () As ITargetBlock(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA; static System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ NullTarget();" />
      <MemberSignature Language="F#" Value="static member NullTarget : unit -&gt; System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="39a35-257">Typ komunikatów, które może zaakceptować ten blok.</span><span class="sxs-lookup"><span data-stu-id="39a35-257">The type of the messages this block can accept.</span></span></typeparam>
        <summary><span data-ttu-id="39a35-258">Pobiera blok docelowy, który synchronicznie akceptuje wszystkie dostępne do niego komunikaty i porzuca je.</span><span class="sxs-lookup"><span data-stu-id="39a35-258">Gets a target block that synchronously accepts all messages offered to it and drops them.</span></span></summary>
        <returns><span data-ttu-id="39a35-259"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> Który akceptuje i następnie odrzuca wszystkie oferowane komunikaty.</span><span class="sxs-lookup"><span data-stu-id="39a35-259">A <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> that accepts and subsequently drops all offered messages.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OutputAvailableAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member OutputAvailableAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-260">Określa typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-260">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-261">Źródło do monitorowania.</span><span class="sxs-lookup"><span data-stu-id="39a35-261">The source to monitor.</span></span></param>
        <summary><span data-ttu-id="39a35-262"><see cref="T:System.Threading.Tasks.Task`1" /> Zapewnia, że asynchronicznie monitoruje Źródło dla dostępnych danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="39a35-262">Provides a <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span></span></summary>
        <returns><span data-ttu-id="39a35-263">Wskazuje <see cref="T:System.Threading.Tasks.Task`1" /> , czy i kiedy więcej danych wyjściowych jest dostępnych.</span><span class="sxs-lookup"><span data-stu-id="39a35-263">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span></span> <span data-ttu-id="39a35-264">Jeśli, gdy zadanie zostanie ukończone, jego <see cref="P:System.Threading.Tasks.Task`1.Result" /> wartość <see langword="true" />to, więcej danych wyjściowych jest dostępnych w źródle (chociaż inny odbiorca źródła może pobrać dane).</span><span class="sxs-lookup"><span data-stu-id="39a35-264">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span></span>  
  
<span data-ttu-id="39a35-265">Jeśli zwróci wartość <see langword="false" />, więcej danych wyjściowych nie jest i nigdy nie będzie dostępna ze względu na to, że źródło zakończy się przed udostępnieniem danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="39a35-265">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member OutputAvailableAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-266">Określa typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-266">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-267">Źródło do monitorowania.</span><span class="sxs-lookup"><span data-stu-id="39a35-267">The source to monitor.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39a35-268">Token anulowania, za pomocą którego ma zostać anulowana operacja asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="39a35-268">The cancellation token with which to cancel the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="39a35-269"><see cref="T:System.Threading.Tasks.Task`1" /> Zapewnia, że asynchronicznie monitoruje Źródło dla dostępnych danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="39a35-269">Provides a  <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span></span></summary>
        <returns><span data-ttu-id="39a35-270">Wskazuje <see cref="T:System.Threading.Tasks.Task`1" /> , czy i kiedy więcej danych wyjściowych jest dostępnych.</span><span class="sxs-lookup"><span data-stu-id="39a35-270">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span></span> <span data-ttu-id="39a35-271">Jeśli, gdy zadanie zostanie ukończone, jego <see cref="P:System.Threading.Tasks.Task`1.Result" /> wartość <see langword="true" />to, więcej danych wyjściowych jest dostępnych w źródle (chociaż inny odbiorca źródła może pobrać dane).</span><span class="sxs-lookup"><span data-stu-id="39a35-271">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span></span> <span data-ttu-id="39a35-272">Jeśli zwróci wartość <see langword="false" />, więcej danych wyjściowych nie jest i nigdy nie będzie dostępna ze względu na to, że źródło zakończy się przed udostępnieniem danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="39a35-272">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static bool Post&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Post&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Post(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Post(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberSignature Language="F#" Value="static member Post : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input -&gt; bool" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Post (target, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="39a35-273">Określa typ danych zaakceptowanych przez blok docelowy.</span><span class="sxs-lookup"><span data-stu-id="39a35-273">Specifies the type of data accepted by the target block.</span></span></typeparam>
        <param name="target"><span data-ttu-id="39a35-274">Blok docelowy.</span><span class="sxs-lookup"><span data-stu-id="39a35-274">The target block.</span></span></param>
        <param name="item"><span data-ttu-id="39a35-275">Element, który jest oferowany dla elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="39a35-275">The item being offered to the target.</span></span></param>
        <summary><span data-ttu-id="39a35-276">Wpisuje element do <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-276">Posts an item to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="39a35-277"><see langword="true" />Jeśli element został zaakceptowany przez blok docelowy; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="39a35-277"><see langword="true" /> if the item was accepted by the target block; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a35-278">Ta metoda zostanie zwrócona, gdy blok docelowy zdecyduje się na zaakceptowanie lub odrzucenie elementu, ale o ile nie zostanie określony w inny sposób przez specjalną semantykę bloku docelowego, nie czeka na faktyczne przetworzenie elementu.</span><span class="sxs-lookup"><span data-stu-id="39a35-278">This method will return once the target block has decided to accept or decline the item, but unless otherwise dictated by special semantics of the target block, it does not wait for the item to actually be processed.</span></span> <span data-ttu-id="39a35-279">Na przykład <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> program zwróci wartość z <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> zaraz po zapisaniu ogłoszonego elementu do kolejki wejściowej.</span><span class="sxs-lookup"><span data-stu-id="39a35-279">For example, <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> will return from <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> as soon as it has stored the posted item into its input queue).</span></span> <span data-ttu-id="39a35-280">Z perspektywy przetwarzania `Post` bloku jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="39a35-280">From the perspective of the block's processing, `Post` is asynchronous.</span></span> <span data-ttu-id="39a35-281">W przypadku bloków docelowych, które obsługują odrzucanie oferowanych komunikatów lub dla bloków, które mogą wykonywać większą `Post` liczbę operacji przetwarzania w <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>ich implementacji, rozważ użycie, która spowoduje natychmiastowe zwrócenie i umożliwi obiektowi docelowe odłożenie ogłoszonej wiadomości i później używają go po `SendAsync` powrocie.</span><span class="sxs-lookup"><span data-stu-id="39a35-281">For target blocks that support postponing offered messages, or for blocks that may do more processing in their `Post` implementation, consider using <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>, which will return immediately and will enable the target to postpone the posted message and later consume it after `SendAsync` returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput)) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-282">Typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-282">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-283">Źródło, z którego ma zostać odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-283">The source from which to receive the value.</span></span></param>
        <summary><span data-ttu-id="39a35-284">Synchronicznie otrzymuje wartość z określonego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-284">Synchronously receives a value from a specified source.</span></span></summary>
        <returns><span data-ttu-id="39a35-285">Odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-285">The received value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-286"><paramref name="source" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-286"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39a35-287">Nie można odebrać żadnego elementu ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-287">No item could be received from the source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-288">Typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-288">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-289">Źródło, z którego ma zostać odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-289">The source from which to receive the value.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39a35-290">Token, który ma zostać użyty do anulowania operacji odbierania.</span><span class="sxs-lookup"><span data-stu-id="39a35-290">The token to use to cancel the receive operation.</span></span></param>
        <summary><span data-ttu-id="39a35-291">Synchronicznie otrzymuje wartość z określonego źródła i udostępnia token, aby anulować operację.</span><span class="sxs-lookup"><span data-stu-id="39a35-291">Synchronously receives a value from a specified source and provides a token to cancel the operation.</span></span></summary>
        <returns><span data-ttu-id="39a35-292">Odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-292">The received value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a35-293">Jeśli źródło pomyślnie oferowało element, który został odebrany przez tę operację, ten element jest zwracany nawet wtedy, gdy występuje współbieżne żądanie anulowania.</span><span class="sxs-lookup"><span data-stu-id="39a35-293">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-294"><paramref name="source" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-294"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39a35-295">Nie można odebrać żadnego elementu ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-295">No item could be received from the source.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="39a35-296">Operacja została anulowana przed odebraniem elementu ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-296">The operation was canceled before an item was received from the source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-297">Typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-297">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-298">Źródło, z którego ma zostać odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-298">The source from which to receive the value.</span></span></param>
        <param name="timeout"><span data-ttu-id="39a35-299">Maksymalny przedział czasu (w milisekundach) oczekiwania na zakończenie operacji synchronicznej lub interwał, który reprezentuje-1 milisekund, czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="39a35-299">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="39a35-300">Synchronicznie otrzymuje wartość z określonego źródła, przestrzegając opcjonalnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-300">Synchronously receives a value from a specified source, observing an optional time-out period.</span></span></summary>
        <returns><span data-ttu-id="39a35-301">Odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-301">The received value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a35-302">Jeśli źródło pomyślnie oferowało element, który został odebrany przez tę operację, ten element jest zwracany nawet w przypadku wystąpienia współbieżnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-302">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39a35-303"><paramref name="timeout" />jest liczbą ujemną inną niż-1 milisekund, która reprezentuje nieograniczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-303"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span></span>  
  
<span data-ttu-id="39a35-304">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-304">-or-</span></span> 
 <span data-ttu-id="39a35-305"><paramref name="timeout" />jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-305"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-306"><paramref name="source" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-306"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39a35-307">Nie można odebrać żadnego elementu ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-307">No item could be received from the source.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="39a35-308">Określony limit czasu upłynął przed odebraniem elementu ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-308">The specified time-out expired before an item was received from the source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan * System.Threading.CancellationToken -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-309">Typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-309">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-310">Źródło, z którego ma zostać odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-310">The source from which to receive the value.</span></span></param>
        <param name="timeout"><span data-ttu-id="39a35-311">Maksymalny przedział czasu (w milisekundach) oczekiwania na zakończenie operacji synchronicznej lub interwał, który reprezentuje-1 milisekund, czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="39a35-311">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39a35-312">Token, który ma zostać użyty do anulowania operacji odbierania.</span><span class="sxs-lookup"><span data-stu-id="39a35-312">The token to use to cancel the receive operation.</span></span></param>
        <summary><span data-ttu-id="39a35-313">Synchronicznie otrzymuje wartość z określonego źródła, dostarczając token do anulowania operacji i obserwowania opcjonalnego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-313">Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span></span></summary>
        <returns><span data-ttu-id="39a35-314">Odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-314">The received value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a35-315">Jeśli źródło pomyślnie oferowało wartość elementu, która została odebrana przez tę operację, ta wartość jest zwracana nawet w przypadku wystąpienia współbieżnego limitu czasu lub żądania anulowania.</span><span class="sxs-lookup"><span data-stu-id="39a35-315">If the source successfully offered an item value that was received by this operation, that value is returned even if a concurrent time-out or cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-316"><paramref name="source" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-316">The <paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39a35-317"><paramref name="timeout" />jest liczbą ujemną inną niż-1 milisekund, która reprezentuje nieograniczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-317"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span></span>  
  
<span data-ttu-id="39a35-318">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-318">-or-</span></span> 
 <span data-ttu-id="39a35-319"><paramref name="timeout" />jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-319"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39a35-320">Nie można odebrać żadnego elementu ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-320">No item could be received from the source.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="39a35-321">Określony limit czasu upłynął przed odebraniem elementu ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-321">The specified time-out expired before an item was received from the source.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="39a35-322">Operacja została anulowana przed odebraniem elementu ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-322">The operation was canceled before an item was received from the source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-323">Typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-323">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-324">Źródło, z którego ma zostać odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-324">The source from which to receive the value.</span></span></param>
        <summary><span data-ttu-id="39a35-325">Asynchronicznie otrzymuje wartość z określonego źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-325">Asynchronously receives a value from a specified source.</span></span></summary>
        <returns><span data-ttu-id="39a35-326">Zadanie, które reprezentuje asynchroniczną operację odbierania.</span><span class="sxs-lookup"><span data-stu-id="39a35-326">A task that represents the asynchronous receive operation.</span></span> <span data-ttu-id="39a35-327">W przypadku pomyślnego odebrania wartości elementu z źródła zwrócone zadanie zostanie zakończone i <see cref="P:System.Threading.Tasks.Task`1.Result" /> zwraca wartość odebraną.</span><span class="sxs-lookup"><span data-stu-id="39a35-327">When an item value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the received value.</span></span> <span data-ttu-id="39a35-328">Jeśli nie można pobrać wartości elementu, ponieważ źródło jest puste i ukończone, <see cref="T:System.InvalidOperationException" /> w zwróconym zadaniu zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="39a35-328">If an item value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-329"><paramref name="source" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-329"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-330">Określa typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-330">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-331">Źródło, z którego ma zostać odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-331">The source from which to receive the value.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39a35-332">Token, który ma zostać użyty do anulowania operacji odbierania.</span><span class="sxs-lookup"><span data-stu-id="39a35-332">The token to use to cancel the receive operation.</span></span></param>
        <summary><span data-ttu-id="39a35-333">Asynchronicznie otrzymuje wartość z określonego źródła i udostępnia token, aby anulować operację.</span><span class="sxs-lookup"><span data-stu-id="39a35-333">Asynchronously receives a value from a specified source and provides a token to cancel the operation.</span></span></summary>
        <returns><span data-ttu-id="39a35-334">Zadanie, które reprezentuje asynchroniczną operację odbierania.</span><span class="sxs-lookup"><span data-stu-id="39a35-334">A task that represents the asynchronous receive operation.</span></span> <span data-ttu-id="39a35-335">W przypadku pomyślnego odebrania wartości ze źródła zwrócone zadanie zostało zakończone i <see cref="P:System.Threading.Tasks.Task`1.Result" /> zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-335">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span></span> <span data-ttu-id="39a35-336">Jeśli nie można pobrać wartości, ponieważ zażądano anulowania, zwrócone zadanie zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="39a35-336">If a value cannot be retrieved because cancellation was requested, the returned task is canceled.</span></span> <span data-ttu-id="39a35-337">Jeśli nie można pobrać wartości, ponieważ źródło jest puste i ukończone, <see cref="T:System.InvalidOperationException" /> w zwróconym zadaniu zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="39a35-337">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-338"><paramref name="source" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-338"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-339">Typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-339">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-340">Źródło, z którego ma zostać odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-340">The source from which to receive the value.</span></span></param>
        <param name="timeout"><span data-ttu-id="39a35-341">Maksymalny przedział czasu (w milisekundach) oczekiwania na zakończenie operacji synchronicznej lub interwał, który reprezentuje-1 milisekund, czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="39a35-341">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="39a35-342">Asynchronicznie otrzymuje wartość z określonego źródła, przestrzegając opcjonalnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-342">Asynchronously receives a value from a specified source, observing an optional time-out period.</span></span></summary>
        <returns><span data-ttu-id="39a35-343">Zadanie, które reprezentuje asynchroniczną operację odbierania.</span><span class="sxs-lookup"><span data-stu-id="39a35-343">A task that represents the asynchronous receive operation.</span></span> <span data-ttu-id="39a35-344">W przypadku pomyślnego odebrania wartości ze źródła zwrócone zadanie zostało zakończone i <see cref="P:System.Threading.Tasks.Task`1.Result" /> zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-344">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span></span> <span data-ttu-id="39a35-345">Jeśli nie można pobrać wartości, ponieważ upłynął limit czasu, zwrócone zadanie zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="39a35-345">If a value cannot be retrieved because the time-out expired, the returned task is canceled.</span></span> <span data-ttu-id="39a35-346">Jeśli nie można pobrać wartości, ponieważ źródło jest puste i ukończone, <see cref="T:System.InvalidOperationException" /> w zwróconym zadaniu zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="39a35-346">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-347"><paramref name="source" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-347"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39a35-348"><paramref name="timeout" />jest liczbą ujemną inną niż-1 milisekund, która reprezentuje nieograniczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-348"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span></span>  
  
<span data-ttu-id="39a35-349">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-349">-or-</span></span> 
 <span data-ttu-id="39a35-350"><paramref name="timeout" />jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-350"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-351">Typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-351">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-352">Źródło, z którego ma zostać odebrana wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-352">The source from which to receive the value.</span></span></param>
        <param name="timeout"><span data-ttu-id="39a35-353">Maksymalny przedział czasu (w milisekundach) oczekiwania na zakończenie operacji synchronicznej lub interwał, który reprezentuje-1 milisekund, czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="39a35-353">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39a35-354">Token, który może służyć do anulowania operacji odbierania.</span><span class="sxs-lookup"><span data-stu-id="39a35-354">The token which may be used to cancel the receive operation.</span></span></param>
        <summary><span data-ttu-id="39a35-355">Asynchronicznie otrzymuje wartość z określonego źródła, dostarczając token do anulowania operacji i obserwowania opcjonalnego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-355">Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span></span></summary>
        <returns><span data-ttu-id="39a35-356">Zadanie, które reprezentuje asynchroniczną operację odbierania.</span><span class="sxs-lookup"><span data-stu-id="39a35-356">A task that represents the asynchronous receive operation.</span></span> <span data-ttu-id="39a35-357">W przypadku pomyślnego odebrania wartości ze źródła zwrócone zadanie zostało zakończone i <see cref="P:System.Threading.Tasks.Task`1.Result" /> zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-357">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span></span> <span data-ttu-id="39a35-358">Jeśli nie można pobrać wartości, ponieważ upłynął limit czasu wygaśnięcia lub anulowania żądania, zwrócone zadanie zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="39a35-358">If a value cannot be retrieved because the time-out expired or cancellation was requested, the returned task is canceled.</span></span> <span data-ttu-id="39a35-359">Jeśli nie można pobrać wartości, ponieważ źródło jest puste i ukończone, <see cref="T:System.InvalidOperationException" /> w zwróconym zadaniu zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="39a35-359">If the value cannot be retrieved because the source is empty and completed, an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-360"><paramref name="source" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-360"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39a35-361"><paramref name="timeout" />jest liczbą ujemną inną niż-1 milisekund, która reprezentuje nieograniczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="39a35-361"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span></span>  
  
<span data-ttu-id="39a35-362">—lub—</span><span class="sxs-lookup"><span data-stu-id="39a35-362">-or-</span></span> 
 <span data-ttu-id="39a35-363"><paramref name="timeout" />jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-363"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberSignature Language="F#" Value="static member SendAsync : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync (target, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="39a35-364">Określa typ danych do opublikowania w miejscu docelowym.</span><span class="sxs-lookup"><span data-stu-id="39a35-364">Specifies the type of the data to post to the target.</span></span></typeparam>
        <param name="target"><span data-ttu-id="39a35-365">Obiekt docelowy, do którego mają być ogłaszane dane.</span><span class="sxs-lookup"><span data-stu-id="39a35-365">The target to which to post the data.</span></span></param>
        <param name="item"><span data-ttu-id="39a35-366">Element, który jest oferowany dla elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="39a35-366">The item being offered to the target.</span></span></param>
        <summary><span data-ttu-id="39a35-367">Asynchronicznie oferuje komunikat do bloku komunikatów docelowych, co pozwala na odroczenie.</span><span class="sxs-lookup"><span data-stu-id="39a35-367">Asynchronously offers a message to the target message block, allowing for postponement.</span></span></summary>
        <returns><span data-ttu-id="39a35-368"><see cref="T:System.Threading.Tasks.Task`1" /> Reprezentujący wysyłanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="39a35-368">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span></span> <span data-ttu-id="39a35-369">Jeśli obiekt docelowy akceptuje i zużywa oferowany element podczas wywołania do <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, po powrocie z wywołania wynik <see cref="T:System.Threading.Tasks.Task`1" /> zostanie ukończony, a jego <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zwróci <see langword="true" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-369">If the target accepts and consumes the offered element during the call to <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="true" />.</span></span> <span data-ttu-id="39a35-370">Jeśli obiekt docelowy odrzuca oferowany element podczas wywołania, po powrocie z wywołania wynik <see cref="T:System.Threading.Tasks.Task`1" /> zostanie ukończony, a jego <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zwróci <see langword="false" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-370">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="false" />.</span></span> <span data-ttu-id="39a35-371">Jeśli obiekt docelowy opóźnia oferowany element, element zostanie zbuforowany do momentu, w którym obiekt docelowy zużywa lub zwolni, w którym momencie zadanie zostanie wykonane, z <see cref="P:System.Threading.Tasks.Task`1.Result" /> informacją o tym, czy wiadomość została użyta.</span><span class="sxs-lookup"><span data-stu-id="39a35-371">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the task will complete, with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> indicating whether the message was consumed.</span></span> <span data-ttu-id="39a35-372">Jeśli element docelowy nigdy nie podejmie próby użycia lub zwolnienia komunikatu, zwrócone zadanie nigdy nie zostanie ukończone.</span><span class="sxs-lookup"><span data-stu-id="39a35-372">If the target never attempts to consume or release the message, the returned task will never complete.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-373"><paramref name="target" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="39a35-373">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member SendAsync : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync (target, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="39a35-374">Określa typ danych do opublikowania w miejscu docelowym.</span><span class="sxs-lookup"><span data-stu-id="39a35-374">Specifies the type of the data to post to the target.</span></span></typeparam>
        <param name="target"><span data-ttu-id="39a35-375">Obiekt docelowy, do którego mają być ogłaszane dane.</span><span class="sxs-lookup"><span data-stu-id="39a35-375">The target to which to post the data.</span></span></param>
        <param name="item"><span data-ttu-id="39a35-376">Element, który jest oferowany dla elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="39a35-376">The item being offered to the target.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39a35-377">Token anulowania, z którym należy zażądać anulowania operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="39a35-377">The cancellation token with which to request cancellation of the send operation.</span></span></param>
        <summary><span data-ttu-id="39a35-378">Asynchronicznie oferuje komunikat do bloku komunikatów docelowych, co pozwala na odroczenie.</span><span class="sxs-lookup"><span data-stu-id="39a35-378">Asynchronously offers a message to the target message block, allowing for postponement.</span></span></summary>
        <returns><span data-ttu-id="39a35-379"><see cref="T:System.Threading.Tasks.Task`1" /> Reprezentujący wysyłanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="39a35-379">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span></span>  <span data-ttu-id="39a35-380">Jeśli obiekt docelowy akceptuje i zużywa oferowany element podczas wywołania do SendAsync, po powrocie z wywołania wynik <see cref="T:System.Threading.Tasks.Task`1" /> zostanie ukończony, a jego właściwość <c>Result</c> zwróci wartość true.</span><span class="sxs-lookup"><span data-stu-id="39a35-380">If the target accepts and consumes the offered element during the call to SendAsync, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return true.</span></span>  <span data-ttu-id="39a35-381">Jeśli obiekt docelowy odrzuca oferowany element podczas wywołania, po powrocie z wywołania wynik <see cref="T:System.Threading.Tasks.Task`1" /> zostanie ukończony, a jego właściwość <c>Result</c> zwróci wartość false.</span><span class="sxs-lookup"><span data-stu-id="39a35-381">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return false.</span></span> <span data-ttu-id="39a35-382">Jeśli obiekt docelowy opóźnia oferowany element, element zostanie zbuforowany do momentu, w którym obiekt docelowy zużywa lub zwolni, w którym momencie zadanie zostanie wykonane, z <c>wynikiem</c> wskazujący, czy wiadomość została użyta.</span><span class="sxs-lookup"><span data-stu-id="39a35-382">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the Task will complete, with its <c>Result</c> indicating whether the message was consumed.</span></span> <span data-ttu-id="39a35-383">Jeśli element docelowy nigdy nie podejmie próby użycia lub zwolnienia komunikatu, zwrócone zadanie nigdy nie zostanie ukończone.</span><span class="sxs-lookup"><span data-stu-id="39a35-383">If the target never attempts to consume or release the message, the returned task will never complete.</span></span>  
  
<span data-ttu-id="39a35-384">Jeśli zażądano anulowania, zanim element docelowy pomyślnie wykorzystał wysłane dane, zwrócone zadanie zostanie ukończone w stanie anulowanym, a dane nie będą już dostępne dla elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="39a35-384">If cancellation is requested before the target has successfully consumed the sent data, the returned task will complete in the Canceled state and the data will no longer be available to the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39a35-385"><paramref name="target" /> Ma wartość null (Nothing w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="39a35-385">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryReceive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static bool TryReceive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt; source, out TOutput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReceive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!!TOutput&gt; source, [out] !!TOutput&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReceive(Of TOutput) (source As IReceivableSourceBlock(Of TOutput), ByRef item As TOutput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReceive(System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;TOutput&gt; ^ source, [Runtime::InteropServices::Out] TOutput % item);" />
      <MemberSignature Language="F#" Value="static member TryReceive : System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;'Output&gt; *  -&gt; bool" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive (source, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="item" Type="TOutput" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="39a35-386">Określa typ danych znajdujących się w źródle.</span><span class="sxs-lookup"><span data-stu-id="39a35-386">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="39a35-387">Źródło, z którego ma zostać odebrane.</span><span class="sxs-lookup"><span data-stu-id="39a35-387">The source from which to receive.</span></span></param>
        <param name="item"><span data-ttu-id="39a35-388">Element otrzymany ze źródła.</span><span class="sxs-lookup"><span data-stu-id="39a35-388">The item received from the source.</span></span></param>
        <summary><span data-ttu-id="39a35-389">Próbuje synchronicznie odebrać element od <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="39a35-389">Attempts to synchronously receive an item from the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="39a35-390"><see langword="true" />Jeśli można odebrać element; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="39a35-390"><see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a35-391">Ta metoda nie czeka, dopóki źródło nie będzie miało elementu.</span><span class="sxs-lookup"><span data-stu-id="39a35-391">This method does not wait until the source has an item to provide.</span></span>  
  
 <span data-ttu-id="39a35-392">Zwróci to, czy element jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="39a35-392">It will return whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
