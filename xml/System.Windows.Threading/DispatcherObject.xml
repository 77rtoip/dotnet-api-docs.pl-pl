<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a940ab9e8bca976429db39edb2ab477f770dde6b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30712100" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje obiekt, który jest skojarzony z <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko wątek, który <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> został utworzony na może uzyskać dostępu do <xref:System.Windows.Threading.DispatcherObject> bezpośrednio.  Aby uzyskać dostęp do <xref:System.Windows.Threading.DispatcherObject> z wątku innego niż wątek <xref:System.Windows.Threading.DispatcherObject> został utworzony, wywołaj <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> na <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherObject> jest skojarzony.  
  
 Podklasy <xref:System.Windows.Threading.DispatcherObject> że należy wymuszać wątku bezpieczeństwa to zrobić przez wywołanie metody <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> dla wszystkich metod publicznych.  Gwarantuje to wątek wywołujący jest wątek który <xref:System.Windows.Threading.DispatcherObject> został utworzony na.  
  
 A <xref:System.Windows.Threading.DispatcherObject> nie może być niezależnie utworzone; oznacza to, że wszystkie konstruktory są chronione.  
  
 Obiekty, które pochodzą z <xref:System.Windows.Threading.DispatcherObject> mają koligacji wątku.  
  
 Obiekty, które pochodzą z <xref:System.Windows.Freezable> są bezwątkowe gdy są one zablokowane.  Aby uzyskać więcej informacji, zobacz [obiektu Freezable Przegląd obiektów](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <threadsafe>Wszystkie publiczne <see langword="static" /> elementy członkowskie tego typu są bezpieczne dla wątków. Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.  
  
 Ten obiekt jest możliwy tylko z wątku, w którym został utworzony. Próbuje uzyskać do niego dostęp z innych wątków zgłosi <see cref="T:System.InvalidOperationException" />. <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> lub <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> zapewniają obsługę dla kierowania pracy zorganizuj poprawny wątek.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Threading.DispatcherObject" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy wątek wywołujący ma dostęp do tego <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
        <returns>
          <see langword="true" /> Jeśli wątek wywołujący ma dostęp do tego obiektu. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko wątek <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> został utworzony na może uzyskać dostępu do <xref:System.Windows.Threading.DispatcherObject>.  
  
 Którymkolwiek wątku można sprawdzić, czy ma dostęp do tego <xref:System.Windows.Threading.DispatcherObject>.  
  
 Różnica między <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> i <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> jest to, że <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> zwraca wartość logiczna określająca, czy wątek wywołujący ma dostęp do tego <xref:System.Windows.Threading.DispatcherObject> i <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> zgłasza wyjątek, jeśli wątek wywołujący nie ma dostępu do to <xref:System.Windows.Threading.DispatcherObject>.  
  
 Wywołanie tej metody jest taki sam jak wywołanie <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> na skojarzonym <xref:System.Windows.Threading.Dispatcher> obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> ustalenie, czy wątek ma dostęp do wątku który <xref:System.Windows.Controls.Button> został utworzony na.  <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> Metoda <xref:System.Windows.Controls.Button> jest wywoływana, aby zweryfikować dostęp do wątku.  Jeśli wątek wywołujący ma dostęp, <xref:System.Windows.Controls.Button> jest aktualizowany po zalogowaniu się tylko do elementów członkowskich <xref:System.Windows.Controls.Button>; w przeciwnym razie delegata, który akceptuje <xref:System.Windows.Controls.Button> jako argument, zamieszczony na <xref:System.Windows.Threading.Dispatcher> z <xref:System.Windows.Controls.Button>.  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Threading.Dispatcher" /> to <see cref="T:System.Windows.Threading.DispatcherObject" /> jest skojarzony.</summary>
        <value>Dyspozytor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko wątek, który <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> został utworzony na może uzyskać dostępu do <xref:System.Windows.Threading.DispatcherObject> bezpośrednio.  Aby uzyskać dostęp do <xref:System.Windows.Threading.DispatcherObject> z wątku innego niż wątek <xref:System.Windows.Threading.DispatcherObject> został utworzony, wywołaj <xref:System.Windows.Threading.Dispatcher.Invoke%2A> i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> na <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherObject> jest skojarzony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wymusza, że wątek wywołujący ma dostęp do tego <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko wątek <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> został utworzony na może uzyskać dostępu do <xref:System.Windows.Threading.DispatcherObject>.  
  
 Którymkolwiek wątku można sprawdzić, czy ma dostęp do tego <xref:System.Windows.Threading.DispatcherObject>.  
  
 Różnica między <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> i <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> jest to, że <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> zwraca wartość logiczna określająca, czy wątek wywołujący ma dostęp do tego <xref:System.Windows.Threading.DispatcherObject> i <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> zgłasza wyjątek, jeśli wątek wywołujący nie ma dostępu do to <xref:System.Windows.Threading.DispatcherObject>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> ustalenie, czy wątek ma dostęp do wątku który <xref:System.Windows.Controls.Button> został utworzony na.  Jeśli wątek wywołujący nie ma dostępu, <xref:System.InvalidOperationException> jest generowany.  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wątek wywołujący nie ma dostępu do tego <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>