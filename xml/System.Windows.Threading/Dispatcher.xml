<Type Name="Dispatcher" FullName="System.Windows.Threading.Dispatcher">
  <TypeSignature Language="C#" Value="public sealed class Dispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Dispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.Dispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Dispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dispatcher sealed" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c9579-101">Udostępnia usługi zarządzania kolejki elementów pracy dla wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-101">Provides services for managing the queue of work items for a thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-102"><xref:System.Windows.Threading.Dispatcher> Przechowuje priorytetową kolejki elementów pracy dla określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-102">The <xref:System.Windows.Threading.Dispatcher> maintains a prioritized queue of work items for a specific thread.</span></span>  
  
 <span data-ttu-id="c9579-103">Gdy <xref:System.Windows.Threading.Dispatcher> jest tworzony w wątku, staje się on tylko <xref:System.Windows.Threading.Dispatcher> które może być skojarzony z wątkiem, nawet wtedy, gdy <xref:System.Windows.Threading.Dispatcher> jest zamknięta.</span><span class="sxs-lookup"><span data-stu-id="c9579-103">When a <xref:System.Windows.Threading.Dispatcher> is created on a thread, it becomes the only <xref:System.Windows.Threading.Dispatcher> that can be associated with the thread, even if the <xref:System.Windows.Threading.Dispatcher> is shut down.</span></span>  
  
 <span data-ttu-id="c9579-104">Jeśli użytkownik spróbuje uzyskać <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> dla bieżącego wątku i <xref:System.Windows.Threading.Dispatcher> nie jest skojarzony z wątkiem <xref:System.Windows.Threading.Dispatcher> zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-104">If you attempt to get the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> for the current thread and a <xref:System.Windows.Threading.Dispatcher> is not associated with the thread, a <xref:System.Windows.Threading.Dispatcher> will be created.</span></span> <span data-ttu-id="c9579-105">A <xref:System.Windows.Threading.Dispatcher> również jest tworzony podczas tworzenia <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="c9579-105">A <xref:System.Windows.Threading.Dispatcher> is also created when you create a <xref:System.Windows.Threading.DispatcherObject>.</span></span> <span data-ttu-id="c9579-106">W przypadku utworzenia <xref:System.Windows.Threading.Dispatcher> na wątku w tle, należy zamknąć Dyspozytor przed zamknięciem wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-106">If you create a <xref:System.Windows.Threading.Dispatcher> on a background thread, be sure to shut down the dispatcher before exiting the thread.</span></span>  
  
 <span data-ttu-id="c9579-107">Jeśli <xref:System.Windows.Threading.Dispatcher> ma to miejsce w dół go nie można uruchomić ponownie.</span><span class="sxs-lookup"><span data-stu-id="c9579-107">If a <xref:System.Windows.Threading.Dispatcher> is shut down, it cannot be restarted.</span></span>  
  
 <span data-ttu-id="c9579-108">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], <xref:System.Windows.Threading.DispatcherObject> jest możliwy tylko przez <xref:System.Windows.Threading.Dispatcher> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-108">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], a <xref:System.Windows.Threading.DispatcherObject> can only be accessed by the <xref:System.Windows.Threading.Dispatcher> it is associated with.</span></span>  <span data-ttu-id="c9579-109">Na przykład wątku w tle nie może zaktualizować zawartość <xref:System.Windows.Controls.Button> skojarzony z <xref:System.Windows.Threading.Dispatcher> na [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-109">For example, a background thread cannot update the contents of a <xref:System.Windows.Controls.Button> that is associated with the <xref:System.Windows.Threading.Dispatcher> on the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="c9579-110">Aby wątku w tle dostępu do <xref:System.Windows.Controls.ContentControl.Content%2A> właściwość <xref:System.Windows.Controls.Button>, wątek w tle musi delegowania pracy do <xref:System.Windows.Threading.Dispatcher> skojarzone z [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-110">In order for the background thread to access the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="c9579-111">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-111">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="c9579-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-113">Operacja jest dodane do kolejki <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-113">The operation is added to the queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-114">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="c9579-114">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 <span data-ttu-id="c9579-115">Wszystkie metody na <xref:System.Windows.Threading.Dispatcher>, z wyjątkiem produktów <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, jest bezwątkowy.</span><span class="sxs-lookup"><span data-stu-id="c9579-115">All of the methods on <xref:System.Windows.Threading.Dispatcher>, with the exception of <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, are free-threaded.</span></span>  
  
 <span data-ttu-id="c9579-116">Obiekty, które pochodzą z <xref:System.Windows.Threading.DispatcherObject> mają koligacji wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-116">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="c9579-117">Obiekty, które pochodzą z <xref:System.Windows.Freezable> są bezwątkowe gdy są one zablokowane.</span><span class="sxs-lookup"><span data-stu-id="c9579-117">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="c9579-118">Aby uzyskać więcej informacji, zobacz [obiektu Freezable Przegląd obiektów](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c9579-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-119">Poniższy przykład przedstawia sposób wstawić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="c9579-119">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="c9579-120">Dla kodu źródłowego w tym przykładzie, zobacz [Single-Threaded aplikacji przy użyciu przykładowych obliczania długotrwałe](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="c9579-120">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="c9579-121">Po pierwsze delegat jest tworzony, który akceptuje żadnych argumentów.</span><span class="sxs-lookup"><span data-stu-id="c9579-121">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="c9579-122">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-122">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="c9579-123">To wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> przyjmuje dwa parametry: priorytet, który ma ustawioną wartość <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>i wywołanie zwrotne, które jest przekazany za pośrednictwem wystąpienia delegata `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="c9579-123">This call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9579-124">Asynchronicznie wykonuje delegata w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-124">Executes a delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-125">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-125">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-126">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-126">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-127">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-127">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-128">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-128">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-130">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-130">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="c9579-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="c9579-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym po delegat zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="c9579-133"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="c9579-133">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="c9579-134">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="c9579-134">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-135">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-135">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-136">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-136">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="c9579-137">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="c9579-137">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="c9579-138">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, będą wykonywane w kolejności wywołań zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="c9579-138">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="c9579-139">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="c9579-139">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c9579-140">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-140">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-141">Tablica obiektów przekazywane jako argumenty do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-141">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="c9579-142">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-142">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c9579-143">Wykonuje określonego delegata asynchronicznie z określonymi argumentami w wątku, który <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="c9579-143">Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span></span></summary>
        <returns><span data-ttu-id="c9579-144">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-144">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-145"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="c9579-145">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="c9579-146">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="c9579-146">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-147">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-147">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-148">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-148">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="c9579-149">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="c9579-149">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="c9579-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="c9579-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="c9579-151">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-151">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="c9579-152">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-152">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="c9579-153">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-153">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="c9579-154">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-154">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="c9579-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="c9579-156">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-156">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-157">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="c9579-157">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-158">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-158">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-159">Delegat do metody który nie przyjmuje żadnych argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-159">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="c9579-160">Wykonuje określonego delegata asynchronicznie przy określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-160">Executes the specified delegate asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-161">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-161">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-162">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, będą wykonywane w kolejności wywołań zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="c9579-162">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="c9579-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym po delegat zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="c9579-164"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="c9579-164">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="c9579-165">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="c9579-165">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-166">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-166">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-167">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-167">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="c9579-168">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="c9579-168">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="c9579-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="c9579-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="c9579-170">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-170">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-171">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-171">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-172">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-172">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-173">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-173">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-175">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-175">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-176">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="c9579-176">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-177">Poniższy przykład przedstawia sposób wstawić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="c9579-177">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="c9579-178">Dla kodu źródłowego w tym przykładzie, zobacz [Single-Threaded aplikacji przy użyciu przykładowych obliczania długotrwałe](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="c9579-178">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="c9579-179">Po pierwsze delegat jest tworzony, który akceptuje żadnych argumentów.</span><span class="sxs-lookup"><span data-stu-id="c9579-179">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="c9579-180">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-180">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="c9579-181">Ponieważ każdy <xref:System.Windows.Threading.DispatcherObject> ma właściwość, która zwraca <xref:System.Windows.Threading.Dispatcher> jest skojarzony z żądaną <xref:System.Windows.Threading.Dispatcher> są uzyskiwane przez wysyłanie zapytań <xref:System.Windows.Threading.DispatcherObject>, w tym przypadku <xref:System.Windows.Controls.Button> o nazwie `startStopButton`.</span><span class="sxs-lookup"><span data-stu-id="c9579-181">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Button> named `startStopButton`.</span></span>   <span data-ttu-id="c9579-182">Wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> przyjmuje dwa parametry: priorytet, który ma ustawioną wartość <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>i wywołanie zwrotne, które jest przekazany za pośrednictwem wystąpienia delegata `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="c9579-182">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-183"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-183"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-184"><paramref name="priority" /> nie jest prawidłową <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-184"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c9579-185">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-185">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-186">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-186">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-187">Tablica obiektów przekazywane jako argumenty do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-187">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="c9579-188">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-188">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c9579-189">Wykonuje określonego delegata asynchronicznie z określonymi argumentami, priorytetem określony w wątku, który <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="c9579-189">Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span></span></summary>
        <returns><span data-ttu-id="c9579-190">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-190">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-191"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="c9579-191">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="c9579-192">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="c9579-192">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-193">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-193">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-194">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-194">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="c9579-195">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="c9579-195">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="c9579-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="c9579-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="c9579-197">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-197">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="c9579-198">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-198">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="c9579-199">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-199">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="c9579-200">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-200">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="c9579-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="c9579-202">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-202">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-203">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="c9579-203">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-204">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-204">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-205">Delegat do metody, która przyjmuje jeden argument, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-205">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="c9579-206">Obiekt do przekazania jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-206">The object to pass as an argument to the specified method.</span></span></param>
        <summary><span data-ttu-id="c9579-207">Wykonuje określonego delegata asynchronicznie na określony priorytet oraz z określonego argumentu w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-207">Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-208">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-208">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-209">`Arg` może być `null` jeśli niezbędne są bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="c9579-209">`Arg` can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="c9579-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym po delegat zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="c9579-211"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="c9579-211">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="c9579-212">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="c9579-212">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-213">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-213">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-214">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-214">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="c9579-215">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="c9579-215">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="c9579-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="c9579-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="c9579-217">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-217">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-218">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-218">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-219">Aby wątku w tle można uzyskać dostępu do właściwości content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-219">In order for the background thread to access the content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-220">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-220">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-222">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-222">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-223">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, będą wykonywane w kolejności wywołań zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="c9579-223">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="c9579-224">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="c9579-224">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-225">Poniższy przykład przedstawia sposób wstawić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="c9579-225">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="c9579-226">Najpierw delegata jest tworzony, który akceptuje jeden argument, w tym przypadku typu ciąg.</span><span class="sxs-lookup"><span data-stu-id="c9579-226">First, a delegate is created that accepts one argument, in this case a string.</span></span>  
  
 [!code-csharp[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdelegates)]
 [!code-vb[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdelegates)]  
  
 <span data-ttu-id="c9579-227">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-227">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> is called.</span></span>  <span data-ttu-id="c9579-228">Ponieważ każdy <xref:System.Windows.Threading.DispatcherObject> ma właściwość, która zwraca <xref:System.Windows.Threading.Dispatcher> jest skojarzony z żądaną <xref:System.Windows.Threading.Dispatcher> są uzyskiwane przez wysyłanie zapytań <xref:System.Windows.Threading.DispatcherObject>, w tym przypadku <xref:System.Windows.Controls.Grid> o nazwie `tomorrowsWeather`.</span><span class="sxs-lookup"><span data-stu-id="c9579-228">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Grid> named `tomorrowsWeather`.</span></span> <span data-ttu-id="c9579-229">Wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> przyjmuje trzy parametry: priorytet, który ma ustawioną wartość <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; wywołanie zwrotne, które jest przekazany za pośrednictwem wystąpienia delegata `OneArgDelegate`; i ciągu o nazwie `weather`, który jest argumentem dla wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-229">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> takes three parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; the callback, which is passed in through an instance of the delegate `OneArgDelegate`; and a string named `weather`, which is the argument for the callback.</span></span>  
  
 [!code-csharp[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdispatcheronearge)]
 [!code-vb[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdispatcheronearge)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-230"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-230"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-231"><paramref name="priority" /> nie jest prawidłową <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-231"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-232">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-232">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-233">Delegat do metody pobierającej wiele argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-233">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="c9579-234">Obiekt do przekazania jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-234">The object to pass as an argument to the specified method.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-235">Tablica obiektów przekazywane jako argumenty do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-235">An array of objects to pass as arguments to the specified method.</span></span></param>
        <summary><span data-ttu-id="c9579-236">Wykonuje określonego delegata asynchronicznie na określony priorytet i o określonej tablicy argumentów w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-236">Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-237">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ oczekuje na wykonanie w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-237">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-238">`arg` Parametr może być `null` jeśli niezbędne są bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="c9579-238">The `arg` parameter can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="c9579-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym po delegat zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="c9579-240"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="c9579-240">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="c9579-241">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="c9579-241">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-242">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-242">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="c9579-243">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-243">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="c9579-244">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="c9579-244">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="c9579-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="c9579-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="c9579-246">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-246">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-247">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-247">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-248">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-248">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-249">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-249">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-251">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-251">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-252">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, będą wykonywane w kolejności wywołań zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="c9579-252">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="c9579-253">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="c9579-253">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-254"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-254"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-255"><see cref="T:System.Windows.Threading.DispatcherPriority" /> nie jest prawidłową priorytet.</span><span class="sxs-lookup"><span data-stu-id="c9579-255"><see cref="T:System.Windows.Threading.DispatcherPriority" /> is not a valid priority.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeShutdown">
      <MemberSignature Language="C#" Value="public void BeginInvokeShutdown (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginInvokeShutdown(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInvokeShutdown (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInvokeShutdown(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-256">Priorytet, od którego należy zacząć zamykanie Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-256">The priority at which to begin shutting down the dispatcher.</span></span></param>
        <summary><span data-ttu-id="c9579-257">Zamknięcie inicjuje <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="c9579-257">Initiates shutdown of the <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> wymagania nieograniczonych uprawnień interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="c9579-259">Gdy <xref:System.Windows.Threading.Dispatcher> zaczyna być zamknięta, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-259">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-260"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-260">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="c9579-261">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-261">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-262">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="c9579-262">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c9579-263">Aby uzyskać zamykanie Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-263">for shutting down the dispatcher.</span></span>  <span data-ttu-id="c9579-264">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c9579-264">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9579-265">Określa, czy wątek wywołujący jest skojarzony z tym wątku <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-265">Determines whether the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <returns>
          <span data-ttu-id="c9579-266"><see langword="true" /> Jeśli wątek wywołujący jest skojarzony z tym wątku <see cref="T:System.Windows.Threading.Dispatcher" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-266"><see langword="true" /> if the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-267">Tylko <xref:System.Windows.Threading.Dispatcher> który <xref:System.Windows.Threading.DispatcherObject> jest tworzony na może uzyskać dostępu do obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-267">Only the <xref:System.Windows.Threading.Dispatcher> that a <xref:System.Windows.Threading.DispatcherObject> is created on may access the object.</span></span>  <span data-ttu-id="c9579-268">Użyj <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> dostępu do obiektu z innego wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-268">Use <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> to access the object from a different thread.</span></span>  
  
 <span data-ttu-id="c9579-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> może zostać wywołana z dowolnego wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> can be called from any thread.</span></span>  
  
 <span data-ttu-id="c9579-270">Różnica między <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> jest <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> zwraca wartość Boolean wskazującą, czy wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c9579-270">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean indicating whether the calling thread has access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-271">W poniższym przykładzie użyto <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> ustalenie, czy wątek ma dostęp do <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c9579-271">The following example uses <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> to determine whether a thread has access to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="c9579-272"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> Metoda <xref:System.Windows.Threading.Dispatcher> skojarzone z <xref:System.Windows.Controls.Button> jest wywoływana, aby zweryfikować dostęp do wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-272">The <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> associated with the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="c9579-273">Jeśli wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher>, <xref:System.Windows.Controls.Button> jest aktualizowany po zalogowaniu się do elementów członkowskich <xref:System.Windows.Controls.Button>; w przeciwnym razie delegata, który akceptuje <xref:System.Windows.Controls.Button> jako argument jest umieszczona na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="c9579-273">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is placed onto the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="c9579-274"><xref:System.Windows.Threading.Dispatcher> Będzie delegowane pracy aktualizacji <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c9579-274">The <xref:System.Windows.Threading.Dispatcher> will delegate the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccesscheckaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccesscheckaccess)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDispatcher">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher CurrentDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Threading.Dispatcher CurrentDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Threading::Dispatcher ^ CurrentDispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-275">Pobiera <see cref="T:System.Windows.Threading.Dispatcher" /> wątku aktualnie wykonywane i tworzy nowy <see cref="T:System.Windows.Threading.Dispatcher" /> Jeśli jeszcze nie została skojarzona z wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-275">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the thread currently executing and creates a new <see cref="T:System.Windows.Threading.Dispatcher" /> if one is not already associated with the thread.</span></span></summary>
        <value><span data-ttu-id="c9579-276">Dyspozytor skojarzone z bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-276">The dispatcher associated with the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-277">Jeśli <xref:System.Windows.Threading.Dispatcher> nie jest skojarzona z bieżącym wątkiem nowy <xref:System.Windows.Threading.Dispatcher> zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-277">If a <xref:System.Windows.Threading.Dispatcher> is not associated with the current thread, a new <xref:System.Windows.Threading.Dispatcher> will be created.</span></span>  <span data-ttu-id="c9579-278">Nie jest to w przypadku <xref:System.Windows.Threading.Dispatcher.FromThread%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-278">This is not the case with the <xref:System.Windows.Threading.Dispatcher.FromThread%2A> method.</span></span>  <span data-ttu-id="c9579-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> Zwraca `null` Jeśli nie jest skojarzone z określonego wątku dyspozytorze.</span><span class="sxs-lookup"><span data-stu-id="c9579-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> will return `null` if there is not a dispatcher associated with the specified thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableProcessing">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableProcessing () As DispatcherProcessingDisabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherProcessingDisabled DisableProcessing();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherProcessingDisabled</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9579-280">Wyłącza przetwarzania <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-280">Disables processing of the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
        <returns><span data-ttu-id="c9579-281">Struktura umożliwia ponowne przetwarzanie dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="c9579-281">A structure used to re-enable dispatcher processing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-282">Wyłączenie przetwarzanie dyspozytora to zaawansowana metoda jest przeznaczona do wykluczyć ryzyko ponownego rozpoczęcia niepowiązanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-282">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="c9579-283">Efekty wyłączenia przetwarzania są następujące:</span><span class="sxs-lookup"><span data-stu-id="c9579-283">The effects of disabling processing are as follows:</span></span>  
  
-   <span data-ttu-id="c9579-284">Blokady CLR nie będzie wewnętrznie pompa wiadomości.</span><span class="sxs-lookup"><span data-stu-id="c9579-284">CLR locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="c9579-285"><xref:System.Windows.Threading.DispatcherFrame> obiekty nie może zostać przeniesiony.</span><span class="sxs-lookup"><span data-stu-id="c9579-285"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="c9579-286">Przetwarzanie komunikatów nie jest dozwolone.</span><span class="sxs-lookup"><span data-stu-id="c9579-286">Message processing is not permitted.</span></span>  
  
 <span data-ttu-id="c9579-287"><xref:System.Windows.Threading.DispatcherProcessingDisabled> Struktury, która <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> zwraca, gdy jest wywoływana można ponownie włączyć przetwarzanie dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="c9579-287">The <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns when it is called can be used to re-enable dispatcher processing.</span></span>  <span data-ttu-id="c9579-288">Wywoływanie <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> na <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury umożliwia ponowne przetwarzanie.</span><span class="sxs-lookup"><span data-stu-id="c9579-288">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure re-enables processing.</span></span>  
  
 <span data-ttu-id="c9579-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> można wywołać tylko w wątku <xref:System.Windows.Threading.Dispatcher> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> can only be called on the thread the <xref:System.Windows.Threading.Dispatcher> is associated with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-290">Poniższy przykład pokazuje, jak wyłączyć przetwarzanie dyspozytora i ponownie Włącz przetwarzanie dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="c9579-290">The following example shows how to disable dispatcher processing and re-enable dispatcher processing.</span></span>  <span data-ttu-id="c9579-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> jest wywoływana **przy użyciu** instrukcji.</span><span class="sxs-lookup"><span data-stu-id="c9579-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.</span></span>  <span data-ttu-id="c9579-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> Zwraca <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury, która jest używana jako obiekt jest usunięty, gdy **przy użyciu** zablokować zakończenie.</span><span class="sxs-lookup"><span data-stu-id="c9579-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that is used as the object to be disposed when the **using** block finishes.</span></span>  <span data-ttu-id="c9579-293">Gdy <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> jest wywoływana na <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury, przetwarzanie dyspozytora zostało ponownie włączone.</span><span class="sxs-lookup"><span data-stu-id="c9579-293">When <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> is called on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure, dispatcher processing is re-enabled.</span></span>  
  
 [!code-csharp[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdisableprocessing)]
 [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdisableprocessing)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAllFrames">
      <MemberSignature Language="C#" Value="public static void ExitAllFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExitAllFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExitAllFrames ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExitAllFrames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9579-294">Żądania, które zakończyć wszystkie ramki, w tym zagnieżdżonych ramek.</span><span class="sxs-lookup"><span data-stu-id="c9579-294">Requests that all frames exit, including nested frames.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c9579-295">wywoływania tej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-295">for calling this method.</span></span> <span data-ttu-id="c9579-296">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c9579-296">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
        <altmember cref="T:System.Windows.Threading.DispatcherFrame" />
      </Docs>
    </Member>
    <Member MemberName="FromThread">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher FromThread (System.Threading.Thread thread);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Threading.Dispatcher FromThread(class System.Threading.Thread thread) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::Dispatcher ^ FromThread(System::Threading::Thread ^ thread);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="System.Threading.Thread" />
      </Parameters>
      <Docs>
        <param name="thread"><span data-ttu-id="c9579-297">Wątek, aby uzyskać <see cref="T:System.Windows.Threading.Dispatcher" /> z.</span><span class="sxs-lookup"><span data-stu-id="c9579-297">The thread to obtain the <see cref="T:System.Windows.Threading.Dispatcher" /> from.</span></span></param>
        <summary><span data-ttu-id="c9579-298">Pobiera <see cref="T:System.Windows.Threading.Dispatcher" /> dla określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-298">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the specified thread.</span></span></summary>
        <returns><span data-ttu-id="c9579-299">Dyspozytor dla <paramref name="thread" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-299">The dispatcher for <paramref name="thread" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-300">Jeśli nie jest dostępny dla określonego wątku dyspozytora `null` zostaną zwrócone.</span><span class="sxs-lookup"><span data-stu-id="c9579-300">If a dispatcher is not available for the specified thread, `null` will be returned.</span></span>  
  
 <span data-ttu-id="c9579-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> nie tworzy <xref:System.Windows.Threading.Dispatcher> w wątku, który nie ma <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="c9579-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> does not create a <xref:System.Windows.Threading.Dispatcher> on a thread that does not have a <xref:System.Windows.Threading.Dispatcher>.</span></span>   <span data-ttu-id="c9579-302">Nowy <xref:System.Windows.Threading.Dispatcher> jest tworzony w wątku, który nie ma jeszcze <xref:System.Windows.Threading.Dispatcher> podczas próby pobrania <xref:System.Windows.Threading.Dispatcher> przy użyciu <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c9579-302">A new <xref:System.Windows.Threading.Dispatcher> is created on a thread that does not already have a <xref:System.Windows.Threading.Dispatcher> when attempting to get the <xref:System.Windows.Threading.Dispatcher> by using the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownFinished">
      <MemberSignature Language="C#" Value="public bool HasShutdownFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownFinished" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownFinished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownFinished { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-303">Określa, czy <see cref="T:System.Windows.Threading.Dispatcher" /> zakończył zamykanie.</span><span class="sxs-lookup"><span data-stu-id="c9579-303">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> has finished shutting down.</span></span></summary>
        <value>
          <span data-ttu-id="c9579-304"><see langword="true" /> Jeśli Dyspozytor zakończył zamykanie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-304"><see langword="true" /> if the dispatcher has finished shutting down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-305">Gdy <xref:System.Windows.Threading.Dispatcher> zaczyna być zamknięta, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-305">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-306"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-306">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="c9579-307">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-307">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-308">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="c9579-308">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownStarted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-309">Określa, czy <see cref="T:System.Windows.Threading.Dispatcher" /> jest zamykany.</span><span class="sxs-lookup"><span data-stu-id="c9579-309">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> is shutting down.</span></span></summary>
        <value>
          <span data-ttu-id="c9579-310"><see langword="true" /> Jeśli <see cref="T:System.Windows.Threading.Dispatcher" /> Rozpoczęto zamykanie w dół, a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-310"><see langword="true" /> if the <see cref="T:System.Windows.Threading.Dispatcher" /> has started shutting down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-311">Gdy <xref:System.Windows.Threading.Dispatcher> zaczyna być zamknięta, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-311">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-312"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-312">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="c9579-313">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-313">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-314">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="c9579-314">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hooks">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherHooks Hooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.DispatcherHooks Hooks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Hooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hooks As DispatcherHooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherHooks ^ Hooks { System::Windows::Threading::DispatcherHooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherHooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-315">Pobiera kolekcję punkty zaczepienia zawierających zdarzeń dodatkowe informacje o <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-315">Gets the collection of hooks that provide additional event information about the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <value><span data-ttu-id="c9579-316">Punkty zaczepienia, skojarzone z tym <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-316">The hooks associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-317"><xref:System.Windows.Threading.DispatcherHooks> Klasy zawiera zdarzenia dodatkowe informacje na temat <xref:System.Windows.Threading.Dispatcher>, takie jak kiedy <xref:System.Windows.Threading.Dispatcher> jest nieaktywna lub jeśli operacja ma konkurencji.</span><span class="sxs-lookup"><span data-stu-id="c9579-317">The <xref:System.Windows.Threading.DispatcherHooks> class provides additional event information about the <xref:System.Windows.Threading.Dispatcher>, such as when the <xref:System.Windows.Threading.Dispatcher> is inactive or when an operation has competed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c9579-318">do pobierania tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="c9579-318">for getting this property.</span></span>  <span data-ttu-id="c9579-319">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c9579-319">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9579-320">Wykonuje określonego delegata synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-320">Executes the specified delegate synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-321">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-321">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-322">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-322">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-323">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-323">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-324">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-324">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-326">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-326">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-328">Poniższy przykład powoduje delegata na <xref:System.Windows.Threading.Dispatcher> w <xref:System.Windows.Threading.DispatcherPriority.Normal> przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-328">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c9579-329">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-329">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="c9579-330">Wykonuje określony <see cref="T:System.Action" /> synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-330">Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action, priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c9579-331">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-331">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-332">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-332">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="c9579-333">Wykonuje określony <see cref="T:System.Action" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-333">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c9579-334">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-334">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-335">Tablica obiektów przekazywane jako argumenty do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-335">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="c9579-336">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-336">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c9579-337">Wykonuje określonego delegata z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-337">Executes the specified delegate with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-338">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-338">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-339">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-339">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="c9579-340">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-340">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="c9579-341">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-341">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="c9579-342">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-342">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="c9579-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="c9579-344">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-344">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-346">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-346">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-347">Delegat do metody który nie przyjmuje żadnych argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-347">A delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="c9579-348">Wykonuje określonego delegata synchronicznie przy określonym priorytecie w wątku, w którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-348">Executes the specified delegate synchronously at the specified priority on the thread on which the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-349">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-349">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-350">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-350">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-351">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-351">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-352">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-352">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-353">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-353">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-355">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-355">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-357">Poniższy przykład powoduje delegata na <xref:System.Windows.Threading.Dispatcher> w <xref:System.Windows.Threading.DispatcherPriority.Normal> przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-357">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9579-358"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-358"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-359"><paramref name="priority" /> nie jest prawidłową priorytet.</span><span class="sxs-lookup"><span data-stu-id="c9579-359"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-360"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-360"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c9579-361">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-361">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-362">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-362">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c9579-363">Obiekt, który wskazuje, czy do anulowania akcji.</span><span class="sxs-lookup"><span data-stu-id="c9579-363">An object that indicates whether to cancel the action.</span></span></param>
        <summary><span data-ttu-id="c9579-364">Wykonuje określony <see cref="T:System.Action" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-364">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c9579-365">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-365">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="timeout"><span data-ttu-id="c9579-366">Maksymalna ilość czasu oczekiwania na ukończenie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="c9579-366">The maximum amount of time to wait for the operation to complete.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-367">Tablica obiektów przekazywane jako argumenty do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-367">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="c9579-368">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-368">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c9579-369">Wykonuje określonego delegata w zasięgu wyznaczonym czasie na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-369">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-370">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-370">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-371">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-371">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="c9579-372">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-372">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="c9579-373">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-373">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="c9579-374">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-374">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="c9579-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="c9579-376">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-376">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c9579-378">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-378">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-379">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-379">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-380">Tablica obiektów przekazywane jako argumenty do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-380">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="c9579-381">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-381">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c9579-382">Wykonuje określonego delegata na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-382">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-383">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-383">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-384">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-384">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="c9579-385">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-385">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="c9579-386">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-386">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="c9579-387">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-387">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="c9579-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="c9579-389">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-389">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-391">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-391">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-392">Delegat do metody, która przyjmuje jeden argument, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-392">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="c9579-393">Obiekt do przekazania jako argument do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-393">An object to pass as an argument to the given method.</span></span></param>
        <summary><span data-ttu-id="c9579-394">Wykonuje określonego delegata na określony priorytet z określonego argumentu synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-394">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-395">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-395">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-396">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="c9579-396">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="c9579-397">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-397">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-398">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-398">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-399">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-399">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-400">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-400">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-402">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-402">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9579-404"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-404"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-405"><paramref name="priority" /> nie jest prawidłową priorytet.</span><span class="sxs-lookup"><span data-stu-id="c9579-405"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-406"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-406"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-407">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-407">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="c9579-408">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="c9579-408">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-409">Delegat do metody który nie przyjmuje żadnych argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-409">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="c9579-410">Wykonuje określonego delegata synchronicznie na określony priorytet i z określoną wartość limitu czasu w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-410">Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> was created.</span></span></summary>
        <returns><span data-ttu-id="c9579-411">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-411">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-412">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-412">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-413">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-413">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-414">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-414">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-415">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-415">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-417">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-417">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c9579-419">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-419">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-420">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-420">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c9579-421">Obiekt, który wskazuje, czy do anulowania akcji.</span><span class="sxs-lookup"><span data-stu-id="c9579-421">An object that indicates whether to cancel the action.</span></span></param>
        <param name="timeout"><span data-ttu-id="c9579-422">Minimalna ilość czasu oczekiwania na operację, aby rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="c9579-422">The minimum amount of time to wait for the operation to start.</span></span></param>
        <summary><span data-ttu-id="c9579-423">Wykonuje określony <see cref="T:System.Action" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-423">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c9579-424">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-424">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="timeout"><span data-ttu-id="c9579-425">Maksymalna ilość czasu oczekiwania na ukończenie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="c9579-425">The maximum amount of time to wait for the operation to complete.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-426">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-426">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-427">Tablica obiektów przekazywane jako argumenty do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-427">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="c9579-428">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-428">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c9579-429">Wykonuje określonego delegata w zasięgu wyznaczonym czasie na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-429">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-430">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-430">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-431">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-431">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="c9579-432">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-432">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="c9579-433">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-433">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="c9579-434">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-434">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="c9579-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="c9579-436">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-436">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-438">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-438">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-439">Delegat do metody pobierającej wiele argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-439">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="c9579-440">Obiekt do przekazania jako argument do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-440">An object to pass as an argument to the given method.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-441">Tablica obiektów przekazywane jako argumenty do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-441">An array of objects to pass as arguments to the given method.</span></span></param>
        <summary><span data-ttu-id="c9579-442">Wykonuje określonego delegata na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-442">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-443">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-443">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-444">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="c9579-444">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="c9579-445">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-445">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-446">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-446">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-447">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-447">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-448">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-448">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-450">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-450">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9579-452"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-452"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-453"><paramref name="priority" /> nie jest prawidłową priorytet.</span><span class="sxs-lookup"><span data-stu-id="c9579-453"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-454"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-454"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-455">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-455">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="c9579-456">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="c9579-456">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-457">Delegat do metody pobierającej wiele argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-457">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="c9579-458">Obiekt do przekazania jako argument do podanej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-458">An object to pass as an argument to the given method.</span></span> <span data-ttu-id="c9579-459">Może to być <see langword="null" /> jeśli niezbędne są bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="c9579-459">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="c9579-460">Wykonuje określonego delegata na określony priorytet z określonego argumentu synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-460">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-461">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-461">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-462">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="c9579-462">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="c9579-463">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-463">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-464">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-464">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-465">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-465">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-466">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-466">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-468">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-468">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9579-470"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-470"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-471"><paramref name="priority" /> nie jest prawidłową priorytet.</span><span class="sxs-lookup"><span data-stu-id="c9579-471"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-472"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-472"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-473">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c9579-473">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="c9579-474">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="c9579-474">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="c9579-475">Delegat do metody pobierającej wiele argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-475">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="c9579-476">Obiekt do przekazania jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-476">An object to pass as an argument to the specified method.</span></span></param>
        <param name="args"><span data-ttu-id="c9579-477">Tablica obiektów przekazywane jako argumenty do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-477">An array of objects to pass as arguments to the specified method.</span></span></param>
        <summary><span data-ttu-id="c9579-478">Wykonuje określonego delegata na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-478">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-479">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span><span class="sxs-lookup"><span data-stu-id="c9579-479">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-480">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="c9579-480">`Arg` can be `null` if an argument is not needed.</span></span>  
  
 <span data-ttu-id="c9579-481">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9579-481">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="c9579-482">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-482">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="c9579-483">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-483">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="c9579-484">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-484">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="c9579-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="c9579-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="c9579-486">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="c9579-486">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="c9579-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9579-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9579-488"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-488"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-489"><paramref name="priority" /> nie jest prawidłową <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-489"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-490"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-490"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c9579-491">Typ zwracanej wartości określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="c9579-491">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="c9579-492">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-492">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="c9579-493">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-493">Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-494">Wartość zwrócona przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="c9579-494">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c9579-495">Typ zwracanej wartości określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="c9579-495">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="c9579-496">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-496">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-497">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-497">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="c9579-498">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-498">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-499">Wartość zwrócona przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="c9579-499">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c9579-500">Typ zwracanej wartości określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="c9579-500">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="c9579-501">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-501">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-502">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-502">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c9579-503">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="c9579-503">An object that indicates whether to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="c9579-504">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-504">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-505">Wartość zwrócona przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="c9579-505">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c9579-506">Typ zwracanej wartości określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="c9579-506">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="c9579-507">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-507">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-508">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-508">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c9579-509">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="c9579-509">An object that indicates whether to cancel the operation.</span></span></param>
        <param name="timeout"><span data-ttu-id="c9579-510">Minimalna ilość czasu oczekiwania na operację, aby rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="c9579-510">The minimum amount of time to wait for the operation to start.</span></span></param>
        <summary><span data-ttu-id="c9579-511">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-511">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-512">Wartość zwrócona przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="c9579-512">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9579-513">Asynchronicznie wykonuje określonego delegata w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-513">Executes the specified delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c9579-514">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-514">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="c9579-515">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-515">Executes the specified <see cref="T:System.Action" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-516">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-516">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action, priority As DispatcherPriority) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c9579-517">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-517">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-518">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-518">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="c9579-519">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-519">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-520">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-520">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="c9579-521">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-521">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-522">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-522">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c9579-523">Obiekt, który wskazuje, czy do anulowania akcji.</span><span class="sxs-lookup"><span data-stu-id="c9579-523">An object that indicates whether to cancel the action.</span></span></param>
        <summary><span data-ttu-id="c9579-524">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-524">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-525">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-525">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult)) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c9579-526">Typ zwracanej wartości określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="c9579-526">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="c9579-527">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-527">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="c9579-528">Wykonuje określony <see cref="T:System.Func`1" /> asynchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-528">Executes the specified <see cref="T:System.Func`1" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-529">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-529">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c9579-530">Typ zwracanej wartości określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="c9579-530">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="c9579-531">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-531">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-532">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-532">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="c9579-533">Wykonuje określony <see cref="T:System.Func`1" /> asynchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-533">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-534">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-534">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c9579-535">Typ zwracanej wartości określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="c9579-535">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="c9579-536">Delegat do wywołania przez Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-536">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="c9579-537">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-537">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c9579-538">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="c9579-538">An object that indicates whether to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="c9579-539">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-539">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="c9579-540">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="c9579-540">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeShutdown">
      <MemberSignature Language="C#" Value="public void InvokeShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeShutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9579-541">Inicjuje proces zamykania <see cref="T:System.Windows.Threading.Dispatcher" /> synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="c9579-541">Initiates the shutdown process of the <see cref="T:System.Windows.Threading.Dispatcher" /> synchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> wymagania nieograniczonych uprawnień interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c9579-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="c9579-543">Gdy <xref:System.Windows.Threading.Dispatcher> zaczyna być zamknięta, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-543">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-544"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-544">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="c9579-545">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-545">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-546">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="c9579-546">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c9579-547">Aby uzyskać zamykanie Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="c9579-547">for shutting down the dispatcher.</span></span>  <span data-ttu-id="c9579-548">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c9579-548">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PushFrame">
      <MemberSignature Language="C#" Value="public static void PushFrame (System.Windows.Threading.DispatcherFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushFrame(class System.Windows.Threading.DispatcherFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushFrame (frame As DispatcherFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushFrame(System::Windows::Threading::DispatcherFrame ^ frame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Windows.Threading.DispatcherFrame" />
      </Parameters>
      <Docs>
        <param name="frame"><span data-ttu-id="c9579-549">Ramka dla dyspozytora do przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-549">The frame for the dispatcher to process.</span></span></param>
        <summary><span data-ttu-id="c9579-550">Wprowadza pętlę wykonania.</span><span class="sxs-lookup"><span data-stu-id="c9579-550">Enters an execute loop.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-551">A <xref:System.Windows.Threading.DispatcherFrame> reprezentuje pętli, który przetwarza elementy robocze oczekujących.</span><span class="sxs-lookup"><span data-stu-id="c9579-551">A <xref:System.Windows.Threading.DispatcherFrame> represents a loop that processes pending work items.</span></span>  
  
 <span data-ttu-id="c9579-552">Dyspozytor przetwarza kolejki elementów pracy w pętli.</span><span class="sxs-lookup"><span data-stu-id="c9579-552">The Dispatcher processes the work item queue in a loop.</span></span>  <span data-ttu-id="c9579-553">Pętla jest określana jako ramka.</span><span class="sxs-lookup"><span data-stu-id="c9579-553">The loop is referred to as a frame.</span></span>  <span data-ttu-id="c9579-554">Początkowa pętli jest zwykle inicjowana przez aplikację przez wywołanie metody <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-554">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="c9579-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> wprowadza pętlę reprezentowanego przez parametr `frame`.</span><span class="sxs-lookup"><span data-stu-id="c9579-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> enters a loop represented by the parameter `frame`.</span></span>  <span data-ttu-id="c9579-556">W każdej iteracji pętli <xref:System.Windows.Threading.Dispatcher> sprawdzi <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> właściwość <xref:System.Windows.Threading.DispatcherFrame> klasę, aby określić, czy powinno być kontynuowane pętli lub jeśli należy zatrzymać.</span><span class="sxs-lookup"><span data-stu-id="c9579-556">At each iteration of the loop, the <xref:System.Windows.Threading.Dispatcher> will check the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property on the <xref:System.Windows.Threading.DispatcherFrame> class to determine whether the loop should continue or if it should stop.</span></span>  
  
 <span data-ttu-id="c9579-557"><xref:System.Windows.Threading.DispatcherFrame> Umożliwia <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> jawnie ustawionej właściwości i szanuje <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> właściwość <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="c9579-557"><xref:System.Windows.Threading.DispatcherFrame> allows for the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property to be set explicitly and it respects the <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> property on the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="c9579-558">Oznacza to, kiedy <xref:System.Windows.Threading.Dispatcher> uruchamia zamknięcia, korzysta z domyślnego ramki <xref:System.Windows.Threading.DispatcherFrame> implementacji zakończy pracę, co pozwala wszystkich zagnieżdżonych ramek zakończyć.</span><span class="sxs-lookup"><span data-stu-id="c9579-558">This means when the <xref:System.Windows.Threading.Dispatcher> starts to shut down, frames that use the default <xref:System.Windows.Threading.DispatcherFrame> implementation will exit, which enables all nested frames to exit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-559">Poniższy przykład przedstawia użycie <xref:System.Windows.Threading.DispatcherFrame> w celu uzyskania wyników podobne jako [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-559">The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span>  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9579-560"><paramref name="frame" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-560"><paramref name="frame" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9579-561"><see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> jest <see langword="true" /></span><span class="sxs-lookup"><span data-stu-id="c9579-561"><see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> is <see langword="true" /></span></span>  
  
 <span data-ttu-id="c9579-562">—lub—</span><span class="sxs-lookup"><span data-stu-id="c9579-562">-or-</span></span>  
  
 <span data-ttu-id="c9579-563"><paramref name="frame" /> działa na innym <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-563"><paramref name="frame" /> is running on a different <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span>  
  
 <span data-ttu-id="c9579-564">—lub—</span><span class="sxs-lookup"><span data-stu-id="c9579-564">-or-</span></span>  
  
 <span data-ttu-id="c9579-565">Przetwarzanie dyspozytora zostało wyłączone.</span><span class="sxs-lookup"><span data-stu-id="c9579-565">Dispatcher processing has been disabled.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c9579-566">do wypychania ramki wykonywania.</span><span class="sxs-lookup"><span data-stu-id="c9579-566">for pushing an execution frame.</span></span>  <span data-ttu-id="c9579-567">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c9579-567">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Run" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9579-568">Wypchnięcia ramki głównej wykonywania w kolejce zdarzeń <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-568">Pushes the main execution frame on the event queue of the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-569"><xref:System.Windows.Threading.Dispatcher> Przetwarza kolejki zdarzeń w pętli.</span><span class="sxs-lookup"><span data-stu-id="c9579-569">The <xref:System.Windows.Threading.Dispatcher> processes the event queue in a loop.</span></span>  <span data-ttu-id="c9579-570">Pętla jest określana jako ramka.</span><span class="sxs-lookup"><span data-stu-id="c9579-570">The loop is referred to as a frame.</span></span>  <span data-ttu-id="c9579-571">Początkowa pętli jest zwykle inicjowana przez aplikację przez wywołanie metody <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9579-571">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="c9579-572">Ramki głównej wykonywania będzie kontynuować do momentu <xref:System.Windows.Threading.Dispatcher> jest zamykana.</span><span class="sxs-lookup"><span data-stu-id="c9579-572">The main execution frame will continue until the <xref:System.Windows.Threading.Dispatcher> is shutdown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownFinished">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownFinished" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownFinished As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownFinished;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-573">Występuje, gdy <see cref="T:System.Windows.Threading.Dispatcher" /> kończy zamykanie.</span><span class="sxs-lookup"><span data-stu-id="c9579-573">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> finishes shutting down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-574">Gdy proces zamykania <xref:System.Windows.Threading.Dispatcher> została uruchomiona, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-574">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-575"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-575">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="c9579-576">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-576">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-577">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="c9579-577">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownStarted">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-578">Występuje, gdy <see cref="T:System.Windows.Threading.Dispatcher" /> rozpoczyna się zamknąć.</span><span class="sxs-lookup"><span data-stu-id="c9579-578">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> begins to shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-579">Gdy proces zamykania <xref:System.Windows.Threading.Dispatcher> została uruchomiona, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-579">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-580"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-580">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="c9579-581">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c9579-581">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="c9579-582">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="c9579-582">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public System.Threading.Thread Thread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Thread Thread" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Thread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Thread ^ Thread { System::Threading::Thread ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-583">Pobiera wątku to <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="c9579-583">Gets the thread this <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <value><span data-ttu-id="c9579-584">Wątek.</span><span class="sxs-lookup"><span data-stu-id="c9579-584">The thread.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Event UnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-585">Występuje, gdy wyjątek wątku jest zgłoszony i nieprzechwycony podczas wykonywania delegata poprzez <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> lub <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-585">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-586">To zdarzenie jest wywoływane, gdy wyjątek został zgłoszony podczas wykonywania delegata poprzez <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest nieprzechwyconych.</span><span class="sxs-lookup"><span data-stu-id="c9579-586">This event is raised when an exception that was thrown during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is uncaught.</span></span>  
  
 <span data-ttu-id="c9579-587">Program obsługi można oznaczyć wyjątek jako obsługiwany, która uniemożliwi program obsługi wyjątku wewnętrznego wywoływane.</span><span class="sxs-lookup"><span data-stu-id="c9579-587">A handler can mark the exception as handled, which will prevent the internal exception handler from being called.</span></span>  
  
 <span data-ttu-id="c9579-588">Programy obsługi zdarzeń dla tego zdarzenia muszą być napisane z rozwagą Unikaj tworzenia dodatkowej wyjątków i catch, wszystkie wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c9579-588">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span> <span data-ttu-id="c9579-589">Zaleca się, aby uniknąć przydzielania pamięci lub wykonując dowolnego zasobu operacje o znacznym wykorzystaniu programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="c9579-589">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="c9579-590"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzeń umożliwia nie wygenerował <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-590">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="c9579-591"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenie jest wywoływane po pierwsze i w razie <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> ustawiono `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzenie nie zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="c9579-591">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledExceptionFilter">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledExceptionFilter As DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionFilterEventHandler ^ UnhandledExceptionFilter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9579-592">Występuje, gdy wyjątek wątku jest zgłoszony i nieprzechwycony podczas wykonywania delegata poprzez <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> lub <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> w fazie filtru.</span><span class="sxs-lookup"><span data-stu-id="c9579-592">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> when in the filter stage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-593">To zdarzenie jest wywoływane podczas etapu filtra wyjątku jest wywoływane podczas wykonywania delegata poprzez <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i nieprzechwycony.</span><span class="sxs-lookup"><span data-stu-id="c9579-593">This event is raised during the filter stage for an exception that is raised during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> and is uncaught.</span></span>  
  
 <span data-ttu-id="c9579-594">Stos wywołań nie jest oddzielić od tego momentu (wyjątkach pierwszej szansy).</span><span class="sxs-lookup"><span data-stu-id="c9579-594">The call stack is not unwound at this point (first-chance exception).</span></span>  
  
 <span data-ttu-id="c9579-595">Programy obsługi zdarzeń dla tego zdarzenia muszą być napisane z rozwagą Unikaj tworzenia dodatkowej wyjątków i catch, wszystkie wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c9579-595">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span>  <span data-ttu-id="c9579-596">Zaleca się, aby uniknąć przydzielania pamięci lub wykonując dowolnego zasobu operacje o znacznym wykorzystaniu programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="c9579-596">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="c9579-597"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzeń umożliwia nie wygenerował <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9579-597">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="c9579-598"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenie jest wywoływane po pierwsze i w razie <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> ustawiono `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzenie nie zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="c9579-598">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c9579-599">Dodawanie lub usuwanie obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-599">for adding or removing a handler for this event.</span></span>  <span data-ttu-id="c9579-600">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c9579-600">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ValidatePriority">
      <MemberSignature Language="C#" Value="public static void ValidatePriority (System.Windows.Threading.DispatcherPriority priority, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidatePriority(valuetype System.Windows.Threading.DispatcherPriority priority, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidatePriority (priority As DispatcherPriority, parameterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidatePriority(System::Windows::Threading::DispatcherPriority priority, System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-601">Aby sprawdzić priorytet.</span><span class="sxs-lookup"><span data-stu-id="c9579-601">The priority to check.</span></span></param>
        <param name="parameterName"><span data-ttu-id="c9579-602">Ciąg, który zostanie zwrócony przez wyjątek, który występuje, gdy priorytet jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="c9579-602">A string that will be returned by the exception that occurs if the priority is invalid.</span></span></param>
        <summary><span data-ttu-id="c9579-603">Określa, czy określony <see cref="T:System.Windows.Threading.DispatcherPriority" /> ma nieprawidłowy priorytet.</span><span class="sxs-lookup"><span data-stu-id="c9579-603">Determines whether the specified <see cref="T:System.Windows.Threading.DispatcherPriority" /> is a valid priority.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c9579-604"><paramref name="priority" /> nie jest prawidłową <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-604"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9579-605">Określa, czy wątek wywołujący ma dostęp do tego <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-605">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-606">Tylko wątek <xref:System.Windows.Threading.Dispatcher> jest tworzony na może uzyskać dostępu do <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="c9579-606">Only the thread the <xref:System.Windows.Threading.Dispatcher> is created on may access the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="c9579-607">Ta metoda jest publiczna; w związku z tym którymkolwiek wątku można sprawdzić, czy ma on dostęp do <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="c9579-607">This method is public; therefore, any thread can check to see whether it has access to the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="c9579-608">Różnica między <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> jest <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> zwraca wartość Boolean, jeśli wątek wywołujący nie ma dostępu do <xref:System.Windows.Threading.Dispatcher> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c9579-608">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean if the calling thread does not have access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9579-609">W poniższym przykładzie użyto <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> ustalenie, czy wątek ma dostęp do wątku który <xref:System.Windows.Controls.Button> został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="c9579-609">The following example uses <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="c9579-610">Metoda korzysta z obiektu jako argument, który jest rzutowane na <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c9579-610">The method takes an object as an argument, which is cast to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="c9579-611"><xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> Metoda <xref:System.Windows.Threading.Dispatcher> z <xref:System.Windows.Controls.Button> jest wywoływana, aby zweryfikować dostęp do wątku.</span><span class="sxs-lookup"><span data-stu-id="c9579-611">The <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  
  
 <span data-ttu-id="c9579-612">Jeśli wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher>, <xref:System.Windows.Controls.Button> jest aktualizowany po zalogowaniu się tylko do elementów członkowskich <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c9579-612">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="c9579-613">Jeśli wątek wywołujący nie ma dostępu, <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="c9579-613">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  <span data-ttu-id="c9579-614">W tym przykładzie przechwytuje wyjątek i wypchnięcia delegata, który akceptuje <xref:System.Windows.Controls.Button> jako argument, a na <xref:System.Windows.Threading.Dispatcher> z <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c9579-614">This example catches the exception and pushes a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="c9579-615">To <xref:System.Windows.Threading.Dispatcher> będzie wykonywać zadania aktualizacji <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c9579-615">This <xref:System.Windows.Threading.Dispatcher> will do the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccessverifyaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9579-616">Wątek wywołujący nie ma dostępu do tego <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c9579-616">The calling thread does not have access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></exception>
        <altmember cref="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Yield">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9579-617">Tworzy obiekt oczekujący asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-617">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9579-618">Tworzy obiekt oczekujący asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-618">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></summary>
        <returns><span data-ttu-id="c9579-619">Oczekujący obiekt asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-619">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-620">Ta metoda umożliwia możesz tymczasowo zwolnienia Kontrola wykonywania do bieżącego dyspozytora, jest on wykonywać inne zadania, takie jak przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-620">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="c9579-621">Użyj `await`, lub `Await` w języku Visual Basic, operator wartości zwracanej, aby powrócić do bieżącego dyspozytora formantu.</span><span class="sxs-lookup"><span data-stu-id="c9579-621">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="c9579-622">Użyj tej metody, jeśli chcesz nadać szansy przetwarzania zdarzeń, gdy aplikacji jest w sposób pracy w wątku interfejsu użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="c9579-622">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="c9579-623">Na przykład można tej metody w pętli długotrwałe, która aktualizuje formantu.</span><span class="sxs-lookup"><span data-stu-id="c9579-623">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 <span data-ttu-id="c9579-624">Ta metoda jest odpowiednikiem wywołania <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> — metoda i przekazywanie <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c9579-624">This method is equivalent to calling the <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> method and passing in <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield (priority As DispatcherPriority) As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="c9579-625">Priorytet, w którym można zaplanować kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="c9579-625">The priority at which to schedule the continuation.</span></span></param>
        <summary><span data-ttu-id="c9579-626">Tworzy obiekt oczekujący asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-626">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span>  <span data-ttu-id="c9579-627">O określonym priorytecie harmonogramu pracy, który występuje, gdy formant zwraca kod oczekiwanie na wynik tej metody.</span><span class="sxs-lookup"><span data-stu-id="c9579-627">The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</span></span></summary>
        <returns><span data-ttu-id="c9579-628">Oczekujący obiekt asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-628">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9579-629">Ta metoda umożliwia możesz tymczasowo zwolnienia Kontrola wykonywania do bieżącego dyspozytora, jest on wykonywać inne zadania, takie jak przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c9579-629">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="c9579-630">Użyj `await`, lub `Await` w języku Visual Basic, operator wartości zwracanej, aby powrócić do bieżącego dyspozytora formantu.</span><span class="sxs-lookup"><span data-stu-id="c9579-630">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="c9579-631">Użyj tej metody, jeśli chcesz nadać szansy przetwarzania zdarzeń, gdy aplikacji jest w sposób pracy w wątku interfejsu użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="c9579-631">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="c9579-632">Na przykład można tej metody w pętli długotrwałe, która aktualizuje formantu.</span><span class="sxs-lookup"><span data-stu-id="c9579-632">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>