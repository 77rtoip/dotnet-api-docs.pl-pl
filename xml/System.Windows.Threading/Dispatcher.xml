<Type Name="Dispatcher" FullName="System.Windows.Threading.Dispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="241fd0ba7a347cff7d7803a0904f74473d27fbc8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36464423" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Dispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Dispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.Dispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Dispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dispatcher sealed" />
  <TypeSignature Language="F#" Value="type Dispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="758b9-101">Udostępnia usługi zarządzania kolejki elementów pracy dla wątku.</span>
      <span class="sxs-lookup">
        <span data-stu-id="758b9-101">Provides services for managing the queue of work items for a thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-102"><xref:System.Windows.Threading.Dispatcher> Przechowuje priorytetową kolejki elementów pracy dla określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-102">The <xref:System.Windows.Threading.Dispatcher> maintains a prioritized queue of work items for a specific thread.</span></span>  
  
 <span data-ttu-id="758b9-103">Gdy <xref:System.Windows.Threading.Dispatcher> jest tworzony w wątku, staje się on tylko <xref:System.Windows.Threading.Dispatcher> które może być skojarzony z wątkiem, nawet wtedy, gdy <xref:System.Windows.Threading.Dispatcher> jest zamknięta.</span><span class="sxs-lookup"><span data-stu-id="758b9-103">When a <xref:System.Windows.Threading.Dispatcher> is created on a thread, it becomes the only <xref:System.Windows.Threading.Dispatcher> that can be associated with the thread, even if the <xref:System.Windows.Threading.Dispatcher> is shut down.</span></span>  
  
 <span data-ttu-id="758b9-104">Jeśli użytkownik spróbuje uzyskać <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> dla bieżącego wątku i <xref:System.Windows.Threading.Dispatcher> nie jest skojarzony z wątkiem <xref:System.Windows.Threading.Dispatcher> zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="758b9-104">If you attempt to get the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> for the current thread and a <xref:System.Windows.Threading.Dispatcher> is not associated with the thread, a <xref:System.Windows.Threading.Dispatcher> will be created.</span></span> <span data-ttu-id="758b9-105">A <xref:System.Windows.Threading.Dispatcher> również jest tworzony podczas tworzenia <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="758b9-105">A <xref:System.Windows.Threading.Dispatcher> is also created when you create a <xref:System.Windows.Threading.DispatcherObject>.</span></span> <span data-ttu-id="758b9-106">W przypadku utworzenia <xref:System.Windows.Threading.Dispatcher> na wątku w tle, należy zamknąć Dyspozytor przed zamknięciem wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-106">If you create a <xref:System.Windows.Threading.Dispatcher> on a background thread, be sure to shut down the dispatcher before exiting the thread.</span></span>  
  
 <span data-ttu-id="758b9-107">Jeśli <xref:System.Windows.Threading.Dispatcher> ma to miejsce w dół go nie można uruchomić ponownie.</span><span class="sxs-lookup"><span data-stu-id="758b9-107">If a <xref:System.Windows.Threading.Dispatcher> is shut down, it cannot be restarted.</span></span>  
  
 <span data-ttu-id="758b9-108">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], <xref:System.Windows.Threading.DispatcherObject> jest możliwy tylko przez <xref:System.Windows.Threading.Dispatcher> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="758b9-108">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], a <xref:System.Windows.Threading.DispatcherObject> can only be accessed by the <xref:System.Windows.Threading.Dispatcher> it is associated with.</span></span>  <span data-ttu-id="758b9-109">Na przykład wątku w tle nie może zaktualizować zawartość <xref:System.Windows.Controls.Button> skojarzony z <xref:System.Windows.Threading.Dispatcher> na [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-109">For example, a background thread cannot update the contents of a <xref:System.Windows.Controls.Button> that is associated with the <xref:System.Windows.Threading.Dispatcher> on the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="758b9-110">Aby wątku w tle dostępu do <xref:System.Windows.Controls.ContentControl.Content%2A> właściwość <xref:System.Windows.Controls.Button>, wątek w tle musi delegowania pracy do <xref:System.Windows.Threading.Dispatcher> skojarzone z [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-110">In order for the background thread to access the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="758b9-111">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-111">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="758b9-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-113">Operacja jest dodane do kolejki <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-113">The operation is added to the queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-114">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="758b9-114">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 <span data-ttu-id="758b9-115">Wszystkie metody na <xref:System.Windows.Threading.Dispatcher>, z wyjątkiem produktów <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, jest bezwątkowy.</span><span class="sxs-lookup"><span data-stu-id="758b9-115">All of the methods on <xref:System.Windows.Threading.Dispatcher>, with the exception of <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, are free-threaded.</span></span>  
  
 <span data-ttu-id="758b9-116">Obiekty, które pochodzą z <xref:System.Windows.Threading.DispatcherObject> mają koligacji wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-116">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="758b9-117">Obiekty, które pochodzą z <xref:System.Windows.Freezable> są bezwątkowe gdy są one zablokowane.</span><span class="sxs-lookup"><span data-stu-id="758b9-117">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="758b9-118">Aby uzyskać więcej informacji, zobacz [obiektu Freezable Przegląd obiektów](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="758b9-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-119">Poniższy przykład przedstawia sposób wstawić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="758b9-119">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="758b9-120">Dla kodu źródłowego w tym przykładzie, zobacz [Single-Threaded aplikacji przy użyciu przykładowych obliczania długotrwałe](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="758b9-120">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="758b9-121">Po pierwsze delegat jest tworzony, który akceptuje żadnych argumentów.</span><span class="sxs-lookup"><span data-stu-id="758b9-121">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="758b9-122">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="758b9-122">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="758b9-123">To wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> przyjmuje dwa parametry: priorytet, który ma ustawioną wartość <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>i wywołanie zwrotne, które jest przekazany za pośrednictwem wystąpienia delegata `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="758b9-123">This call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-124">Asynchronicznie wykonuje delegata w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-124">Executes a delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-125">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-125">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-126">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-126">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-127">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-127">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-128">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-128">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-130">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-130">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="758b9-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="758b9-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym po delegat zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="758b9-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="758b9-133"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="758b9-133">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="758b9-134">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="758b9-134">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-135">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-135">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-136">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="758b9-136">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="758b9-137">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="758b9-137">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="758b9-138">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, będą wykonywane w kolejności wywołań zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="758b9-138">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="758b9-139">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="758b9-139">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="758b9-140">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-140">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-141">Tablica obiektów przekazywane jako argumenty do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-141">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="758b9-142">Może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-142">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-143">Wykonuje określonego delegata asynchronicznie z określonymi argumentami w wątku, który <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-143">Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-144">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-144">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-145"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="758b9-145">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="758b9-146">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="758b9-146">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-147">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-147">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-148">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="758b9-148">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="758b9-149">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="758b9-149">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="758b9-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="758b9-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="758b9-151">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-151">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="758b9-152">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-152">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="758b9-153">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-153">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="758b9-154">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-154">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="758b9-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="758b9-156">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-156">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-157">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="758b9-157">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-158">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-158">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-159">Delegat do metody który nie przyjmuje żadnych argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-159">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-160">Wykonuje określonego delegata asynchronicznie przy określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-160">Executes the specified delegate asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-161">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-161">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-162">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, będą wykonywane w kolejności wywołań zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="758b9-162">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="758b9-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym po delegat zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="758b9-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="758b9-164"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="758b9-164">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="758b9-165">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="758b9-165">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-166">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-166">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-167">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="758b9-167">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="758b9-168">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="758b9-168">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="758b9-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="758b9-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="758b9-170">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-170">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-171">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-171">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-172">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-172">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-173">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-173">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-175">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-175">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-176">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="758b9-176">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-177">Poniższy przykład przedstawia sposób wstawić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="758b9-177">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="758b9-178">Dla kodu źródłowego w tym przykładzie, zobacz [Single-Threaded aplikacji przy użyciu przykładowych obliczania długotrwałe](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="758b9-178">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="758b9-179">Po pierwsze delegat jest tworzony, który akceptuje żadnych argumentów.</span><span class="sxs-lookup"><span data-stu-id="758b9-179">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="758b9-180">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="758b9-180">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="758b9-181">Ponieważ każdy <xref:System.Windows.Threading.DispatcherObject> ma właściwość, która zwraca <xref:System.Windows.Threading.Dispatcher> jest skojarzony z żądaną <xref:System.Windows.Threading.Dispatcher> są uzyskiwane przez wysyłanie zapytań <xref:System.Windows.Threading.DispatcherObject>, w tym przypadku <xref:System.Windows.Controls.Button> o nazwie `startStopButton`.</span><span class="sxs-lookup"><span data-stu-id="758b9-181">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Button> named `startStopButton`.</span></span>   <span data-ttu-id="758b9-182">Wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> przyjmuje dwa parametry: priorytet, który ma ustawioną wartość <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>i wywołanie zwrotne, które jest przekazany za pośrednictwem wystąpienia delegata `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="758b9-182">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-183">
            <paramref name="method" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-183">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-184">
            <paramref name="priority" /> nie jest prawidłową <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-184">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="758b9-185">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-185">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-186">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-186">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-187">Tablica obiektów przekazywane jako argumenty do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-187">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="758b9-188">Może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-188">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-189">Wykonuje określonego delegata asynchronicznie z określonymi argumentami, priorytetem określony w wątku, który <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-189">Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-190">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-190">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-191"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="758b9-191">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="758b9-192">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="758b9-192">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-193">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-193">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-194">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="758b9-194">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="758b9-195">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="758b9-195">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="758b9-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="758b9-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="758b9-197">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-197">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="758b9-198">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-198">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="758b9-199">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-199">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="758b9-200">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-200">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="758b9-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="758b9-202">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-202">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-203">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="758b9-203">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-204">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-204">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-205">Delegat do metody, która przyjmuje jeden argument, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-205">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="758b9-206">Obiekt do przekazania jako argument do określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-206">The object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-207">Wykonuje określonego delegata asynchronicznie na określony priorytet oraz z określonego argumentu w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-207">Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-208">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-208">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-209">`Arg` może być `null` jeśli niezbędne są bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="758b9-209">`Arg` can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="758b9-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym po delegat zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="758b9-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="758b9-211"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="758b9-211">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="758b9-212">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="758b9-212">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-213">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-213">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-214">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="758b9-214">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="758b9-215">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="758b9-215">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="758b9-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="758b9-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="758b9-217">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-217">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-218">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-218">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-219">Aby wątku w tle można uzyskać dostępu do właściwości content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-219">In order for the background thread to access the content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-220">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-220">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-222">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-222">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-223">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, będą wykonywane w kolejności wywołań zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="758b9-223">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="758b9-224">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="758b9-224">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-225">Poniższy przykład przedstawia sposób wstawić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="758b9-225">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="758b9-226">Najpierw delegata jest tworzony, który akceptuje jeden argument, w tym przypadku typu ciąg.</span><span class="sxs-lookup"><span data-stu-id="758b9-226">First, a delegate is created that accepts one argument, in this case a string.</span></span>  
  
 [!code-csharp[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdelegates)]
 [!code-vb[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdelegates)]  
  
 <span data-ttu-id="758b9-227">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="758b9-227">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> is called.</span></span>  <span data-ttu-id="758b9-228">Ponieważ każdy <xref:System.Windows.Threading.DispatcherObject> ma właściwość, która zwraca <xref:System.Windows.Threading.Dispatcher> jest skojarzony z żądaną <xref:System.Windows.Threading.Dispatcher> są uzyskiwane przez wysyłanie zapytań <xref:System.Windows.Threading.DispatcherObject>, w tym przypadku <xref:System.Windows.Controls.Grid> o nazwie `tomorrowsWeather`.</span><span class="sxs-lookup"><span data-stu-id="758b9-228">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Grid> named `tomorrowsWeather`.</span></span> <span data-ttu-id="758b9-229">Wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> przyjmuje trzy parametry: priorytet, który ma ustawioną wartość <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; wywołanie zwrotne, które jest przekazany za pośrednictwem wystąpienia delegata `OneArgDelegate`; i ciągu o nazwie `weather`, który jest argumentem dla wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-229">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> takes three parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; the callback, which is passed in through an instance of the delegate `OneArgDelegate`; and a string named `weather`, which is the argument for the callback.</span></span>  
  
 [!code-csharp[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdispatcheronearge)]
 [!code-vb[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdispatcheronearge)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-230">
            <paramref name="method" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-230">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-231">
            <paramref name="priority" /> nie jest prawidłową <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-231">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-232">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-232">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-233">Delegat do metody pobierającej wiele argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-233">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="758b9-234">Obiekt do przekazania jako argument do określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-234">The object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-235">Tablica obiektów przekazywane jako argumenty do określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-235">An array of objects to pass as arguments to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-236">Wykonuje określonego delegata asynchronicznie na określony priorytet i o określonej tablicy argumentów w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-236">Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-237">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ oczekuje na wykonanie w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-237">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-238">`arg` Parametr może być `null` jeśli niezbędne są bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="758b9-238">The `arg` parameter can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="758b9-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym po delegat zdarzeń kolejki.</span><span class="sxs-lookup"><span data-stu-id="758b9-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="758b9-240"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów na interakcję z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="758b9-240">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="758b9-241">Zmiana <xref:System.Windows.Threading.DispatcherPriority> pełnomocnika, ponieważ istnieje oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="758b9-241">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-242">Usuwanie obiektu delegowanego z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-242">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="758b9-243">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="758b9-243">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="758b9-244">Uzyskiwanie wartość, która zwraca delegata po nim jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="758b9-244">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="758b9-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne; w związku z tym formant zwraca natychmiast do wywoływania obiektu po jego wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="758b9-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="758b9-246">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-246">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-247">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-247">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-248">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-248">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-249">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-249">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-251">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-251">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-252">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, będą wykonywane w kolejności wywołań zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="758b9-252">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="758b9-253">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana na <xref:System.Windows.Threading.Dispatcher> który została zamknięta, właściwość stanu zwróconego elementu <xref:System.Windows.Threading.DispatcherOperation> ma ustawioną wartość <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="758b9-253">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-254">
            <paramref name="method" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-254">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-255">
            <see cref="T:System.Windows.Threading.DispatcherPriority" /> nie jest prawidłową priorytet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-255">
              <see cref="T:System.Windows.Threading.DispatcherPriority" /> is not a valid priority.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeShutdown">
      <MemberSignature Language="C#" Value="public void BeginInvokeShutdown (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginInvokeShutdown(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInvokeShutdown (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInvokeShutdown(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.BeginInvokeShutdown : System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.BeginInvokeShutdown priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-256">Priorytet, od którego należy zacząć zamykanie Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-256">The priority at which to begin shutting down the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-257">Zamknięcie inicjuje <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-257">Initiates shutdown of the <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> wymagania nieograniczonych uprawnień interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="758b9-259">Gdy <xref:System.Windows.Threading.Dispatcher> zaczyna być zamknięta, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-259">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-260"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-260">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="758b9-261">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-261">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-262">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="758b9-262">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="758b9-263">Aby uzyskać zamykanie Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-263">for shutting down the dispatcher.</span>
          </span>
          <span data-ttu-id="758b9-264">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-264">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcher.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758b9-265">Określa, czy wątek wywołujący jest skojarzony z tym wątku <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-265">Determines whether the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-266">
            <see langword="true" /> Jeśli wątek wywołujący jest skojarzony z tym wątku <see cref="T:System.Windows.Threading.Dispatcher" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-266">
              <see langword="true" /> if the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-267">Tylko <xref:System.Windows.Threading.Dispatcher> który <xref:System.Windows.Threading.DispatcherObject> jest tworzony na może uzyskać dostępu do obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-267">Only the <xref:System.Windows.Threading.Dispatcher> that a <xref:System.Windows.Threading.DispatcherObject> is created on may access the object.</span></span>  <span data-ttu-id="758b9-268">Użyj <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> dostępu do obiektu z innego wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-268">Use <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> to access the object from a different thread.</span></span>  
  
 <span data-ttu-id="758b9-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> może zostać wywołana z dowolnego wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> can be called from any thread.</span></span>  
  
 <span data-ttu-id="758b9-270">Różnica między <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> jest <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> zwraca wartość Boolean wskazującą, czy wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="758b9-270">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean indicating whether the calling thread has access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-271">W poniższym przykładzie użyto <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> ustalenie, czy wątek ma dostęp do <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="758b9-271">The following example uses <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> to determine whether a thread has access to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="758b9-272"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> Metoda <xref:System.Windows.Threading.Dispatcher> skojarzone z <xref:System.Windows.Controls.Button> jest wywoływana, aby zweryfikować dostęp do wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-272">The <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> associated with the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="758b9-273">Jeśli wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher>, <xref:System.Windows.Controls.Button> jest aktualizowany po zalogowaniu się do elementów członkowskich <xref:System.Windows.Controls.Button>; w przeciwnym razie delegata, który akceptuje <xref:System.Windows.Controls.Button> jako argument jest umieszczona na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="758b9-273">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is placed onto the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="758b9-274"><xref:System.Windows.Threading.Dispatcher> Będzie delegowane pracy aktualizacji <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="758b9-274">The <xref:System.Windows.Threading.Dispatcher> will delegate the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccesscheckaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccesscheckaccess)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDispatcher">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher CurrentDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Threading.Dispatcher CurrentDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Threading::Dispatcher ^ CurrentDispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-275">Pobiera <see cref="T:System.Windows.Threading.Dispatcher" /> wątku aktualnie wykonywane i tworzy nowy <see cref="T:System.Windows.Threading.Dispatcher" /> Jeśli jeszcze nie została skojarzona z wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-275">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the thread currently executing and creates a new <see cref="T:System.Windows.Threading.Dispatcher" /> if one is not already associated with the thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758b9-276">Dyspozytor skojarzone z bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-276">The dispatcher associated with the current thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-277">Jeśli <xref:System.Windows.Threading.Dispatcher> nie jest skojarzona z bieżącym wątkiem nowy <xref:System.Windows.Threading.Dispatcher> zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="758b9-277">If a <xref:System.Windows.Threading.Dispatcher> is not associated with the current thread, a new <xref:System.Windows.Threading.Dispatcher> will be created.</span></span>  <span data-ttu-id="758b9-278">Nie jest to w przypadku <xref:System.Windows.Threading.Dispatcher.FromThread%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="758b9-278">This is not the case with the <xref:System.Windows.Threading.Dispatcher.FromThread%2A> method.</span></span>  <span data-ttu-id="758b9-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> Zwraca `null` Jeśli nie jest skojarzone z określonego wątku dyspozytorze.</span><span class="sxs-lookup"><span data-stu-id="758b9-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> will return `null` if there is not a dispatcher associated with the specified thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableProcessing">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableProcessing () As DispatcherProcessingDisabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherProcessingDisabled DisableProcessing();" />
      <MemberSignature Language="F#" Value="member this.DisableProcessing : unit -&gt; System.Windows.Threading.DispatcherProcessingDisabled" Usage="dispatcher.DisableProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherProcessingDisabled</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758b9-280">Wyłącza przetwarzania <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-280">Disables processing of the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-281">Struktura umożliwia ponowne przetwarzanie dyspozytora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-281">A structure used to re-enable dispatcher processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-282">Wyłączenie przetwarzanie dyspozytora to zaawansowana metoda jest przeznaczona do wykluczyć ryzyko ponownego rozpoczęcia niepowiązanych.</span><span class="sxs-lookup"><span data-stu-id="758b9-282">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="758b9-283">Efekty wyłączenia przetwarzania są następujące:</span><span class="sxs-lookup"><span data-stu-id="758b9-283">The effects of disabling processing are as follows:</span></span>  
  
-   <span data-ttu-id="758b9-284">Blokady CLR nie będzie wewnętrznie pompa wiadomości.</span><span class="sxs-lookup"><span data-stu-id="758b9-284">CLR locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="758b9-285"><xref:System.Windows.Threading.DispatcherFrame> obiekty nie może zostać przeniesiony.</span><span class="sxs-lookup"><span data-stu-id="758b9-285"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="758b9-286">Przetwarzanie komunikatów nie jest dozwolone.</span><span class="sxs-lookup"><span data-stu-id="758b9-286">Message processing is not permitted.</span></span>  
  
 <span data-ttu-id="758b9-287"><xref:System.Windows.Threading.DispatcherProcessingDisabled> Struktury, która <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> zwraca, gdy jest wywoływana można ponownie włączyć przetwarzanie dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="758b9-287">The <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns when it is called can be used to re-enable dispatcher processing.</span></span>  <span data-ttu-id="758b9-288">Wywoływanie <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> na <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury umożliwia ponowne przetwarzanie.</span><span class="sxs-lookup"><span data-stu-id="758b9-288">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure re-enables processing.</span></span>  
  
 <span data-ttu-id="758b9-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> można wywołać tylko w wątku <xref:System.Windows.Threading.Dispatcher> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="758b9-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> can only be called on the thread the <xref:System.Windows.Threading.Dispatcher> is associated with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-290">Poniższy przykład pokazuje, jak wyłączyć przetwarzanie dyspozytora i ponownie Włącz przetwarzanie dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="758b9-290">The following example shows how to disable dispatcher processing and re-enable dispatcher processing.</span></span>  <span data-ttu-id="758b9-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> jest wywoływana **przy użyciu** instrukcji.</span><span class="sxs-lookup"><span data-stu-id="758b9-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.</span></span>  <span data-ttu-id="758b9-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> Zwraca <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury, która jest używana jako obiekt jest usunięty, gdy **przy użyciu** zablokować zakończenie.</span><span class="sxs-lookup"><span data-stu-id="758b9-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that is used as the object to be disposed when the **using** block finishes.</span></span>  <span data-ttu-id="758b9-293">Gdy <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> jest wywoływana na <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury, przetwarzanie dyspozytora zostało ponownie włączone.</span><span class="sxs-lookup"><span data-stu-id="758b9-293">When <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> is called on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure, dispatcher processing is re-enabled.</span></span>  
  
 [!code-csharp[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdisableprocessing)]
 [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdisableprocessing)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAllFrames">
      <MemberSignature Language="C#" Value="public static void ExitAllFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExitAllFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExitAllFrames ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExitAllFrames();" />
      <MemberSignature Language="F#" Value="static member ExitAllFrames : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ExitAllFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758b9-294">Żądania, które zakończyć wszystkie ramki, w tym zagnieżdżonych ramek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-294">Requests that all frames exit, including nested frames.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="758b9-295">wywoływania tej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-295">for calling this method.</span>
          </span>
          <span data-ttu-id="758b9-296">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-296">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
        <altmember cref="T:System.Windows.Threading.DispatcherFrame" />
      </Docs>
    </Member>
    <Member MemberName="FromThread">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher FromThread (System.Threading.Thread thread);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Threading.Dispatcher FromThread(class System.Threading.Thread thread) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::Dispatcher ^ FromThread(System::Threading::Thread ^ thread);" />
      <MemberSignature Language="F#" Value="static member FromThread : System.Threading.Thread -&gt; System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.FromThread thread" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="System.Threading.Thread" />
      </Parameters>
      <Docs>
        <param name="thread">
          <span data-ttu-id="758b9-297">Wątek, aby uzyskać <see cref="T:System.Windows.Threading.Dispatcher" /> z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-297">The thread to obtain the <see cref="T:System.Windows.Threading.Dispatcher" /> from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-298">Pobiera <see cref="T:System.Windows.Threading.Dispatcher" /> dla określonego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-298">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the specified thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-299">Dyspozytor dla <paramref name="thread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-299">The dispatcher for <paramref name="thread" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-300">Jeśli nie jest dostępny dla określonego wątku dyspozytora `null` zostaną zwrócone.</span><span class="sxs-lookup"><span data-stu-id="758b9-300">If a dispatcher is not available for the specified thread, `null` will be returned.</span></span>  
  
 <span data-ttu-id="758b9-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> nie tworzy <xref:System.Windows.Threading.Dispatcher> w wątku, który nie ma <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="758b9-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> does not create a <xref:System.Windows.Threading.Dispatcher> on a thread that does not have a <xref:System.Windows.Threading.Dispatcher>.</span></span>   <span data-ttu-id="758b9-302">Nowy <xref:System.Windows.Threading.Dispatcher> jest tworzony w wątku, który nie ma jeszcze <xref:System.Windows.Threading.Dispatcher> podczas próby pobrania <xref:System.Windows.Threading.Dispatcher> przy użyciu <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="758b9-302">A new <xref:System.Windows.Threading.Dispatcher> is created on a thread that does not already have a <xref:System.Windows.Threading.Dispatcher> when attempting to get the <xref:System.Windows.Threading.Dispatcher> by using the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownFinished">
      <MemberSignature Language="C#" Value="public bool HasShutdownFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownFinished" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownFinished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownFinished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownFinished : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-303">Określa, czy <see cref="T:System.Windows.Threading.Dispatcher" /> zakończył zamykanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-303">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> has finished shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758b9-304">
            <see langword="true" /> Jeśli Dyspozytor zakończył zamykanie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-304">
              <see langword="true" /> if the dispatcher has finished shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-305">Gdy <xref:System.Windows.Threading.Dispatcher> zaczyna być zamknięta, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-305">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-306"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-306">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="758b9-307">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-307">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-308">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="758b9-308">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownStarted : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-309">Określa, czy <see cref="T:System.Windows.Threading.Dispatcher" /> jest zamykany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-309">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> is shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758b9-310">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Threading.Dispatcher" /> Rozpoczęto zamykanie w dół, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-310">
              <see langword="true" /> if the <see cref="T:System.Windows.Threading.Dispatcher" /> has started shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-311">Gdy <xref:System.Windows.Threading.Dispatcher> zaczyna być zamknięta, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-311">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-312"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-312">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="758b9-313">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-313">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-314">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="758b9-314">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hooks">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherHooks Hooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.DispatcherHooks Hooks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Hooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hooks As DispatcherHooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherHooks ^ Hooks { System::Windows::Threading::DispatcherHooks ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Hooks : System.Windows.Threading.DispatcherHooks" Usage="System.Windows.Threading.Dispatcher.Hooks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherHooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-315">Pobiera kolekcję punkty zaczepienia zawierających zdarzeń dodatkowe informacje o <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-315">Gets the collection of hooks that provide additional event information about the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758b9-316">Punkty zaczepienia, skojarzone z tym <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-316">The hooks associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-317"><xref:System.Windows.Threading.DispatcherHooks> Klasy zawiera zdarzenia dodatkowe informacje na temat <xref:System.Windows.Threading.Dispatcher>, takie jak kiedy <xref:System.Windows.Threading.Dispatcher> jest nieaktywna lub jeśli operacja ma konkurencji.</span><span class="sxs-lookup"><span data-stu-id="758b9-317">The <xref:System.Windows.Threading.DispatcherHooks> class provides additional event information about the <xref:System.Windows.Threading.Dispatcher>, such as when the <xref:System.Windows.Threading.Dispatcher> is inactive or when an operation has competed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="758b9-318">do pobierania tej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-318">for getting this property.</span>
          </span>
          <span data-ttu-id="758b9-319">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-319">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-320">Wykonuje określonego delegata synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-320">Executes the specified delegate synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-321">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-321">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-322">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-322">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-323">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-323">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-324">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-324">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-326">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-326">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-328">Poniższy przykład powoduje delegata na <xref:System.Windows.Threading.Dispatcher> w <xref:System.Windows.Threading.DispatcherPriority.Normal> przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-328">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action -&gt; unit" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="758b9-329">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-329">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-330">Wykonuje określony <see cref="T:System.Action" /> synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-330">Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action, priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="758b9-331">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-331">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-332">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-332">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-333">Wykonuje określony <see cref="T:System.Action" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-333">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="758b9-334">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-334">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-335">Tablica obiektów przekazywane jako argumenty do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-335">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="758b9-336">Może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-336">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-337">Wykonuje określonego delegata z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-337">Executes the specified delegate with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-338">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-338">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-339">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-339">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="758b9-340">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-340">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="758b9-341">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-341">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="758b9-342">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-342">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="758b9-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="758b9-344">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-344">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-346">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-346">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-347">Delegat do metody który nie przyjmuje żadnych argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-347">A delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-348">Wykonuje określonego delegata synchronicznie przy określonym priorytecie w wątku, w którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-348">Executes the specified delegate synchronously at the specified priority on the thread on which the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-349">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-349">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-350">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-350">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-351">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-351">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-352">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-352">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-353">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-353">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-355">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-355">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-357">Poniższy przykład powoduje delegata na <xref:System.Windows.Threading.Dispatcher> w <xref:System.Windows.Threading.DispatcherPriority.Normal> przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-357">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="758b9-358">
            <paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-358">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-359">
            <paramref name="priority" /> nie jest prawidłową priorytet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-359">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-360">
            <paramref name="method" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-360">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="758b9-361">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-361">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-362">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-362">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="758b9-363">Obiekt, który wskazuje, czy do anulowania akcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-363">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-364">Wykonuje określony <see cref="T:System.Action" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-364">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="758b9-365">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-365">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="758b9-366">Maksymalna ilość czasu oczekiwania na ukończenie tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-366">The maximum amount of time to wait for the operation to complete.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-367">Tablica obiektów przekazywane jako argumenty do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-367">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="758b9-368">Może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-368">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-369">Wykonuje określonego delegata w zasięgu wyznaczonym czasie na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-369">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-370">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-370">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-371">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-371">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="758b9-372">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-372">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="758b9-373">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-373">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="758b9-374">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-374">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="758b9-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="758b9-376">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-376">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="758b9-378">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-378">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-379">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-379">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-380">Tablica obiektów przekazywane jako argumenty do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-380">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="758b9-381">Może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-381">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-382">Wykonuje określonego delegata na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-382">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-383">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-383">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-384">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-384">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="758b9-385">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-385">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="758b9-386">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-386">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="758b9-387">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-387">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="758b9-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="758b9-389">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-389">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-391">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-391">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-392">Delegat do metody, która przyjmuje jeden argument, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-392">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="758b9-393">Obiekt do przekazania jako argument do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-393">An object to pass as an argument to the given method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-394">Wykonuje określonego delegata na określony priorytet z określonego argumentu synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-394">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-395">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-395">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-396">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="758b9-396">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="758b9-397">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-397">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-398">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-398">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-399">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-399">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-400">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-400">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-402">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-402">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="758b9-404">
            <paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-404">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-405">
            <paramref name="priority" /> nie jest prawidłową priorytet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-405">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-406">
            <paramref name="method" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-406">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-407">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-407">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="758b9-408">Maksymalny czas oczekiwania na zakończenie operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-408">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-409">Delegat do metody który nie przyjmuje żadnych argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-409">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-410">Wykonuje określonego delegata synchronicznie na określony priorytet i z określoną wartość limitu czasu w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-410">Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> was created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-411">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-411">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-412">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-412">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-413">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-413">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-414">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-414">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-415">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-415">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-417">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-417">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="758b9-419">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-419">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-420">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-420">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="758b9-421">Obiekt, który wskazuje, czy do anulowania akcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-421">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="758b9-422">Minimalna ilość czasu oczekiwania na operację, aby rozpocząć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-422">The minimum amount of time to wait for the operation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-423">Wykonuje określony <see cref="T:System.Action" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-423">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="758b9-424">Delegat do metody, która przyjmuje parametry określone w <c>argumentów</c>, który spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-424">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="758b9-425">Maksymalna ilość czasu oczekiwania na ukończenie tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-425">The maximum amount of time to wait for the operation to complete.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-426">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-426">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-427">Tablica obiektów przekazywane jako argumenty do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-427">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="758b9-428">Może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-428">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-429">Wykonuje określonego delegata w zasięgu wyznaczonym czasie na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-429">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-430">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-430">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-431">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-431">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="758b9-432">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-432">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="758b9-433">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-433">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="758b9-434">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-434">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="758b9-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="758b9-436">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-436">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-438">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-438">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-439">Delegat do metody pobierającej wiele argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-439">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="758b9-440">Obiekt do przekazania jako argument do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-440">An object to pass as an argument to the given method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-441">Tablica obiektów przekazywane jako argumenty do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-441">An array of objects to pass as arguments to the given method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-442">Wykonuje określonego delegata na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-442">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-443">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-443">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-444">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="758b9-444">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="758b9-445">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-445">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-446">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-446">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-447">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-447">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-448">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-448">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-450">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-450">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="758b9-452">
            <paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-452">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-453">
            <paramref name="priority" /> nie jest prawidłową priorytet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-453">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-454">
            <paramref name="method" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-454">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-455">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-455">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="758b9-456">Maksymalny czas oczekiwania na zakończenie operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-456">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-457">Delegat do metody pobierającej wiele argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-457">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="758b9-458">Obiekt do przekazania jako argument do podanej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-458">An object to pass as an argument to the given method.</span>
          </span>
          <span data-ttu-id="758b9-459">Może to być <see langword="null" /> jeśli niezbędne są bez argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-459">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-460">Wykonuje określonego delegata na określony priorytet z określonego argumentu synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-460">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-461">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-461">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-462">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="758b9-462">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="758b9-463">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-463">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-464">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-464">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-465">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-465">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-466">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-466">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-468">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-468">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="758b9-470">
            <paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-470">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-471">
            <paramref name="priority" /> nie jest prawidłową priorytet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-471">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-472">
            <paramref name="method" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-472">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-473">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, określona metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-473">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="758b9-474">Maksymalny czas oczekiwania na zakończenie operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-474">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="758b9-475">Delegat do metody pobierającej wiele argumentów, które spoczywa na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-475">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="758b9-476">Obiekt do przekazania jako argument do określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-476">An object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="758b9-477">Tablica obiektów przekazywane jako argumenty do określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-477">An array of objects to pass as arguments to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-478">Wykonuje określonego delegata na określony priorytet z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-478">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-479">Wartość zwrócona przez wywoływany delegat lub <see langword="null" /> Jeśli delegat nie ma wartości zwracanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-479">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-480">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="758b9-480">`Arg` can be `null` if an argument is not needed.</span></span>  
  
 <span data-ttu-id="758b9-481">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> może uzyskać dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b9-481">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="758b9-482">Na przykład wątku w tle, którą jest uruchomione z wątku interfejsu użytkownika głównego nie można zaktualizować zawartość <xref:System.Windows.Controls.Button> utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-482">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="758b9-483">Aby wątku w tle można uzyskać dostępu do właściwości Content <xref:System.Windows.Controls.Button>, wątek w tle należy delegować współpracują w celu <xref:System.Windows.Threading.Dispatcher> skojarzone z wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-483">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="758b9-484">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-484">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="758b9-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> synchroniczna i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="758b9-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="758b9-486">Operacja jest dodane do kolejki zdarzeń o <xref:System.Windows.Threading.Dispatcher> pod określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="758b9-486">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="758b9-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="758b9-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="758b9-488">
            <paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-488">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-489">
            <paramref name="priority" /> nie jest prawidłową <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-489">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-490">
            <paramref name="method" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-490">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; -&gt; 'Result" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="758b9-491">Typ zwracanej wartości określonego delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-491">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="758b9-492">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-492">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-493">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-493">Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-494">Wartość zwrócona przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="758b9-494">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="758b9-495">Typ zwracanej wartości określonego delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-495">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="758b9-496">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-496">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-497">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-497">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-498">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-498">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-499">Wartość zwrócona przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="758b9-499">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="758b9-500">Typ zwracanej wartości określonego delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-500">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="758b9-501">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-501">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-502">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-502">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="758b9-503">Obiekt, który wskazuje, czy anulować operację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-503">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-504">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-504">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-505">Wartość zwrócona przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="758b9-505">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="758b9-506">Typ zwracanej wartości określonego delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-506">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="758b9-507">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-507">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-508">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-508">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="758b9-509">Obiekt, który wskazuje, czy anulować operację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-509">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="758b9-510">Minimalna ilość czasu oczekiwania na operację, aby rozpocząć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-510">The minimum amount of time to wait for the operation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-511">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-511">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-512">Wartość zwrócona przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="758b9-512">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-513">Asynchronicznie wykonuje określonego delegata w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-513">Executes the specified delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="758b9-514">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-514">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-515">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-515">Executes the specified <see cref="T:System.Action" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-516">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-516">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action, priority As DispatcherPriority) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="758b9-517">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-517">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-518">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-518">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-519">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-519">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-520">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-520">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="758b9-521">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-521">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-522">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-522">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="758b9-523">Obiekt, który wskazuje, czy do anulowania akcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-523">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-524">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-524">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-525">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-525">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult)) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="758b9-526">Typ zwracanej wartości określonego delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-526">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="758b9-527">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-527">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-528">Wykonuje określony <see cref="T:System.Func`1" /> asynchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-528">Executes the specified <see cref="T:System.Func`1" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-529">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-529">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="758b9-530">Typ zwracanej wartości określonego delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-530">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="758b9-531">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-531">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-532">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-532">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-533">Wykonuje określony <see cref="T:System.Func`1" /> asynchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-533">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-534">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-534">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="758b9-535">Typ zwracanej wartości określonego delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-535">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="758b9-536">Delegat do wywołania przez Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-536">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="758b9-537">Priorytet, który określa, w jakiej kolejności określonej wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-537">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="758b9-538">Obiekt, który wskazuje, czy anulować operację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-538">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-539">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie priorytetem określony w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-539">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-540">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ istnieje oczekujące wykonanie zdarzeń kolejki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-540">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeShutdown">
      <MemberSignature Language="C#" Value="public void InvokeShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeShutdown();" />
      <MemberSignature Language="F#" Value="member this.InvokeShutdown : unit -&gt; unit" Usage="dispatcher.InvokeShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758b9-541">Inicjuje proces zamykania <see cref="T:System.Windows.Threading.Dispatcher" /> synchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-541">Initiates the shutdown process of the <see cref="T:System.Windows.Threading.Dispatcher" /> synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> wymagania nieograniczonych uprawnień interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="758b9-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="758b9-543">Gdy <xref:System.Windows.Threading.Dispatcher> zaczyna być zamknięta, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-543">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-544"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-544">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="758b9-545">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-545">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-546">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="758b9-546">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="758b9-547">Aby uzyskać zamykanie Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-547">for shutting down the dispatcher.</span>
          </span>
          <span data-ttu-id="758b9-548">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-548">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PushFrame">
      <MemberSignature Language="C#" Value="public static void PushFrame (System.Windows.Threading.DispatcherFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushFrame(class System.Windows.Threading.DispatcherFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushFrame (frame As DispatcherFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushFrame(System::Windows::Threading::DispatcherFrame ^ frame);" />
      <MemberSignature Language="F#" Value="static member PushFrame : System.Windows.Threading.DispatcherFrame -&gt; unit" Usage="System.Windows.Threading.Dispatcher.PushFrame frame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Windows.Threading.DispatcherFrame" />
      </Parameters>
      <Docs>
        <param name="frame">
          <span data-ttu-id="758b9-549">Ramka dla dyspozytora do przetworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-549">The frame for the dispatcher to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-550">Wprowadza pętlę wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-550">Enters an execute loop.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-551">A <xref:System.Windows.Threading.DispatcherFrame> reprezentuje pętli, który przetwarza elementy robocze oczekujących.</span><span class="sxs-lookup"><span data-stu-id="758b9-551">A <xref:System.Windows.Threading.DispatcherFrame> represents a loop that processes pending work items.</span></span>  
  
 <span data-ttu-id="758b9-552">Dyspozytor przetwarza kolejki elementów pracy w pętli.</span><span class="sxs-lookup"><span data-stu-id="758b9-552">The Dispatcher processes the work item queue in a loop.</span></span>  <span data-ttu-id="758b9-553">Pętla jest określana jako ramka.</span><span class="sxs-lookup"><span data-stu-id="758b9-553">The loop is referred to as a frame.</span></span>  <span data-ttu-id="758b9-554">Początkowa pętli jest zwykle inicjowana przez aplikację przez wywołanie metody <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-554">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="758b9-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> wprowadza pętlę reprezentowanego przez parametr `frame`.</span><span class="sxs-lookup"><span data-stu-id="758b9-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> enters a loop represented by the parameter `frame`.</span></span>  <span data-ttu-id="758b9-556">W każdej iteracji pętli <xref:System.Windows.Threading.Dispatcher> sprawdzi <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> właściwość <xref:System.Windows.Threading.DispatcherFrame> klasę, aby określić, czy powinno być kontynuowane pętli lub jeśli należy zatrzymać.</span><span class="sxs-lookup"><span data-stu-id="758b9-556">At each iteration of the loop, the <xref:System.Windows.Threading.Dispatcher> will check the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property on the <xref:System.Windows.Threading.DispatcherFrame> class to determine whether the loop should continue or if it should stop.</span></span>  
  
 <span data-ttu-id="758b9-557"><xref:System.Windows.Threading.DispatcherFrame> Umożliwia <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> jawnie ustawionej właściwości i szanuje <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> właściwość <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="758b9-557"><xref:System.Windows.Threading.DispatcherFrame> allows for the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property to be set explicitly and it respects the <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> property on the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="758b9-558">Oznacza to, kiedy <xref:System.Windows.Threading.Dispatcher> uruchamia zamknięcia, korzysta z domyślnego ramki <xref:System.Windows.Threading.DispatcherFrame> implementacji zakończy pracę, co pozwala wszystkich zagnieżdżonych ramek zakończyć.</span><span class="sxs-lookup"><span data-stu-id="758b9-558">This means when the <xref:System.Windows.Threading.Dispatcher> starts to shut down, frames that use the default <xref:System.Windows.Threading.DispatcherFrame> implementation will exit, which enables all nested frames to exit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-559">Poniższy przykład przedstawia użycie <xref:System.Windows.Threading.DispatcherFrame> w celu uzyskania wyników podobne jako [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="758b9-559">The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span>  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="758b9-560">
            <paramref name="frame" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-560">
              <paramref name="frame" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="758b9-561">
            <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> jest <see langword="true" /> - lub - <paramref name="frame" /> jest uruchomiony na innym <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-561">
              <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> is <see langword="true" />  -or-  <paramref name="frame" /> is running on a different <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
          <span data-ttu-id="758b9-562">- lub - przetwarzanie dyspozytora zostało wyłączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-562">-or-  Dispatcher processing has been disabled.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="758b9-563">do wypychania ramki wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-563">for pushing an execution frame.</span>
          </span>
          <span data-ttu-id="758b9-564">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-564">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Run" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run();" />
      <MemberSignature Language="F#" Value="static member Run : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758b9-565">Wypchnięcia ramki głównej wykonywania w kolejce zdarzeń <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-565">Pushes the main execution frame on the event queue of the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-566"><xref:System.Windows.Threading.Dispatcher> Przetwarza kolejki zdarzeń w pętli.</span><span class="sxs-lookup"><span data-stu-id="758b9-566">The <xref:System.Windows.Threading.Dispatcher> processes the event queue in a loop.</span></span>  <span data-ttu-id="758b9-567">Pętla jest określana jako ramka.</span><span class="sxs-lookup"><span data-stu-id="758b9-567">The loop is referred to as a frame.</span></span>  <span data-ttu-id="758b9-568">Początkowa pętli jest zwykle inicjowana przez aplikację przez wywołanie metody <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="758b9-568">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="758b9-569">Ramki głównej wykonywania będzie kontynuować do momentu <xref:System.Windows.Threading.Dispatcher> jest zamykana.</span><span class="sxs-lookup"><span data-stu-id="758b9-569">The main execution frame will continue until the <xref:System.Windows.Threading.Dispatcher> is shutdown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownFinished">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownFinished" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownFinished As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownFinished;" />
      <MemberSignature Language="F#" Value="member this.ShutdownFinished : EventHandler " Usage="member this.ShutdownFinished : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-570">Występuje, gdy <see cref="T:System.Windows.Threading.Dispatcher" /> kończy zamykanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-570">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> finishes shutting down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-571">Gdy proces zamykania <xref:System.Windows.Threading.Dispatcher> została uruchomiona, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-571">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-572"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-572">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="758b9-573">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-573">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-574">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="758b9-574">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownStarted">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownStarted;" />
      <MemberSignature Language="F#" Value="member this.ShutdownStarted : EventHandler " Usage="member this.ShutdownStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-575">Występuje, gdy <see cref="T:System.Windows.Threading.Dispatcher" /> rozpoczyna się zamknąć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-575">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> begins to shut down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-576">Gdy proces zamykania <xref:System.Windows.Threading.Dispatcher> została uruchomiona, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-576">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-577"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie dopóki cofa kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-577">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="758b9-578">Po zakończeniu Dyspozytor zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenia i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="758b9-578">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="758b9-579">Po rozpoczęciu procesu zamykania, wszystkie oczekujące robocze elementów w kolejce są przerywane.</span><span class="sxs-lookup"><span data-stu-id="758b9-579">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public System.Threading.Thread Thread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Thread Thread" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Thread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Thread ^ Thread { System::Threading::Thread ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thread : System.Threading.Thread" Usage="System.Windows.Threading.Dispatcher.Thread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-580">Pobiera wątku to <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-580">Gets the thread this <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758b9-581">Wątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-581">The thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Event UnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " Usage="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-582">Występuje, gdy wyjątek wątku jest zgłoszony i nieprzechwycony podczas wykonywania delegata poprzez <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> lub <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-582">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-583">To zdarzenie jest wywoływane, gdy wyjątek został zgłoszony podczas wykonywania delegata poprzez <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest nieprzechwyconych.</span><span class="sxs-lookup"><span data-stu-id="758b9-583">This event is raised when an exception that was thrown during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is uncaught.</span></span>  
  
 <span data-ttu-id="758b9-584">Program obsługi można oznaczyć wyjątek jako obsługiwany, która uniemożliwi program obsługi wyjątku wewnętrznego wywoływane.</span><span class="sxs-lookup"><span data-stu-id="758b9-584">A handler can mark the exception as handled, which will prevent the internal exception handler from being called.</span></span>  
  
 <span data-ttu-id="758b9-585">Programy obsługi zdarzeń dla tego zdarzenia muszą być napisane z rozwagą Unikaj tworzenia dodatkowej wyjątków i catch, wszystkie wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="758b9-585">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span> <span data-ttu-id="758b9-586">Zaleca się, aby uniknąć przydzielania pamięci lub wykonując dowolnego zasobu operacje o znacznym wykorzystaniu programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="758b9-586">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="758b9-587"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzeń umożliwia nie wygenerował <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-587">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="758b9-588"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenie jest wywoływane po pierwsze i w razie <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> ustawiono `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzenie nie zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="758b9-588">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledExceptionFilter">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledExceptionFilter As DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionFilterEventHandler ^ UnhandledExceptionFilter;" />
      <MemberSignature Language="F#" Value="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " Usage="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-589">Występuje, gdy wyjątek wątku jest zgłoszony i nieprzechwycony podczas wykonywania delegata poprzez <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> lub <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> w fazie filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-589">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> when in the filter stage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-590">To zdarzenie jest wywoływane podczas etapu filtra wyjątku jest wywoływane podczas wykonywania delegata poprzez <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i nieprzechwycony.</span><span class="sxs-lookup"><span data-stu-id="758b9-590">This event is raised during the filter stage for an exception that is raised during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> and is uncaught.</span></span>  
  
 <span data-ttu-id="758b9-591">Stos wywołań nie jest oddzielić od tego momentu (wyjątkach pierwszej szansy).</span><span class="sxs-lookup"><span data-stu-id="758b9-591">The call stack is not unwound at this point (first-chance exception).</span></span>  
  
 <span data-ttu-id="758b9-592">Programy obsługi zdarzeń dla tego zdarzenia muszą być napisane z rozwagą Unikaj tworzenia dodatkowej wyjątków i catch, wszystkie wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="758b9-592">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span>  <span data-ttu-id="758b9-593">Zaleca się, aby uniknąć przydzielania pamięci lub wykonując dowolnego zasobu operacje o znacznym wykorzystaniu programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="758b9-593">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="758b9-594"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzeń umożliwia nie wygenerował <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="758b9-594">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="758b9-595"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenie jest wywoływane po pierwsze i w razie <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> ustawiono `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzenie nie zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="758b9-595">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="758b9-596">Dodawanie lub usuwanie obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-596">for adding or removing a handler for this event.</span>
          </span>
          <span data-ttu-id="758b9-597">Wyliczenia skojarzone:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-597">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ValidatePriority">
      <MemberSignature Language="C#" Value="public static void ValidatePriority (System.Windows.Threading.DispatcherPriority priority, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidatePriority(valuetype System.Windows.Threading.DispatcherPriority priority, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidatePriority (priority As DispatcherPriority, parameterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidatePriority(System::Windows::Threading::DispatcherPriority priority, System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="static member ValidatePriority : System.Windows.Threading.DispatcherPriority * string -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ValidatePriority (priority, parameterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-598">Aby sprawdzić priorytet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-598">The priority to check.</span>
          </span>
        </param>
        <param name="parameterName">
          <span data-ttu-id="758b9-599">Ciąg, który zostanie zwrócony przez wyjątek, który występuje, gdy priorytet jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-599">A string that will be returned by the exception that occurs if the priority is invalid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-600">Określa, czy określony <see cref="T:System.Windows.Threading.DispatcherPriority" /> ma nieprawidłowy priorytet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-600">Determines whether the specified <see cref="T:System.Windows.Threading.DispatcherPriority" /> is a valid priority.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="758b9-601">
            <paramref name="priority" /> nie jest prawidłową <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-601">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcher.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758b9-602">Określa, czy wątek wywołujący ma dostęp do tego <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-602">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-603">Tylko wątek <xref:System.Windows.Threading.Dispatcher> jest tworzony na może uzyskać dostępu do <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="758b9-603">Only the thread the <xref:System.Windows.Threading.Dispatcher> is created on may access the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="758b9-604">Ta metoda jest publiczna; w związku z tym którymkolwiek wątku można sprawdzić, czy ma on dostęp do <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="758b9-604">This method is public; therefore, any thread can check to see whether it has access to the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="758b9-605">Różnica między <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> jest <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> zwraca wartość Boolean, jeśli wątek wywołujący nie ma dostępu do <xref:System.Windows.Threading.Dispatcher> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="758b9-605">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean if the calling thread does not have access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b9-606">W poniższym przykładzie użyto <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> ustalenie, czy wątek ma dostęp do wątku który <xref:System.Windows.Controls.Button> został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="758b9-606">The following example uses <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="758b9-607">Metoda korzysta z obiektu jako argument, który jest rzutowane na <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="758b9-607">The method takes an object as an argument, which is cast to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="758b9-608"><xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> Metoda <xref:System.Windows.Threading.Dispatcher> z <xref:System.Windows.Controls.Button> jest wywoływana, aby zweryfikować dostęp do wątku.</span><span class="sxs-lookup"><span data-stu-id="758b9-608">The <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  
  
 <span data-ttu-id="758b9-609">Jeśli wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher>, <xref:System.Windows.Controls.Button> jest aktualizowany po zalogowaniu się tylko do elementów członkowskich <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="758b9-609">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="758b9-610">Jeśli wątek wywołujący nie ma dostępu, <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="758b9-610">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  <span data-ttu-id="758b9-611">W tym przykładzie przechwytuje wyjątek i wypchnięcia delegata, który akceptuje <xref:System.Windows.Controls.Button> jako argument, a na <xref:System.Windows.Threading.Dispatcher> z <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="758b9-611">This example catches the exception and pushes a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="758b9-612">To <xref:System.Windows.Threading.Dispatcher> będzie wykonywać zadania aktualizacji <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="758b9-612">This <xref:System.Windows.Threading.Dispatcher> will do the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccessverifyaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="758b9-613">Wątek wywołujący nie ma dostępu do tego <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-613">The calling thread does not have access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Yield">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="758b9-614">Tworzy obiekt oczekujący asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-614">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield();" />
      <MemberSignature Language="F#" Value="static member Yield : unit -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758b9-615">Tworzy obiekt oczekujący asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-615">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-616">Oczekujący obiekt asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-616">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-617">Ta metoda umożliwia możesz tymczasowo zwolnienia Kontrola wykonywania do bieżącego dyspozytora, jest on wykonywać inne zadania, takie jak przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="758b9-617">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="758b9-618">Użyj `await`, lub `Await` w języku Visual Basic, operator wartości zwracanej, aby powrócić do bieżącego dyspozytora formantu.</span><span class="sxs-lookup"><span data-stu-id="758b9-618">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="758b9-619">Użyj tej metody, jeśli chcesz nadać szansy przetwarzania zdarzeń, gdy aplikacji jest w sposób pracy w wątku interfejsu użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="758b9-619">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="758b9-620">Na przykład można tej metody w pętli długotrwałe, która aktualizuje formantu.</span><span class="sxs-lookup"><span data-stu-id="758b9-620">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 <span data-ttu-id="758b9-621">Ta metoda jest odpowiednikiem wywołania <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> — metoda i przekazywanie <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="758b9-621">This method is equivalent to calling the <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> method and passing in <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield (priority As DispatcherPriority) As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="static member Yield : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="758b9-622">Priorytet, w którym można zaplanować kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-622">The priority at which to schedule the continuation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758b9-623">Tworzy obiekt oczekujący asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-623">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
          <span data-ttu-id="758b9-624">O określonym priorytecie harmonogramu pracy, który występuje, gdy formant zwraca kod oczekiwanie na wynik tej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-624">The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758b9-625">Oczekujący obiekt asynchronicznie daje formantu do bieżącego dyspozytora i zapewnia dyspozytora można przetwarzać inne zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758b9-625">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b9-626">Ta metoda umożliwia możesz tymczasowo zwolnienia Kontrola wykonywania do bieżącego dyspozytora, jest on wykonywać inne zadania, takie jak przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="758b9-626">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="758b9-627">Użyj `await`, lub `Await` w języku Visual Basic, operator wartości zwracanej, aby powrócić do bieżącego dyspozytora formantu.</span><span class="sxs-lookup"><span data-stu-id="758b9-627">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="758b9-628">Użyj tej metody, jeśli chcesz nadać szansy przetwarzania zdarzeń, gdy aplikacji jest w sposób pracy w wątku interfejsu użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="758b9-628">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="758b9-629">Na przykład można tej metody w pętli długotrwałe, która aktualizuje formantu.</span><span class="sxs-lookup"><span data-stu-id="758b9-629">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>