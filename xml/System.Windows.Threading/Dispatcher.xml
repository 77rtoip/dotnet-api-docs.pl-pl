<Type Name="Dispatcher" FullName="System.Windows.Threading.Dispatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d486d574a6809448fc2fa2979413fc2f42880f3" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52199926" /></Metadata><TypeSignature Language="C#" Value="public sealed class Dispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Dispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.Dispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Dispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dispatcher sealed" />
  <TypeSignature Language="F#" Value="type Dispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9826f-101">Udostępnia usługi zarządzania kolejki elementów roboczych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-101">Provides services for managing the queue of work items for a thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-102"><xref:System.Windows.Threading.Dispatcher> Przechowuje priorytetami kolejki elementów roboczych dla określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-102">The <xref:System.Windows.Threading.Dispatcher> maintains a prioritized queue of work items for a specific thread.</span></span>  
  
 <span data-ttu-id="9826f-103">Gdy <xref:System.Windows.Threading.Dispatcher> jest tworzony w wątku, staje się tylko <xref:System.Windows.Threading.Dispatcher> , może być skojarzony z wątkiem, nawet wtedy, gdy <xref:System.Windows.Threading.Dispatcher> zostanie zamknięta.</span><span class="sxs-lookup"><span data-stu-id="9826f-103">When a <xref:System.Windows.Threading.Dispatcher> is created on a thread, it becomes the only <xref:System.Windows.Threading.Dispatcher> that can be associated with the thread, even if the <xref:System.Windows.Threading.Dispatcher> is shut down.</span></span>  
  
 <span data-ttu-id="9826f-104">Jeśli spróbujesz uzyskać <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> dla bieżącego wątku i <xref:System.Windows.Threading.Dispatcher> nie jest skojarzony z wątkiem, <xref:System.Windows.Threading.Dispatcher> zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-104">If you attempt to get the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> for the current thread and a <xref:System.Windows.Threading.Dispatcher> is not associated with the thread, a <xref:System.Windows.Threading.Dispatcher> will be created.</span></span> <span data-ttu-id="9826f-105">A <xref:System.Windows.Threading.Dispatcher> również jest tworzony podczas tworzenia <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="9826f-105">A <xref:System.Windows.Threading.Dispatcher> is also created when you create a <xref:System.Windows.Threading.DispatcherObject>.</span></span> <span data-ttu-id="9826f-106">Jeśli tworzysz <xref:System.Windows.Threading.Dispatcher> w wątku tła, pamiętaj zamknąć Dyspozytor przed opuszczeniem wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-106">If you create a <xref:System.Windows.Threading.Dispatcher> on a background thread, be sure to shut down the dispatcher before exiting the thread.</span></span>  
  
 <span data-ttu-id="9826f-107">Jeśli <xref:System.Windows.Threading.Dispatcher> ma to miejsce w dół, go nie można uruchomić ponownie.</span><span class="sxs-lookup"><span data-stu-id="9826f-107">If a <xref:System.Windows.Threading.Dispatcher> is shut down, it cannot be restarted.</span></span>  
  
 <span data-ttu-id="9826f-108">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], <xref:System.Windows.Threading.DispatcherObject> może zostać oceniony jedynie przez <xref:System.Windows.Threading.Dispatcher> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-108">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], a <xref:System.Windows.Threading.DispatcherObject> can only be accessed by the <xref:System.Windows.Threading.Dispatcher> it is associated with.</span></span>  <span data-ttu-id="9826f-109">Na przykład wątku w tle nie może zaktualizować zawartość <xref:System.Windows.Controls.Button> skojarzony z <xref:System.Windows.Threading.Dispatcher> na [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-109">For example, a background thread cannot update the contents of a <xref:System.Windows.Controls.Button> that is associated with the <xref:System.Windows.Threading.Dispatcher> on the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="9826f-110">Aby wątku tła w celu uzyskania dostępu do <xref:System.Windows.Controls.ContentControl.Content%2A> właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-110">In order for the background thread to access the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="9826f-111">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-111">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="9826f-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-113">Operacja zostanie dodany do kolejki <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-113">The operation is added to the queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-114">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana w <xref:System.Windows.Threading.Dispatcher> , został zamknięty, stan właściwości zwracanego <xref:System.Windows.Threading.DispatcherOperation> ustawiono <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="9826f-114">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 <span data-ttu-id="9826f-115">Wszystkie metody na <xref:System.Windows.Threading.Dispatcher>, z wyjątkiem produktów <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, są bezwątkowy.</span><span class="sxs-lookup"><span data-stu-id="9826f-115">All of the methods on <xref:System.Windows.Threading.Dispatcher>, with the exception of <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, are free-threaded.</span></span>  
  
 <span data-ttu-id="9826f-116">Obiekty, które wynikają z <xref:System.Windows.Threading.DispatcherObject> koligacji wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-116">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="9826f-117">Obiekty, które wynikają z <xref:System.Windows.Freezable> są bezwątkowy gdy są one zablokowane.</span><span class="sxs-lookup"><span data-stu-id="9826f-117">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="9826f-118">Aby uzyskać więcej informacji, zobacz [Przegląd obiektów Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9826f-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-119">Poniższy przykład pokazuje, jak umieścić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="9826f-119">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="9826f-120">Aby uzyskać pełny kod źródłowy w tym przykładzie, zobacz [Single-Threaded aplikacji z przykładem obliczania długotrwałych](https://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="9826f-120">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](https://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="9826f-121">Po pierwsze delegat jest tworzony, który akceptuje żadnych argumentów.</span><span class="sxs-lookup"><span data-stu-id="9826f-121">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="9826f-122">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-122">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="9826f-123">To wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> przyjmuje dwa parametry: priorytet, który jest ustawiona na <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>i wywołanie zwrotne, które są przekazywane za pośrednictwem wystąpienia delegata `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="9826f-123">This call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160038"><span data-ttu-id="9826f-124">Aplikacja jednowątkowa z przykładem obliczania długotrwałych</span><span class="sxs-lookup"><span data-stu-id="9826f-124">Single-Threaded Application with Long-Running Calculation Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9826f-125">Asynchronicznie wykonuje delegata w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-125">Executes a delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-126">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-126">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-127">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-127">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-128">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-128">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-129">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-129">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-130"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-130"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-131">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-131">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna; w związku z tym formant powraca niezwłocznie do obiektu wywołującego po jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="9826f-133"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym, kiedy delegat jest w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-133"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="9826f-134"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów interakcji z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="9826f-134">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="9826f-135">Zmiana <xref:System.Windows.Threading.DispatcherPriority> delegata się oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="9826f-135">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-136">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-136">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-137">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-137">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="9826f-138">Uzyskiwanie wartości, która delegata zwraca się po nim jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="9826f-138">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="9826f-139">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, zostaną one wykonane w porządku wywołania zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="9826f-139">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="9826f-140">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana w <xref:System.Windows.Threading.Dispatcher> , został zamknięty, stan właściwości zwracanego <xref:System.Windows.Threading.DispatcherOperation> ustawiono <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="9826f-140">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="9826f-141">Delegat do metody, która przyjmuje parametrów określonych w <paramref name="args" />, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-141">The delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-142">Tablica obiektów przekazywane jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-142">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="9826f-143">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-143">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9826f-144">Wykonuje określonego delegata asynchronicznie z określonymi argumentami w wątku, który <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="9826f-144">Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span></span></summary>
        <returns><span data-ttu-id="9826f-145">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-145">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-146"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów interakcji z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="9826f-146">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="9826f-147">Zmiana <xref:System.Windows.Threading.DispatcherPriority> delegata się oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="9826f-147">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-148">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-148">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-149">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-149">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="9826f-150">Uzyskiwanie wartości, która delegata zwraca się po nim jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="9826f-150">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="9826f-151"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna; w związku z tym formant powraca niezwłocznie do obiektu wywołującego po jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-151"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="9826f-152">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-152">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="9826f-153">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-153">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="9826f-154">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-154">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="9826f-155">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-155">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="9826f-156"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-156"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="9826f-157">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-157">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-158">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana w <xref:System.Windows.Threading.Dispatcher> , został zamknięty, stan właściwości zwracanego <xref:System.Windows.Threading.DispatcherOperation> ustawiono <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="9826f-158">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-159">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-159">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-160">Delegowany do metody, która nie przyjmuje żadnych argumentów, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-160">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="9826f-161">Wykonuje określonego delegata asynchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-161">Executes the specified delegate asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-162">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-162">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-163">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, zostaną one wykonane w porządku wywołania zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="9826f-163">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="9826f-164"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym, kiedy delegat jest w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-164"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="9826f-165"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów interakcji z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="9826f-165">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="9826f-166">Zmiana <xref:System.Windows.Threading.DispatcherPriority> delegata się oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="9826f-166">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-167">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-167">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-168">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-168">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="9826f-169">Uzyskiwanie wartości, która delegata zwraca się po nim jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="9826f-169">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="9826f-170"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna; w związku z tym formant powraca niezwłocznie do obiektu wywołującego po jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-170"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="9826f-171">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-171">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-172">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-172">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-173">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-173">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-174">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-174">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-175"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-175"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-176">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-176">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-177">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana w <xref:System.Windows.Threading.Dispatcher> , został zamknięty, stan właściwości zwracanego <xref:System.Windows.Threading.DispatcherOperation> ustawiono <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="9826f-177">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-178">Poniższy przykład pokazuje, jak umieścić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="9826f-178">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="9826f-179">Aby uzyskać pełny kod źródłowy w tym przykładzie, zobacz [Single-Threaded aplikacji z przykładem obliczania długotrwałych](https://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="9826f-179">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](https://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="9826f-180">Po pierwsze delegat jest tworzony, który akceptuje żadnych argumentów.</span><span class="sxs-lookup"><span data-stu-id="9826f-180">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="9826f-181">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-181">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="9826f-182">Ponieważ każdy <xref:System.Windows.Threading.DispatcherObject> ma właściwość, która zwraca <xref:System.Windows.Threading.Dispatcher> jest skojarzony z żądaną <xref:System.Windows.Threading.Dispatcher> uzyskuje się przez badanie <xref:System.Windows.Threading.DispatcherObject>, w tym przypadku <xref:System.Windows.Controls.Button> o nazwie `startStopButton`.</span><span class="sxs-lookup"><span data-stu-id="9826f-182">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Button> named `startStopButton`.</span></span>   <span data-ttu-id="9826f-183">Wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> przyjmuje dwa parametry: priorytet, który jest ustawiona na <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>i wywołanie zwrotne, które są przekazywane za pośrednictwem wystąpienia delegata `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="9826f-183">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-184"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-184"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-185"><paramref name="priority" /> nie jest prawidłowym <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-185"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160038"><span data-ttu-id="9826f-186">Aplikacja jednowątkowa z przykładem obliczania długotrwałych</span><span class="sxs-lookup"><span data-stu-id="9826f-186">Single-Threaded Application with Long-Running Calculation Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="9826f-187">Delegat do metody, która przyjmuje parametrów określonych w <paramref name="args" />, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-187">The delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-188">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-188">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-189">Tablica obiektów przekazywane jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-189">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="9826f-190">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-190">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9826f-191">Wykonuje określonego delegata asynchronicznie z określonymi argumentami, priorytetem określony w wątku, który <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="9826f-191">Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span></span></summary>
        <returns><span data-ttu-id="9826f-192">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-192">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-193"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów interakcji z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="9826f-193">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="9826f-194">Zmiana <xref:System.Windows.Threading.DispatcherPriority> delegata się oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="9826f-194">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-195">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-195">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-196">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-196">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="9826f-197">Uzyskiwanie wartości, która delegata zwraca się po nim jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="9826f-197">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="9826f-198"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna; w związku z tym formant powraca niezwłocznie do obiektu wywołującego po jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-198"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="9826f-199">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-199">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="9826f-200">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-200">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="9826f-201">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-201">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="9826f-202">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-202">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="9826f-203"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-203"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="9826f-204">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-204">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-205">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana w <xref:System.Windows.Threading.Dispatcher> , został zamknięty, stan właściwości zwracanego <xref:System.Windows.Threading.DispatcherOperation> ustawiono <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="9826f-205">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-206">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-206">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-207">Obiekt delegowany do metody, która przyjmuje jeden argument, który zostanie przypisany do <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-207">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="9826f-208">Obiekt do przekazania jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-208">The object to pass as an argument to the specified method.</span></span></param>
        <summary><span data-ttu-id="9826f-209">Wykonuje określonego delegata asynchronicznie przy określonym priorytecie i określony argument na wątek <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-209">Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-210">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-210">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-211">`Arg` może być `null` razie bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="9826f-211">`Arg` can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="9826f-212"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym, kiedy delegat jest w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-212"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="9826f-213"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów interakcji z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="9826f-213">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="9826f-214">Zmiana <xref:System.Windows.Threading.DispatcherPriority> delegata się oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="9826f-214">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-215">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-215">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-216">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-216">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="9826f-217">Uzyskiwanie wartości, która delegata zwraca się po nim jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="9826f-217">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="9826f-218"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna; w związku z tym formant powraca niezwłocznie do obiektu wywołującego po jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-218"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="9826f-219">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-219">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-220">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-220">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-221">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-221">In order for the background thread to access the content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-222">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-222">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-223"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-223"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-224">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-224">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-225">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, zostaną one wykonane w porządku wywołania zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="9826f-225">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="9826f-226">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana w <xref:System.Windows.Threading.Dispatcher> , został zamknięty, stan właściwości zwracanego <xref:System.Windows.Threading.DispatcherOperation> ustawiono <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="9826f-226">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-227">Poniższy przykład pokazuje, jak umieścić operacji na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="9826f-227">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="9826f-228">Po pierwsze obiekt delegowany jest tworzony, który przyjmuje jeden argument, w tym przypadku ciąg.</span><span class="sxs-lookup"><span data-stu-id="9826f-228">First, a delegate is created that accepts one argument, in this case a string.</span></span>  
  
 [!code-csharp[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdelegates)]
 [!code-vb[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdelegates)]  
  
 <span data-ttu-id="9826f-229">Następnie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-229">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> is called.</span></span>  <span data-ttu-id="9826f-230">Ponieważ każdy <xref:System.Windows.Threading.DispatcherObject> ma właściwość, która zwraca <xref:System.Windows.Threading.Dispatcher> jest skojarzony z żądaną <xref:System.Windows.Threading.Dispatcher> uzyskuje się przez badanie <xref:System.Windows.Threading.DispatcherObject>, w tym przypadku <xref:System.Windows.Controls.Grid> o nazwie `tomorrowsWeather`.</span><span class="sxs-lookup"><span data-stu-id="9826f-230">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Grid> named `tomorrowsWeather`.</span></span> <span data-ttu-id="9826f-231">Wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> przyjmuje trzy parametry: priorytet, który jest ustawiona na <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; wywołanie zwrotne, które są przekazywane za pośrednictwem wystąpienia delegata `OneArgDelegate`; i parametry o nazwie `weather`, czyli argument wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-231">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> takes three parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; the callback, which is passed in through an instance of the delegate `OneArgDelegate`; and a string named `weather`, which is the argument for the callback.</span></span>  
  
 [!code-csharp[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdispatcheronearge)]
 [!code-vb[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdispatcheronearge)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-232"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-232"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-233"><paramref name="priority" /> nie jest prawidłowym <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-233"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160038"><span data-ttu-id="9826f-234">Aplikacja jednowątkowa z przykładem obliczania długotrwałych</span><span class="sxs-lookup"><span data-stu-id="9826f-234">Single-Threaded Application with Long-Running Calculation Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-235">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-235">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-236">Delegowany do metody, która przyjmuje wiele argumentów, który są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-236">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="9826f-237">Obiekt do przekazania jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-237">The object to pass as an argument to the specified method.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-238">Tablica obiektów przekazywane jako argumenty do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-238">An array of objects to pass as arguments to the specified method.</span></span></param>
        <summary><span data-ttu-id="9826f-239">Wykonuje określonego delegata asynchronicznie określony priorytet i z określoną tablicę argumentów w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-239">Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-240">Obiekt, który jest zwracany natychmiast po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-240">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-241">`arg` Parametr może być `null` razie bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="9826f-241">The `arg` parameter can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="9826f-242"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Zwraca <xref:System.Windows.Threading.DispatcherOperation> obiektu, który może służyć do interakcji z obiektem delegowanym, kiedy delegat jest w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-242"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="9826f-243"><xref:System.Windows.Threading.DispatcherOperation> Obiektu zwróconego przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> można używać na kilka sposobów interakcji z określonym obiektem delegowanym, takich jak:</span><span class="sxs-lookup"><span data-stu-id="9826f-243">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="9826f-244">Zmiana <xref:System.Windows.Threading.DispatcherPriority> delegata się oczekujące wykonanie zdarzeń w kolejce.</span><span class="sxs-lookup"><span data-stu-id="9826f-244">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-245">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-245">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="9826f-246">Oczekiwanie na delegata do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-246">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="9826f-247">Uzyskiwanie wartości, która delegata zwraca się po nim jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="9826f-247">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="9826f-248"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna; w związku z tym formant powraca niezwłocznie do obiektu wywołującego po jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-248"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="9826f-249">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-249">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-250">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-250">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-251">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-251">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-252">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-252">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-253"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-253"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-254">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-254">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-255">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań w tym samym <xref:System.Windows.Threading.DispatcherPriority>, zostaną one wykonane w porządku wywołania zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="9826f-255">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="9826f-256">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana w <xref:System.Windows.Threading.Dispatcher> , został zamknięty, stan właściwości zwracanego <xref:System.Windows.Threading.DispatcherOperation> ustawiono <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="9826f-256">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-257"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-257"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-258"><see cref="T:System.Windows.Threading.DispatcherPriority" /> nie jest prawidłową priorytetu.</span><span class="sxs-lookup"><span data-stu-id="9826f-258"><see cref="T:System.Windows.Threading.DispatcherPriority" /> is not a valid priority.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160038"><span data-ttu-id="9826f-259">Aplikacja jednowątkowa z przykładem obliczania długotrwałych</span><span class="sxs-lookup"><span data-stu-id="9826f-259">Single-Threaded Application with Long-Running Calculation Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeShutdown">
      <MemberSignature Language="C#" Value="public void BeginInvokeShutdown (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginInvokeShutdown(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInvokeShutdown (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInvokeShutdown(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.BeginInvokeShutdown : System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.BeginInvokeShutdown priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-260">Priorytet, od którego należy rozpocząć zamykanie Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-260">The priority at which to begin shutting down the dispatcher.</span></span></param>
        <summary><span data-ttu-id="9826f-261">Zamknięcie inicjuje <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="9826f-261">Initiates shutdown of the <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-262"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> żądania bez ograniczeń uprawnień interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-262"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="9826f-263">Gdy <xref:System.Windows.Threading.Dispatcher> rozpoczyna się do zamknięcia, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest równa `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-263">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-264"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć do momentu rozwija kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-264">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="9826f-265">Po zakończeniu dyspozytor, zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-265">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-266">Po rozpoczęciu procesu zamykania wszystkie oczekujące robocze elementów w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="9826f-266">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9826f-267">Aby uzyskać zamykanie Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-267">for shutting down the dispatcher.</span></span>  <span data-ttu-id="9826f-268">Skojarzone wyliczeń:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9826f-268">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcher.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9826f-269">Określa, czy wątek wywołujący jest wątek skojarzony z tym <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-269">Determines whether the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <returns><span data-ttu-id="9826f-270"><see langword="true" /> Jeśli wątek wywołujący jest wątek skojarzony z tym <see cref="T:System.Windows.Threading.Dispatcher" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-270"><see langword="true" /> if the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-271">Tylko <xref:System.Windows.Threading.Dispatcher> , <xref:System.Windows.Threading.DispatcherObject> jest tworzony na mogą uzyskiwać dostęp do obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-271">Only the <xref:System.Windows.Threading.Dispatcher> that a <xref:System.Windows.Threading.DispatcherObject> is created on may access the object.</span></span>  <span data-ttu-id="9826f-272">Użyj <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> dostępu do obiektu z innego wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-272">Use <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> to access the object from a different thread.</span></span>  
  
 <span data-ttu-id="9826f-273"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> może być wywołana z żadnym z wątków.</span><span class="sxs-lookup"><span data-stu-id="9826f-273"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> can be called from any thread.</span></span>  
  
 <span data-ttu-id="9826f-274">Różnica między <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> jest <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> zwraca wartość Boolean wskazującą, czy wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="9826f-274">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean indicating whether the calling thread has access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-275">W poniższym przykładzie użyto <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> do określenia, czy wątek ma dostęp do <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="9826f-275">The following example uses <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> to determine whether a thread has access to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="9826f-276"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> Metody <xref:System.Windows.Threading.Dispatcher> skojarzony <xref:System.Windows.Controls.Button> jest wywoływana, aby zweryfikować dostęp do wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-276">The <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> associated with the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="9826f-277">Jeśli wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher>, <xref:System.Windows.Controls.Button> jest aktualizowany, uzyskując dostęp do elementów członkowskich <xref:System.Windows.Controls.Button>; w przeciwnym razie delegata, który akceptuje <xref:System.Windows.Controls.Button> jako argument, jest umieszczany na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="9826f-277">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is placed onto the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="9826f-278"><xref:System.Windows.Threading.Dispatcher> Oddeleguje pracy aktualizowania <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="9826f-278">The <xref:System.Windows.Threading.Dispatcher> will delegate the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccesscheckaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccesscheckaccess)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDispatcher">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher CurrentDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Threading.Dispatcher CurrentDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Threading::Dispatcher ^ CurrentDispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-279">Pobiera <see cref="T:System.Windows.Threading.Dispatcher" /> wątku w trakcie wykonywania i tworzy nową <see cref="T:System.Windows.Threading.Dispatcher" /> Jeśli nie jest już skojarzony z wątkiem.</span><span class="sxs-lookup"><span data-stu-id="9826f-279">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the thread currently executing and creates a new <see cref="T:System.Windows.Threading.Dispatcher" /> if one is not already associated with the thread.</span></span></summary>
        <value><span data-ttu-id="9826f-280">Dyspozytor skojarzone z bieżącym wątkiem.</span><span class="sxs-lookup"><span data-stu-id="9826f-280">The dispatcher associated with the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-281">Jeśli <xref:System.Windows.Threading.Dispatcher> nie jest skojarzony z bieżącym wątkiem nową <xref:System.Windows.Threading.Dispatcher> zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-281">If a <xref:System.Windows.Threading.Dispatcher> is not associated with the current thread, a new <xref:System.Windows.Threading.Dispatcher> will be created.</span></span>  <span data-ttu-id="9826f-282">To nie jest w przypadku <xref:System.Windows.Threading.Dispatcher.FromThread%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-282">This is not the case with the <xref:System.Windows.Threading.Dispatcher.FromThread%2A> method.</span></span>  <span data-ttu-id="9826f-283"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> zwróci `null` Jeśli nie jest dyspozytora, skojarzone z określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-283"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> will return `null` if there is not a dispatcher associated with the specified thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableProcessing">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableProcessing () As DispatcherProcessingDisabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherProcessingDisabled DisableProcessing();" />
      <MemberSignature Language="F#" Value="member this.DisableProcessing : unit -&gt; System.Windows.Threading.DispatcherProcessingDisabled" Usage="dispatcher.DisableProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherProcessingDisabled</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9826f-284">Przetwarzanie wyłącza <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-284">Disables processing of the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
        <returns><span data-ttu-id="9826f-285">Struktura użyta, aby ponownie włączyć dyspozytora przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="9826f-285">A structure used to re-enable dispatcher processing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-286">Wyłączenie dyspozytora przetwarzania jest zaawansowane metody, która ma na celu wyeliminowanie prawdopodobieństwo niepowiązanych współużytkowania wątkowości.</span><span class="sxs-lookup"><span data-stu-id="9826f-286">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="9826f-287">Efekty wyłączenia przetwarzania są następujące:</span><span class="sxs-lookup"><span data-stu-id="9826f-287">The effects of disabling processing are as follows:</span></span>  
  
-   <span data-ttu-id="9826f-288">Blokady CLR nie będzie wewnętrznie pompy komunikatów.</span><span class="sxs-lookup"><span data-stu-id="9826f-288">CLR locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="9826f-289"><xref:System.Windows.Threading.DispatcherFrame> obiekty nie są dozwolone ma zostać wypchnięty.</span><span class="sxs-lookup"><span data-stu-id="9826f-289"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="9826f-290">Przetwarzanie komunikatu nie jest dozwolone.</span><span class="sxs-lookup"><span data-stu-id="9826f-290">Message processing is not permitted.</span></span>  
  
 <span data-ttu-id="9826f-291"><xref:System.Windows.Threading.DispatcherProcessingDisabled> Struktury, która <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> zwraca, gdy wywoływana jest można ponownie włączyć dyspozytora przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="9826f-291">The <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns when it is called can be used to re-enable dispatcher processing.</span></span>  <span data-ttu-id="9826f-292">Wywoływanie <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> na <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury ponownie włączy przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="9826f-292">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure re-enables processing.</span></span>  
  
 <span data-ttu-id="9826f-293"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> można wywołać tylko w wątku <xref:System.Windows.Threading.Dispatcher> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-293"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> can only be called on the thread the <xref:System.Windows.Threading.Dispatcher> is associated with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-294">Poniższy przykład pokazuje, jak wyłączyć dyspozytora przetwarzania i ponownie włączyć dyspozytora przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="9826f-294">The following example shows how to disable dispatcher processing and re-enable dispatcher processing.</span></span>  <span data-ttu-id="9826f-295"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> jest wywoływana w **przy użyciu** instrukcji.</span><span class="sxs-lookup"><span data-stu-id="9826f-295"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.</span></span>  <span data-ttu-id="9826f-296"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> Zwraca <xref:System.Windows.Threading.DispatcherProcessingDisabled> strukturę, która jest używana jako obiekt być usunięte, gdy **przy użyciu** block zostanie zakończone.</span><span class="sxs-lookup"><span data-stu-id="9826f-296"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that is used as the object to be disposed when the **using** block finishes.</span></span>  <span data-ttu-id="9826f-297">Gdy <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> jest wywoływana w <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury, dyspozytora przetwarzanie zostanie ponownie włączony.</span><span class="sxs-lookup"><span data-stu-id="9826f-297">When <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> is called on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure, dispatcher processing is re-enabled.</span></span>  
  
 [!code-csharp[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdisableprocessing)]
 [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdisableprocessing)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAllFrames">
      <MemberSignature Language="C#" Value="public static void ExitAllFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExitAllFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExitAllFrames ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExitAllFrames();" />
      <MemberSignature Language="F#" Value="static member ExitAllFrames : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ExitAllFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9826f-298">Żądania, które wyjść wszystkie ramki, w tym zagnieżdżone ramki.</span><span class="sxs-lookup"><span data-stu-id="9826f-298">Requests that all frames exit, including nested frames.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9826f-299">Aby uzyskać wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-299">for calling this method.</span></span> <span data-ttu-id="9826f-300">Skojarzone wyliczeń:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9826f-300">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
        <altmember cref="T:System.Windows.Threading.DispatcherFrame" />
      </Docs>
    </Member>
    <Member MemberName="FromThread">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher FromThread (System.Threading.Thread thread);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Threading.Dispatcher FromThread(class System.Threading.Thread thread) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::Dispatcher ^ FromThread(System::Threading::Thread ^ thread);" />
      <MemberSignature Language="F#" Value="static member FromThread : System.Threading.Thread -&gt; System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.FromThread thread" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="System.Threading.Thread" />
      </Parameters>
      <Docs>
        <param name="thread"><span data-ttu-id="9826f-301">Wątek, aby uzyskać <see cref="T:System.Windows.Threading.Dispatcher" /> z.</span><span class="sxs-lookup"><span data-stu-id="9826f-301">The thread to obtain the <see cref="T:System.Windows.Threading.Dispatcher" /> from.</span></span></param>
        <summary><span data-ttu-id="9826f-302">Pobiera <see cref="T:System.Windows.Threading.Dispatcher" /> dla określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-302">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the specified thread.</span></span></summary>
        <returns><span data-ttu-id="9826f-303">Dyspozytor dla <paramref name="thread" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-303">The dispatcher for <paramref name="thread" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-304">W przypadku dispatcher nie jest dostępna dla określonego wątku `null` zostaną zwrócone.</span><span class="sxs-lookup"><span data-stu-id="9826f-304">If a dispatcher is not available for the specified thread, `null` will be returned.</span></span>  
  
 <span data-ttu-id="9826f-305"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> nie powoduje utworzenia <xref:System.Windows.Threading.Dispatcher> w wątku, który nie ma <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="9826f-305"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> does not create a <xref:System.Windows.Threading.Dispatcher> on a thread that does not have a <xref:System.Windows.Threading.Dispatcher>.</span></span>   <span data-ttu-id="9826f-306">Nowy <xref:System.Windows.Threading.Dispatcher> jest tworzony w wątku, który nie ma jeszcze <xref:System.Windows.Threading.Dispatcher> podczas próby pobrania <xref:System.Windows.Threading.Dispatcher> przy użyciu <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="9826f-306">A new <xref:System.Windows.Threading.Dispatcher> is created on a thread that does not already have a <xref:System.Windows.Threading.Dispatcher> when attempting to get the <xref:System.Windows.Threading.Dispatcher> by using the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownFinished">
      <MemberSignature Language="C#" Value="public bool HasShutdownFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownFinished" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownFinished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownFinished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownFinished : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-307">Określa, czy <see cref="T:System.Windows.Threading.Dispatcher" /> zakończył zamykanie.</span><span class="sxs-lookup"><span data-stu-id="9826f-307">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> has finished shutting down.</span></span></summary>
        <value><span data-ttu-id="9826f-308"><see langword="true" /> Jeśli Dyspozytor zakończył zamykanie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-308"><see langword="true" /> if the dispatcher has finished shutting down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-309">Gdy <xref:System.Windows.Threading.Dispatcher> rozpoczyna się do zamknięcia, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest równa `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-309">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-310"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie aż rozwija kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-310">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="9826f-311">Po zakończeniu dyspozytor, zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-311">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-312">Po rozpoczęciu procesu zamykania wszystkie oczekujące robocze elementów w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="9826f-312">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownStarted : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-313">Określa, czy <see cref="T:System.Windows.Threading.Dispatcher" /> jest zamykany.</span><span class="sxs-lookup"><span data-stu-id="9826f-313">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> is shutting down.</span></span></summary>
        <value><span data-ttu-id="9826f-314"><see langword="true" /> Jeśli <see cref="T:System.Windows.Threading.Dispatcher" /> Rozpoczęto zamykanie w dół, a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-314"><see langword="true" /> if the <see cref="T:System.Windows.Threading.Dispatcher" /> has started shutting down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-315">Gdy <xref:System.Windows.Threading.Dispatcher> rozpoczyna się do zamknięcia, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest równa `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-315">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-316"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć do momentu rozwija kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-316">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="9826f-317">Po zakończeniu dyspozytor, zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-317">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-318">Po rozpoczęciu procesu zamykania wszystkie oczekujące robocze elementów w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="9826f-318">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hooks">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherHooks Hooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.DispatcherHooks Hooks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Hooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hooks As DispatcherHooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherHooks ^ Hooks { System::Windows::Threading::DispatcherHooks ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Hooks : System.Windows.Threading.DispatcherHooks" Usage="System.Windows.Threading.Dispatcher.Hooks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherHooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-319">Pobiera kolekcję punktów zaczepienia, które zawierają informacje dodatkowe zdarzenia o <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-319">Gets the collection of hooks that provide additional event information about the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <value><span data-ttu-id="9826f-320">Punkty zaczepienia skojarzony z tym <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-320">The hooks associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-321"><xref:System.Windows.Threading.DispatcherHooks> Klasy zawiera zdarzenia dodatkowe informacje na temat <xref:System.Windows.Threading.Dispatcher>, takie jak czas <xref:System.Windows.Threading.Dispatcher> jest nieaktywna lub jeśli operacja ma ukończone.</span><span class="sxs-lookup"><span data-stu-id="9826f-321">The <xref:System.Windows.Threading.DispatcherHooks> class provides additional event information about the <xref:System.Windows.Threading.Dispatcher>, such as when the <xref:System.Windows.Threading.Dispatcher> is inactive or when an operation has competed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9826f-322">w celu uzyskania tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="9826f-322">for getting this property.</span></span>  <span data-ttu-id="9826f-323">Skojarzone wyliczeń:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9826f-323">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9826f-324">Określonego delegata jest wykonywana synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-324">Executes the specified delegate synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-325">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-325">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-326">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-326">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-327">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-327">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-328">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-328">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-329"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-329"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-330">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-330">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-331"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-331"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-332">Poniższy przykład umieszcza delegata na <xref:System.Windows.Threading.Dispatcher> na <xref:System.Windows.Threading.DispatcherPriority.Normal> przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-332">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action -&gt; unit" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="9826f-333">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-333">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="9826f-334">Wykonuje określony <see cref="T:System.Action" /> synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-334">Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action, priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="9826f-335">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-335">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-336">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-336">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="9826f-337">Wykonuje określony <see cref="T:System.Action" /> synchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-337">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="9826f-338">Obiekt delegowany do metody, która przyjmuje parametrów określonych w <paramref name="args" />, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-338">A delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-339">Tablica obiektów przekazywane jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-339">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="9826f-340">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-340">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9826f-341">Wykonuje określonego delegata z określonymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-341">Executes the specified delegate with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-342">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-342">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-343">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-343">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="9826f-344">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-344">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="9826f-345">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-345">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="9826f-346">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-346">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="9826f-347"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-347"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="9826f-348">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-348">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-349"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-349"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-350">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-350">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-351">Delegowany do metody, która nie przyjmuje żadnych argumentów, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-351">A delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="9826f-352">Wykonuje określonego delegata synchronicznie o określonym priorytecie w wątku, na którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-352">Executes the specified delegate synchronously at the specified priority on the thread on which the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-353">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-353">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-354">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-354">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-355">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-355">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-356">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-356">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-357">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-357">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-358"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-358"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-359">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-359">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-360"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-360"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-361">Poniższy przykład umieszcza delegata na <xref:System.Windows.Threading.Dispatcher> na <xref:System.Windows.Threading.DispatcherPriority.Normal> przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-361">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9826f-362"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-362"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-363"><paramref name="priority" /> nie jest prawidłową priorytetu.</span><span class="sxs-lookup"><span data-stu-id="9826f-363"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-364"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-364"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="9826f-365">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-365">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-366">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-366">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9826f-367">Obiekt, który wskazuje, czy anulować czynność.</span><span class="sxs-lookup"><span data-stu-id="9826f-367">An object that indicates whether to cancel the action.</span></span></param>
        <summary><span data-ttu-id="9826f-368">Wykonuje określony <see cref="T:System.Action" /> synchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-368">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="9826f-369">Obiekt delegowany do metody, która przyjmuje parametrów określonych w <paramref name="args" />, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-369">A delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="timeout"><span data-ttu-id="9826f-370">Maksymalna ilość czasu oczekiwania na ukończenie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="9826f-370">The maximum amount of time to wait for the operation to complete.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-371">Tablica obiektów przekazywane jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-371">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="9826f-372">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-372">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9826f-373">Wykonuje określonego delegata w zasięgu wyznaczonym czasie, o określonym priorytecie ze specyficznymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-373">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-374">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-374">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-375">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-375">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="9826f-376">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-376">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="9826f-377">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-377">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="9826f-378">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-378">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="9826f-379"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-379"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="9826f-380">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-380">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-381"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-381"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="9826f-382">Obiekt delegowany do metody, która przyjmuje parametrów określonych w <paramref name="args" />, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-382">A delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-383">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-383">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-384">Tablica obiektów przekazywane jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-384">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="9826f-385">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-385">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9826f-386">Wykonuje określonego delegata, o określonym priorytecie ze specyficznymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-386">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-387">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-387">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-388">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-388">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="9826f-389">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-389">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="9826f-390">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-390">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="9826f-391">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-391">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="9826f-392"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-392"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="9826f-393">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-393">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-394"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-394"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-395">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-395">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-396">Obiekt delegowany do metody, która przyjmuje jeden argument, który zostanie przypisany do <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-396">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="9826f-397">Obiekt, który można przekazać jako argument do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-397">An object to pass as an argument to the given method.</span></span></param>
        <summary><span data-ttu-id="9826f-398">Określonego delegata, o określonym priorytecie przy użyciu określonego argumentu jest wykonywana synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-398">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-399">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-399">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-400">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="9826f-400">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="9826f-401">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-401">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-402">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-402">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-403">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-403">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-404">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-404">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-405"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-405"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-406">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-406">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-407"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-407"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9826f-408"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-408"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-409"><paramref name="priority" /> nie jest prawidłową priorytetu.</span><span class="sxs-lookup"><span data-stu-id="9826f-409"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-410"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-410"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-411">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-411">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="9826f-412">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="9826f-412">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-413">Delegowany do metody, która nie przyjmuje żadnych argumentów, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-413">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="9826f-414">Wykonuje określonego delegata synchronicznie przy określonym priorytecie i określoną wartość limitu czasu w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-414">Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> was created.</span></span></summary>
        <returns><span data-ttu-id="9826f-415">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-415">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-416">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-416">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-417">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-417">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-418">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-418">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-419">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-419">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-420"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-420"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-421">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-421">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-422"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-422"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="9826f-423">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-423">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-424">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-424">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9826f-425">Obiekt, który wskazuje, czy anulować czynność.</span><span class="sxs-lookup"><span data-stu-id="9826f-425">An object that indicates whether to cancel the action.</span></span></param>
        <param name="timeout"><span data-ttu-id="9826f-426">Minimalna ilość czasu oczekiwania operacji uruchamiania.</span><span class="sxs-lookup"><span data-stu-id="9826f-426">The minimum amount of time to wait for the operation to start.</span></span></param>
        <summary><span data-ttu-id="9826f-427">Wykonuje określony <see cref="T:System.Action" /> synchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-427">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="9826f-428">Obiekt delegowany do metody, która przyjmuje parametrów określonych w <paramref name="args" />, które są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-428">A delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="timeout"><span data-ttu-id="9826f-429">Maksymalna ilość czasu oczekiwania na ukończenie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="9826f-429">The maximum amount of time to wait for the operation to complete.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-430">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-430">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-431">Tablica obiektów przekazywane jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-431">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="9826f-432">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-432">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9826f-433">Wykonuje określonego delegata w zasięgu wyznaczonym czasie, o określonym priorytecie ze specyficznymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-433">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-434">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-434">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-435">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-435">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="9826f-436">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-436">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="9826f-437">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-437">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="9826f-438">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-438">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="9826f-439"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-439"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="9826f-440">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-440">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-441"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-441"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-442">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-442">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-443">Delegowany do metody, która przyjmuje wiele argumentów, który są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-443">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="9826f-444">Obiekt, który można przekazać jako argument do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-444">An object to pass as an argument to the given method.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-445">Tablica obiektów przekazywane jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-445">An array of objects to pass as arguments to the given method.</span></span></param>
        <summary><span data-ttu-id="9826f-446">Wykonuje określonego delegata, o określonym priorytecie ze specyficznymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-446">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-447">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-447">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-448">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="9826f-448">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="9826f-449">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-449">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-450">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-450">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-451">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-451">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-452">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-452">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-453"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-453"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-454">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-454">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-455"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-455"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9826f-456"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-456"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-457"><paramref name="priority" /> nie jest prawidłową priorytetu.</span><span class="sxs-lookup"><span data-stu-id="9826f-457"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-458"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-458"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-459">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-459">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="9826f-460">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="9826f-460">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-461">Delegowany do metody, która przyjmuje wiele argumentów, który są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-461">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="9826f-462">Obiekt, który można przekazać jako argument do danej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-462">An object to pass as an argument to the given method.</span></span> <span data-ttu-id="9826f-463">Może to być <see langword="null" /> razie bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="9826f-463">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="9826f-464">Określonego delegata, o określonym priorytecie przy użyciu określonego argumentu jest wykonywana synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-464">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-465">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-465">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-466">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="9826f-466">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="9826f-467">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-467">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-468">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-468">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-469">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-469">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-470">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-470">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-471"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-471"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-472">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-472">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-473"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-473"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9826f-474"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-474"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-475"><paramref name="priority" /> nie jest prawidłową priorytetu.</span><span class="sxs-lookup"><span data-stu-id="9826f-475"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-476"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-476"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-477">Priorytet, względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń, podana metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-477">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="9826f-478">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="9826f-478">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="9826f-479">Delegowany do metody, która przyjmuje wiele argumentów, który są wypychane na <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-479">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="9826f-480">Obiekt, który można przekazać jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-480">An object to pass as an argument to the specified method.</span></span></param>
        <param name="args"><span data-ttu-id="9826f-481">Tablica obiektów przekazywane jako argumenty do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-481">An array of objects to pass as arguments to the specified method.</span></span></param>
        <summary><span data-ttu-id="9826f-482">Wykonuje określonego delegata, o określonym priorytecie ze specyficznymi argumentami synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-482">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-483">Wartość zwrócona przez delegata wywoływanego lub <see langword="null" /> Jeśli delegat nie zwraca żadnej wartości.</span><span class="sxs-lookup"><span data-stu-id="9826f-483">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-484">`Arg` może być `null` Jeśli argument nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="9826f-484">`Arg` can be `null` if an argument is not needed.</span></span>  
  
 <span data-ttu-id="9826f-485">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], wątek, który utworzył <xref:System.Windows.Threading.DispatcherObject> mogą uzyskiwać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="9826f-485">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="9826f-486">Na przykład wątku w tle, która zostanie rozszerzona z wątku głównego interfejsu użytkownika nie można zaktualizować zawartości <xref:System.Windows.Controls.Button> utworzony przez wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-486">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="9826f-487">Aby wątku w tle do dostępu do zawartości właściwość <xref:System.Windows.Controls.Button>, wątku w tle musi delegować pracy <xref:System.Windows.Threading.Dispatcher> skojarzony wątek interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-487">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="9826f-488">Jest to realizowane przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-488">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="9826f-489"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest synchroniczne i <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="9826f-489"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="9826f-490">Operacja zostanie dodany do kolejki zdarzeń <xref:System.Windows.Threading.Dispatcher> w określonym <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="9826f-490">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="9826f-491"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> jest to operacja synchroniczna; w związku z tym formant nie powróci do obiektu wywołującego, dopóki nie po powrocie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="9826f-491"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9826f-492"><paramref name="priority" /> jest równa <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-492"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-493"><paramref name="priority" /> nie jest prawidłowym <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-493"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-494"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-494"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; -&gt; 'Result" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="9826f-495">Typ wartości zwracanej określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="9826f-495">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="9826f-496">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-496">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="9826f-497">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-497">Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-498">Wartość zwrócona przez obiekt `callback`.</span><span class="sxs-lookup"><span data-stu-id="9826f-498">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="9826f-499">Typ wartości zwracanej określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="9826f-499">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="9826f-500">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-500">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-501">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-501">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="9826f-502">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-502">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-503">Wartość zwrócona przez obiekt `callback`.</span><span class="sxs-lookup"><span data-stu-id="9826f-503">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="9826f-504">Typ wartości zwracanej określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="9826f-504">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="9826f-505">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-505">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-506">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-506">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9826f-507">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="9826f-507">An object that indicates whether to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="9826f-508">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-508">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-509">Wartość zwrócona przez obiekt `callback`.</span><span class="sxs-lookup"><span data-stu-id="9826f-509">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="9826f-510">Typ wartości zwracanej określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="9826f-510">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="9826f-511">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-511">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-512">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-512">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9826f-513">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="9826f-513">An object that indicates whether to cancel the operation.</span></span></param>
        <param name="timeout"><span data-ttu-id="9826f-514">Minimalna ilość czasu oczekiwania operacji uruchamiania.</span><span class="sxs-lookup"><span data-stu-id="9826f-514">The minimum amount of time to wait for the operation to start.</span></span></param>
        <summary><span data-ttu-id="9826f-515">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-515">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-516">Wartość zwrócona przez obiekt `callback`.</span><span class="sxs-lookup"><span data-stu-id="9826f-516">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9826f-517">Asynchronicznie wykonuje określonego delegata w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-517">Executes the specified delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="9826f-518">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-518">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="9826f-519">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-519">Executes the specified <see cref="T:System.Action" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-520">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-520">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action, priority As DispatcherPriority) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="9826f-521">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-521">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-522">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-522">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="9826f-523">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-523">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-524">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-524">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="9826f-525">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-525">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-526">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-526">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9826f-527">Obiekt, który wskazuje, czy anulować czynność.</span><span class="sxs-lookup"><span data-stu-id="9826f-527">An object that indicates whether to cancel the action.</span></span></param>
        <summary><span data-ttu-id="9826f-528">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-528">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-529">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-529">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult)) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="9826f-530">Typ wartości zwracanej określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="9826f-530">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="9826f-531">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-531">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="9826f-532">Wykonuje określony <see cref="T:System.Func`1" /> asynchronicznie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-532">Executes the specified <see cref="T:System.Func`1" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-533">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-533">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="9826f-534">Typ wartości zwracanej określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="9826f-534">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="9826f-535">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-535">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-536">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-536">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="9826f-537">Wykonuje określony <see cref="T:System.Func`1" /> asynchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-537">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-538">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-538">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="9826f-539">Typ wartości zwracanej określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="9826f-539">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="9826f-540">Delegat wywołania za pośrednictwem Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-540">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="9826f-541">Priorytet, który określa, w jakiej kolejności określonego wywołania zwrotnego jest wywoływana względem innych oczekujące operacje w <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-541">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9826f-542">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="9826f-542">An object that indicates whether to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="9826f-543">Wykonuje określony <see cref="T:System.Func`1" /> asynchronicznie o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-543">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="9826f-544">Obiekt, który jest zwracany natychmiast po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> nosi nazwę, która może służyć do interakcji z obiektem delegowanym, ponieważ jest oczekiwanie na wykonanie w zdarzeniu kolejki.</span><span class="sxs-lookup"><span data-stu-id="9826f-544">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeShutdown">
      <MemberSignature Language="C#" Value="public void InvokeShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeShutdown();" />
      <MemberSignature Language="F#" Value="member this.InvokeShutdown : unit -&gt; unit" Usage="dispatcher.InvokeShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9826f-545">Inicjuje proces zamykania <see cref="T:System.Windows.Threading.Dispatcher" /> synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="9826f-545">Initiates the shutdown process of the <see cref="T:System.Windows.Threading.Dispatcher" /> synchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-546"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> żądania bez ograniczeń uprawnień interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9826f-546"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="9826f-547">Gdy <xref:System.Windows.Threading.Dispatcher> rozpoczyna się do zamknięcia, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest równa `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-547">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-548"><xref:System.Windows.Threading.Dispatcher> Nie całkowicie wyłączyć do momentu rozwija kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-548">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="9826f-549">Po zakończeniu dyspozytor, zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-549">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-550">Po rozpoczęciu procesu zamykania wszystkie oczekujące robocze elementów w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="9826f-550">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9826f-551">Aby uzyskać zamykanie Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="9826f-551">for shutting down the dispatcher.</span></span>  <span data-ttu-id="9826f-552">Skojarzone wyliczeń:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9826f-552">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PushFrame">
      <MemberSignature Language="C#" Value="public static void PushFrame (System.Windows.Threading.DispatcherFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushFrame(class System.Windows.Threading.DispatcherFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushFrame (frame As DispatcherFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushFrame(System::Windows::Threading::DispatcherFrame ^ frame);" />
      <MemberSignature Language="F#" Value="static member PushFrame : System.Windows.Threading.DispatcherFrame -&gt; unit" Usage="System.Windows.Threading.Dispatcher.PushFrame frame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Windows.Threading.DispatcherFrame" />
      </Parameters>
      <Docs>
        <param name="frame"><span data-ttu-id="9826f-553">Ramka dyspozytora do przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-553">The frame for the dispatcher to process.</span></span></param>
        <summary><span data-ttu-id="9826f-554">Wprowadza pętlę wykonania.</span><span class="sxs-lookup"><span data-stu-id="9826f-554">Enters an execute loop.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-555">A <xref:System.Windows.Threading.DispatcherFrame> reprezentuje pętli, która przetwarza elementy robocze oczekujących.</span><span class="sxs-lookup"><span data-stu-id="9826f-555">A <xref:System.Windows.Threading.DispatcherFrame> represents a loop that processes pending work items.</span></span>  
  
 <span data-ttu-id="9826f-556">Dyspozytor przetwarza kolejki elementów pracy w pętli.</span><span class="sxs-lookup"><span data-stu-id="9826f-556">The Dispatcher processes the work item queue in a loop.</span></span>  <span data-ttu-id="9826f-557">Pętla jest określany jako ramka.</span><span class="sxs-lookup"><span data-stu-id="9826f-557">The loop is referred to as a frame.</span></span>  <span data-ttu-id="9826f-558">Początkowa pętli zazwyczaj jest inicjowane przez aplikację przez wywołanie metody <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-558">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="9826f-559"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> wprowadza pętlę reprezentowanego przez parametr `frame`.</span><span class="sxs-lookup"><span data-stu-id="9826f-559"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> enters a loop represented by the parameter `frame`.</span></span>  <span data-ttu-id="9826f-560">W każdej iteracji pętli <xref:System.Windows.Threading.Dispatcher> sprawdzi <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> właściwość <xref:System.Windows.Threading.DispatcherFrame> klasę, aby określić, czy pętla powinno być kontynuowane, lub jeśli ma zostać zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="9826f-560">At each iteration of the loop, the <xref:System.Windows.Threading.Dispatcher> will check the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property on the <xref:System.Windows.Threading.DispatcherFrame> class to determine whether the loop should continue or if it should stop.</span></span>  
  
 <span data-ttu-id="9826f-561"><xref:System.Windows.Threading.DispatcherFrame> Umożliwia <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> i właściwości można ustawić jawnie szanuje <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> właściwość <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="9826f-561"><xref:System.Windows.Threading.DispatcherFrame> allows for the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property to be set explicitly and it respects the <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> property on the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="9826f-562">Oznacza to, kiedy <xref:System.Windows.Threading.Dispatcher> rozpoczyna się, aby zamknąć, użyj wartości domyślnej ramki <xref:System.Windows.Threading.DispatcherFrame> implementacji zostanie zakończona, umożliwiająca wszystkich zagnieżdżonych ramek zakończyć pracę.</span><span class="sxs-lookup"><span data-stu-id="9826f-562">This means when the <xref:System.Windows.Threading.Dispatcher> starts to shut down, frames that use the default <xref:System.Windows.Threading.DispatcherFrame> implementation will exit, which enables all nested frames to exit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-563">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Threading.DispatcherFrame> do osiągnięcia podobne wyniki w postaci [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9826f-563">The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span>  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9826f-564"><paramref name="frame" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-564"><paramref name="frame" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9826f-565"><see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> jest <see langword="true" /></span><span class="sxs-lookup"><span data-stu-id="9826f-565"><see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> is <see langword="true" /></span></span>  
  
<span data-ttu-id="9826f-566">—lub—</span><span class="sxs-lookup"><span data-stu-id="9826f-566">-or-</span></span> 
 <span data-ttu-id="9826f-567"><paramref name="frame" /> działa na innym <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-567"><paramref name="frame" /> is running on a different <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span>  
  
<span data-ttu-id="9826f-568">—lub—</span><span class="sxs-lookup"><span data-stu-id="9826f-568">-or-</span></span> 
<span data-ttu-id="9826f-569">Dyspozytor przetwarzanie zostało wyłączone.</span><span class="sxs-lookup"><span data-stu-id="9826f-569">Dispatcher processing has been disabled.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9826f-570">wypychania ramki wykonywania.</span><span class="sxs-lookup"><span data-stu-id="9826f-570">for pushing an execution frame.</span></span>  <span data-ttu-id="9826f-571">Skojarzone wyliczeń:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9826f-571">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Run" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run();" />
      <MemberSignature Language="F#" Value="static member Run : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9826f-572">Wypycha ramki głównej wykonywania na kolejki zdarzeń <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-572">Pushes the main execution frame on the event queue of the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-573"><xref:System.Windows.Threading.Dispatcher> Przetwarza kolejki zdarzeń w pętli.</span><span class="sxs-lookup"><span data-stu-id="9826f-573">The <xref:System.Windows.Threading.Dispatcher> processes the event queue in a loop.</span></span>  <span data-ttu-id="9826f-574">Pętla jest określany jako ramka.</span><span class="sxs-lookup"><span data-stu-id="9826f-574">The loop is referred to as a frame.</span></span>  <span data-ttu-id="9826f-575">Początkowa pętli zazwyczaj jest inicjowane przez aplikację przez wywołanie metody <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="9826f-575">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="9826f-576">Ramki głównego wykonywanie będzie kontynuowane do czasu <xref:System.Windows.Threading.Dispatcher> zostanie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="9826f-576">The main execution frame will continue until the <xref:System.Windows.Threading.Dispatcher> is shutdown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownFinished">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownFinished" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownFinished As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownFinished;" />
      <MemberSignature Language="F#" Value="member this.ShutdownFinished : EventHandler " Usage="member this.ShutdownFinished : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-577">Występuje, gdy <see cref="T:System.Windows.Threading.Dispatcher" /> kończy zamykanie.</span><span class="sxs-lookup"><span data-stu-id="9826f-577">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> finishes shutting down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-578">Gdy proces zamykania <xref:System.Windows.Threading.Dispatcher> jest uruchomiona, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest równa `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-578">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-579"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie aż rozwija kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-579">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="9826f-580">Po zakończeniu dyspozytor, zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-580">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-581">Po rozpoczęciu procesu zamykania wszystkie oczekujące robocze elementów w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="9826f-581">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownStarted">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownStarted;" />
      <MemberSignature Language="F#" Value="member this.ShutdownStarted : EventHandler " Usage="member this.ShutdownStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-582">Występuje, gdy <see cref="T:System.Windows.Threading.Dispatcher" /> rozpoczyna się w celu zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="9826f-582">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> begins to shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-583">Gdy proces zamykania <xref:System.Windows.Threading.Dispatcher> jest uruchomiona, <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest równa `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-583">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-584"><xref:System.Windows.Threading.Dispatcher> Nie jest zamykany całkowicie aż rozwija kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-584">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="9826f-585">Po zakończeniu dyspozytor, zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest zgłaszane i <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="9826f-585">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="9826f-586">Po rozpoczęciu procesu zamykania wszystkie oczekujące robocze elementów w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="9826f-586">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public System.Threading.Thread Thread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Thread Thread" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Thread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Thread ^ Thread { System::Threading::Thread ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thread : System.Threading.Thread" Usage="System.Windows.Threading.Dispatcher.Thread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-587">Pobiera wątku <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="9826f-587">Gets the thread this <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <value><span data-ttu-id="9826f-588">Wątek.</span><span class="sxs-lookup"><span data-stu-id="9826f-588">The thread.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Event UnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " Usage="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-589">Występuje, gdy wyjątek wątku jest zgłoszony i nieprzechwycony podczas wykonywania obiekt delegowany za <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> lub <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-589">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-590">To zdarzenie jest wywoływane, gdy wyjątek zgłoszony podczas wykonywania obiekt delegowany za <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest nieprzechwyconych.</span><span class="sxs-lookup"><span data-stu-id="9826f-590">This event is raised when an exception that was thrown during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is uncaught.</span></span>  
  
 <span data-ttu-id="9826f-591">Program obsługi można oznaczyć wyjątek jako obsłużony, która uniemożliwi obsługi wyjątku wewnętrznego wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9826f-591">A handler can mark the exception as handled, which will prevent the internal exception handler from being called.</span></span>  
  
 <span data-ttu-id="9826f-592">Programy obsługi zdarzeń dla tego zdarzenia muszą być napisane z rozwagą należy unikać tworzenia dodatkowych wyjątków i catch, wszystkie wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="9826f-592">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span> <span data-ttu-id="9826f-593">Zalecane jest, aby uniknąć alokacji pamięci lub wykonujesz dowolnego zasobu intensywnie korzystających z operacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="9826f-593">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="9826f-594"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenia zapewniają sposób zgłaszaj <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-594">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="9826f-595"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenie jest wywoływane po pierwsze Jeśli <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> jest ustawiona na `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzenia nie zostaną wywołane.</span><span class="sxs-lookup"><span data-stu-id="9826f-595">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledExceptionFilter">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledExceptionFilter As DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionFilterEventHandler ^ UnhandledExceptionFilter;" />
      <MemberSignature Language="F#" Value="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " Usage="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9826f-596">Występuje, gdy wyjątek wątku jest zgłoszony i nieprzechwycony podczas wykonywania obiekt delegowany za <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> lub <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> w fazie filtru.</span><span class="sxs-lookup"><span data-stu-id="9826f-596">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> when in the filter stage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-597">To zdarzenie jest wywoływane podczas etapu filtra wyjątku, który jest wywoływany podczas wykonywania obiekt delegowany za <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i nieprzechwycony.</span><span class="sxs-lookup"><span data-stu-id="9826f-597">This event is raised during the filter stage for an exception that is raised during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> and is uncaught.</span></span>  
  
 <span data-ttu-id="9826f-598">Stos wywołań nie jest rozwinięty w tym momencie (wyjątku pierwszej szansy).</span><span class="sxs-lookup"><span data-stu-id="9826f-598">The call stack is not unwound at this point (first-chance exception).</span></span>  
  
 <span data-ttu-id="9826f-599">Programy obsługi zdarzeń dla tego zdarzenia muszą być napisane z rozwagą należy unikać tworzenia dodatkowych wyjątków i catch, wszystkie wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="9826f-599">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span>  <span data-ttu-id="9826f-600">Zalecane jest, aby uniknąć alokacji pamięci lub wykonujesz dowolnego zasobu intensywnie korzystających z operacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="9826f-600">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="9826f-601"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenia zapewniają sposób zgłaszaj <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-601">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="9826f-602"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenie jest wywoływane po pierwsze Jeśli <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> jest ustawiona na `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzenia nie zostaną wywołane.</span><span class="sxs-lookup"><span data-stu-id="9826f-602">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="9826f-603">do dodawania lub usuwania programu obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-603">for adding or removing a handler for this event.</span></span>  <span data-ttu-id="9826f-604">Skojarzone wyliczeń:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9826f-604">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ValidatePriority">
      <MemberSignature Language="C#" Value="public static void ValidatePriority (System.Windows.Threading.DispatcherPriority priority, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidatePriority(valuetype System.Windows.Threading.DispatcherPriority priority, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidatePriority (priority As DispatcherPriority, parameterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidatePriority(System::Windows::Threading::DispatcherPriority priority, System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="static member ValidatePriority : System.Windows.Threading.DispatcherPriority * string -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ValidatePriority (priority, parameterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-605">Priorytet do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-605">The priority to check.</span></span></param>
        <param name="parameterName"><span data-ttu-id="9826f-606">Ciąg, który zostanie zwrócony przez wyjątek, który występuje, gdy priorytet jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="9826f-606">A string that will be returned by the exception that occurs if the priority is invalid.</span></span></param>
        <summary><span data-ttu-id="9826f-607">Określa, czy określony <see cref="T:System.Windows.Threading.DispatcherPriority" /> ma nieprawidłowy priorytet.</span><span class="sxs-lookup"><span data-stu-id="9826f-607">Determines whether the specified <see cref="T:System.Windows.Threading.DispatcherPriority" /> is a valid priority.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="9826f-608"><paramref name="priority" /> nie jest prawidłowym <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-608"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcher.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9826f-609">Określa, czy wątek wywołujący ma dostęp do tego <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-609">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-610">Tylko wątek <xref:System.Windows.Threading.Dispatcher> jest tworzony na mogą uzyskiwać dostęp do <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="9826f-610">Only the thread the <xref:System.Windows.Threading.Dispatcher> is created on may access the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="9826f-611">Ta metoda jest publiczny; w związku z tym, żadnym z wątków można sprawdzić, czy ma ona dostęp do <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="9826f-611">This method is public; therefore, any thread can check to see whether it has access to the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="9826f-612">Różnica między <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> jest <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> zwraca wartość logiczną, jeśli wątek wywołujący nie ma dostępu do <xref:System.Windows.Threading.Dispatcher> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="9826f-612">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean if the calling thread does not have access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9826f-613">W poniższym przykładzie użyto <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> do określenia, czy wątek ma dostęp do wątku, który <xref:System.Windows.Controls.Button> został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="9826f-613">The following example uses <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="9826f-614">Ta metoda przyjmuje obiekt jako argument, który jest rzutowany na <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="9826f-614">The method takes an object as an argument, which is cast to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="9826f-615"><xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> Metody <xref:System.Windows.Threading.Dispatcher> z <xref:System.Windows.Controls.Button> jest wywoływana, aby zweryfikować dostęp do wątku.</span><span class="sxs-lookup"><span data-stu-id="9826f-615">The <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  
  
 <span data-ttu-id="9826f-616">Jeśli wątek wywołujący ma dostęp do <xref:System.Windows.Threading.Dispatcher>, <xref:System.Windows.Controls.Button> jest aktualizowany, po prostu uzyskując dostęp do elementów członkowskich <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="9826f-616">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="9826f-617">Jeśli wątek wywołujący nie ma dostępu, <xref:System.InvalidOperationException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="9826f-617">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  <span data-ttu-id="9826f-618">W tym przykładzie przechwytuje wyjątek i wypycha delegata, który akceptuje <xref:System.Windows.Controls.Button> jako argument, a na <xref:System.Windows.Threading.Dispatcher> z <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="9826f-618">This example catches the exception and pushes a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="9826f-619">To <xref:System.Windows.Threading.Dispatcher> będzie wykonywać pracę aktualizowanie <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="9826f-619">This <xref:System.Windows.Threading.Dispatcher> will do the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccessverifyaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9826f-620">Wątek wywołujący nie ma dostępu do tego <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="9826f-620">The calling thread does not have access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></exception>
        <altmember cref="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Yield">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9826f-621">Tworzy obiekt oczekujący, który asynchronicznie oddaje kontrole bieżącym dyspozytorem i stanowi przy tym okazję do dyspozytora na potrzeby przetwarzania innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-621">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield();" />
      <MemberSignature Language="F#" Value="static member Yield : unit -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9826f-622">Tworzy obiekt oczekujący, który asynchronicznie oddaje kontrole bieżącym dyspozytorem i stanowi przy tym okazję do dyspozytora na potrzeby przetwarzania innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-622">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></summary>
        <returns><span data-ttu-id="9826f-623">Oczekujący obiekt asynchronicznie oddaje kontrole bieżącym dyspozytorem i stanowi przy tym okazję do dyspozytora na potrzeby przetwarzania innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-623">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-624">Ta metoda zapewnia sposób tymczasowo zwolnić Kontrola wykonywania na bieżącym dyspozytorem, więc je wykonywać inne zadania, takie jak przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-624">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="9826f-625">Użyj `await`, lub `Await` w języku Visual Basic, operator na wartość zwracaną, aby zwrócić kontrolka na bieżącym dyspozytorem.</span><span class="sxs-lookup"><span data-stu-id="9826f-625">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="9826f-626">Użyj tej metody, jeśli chcesz nadać szansę na potrzeby przetwarzania zdarzeń, podczas działania aplikacji możesz dużo pracy w wątku interfejsu użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="9826f-626">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="9826f-627">Na przykład służy tej metody w pętli długotrwałych, która aktualizuje formantu.</span><span class="sxs-lookup"><span data-stu-id="9826f-627">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 <span data-ttu-id="9826f-628">Ta metoda jest równoważne z wywoływaniem <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> metody i przekazywanie w <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9826f-628">This method is equivalent to calling the <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> method and passing in <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield (priority As DispatcherPriority) As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="static member Yield : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="9826f-629">Priorytet, od którego należy zaplanować kontynuację.</span><span class="sxs-lookup"><span data-stu-id="9826f-629">The priority at which to schedule the continuation.</span></span></param>
        <summary><span data-ttu-id="9826f-630">Tworzy obiekt oczekujący, który asynchronicznie oddaje kontrole bieżącym dyspozytorem i stanowi przy tym okazję do dyspozytora na potrzeby przetwarzania innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-630">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span>  <span data-ttu-id="9826f-631">Pracy, która występuje, gdy sterowanie powraca do kodu, oczekiwanie na wynik tej metody jest zaplanowane z określonym priorytetem.</span><span class="sxs-lookup"><span data-stu-id="9826f-631">The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</span></span></summary>
        <returns><span data-ttu-id="9826f-632">Oczekujący obiekt asynchronicznie oddaje kontrole bieżącym dyspozytorem i stanowi przy tym okazję do dyspozytora na potrzeby przetwarzania innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="9826f-632">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9826f-633">Ta metoda zapewnia sposób tymczasowo zwolnić Kontrola wykonywania na bieżącym dyspozytorem, więc je wykonywać inne zadania, takie jak przetwarzać inne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9826f-633">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="9826f-634">Użyj `await`, lub `Await` w języku Visual Basic, operator na wartość zwracaną, aby zwrócić kontrolka na bieżącym dyspozytorem.</span><span class="sxs-lookup"><span data-stu-id="9826f-634">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="9826f-635">Użyj tej metody, jeśli chcesz nadać szansę na potrzeby przetwarzania zdarzeń, podczas działania aplikacji możesz dużo pracy w wątku interfejsu użytkownika aplikacji.</span><span class="sxs-lookup"><span data-stu-id="9826f-635">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="9826f-636">Na przykład służy tej metody w pętli długotrwałych, która aktualizuje formantu.</span><span class="sxs-lookup"><span data-stu-id="9826f-636">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>