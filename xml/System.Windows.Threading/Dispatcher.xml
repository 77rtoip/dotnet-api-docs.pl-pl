<Type Name="Dispatcher" FullName="System.Windows.Threading.Dispatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab9a64e8091e1a2ec87eca8cf5d6ecdc6e07ca7c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69435404" /></Metadata><TypeSignature Language="C#" Value="public sealed class Dispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Dispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.Dispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Dispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dispatcher sealed" />
  <TypeSignature Language="F#" Value="type Dispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="83a83-101">Zapewnia usługi do zarządzania kolejką elementów roboczych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-101">Provides services for managing the queue of work items for a thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-102"><xref:System.Windows.Threading.Dispatcher> Utrzymuje priorytetową kolejkę elementów roboczych dla określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-102">The <xref:System.Windows.Threading.Dispatcher> maintains a prioritized queue of work items for a specific thread.</span></span>  
  
 <span data-ttu-id="83a83-103">Gdy jest tworzony w wątku, stanie się jedynym <xref:System.Windows.Threading.Dispatcher> , który można skojarzyć z <xref:System.Windows.Threading.Dispatcher> wątkiem, nawet jeśli zostanie zamknięty. <xref:System.Windows.Threading.Dispatcher></span><span class="sxs-lookup"><span data-stu-id="83a83-103">When a <xref:System.Windows.Threading.Dispatcher> is created on a thread, it becomes the only <xref:System.Windows.Threading.Dispatcher> that can be associated with the thread, even if the <xref:System.Windows.Threading.Dispatcher> is shut down.</span></span>  
  
 <span data-ttu-id="83a83-104">Jeśli spróbujesz uzyskać <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> dla bieżącego wątku, <xref:System.Windows.Threading.Dispatcher> a nie skojarzono <xref:System.Windows.Threading.Dispatcher> z wątkiem, zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-104">If you attempt to get the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> for the current thread and a <xref:System.Windows.Threading.Dispatcher> is not associated with the thread, a <xref:System.Windows.Threading.Dispatcher> will be created.</span></span> <span data-ttu-id="83a83-105">Jest również tworzony podczas <xref:System.Windows.Threading.DispatcherObject>tworzenia. <xref:System.Windows.Threading.Dispatcher></span><span class="sxs-lookup"><span data-stu-id="83a83-105">A <xref:System.Windows.Threading.Dispatcher> is also created when you create a <xref:System.Windows.Threading.DispatcherObject>.</span></span> <span data-ttu-id="83a83-106">Jeśli tworzysz <xref:System.Windows.Threading.Dispatcher> w wątku w tle, pamiętaj, aby zamknąć dyspozytora przed opuszczeniem wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-106">If you create a <xref:System.Windows.Threading.Dispatcher> on a background thread, be sure to shut down the dispatcher before exiting the thread.</span></span>  
  
 <span data-ttu-id="83a83-107"><xref:System.Windows.Threading.Dispatcher> Jeśli jest wyłączone, nie można go ponownie uruchomić.</span><span class="sxs-lookup"><span data-stu-id="83a83-107">If a <xref:System.Windows.Threading.Dispatcher> is shut down, it cannot be restarted.</span></span>  
  
 <span data-ttu-id="83a83-108">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie dostęp <xref:System.Windows.Threading.DispatcherObject> <xref:System.Windows.Threading.Dispatcher> do niego jest możliwy tylko w przypadku, gdy jest skojarzony z.</span><span class="sxs-lookup"><span data-stu-id="83a83-108">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], a <xref:System.Windows.Threading.DispatcherObject> can only be accessed by the <xref:System.Windows.Threading.Dispatcher> it is associated with.</span></span>  <span data-ttu-id="83a83-109">Na przykład wątek w tle nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> , która jest skojarzona <xref:System.Windows.Threading.Dispatcher> z w [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-109">For example, a background thread cannot update the contents of a <xref:System.Windows.Controls.Button> that is associated with the <xref:System.Windows.Threading.Dispatcher> on the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="83a83-110">Aby wątek w tle <xref:System.Windows.Controls.ContentControl.Content%2A> mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>, wątek w tle musi <xref:System.Windows.Threading.Dispatcher> delegować swoją służbę [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] do skojarzonej z wątkiem.</span><span class="sxs-lookup"><span data-stu-id="83a83-110">In order for the background thread to access the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="83a83-111">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-111">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="83a83-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-113">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-113">The operation is added to the queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-114">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana <xref:System.Windows.Threading.Dispatcher> na, która ma wyłączony, właściwość status zwracanej <xref:System.Windows.Threading.DispatcherOperation> jest ustawiona na <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="83a83-114">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 <span data-ttu-id="83a83-115">Wszystkie metody <xref:System.Windows.Threading.Dispatcher>, z <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>wyjątkiem, są wolne od wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-115">All of the methods on <xref:System.Windows.Threading.Dispatcher>, with the exception of <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, are free-threaded.</span></span>  
  
 <span data-ttu-id="83a83-116">Obiekty pochodne z <xref:System.Windows.Threading.DispatcherObject> mają koligację wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-116">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="83a83-117">Obiekty, które pochodzą <xref:System.Windows.Freezable> z są wolne od wątku, gdy są zablokowane.</span><span class="sxs-lookup"><span data-stu-id="83a83-117">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="83a83-118">Aby uzyskać więcej informacji, zobacz [Freezable obiektów — Omówienie](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="83a83-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-119">Poniższy przykład pokazuje, jak umieścić operację na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="83a83-119">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="83a83-120">Aby uzyskać pełny kod źródłowy tego przykładu, zapoznaj się [z aplikacją Jednowątkową z długotrwałym obliczaniem](https://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="83a83-120">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](https://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="83a83-121">Najpierw utworzono delegata, który nie akceptuje żadnych argumentów.</span><span class="sxs-lookup"><span data-stu-id="83a83-121">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="83a83-122"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> Następnie jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="83a83-122">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="83a83-123">To wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> przyjmuje dwa parametry: priorytet, który jest ustawiony na <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>i wywołanie zwrotne, które jest przesyłane za pomocą wystąpienia delegata `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="83a83-123">This call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160038"><span data-ttu-id="83a83-124">Przykładowa aplikacja jednowątkowa o długim czasie wykonywania obliczeń</span><span class="sxs-lookup"><span data-stu-id="83a83-124">Single-Threaded Application with Long-Running Calculation Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83a83-125">Wykonuje delegata asynchronicznie w wątku, <see cref="T:System.Windows.Threading.Dispatcher" /> z którym jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-125">Executes a delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-126">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-126">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-127">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-127">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-128">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-128">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-129">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-129">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-130"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-130"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-131">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-131">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>jest asynchroniczny; w związku z tym, formant natychmiast wraca do wywołującego obiektu po wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="83a83-133"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A><xref:System.Windows.Threading.DispatcherOperation> zwraca obiekt, którego można użyć do współdziałania z delegatem, gdy delegat znajduje się w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-133"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="83a83-134">Obiekt zwrócony przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> może być używany na kilka sposobów do współpracy z określonym delegatem, na przykład: <xref:System.Windows.Threading.DispatcherOperation></span><span class="sxs-lookup"><span data-stu-id="83a83-134">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="83a83-135"><xref:System.Windows.Threading.DispatcherPriority> Zmiana obiektu delegowanego, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-135">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-136">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-136">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-137">Oczekiwanie na zwrócenie przez delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-137">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="83a83-138">Uzyskiwanie wartości zwracanej przez delegata po wykonaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-138">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="83a83-139">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań jest wykonywanych w tym <xref:System.Windows.Threading.DispatcherPriority>samym czasie, zostaną one wykonane w kolejności, w jakiej zostały wykonane.</span><span class="sxs-lookup"><span data-stu-id="83a83-139">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="83a83-140">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana <xref:System.Windows.Threading.Dispatcher> na, która ma wyłączony, właściwość status zwracanej <xref:System.Windows.Threading.DispatcherOperation> jest ustawiona na <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="83a83-140">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="83a83-141">Delegat do metody, która pobiera parametry określone w <paramref name="args" />, który jest wypychany <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-141">The delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-142">Tablica obiektów do przekazania jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-142">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="83a83-143">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-143">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="83a83-144">Wykonuje określony delegat asynchronicznie z określonymi argumentami w wątku, w którym <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-144">Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span></span></summary>
        <returns><span data-ttu-id="83a83-145">Obiekt, który jest zwracany bezpośrednio po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-145">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-146">Obiekt zwrócony przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> może być używany na kilka sposobów do współpracy z określonym delegatem, na przykład: <xref:System.Windows.Threading.DispatcherOperation></span><span class="sxs-lookup"><span data-stu-id="83a83-146">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="83a83-147"><xref:System.Windows.Threading.DispatcherPriority> Zmiana obiektu delegowanego, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-147">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-148">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-148">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-149">Oczekiwanie na zwrócenie przez delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-149">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="83a83-150">Uzyskiwanie wartości zwracanej przez delegata po wykonaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-150">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="83a83-151"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>jest asynchroniczny; w związku z tym, formant natychmiast wraca do wywołującego obiektu po wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-151"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="83a83-152">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-152">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="83a83-153">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-153">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="83a83-154">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-154">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="83a83-155">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-155">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="83a83-156"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-156"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="83a83-157">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-157">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-158">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana <xref:System.Windows.Threading.Dispatcher> na, która ma wyłączony, właściwość status zwracanej <xref:System.Windows.Threading.DispatcherOperation> jest ustawiona na <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="83a83-158">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-159">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-159">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-160">Delegat do metody, która nie przyjmuje argumentów, która jest wypychana <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-160">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="83a83-161">Wykonuje określony delegat asynchronicznie o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-161">Executes the specified delegate asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-162">Obiekt, który jest zwracany bezpośrednio po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-162">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-163">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań jest wykonywanych w tym <xref:System.Windows.Threading.DispatcherPriority>samym czasie, zostaną one wykonane w kolejności, w jakiej zostały wykonane.</span><span class="sxs-lookup"><span data-stu-id="83a83-163">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="83a83-164"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A><xref:System.Windows.Threading.DispatcherOperation> zwraca obiekt, którego można użyć do współdziałania z delegatem, gdy delegat znajduje się w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-164"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="83a83-165">Obiekt zwrócony przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> może być używany na kilka sposobów do współpracy z określonym delegatem, na przykład: <xref:System.Windows.Threading.DispatcherOperation></span><span class="sxs-lookup"><span data-stu-id="83a83-165">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="83a83-166"><xref:System.Windows.Threading.DispatcherPriority> Zmiana obiektu delegowanego, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-166">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-167">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-167">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-168">Oczekiwanie na zwrócenie przez delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-168">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="83a83-169">Uzyskiwanie wartości zwracanej przez delegata po wykonaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-169">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="83a83-170"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>jest asynchroniczny; w związku z tym, formant natychmiast wraca do wywołującego obiektu po wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-170"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="83a83-171">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-171">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-172">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-172">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-173">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-173">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-174">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-174">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-175"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-175"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-176">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-176">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-177">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana <xref:System.Windows.Threading.Dispatcher> na, która ma wyłączony, właściwość status zwracanej <xref:System.Windows.Threading.DispatcherOperation> jest ustawiona na <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="83a83-177">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-178">Poniższy przykład pokazuje, jak umieścić operację na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="83a83-178">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="83a83-179">Aby uzyskać pełny kod źródłowy tego przykładu, zapoznaj się [z aplikacją Jednowątkową z długotrwałym obliczaniem](https://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="83a83-179">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](https://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="83a83-180">Najpierw utworzono delegata, który nie akceptuje żadnych argumentów.</span><span class="sxs-lookup"><span data-stu-id="83a83-180">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="83a83-181"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> Następnie jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="83a83-181">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="83a83-182">Ze <xref:System.Windows.Threading.DispatcherObject> względu na to, że każdy <xref:System.Windows.Threading.Dispatcher> ma właściwość, która zwraca, że <xref:System.Windows.Threading.Dispatcher> jest skojarzona z, żądany <xref:System.Windows.Threading.DispatcherObject>jest uzyskiwany za pomocą <xref:System.Windows.Controls.Button> zapytania `startStopButton`do, w tym przypadku nazwana.</span><span class="sxs-lookup"><span data-stu-id="83a83-182">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Button> named `startStopButton`.</span></span>   <span data-ttu-id="83a83-183">Wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> przyjmuje dwa parametry: priorytet, który jest ustawiony na <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>i wywołanie zwrotne, które jest przesyłane za pomocą wystąpienia delegata `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="83a83-183">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-184"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-184"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-185"><paramref name="priority" />jest nieprawidłowy <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-185"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160038"><span data-ttu-id="83a83-186">Przykładowa aplikacja jednowątkowa o długim czasie wykonywania obliczeń</span><span class="sxs-lookup"><span data-stu-id="83a83-186">Single-Threaded Application with Long-Running Calculation Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="83a83-187">Delegat do metody, która pobiera parametry określone w <paramref name="args" />, który jest wypychany <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-187">The delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-188">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-188">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-189">Tablica obiektów do przekazania jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-189">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="83a83-190">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-190">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="83a83-191">Wykonuje określony delegat asynchronicznie z określonymi argumentami o określonym priorytecie w wątku <see cref="T:System.Windows.Threading.Dispatcher" /> , w którym został utworzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-191">Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span></span></summary>
        <returns><span data-ttu-id="83a83-192">Obiekt, który jest zwracany bezpośrednio po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-192">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-193">Obiekt zwrócony przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> może być używany na kilka sposobów do współpracy z określonym delegatem, na przykład: <xref:System.Windows.Threading.DispatcherOperation></span><span class="sxs-lookup"><span data-stu-id="83a83-193">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="83a83-194"><xref:System.Windows.Threading.DispatcherPriority> Zmiana obiektu delegowanego, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-194">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-195">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-195">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-196">Oczekiwanie na zwrócenie przez delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-196">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="83a83-197">Uzyskiwanie wartości zwracanej przez delegata po wykonaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-197">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="83a83-198"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>jest asynchroniczny; w związku z tym, formant natychmiast wraca do wywołującego obiektu po wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-198"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="83a83-199">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-199">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="83a83-200">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-200">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="83a83-201">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-201">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="83a83-202">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-202">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="83a83-203"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-203"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="83a83-204">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-204">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-205">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana <xref:System.Windows.Threading.Dispatcher> na, która ma wyłączony, właściwość status zwracanej <xref:System.Windows.Threading.DispatcherOperation> jest ustawiona na <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="83a83-205">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-206">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-206">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-207">Delegat do metody, która przyjmuje jeden argument, który jest wypychany <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-207">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="83a83-208">Obiekt, który ma zostać przekazany jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-208">The object to pass as an argument to the specified method.</span></span></param>
        <summary><span data-ttu-id="83a83-209">Wykonuje określony delegat asynchronicznie o określonym priorytecie i z określonym argumentem w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-209">Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-210">Obiekt, który jest zwracany bezpośrednio po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-210">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-211">`Arg`może być `null` niezbędny, jeśli nie są spełnione żadne argumenty.</span><span class="sxs-lookup"><span data-stu-id="83a83-211">`Arg` can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="83a83-212"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A><xref:System.Windows.Threading.DispatcherOperation> zwraca obiekt, którego można użyć do współdziałania z delegatem, gdy delegat znajduje się w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-212"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="83a83-213">Obiekt zwrócony przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> może być używany na kilka sposobów do współpracy z określonym delegatem, na przykład: <xref:System.Windows.Threading.DispatcherOperation></span><span class="sxs-lookup"><span data-stu-id="83a83-213">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="83a83-214"><xref:System.Windows.Threading.DispatcherPriority> Zmiana obiektu delegowanego, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-214">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-215">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-215">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-216">Oczekiwanie na zwrócenie przez delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-216">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="83a83-217">Uzyskiwanie wartości zwracanej przez delegata po wykonaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-217">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="83a83-218"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>jest asynchroniczny; w związku z tym, formant natychmiast wraca do wywołującego obiektu po wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-218"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="83a83-219">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-219">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-220">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-220">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-221">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-221">In order for the background thread to access the content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-222">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-222">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-223"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-223"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-224">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-224">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-225">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań jest wykonywanych w tym <xref:System.Windows.Threading.DispatcherPriority>samym czasie, zostaną one wykonane w kolejności, w jakiej zostały wykonane.</span><span class="sxs-lookup"><span data-stu-id="83a83-225">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="83a83-226">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana <xref:System.Windows.Threading.Dispatcher> na, która ma wyłączony, właściwość status zwracanej <xref:System.Windows.Threading.DispatcherOperation> jest ustawiona na <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="83a83-226">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-227">Poniższy przykład pokazuje, jak umieścić operację na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="83a83-227">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="83a83-228">Najpierw tworzony jest delegat, który akceptuje jeden argument, w tym przypadku ciąg.</span><span class="sxs-lookup"><span data-stu-id="83a83-228">First, a delegate is created that accepts one argument, in this case a string.</span></span>  
  
 [!code-csharp[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdelegates)]
 [!code-vb[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdelegates)]  
  
 <span data-ttu-id="83a83-229"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> Następnie jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="83a83-229">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> is called.</span></span>  <span data-ttu-id="83a83-230">Ze <xref:System.Windows.Threading.DispatcherObject> względu na to, że każdy <xref:System.Windows.Threading.Dispatcher> ma właściwość, która zwraca, że <xref:System.Windows.Threading.Dispatcher> jest skojarzona z, żądany <xref:System.Windows.Threading.DispatcherObject>jest uzyskiwany za pomocą <xref:System.Windows.Controls.Grid> zapytania `tomorrowsWeather`do, w tym przypadku nazwana.</span><span class="sxs-lookup"><span data-stu-id="83a83-230">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Grid> named `tomorrowsWeather`.</span></span> <span data-ttu-id="83a83-231">Wywołanie <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> przyjmuje trzy parametry: priorytet, który jest ustawiony na <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; wywołanie zwrotne, które jest przesyłane za pomocą wystąpienia delegata `OneArgDelegate`; i ciąg o nazwie `weather`, który jest argumentem wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-231">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> takes three parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; the callback, which is passed in through an instance of the delegate `OneArgDelegate`; and a string named `weather`, which is the argument for the callback.</span></span>  
  
 [!code-csharp[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdispatcheronearge)]
 [!code-vb[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdispatcheronearge)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-232"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-232"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-233"><paramref name="priority" />jest nieprawidłowy <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-233"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160038"><span data-ttu-id="83a83-234">Przykładowa aplikacja jednowątkowa o długim czasie wykonywania obliczeń</span><span class="sxs-lookup"><span data-stu-id="83a83-234">Single-Threaded Application with Long-Running Calculation Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-235">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-235">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-236">Delegat do metody, która przyjmuje wiele argumentów, które są wypychane <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-236">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="83a83-237">Obiekt, który ma zostać przekazany jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-237">The object to pass as an argument to the specified method.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-238">Tablica obiektów do przekazania jako argumenty do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-238">An array of objects to pass as arguments to the specified method.</span></span></param>
        <summary><span data-ttu-id="83a83-239">Wykonuje określony delegat asynchronicznie o określonym priorytecie i z określoną tablicą argumentów w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzona.</span><span class="sxs-lookup"><span data-stu-id="83a83-239">Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-240">Obiekt, który jest zwracany bezpośrednio po <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie <see cref="T:System.Windows.Threading.Dispatcher" /> w kolejce.</span><span class="sxs-lookup"><span data-stu-id="83a83-240">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-241">Ten `arg` parametr może być `null` niezbędny, jeśli nie są spełnione żadne argumenty.</span><span class="sxs-lookup"><span data-stu-id="83a83-241">The `arg` parameter can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="83a83-242"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A><xref:System.Windows.Threading.DispatcherOperation> zwraca obiekt, którego można użyć do współdziałania z delegatem, gdy delegat znajduje się w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-242"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="83a83-243">Obiekt zwrócony przez <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> może być używany na kilka sposobów do współpracy z określonym delegatem, na przykład: <xref:System.Windows.Threading.DispatcherOperation></span><span class="sxs-lookup"><span data-stu-id="83a83-243">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="83a83-244"><xref:System.Windows.Threading.DispatcherPriority> Zmiana obiektu delegowanego, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-244">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-245">Usuwanie delegata z kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-245">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="83a83-246">Oczekiwanie na zwrócenie przez delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-246">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="83a83-247">Uzyskiwanie wartości zwracanej przez delegata po wykonaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-247">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="83a83-248"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>jest asynchroniczny; w związku z tym, formant natychmiast wraca do wywołującego obiektu po wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="83a83-248"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="83a83-249">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-249">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-250">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-250">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-251">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-251">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-252">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-252">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-253"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-253"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-254">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-254">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-255">Jeśli wiele <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> wywołań jest wykonywanych w tym <xref:System.Windows.Threading.DispatcherPriority>samym czasie, zostaną one wykonane w kolejności, w jakiej zostały wykonane.</span><span class="sxs-lookup"><span data-stu-id="83a83-255">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="83a83-256">Jeśli <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> jest wywoływana <xref:System.Windows.Threading.Dispatcher> na, która ma wyłączony, właściwość status zwracanej <xref:System.Windows.Threading.DispatcherOperation> jest ustawiona na <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="83a83-256">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-257"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-257"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-258"><see cref="T:System.Windows.Threading.DispatcherPriority" />nie jest prawidłowym priorytetem.</span><span class="sxs-lookup"><span data-stu-id="83a83-258"><see cref="T:System.Windows.Threading.DispatcherPriority" /> is not a valid priority.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160038"><span data-ttu-id="83a83-259">Przykładowa aplikacja jednowątkowa o długim czasie wykonywania obliczeń</span><span class="sxs-lookup"><span data-stu-id="83a83-259">Single-Threaded Application with Long-Running Calculation Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeShutdown">
      <MemberSignature Language="C#" Value="public void BeginInvokeShutdown (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginInvokeShutdown(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInvokeShutdown (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInvokeShutdown(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.BeginInvokeShutdown : System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.BeginInvokeShutdown priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-260">Priorytet, dla którego należy rozpocząć zamykanie dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-260">The priority at which to begin shutting down the dispatcher.</span></span></param>
        <summary><span data-ttu-id="83a83-261">Inicjuje zamknięcie <see cref="T:System.Windows.Threading.Dispatcher" /> asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="83a83-261">Initiates shutdown of the <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-262"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A>wymaga uprawnień do nieograniczonego interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-262"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="83a83-263">Gdy rozpocznie się zamykanie <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> , zdarzenie jest wywoływane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest ustawione na `true`. <xref:System.Windows.Threading.Dispatcher></span><span class="sxs-lookup"><span data-stu-id="83a83-263">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-264">Nie <xref:System.Windows.Threading.Dispatcher> zamyka się całkowicie do momentu zakończenia kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-264">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="83a83-265">Gdy Dyspozytor zakończy zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest wywoływane, <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> a właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="83a83-265">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-266">Po rozpoczęciu procesu zamykania wszystkie oczekujące elementy robocze w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="83a83-266">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="83a83-267">do zamykania dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-267">for shutting down the dispatcher.</span></span>  <span data-ttu-id="83a83-268">Skojarzone wyliczenia:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="83a83-268">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcher.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83a83-269">Określa, czy wątek wywołujący jest skojarzony z tym <see cref="T:System.Windows.Threading.Dispatcher" />wątkiem.</span><span class="sxs-lookup"><span data-stu-id="83a83-269">Determines whether the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <returns><span data-ttu-id="83a83-270"><see langword="true" />Jeśli wątek wywołujący jest skojarzony z tym <see cref="T:System.Windows.Threading.Dispatcher" />elementem; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="83a83-270"><see langword="true" /> if the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-271"><xref:System.Windows.Threading.Dispatcher> Tylko ten<xref:System.Windows.Threading.DispatcherObject> , który został utworzony, może uzyskać dostęp do obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-271">Only the <xref:System.Windows.Threading.Dispatcher> that a <xref:System.Windows.Threading.DispatcherObject> is created on may access the object.</span></span>  <span data-ttu-id="83a83-272">Użyj <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> , aby uzyskać dostęp do obiektu z innego wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-272">Use <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> to access the object from a different thread.</span></span>  
  
 <span data-ttu-id="83a83-273"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A>może być wywoływana z dowolnego wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-273"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> can be called from any thread.</span></span>  
  
 <span data-ttu-id="83a83-274"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> Różnica między <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> i <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> jest <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> zwraca wartość Boolean wskazującą, <xref:System.Windows.Threading.Dispatcher> czy wątek wywołujący ma dostęp do i zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="83a83-274">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean indicating whether the calling thread has access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-275">Poniższy przykład używa <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> do określenia, czy wątek ma dostęp <xref:System.Windows.Controls.Button>do.</span><span class="sxs-lookup"><span data-stu-id="83a83-275">The following example uses <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> to determine whether a thread has access to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="83a83-276">Metoda skojarzona z<xref:System.Windows.Controls.Button> jest wywoływana w celu zweryfikowania dostępu do wątku. <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A></span><span class="sxs-lookup"><span data-stu-id="83a83-276">The <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> associated with the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="83a83-277">Jeśli wątek wywołujący ma dostęp do programu <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Controls.Button> , zostanie on zaktualizowany przez <xref:System.Windows.Controls.Button>uzyskanie dostępu do elementów członkowskich obiektu; <xref:System.Windows.Controls.Button> w przeciwnym razie delegat, który akceptuje jako argument, jest umieszczony na <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="83a83-277">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is placed onto the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="83a83-278">Spowoduje <xref:System.Windows.Threading.Dispatcher> to delegowanie pracy <xref:System.Windows.Controls.Button>aktualizowania.</span><span class="sxs-lookup"><span data-stu-id="83a83-278">The <xref:System.Windows.Threading.Dispatcher> will delegate the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccesscheckaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccesscheckaccess)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDispatcher">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher CurrentDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Threading.Dispatcher CurrentDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Threading::Dispatcher ^ CurrentDispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-279">Pobiera dla aktualnie wykonywanego wątku i tworzy nową <see cref="T:System.Windows.Threading.Dispatcher" /> , jeśli nie jest ona jeszcze skojarzona z wątkiem. <see cref="T:System.Windows.Threading.Dispatcher" /></span><span class="sxs-lookup"><span data-stu-id="83a83-279">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the thread currently executing and creates a new <see cref="T:System.Windows.Threading.Dispatcher" /> if one is not already associated with the thread.</span></span></summary>
        <value><span data-ttu-id="83a83-280">Dyspozytor skojarzony z bieżącym wątkiem.</span><span class="sxs-lookup"><span data-stu-id="83a83-280">The dispatcher associated with the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-281">Jeśli element <xref:System.Windows.Threading.Dispatcher> nie jest skojarzony z bieżącym wątkiem, zostanie utworzony <xref:System.Windows.Threading.Dispatcher> nowy.</span><span class="sxs-lookup"><span data-stu-id="83a83-281">If a <xref:System.Windows.Threading.Dispatcher> is not associated with the current thread, a new <xref:System.Windows.Threading.Dispatcher> will be created.</span></span>  <span data-ttu-id="83a83-282">Nie jest to przypadek z <xref:System.Windows.Threading.Dispatcher.FromThread%2A> metodą.</span><span class="sxs-lookup"><span data-stu-id="83a83-282">This is not the case with the <xref:System.Windows.Threading.Dispatcher.FromThread%2A> method.</span></span>  <span data-ttu-id="83a83-283"><xref:System.Windows.Threading.Dispatcher.FromThread%2A>zwraca `null` , jeśli nie istnieje Dyspozytor skojarzony z określonym wątkiem.</span><span class="sxs-lookup"><span data-stu-id="83a83-283"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> will return `null` if there is not a dispatcher associated with the specified thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableProcessing">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableProcessing () As DispatcherProcessingDisabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherProcessingDisabled DisableProcessing();" />
      <MemberSignature Language="F#" Value="member this.DisableProcessing : unit -&gt; System.Windows.Threading.DispatcherProcessingDisabled" Usage="dispatcher.DisableProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherProcessingDisabled</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83a83-284">Wyłącza przetwarzanie <see cref="T:System.Windows.Threading.Dispatcher" /> kolejki.</span><span class="sxs-lookup"><span data-stu-id="83a83-284">Disables processing of the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
        <returns><span data-ttu-id="83a83-285">Struktura używana do ponownego włączenia przetwarzania dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-285">A structure used to re-enable dispatcher processing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-286">Wyłączanie przetwarzania dyspozytora to metoda zaawansowana, która ma na celu wyeliminowanie możliwości niepowiązanych współużytkowania wątkowości.</span><span class="sxs-lookup"><span data-stu-id="83a83-286">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="83a83-287">Efekty wyłączania przetwarzania są następujące:</span><span class="sxs-lookup"><span data-stu-id="83a83-287">The effects of disabling processing are as follows:</span></span>  
  
-   <span data-ttu-id="83a83-288">Blokady środowiska CLR nie będą przekazywać komunikatów wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="83a83-288">CLR locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="83a83-289"><xref:System.Windows.Threading.DispatcherFrame>nie można wypchnąć obiektów.</span><span class="sxs-lookup"><span data-stu-id="83a83-289"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="83a83-290">Przetwarzanie komunikatów jest niedozwolone.</span><span class="sxs-lookup"><span data-stu-id="83a83-290">Message processing is not permitted.</span></span>  
  
 <span data-ttu-id="83a83-291">Struktura, która <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> zwraca, gdy jest wywoływana, może zostać użyta do ponownego włączenia przetwarzania dyspozytora. <xref:System.Windows.Threading.DispatcherProcessingDisabled></span><span class="sxs-lookup"><span data-stu-id="83a83-291">The <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns when it is called can be used to re-enable dispatcher processing.</span></span>  <span data-ttu-id="83a83-292">Wywołanie <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> w ramach <xref:System.Windows.Threading.DispatcherProcessingDisabled> struktury powoduje ponowne włączenie przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="83a83-292">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure re-enables processing.</span></span>  
  
 <span data-ttu-id="83a83-293"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>można wywołać tylko w wątku, z którym <xref:System.Windows.Threading.Dispatcher> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-293"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> can only be called on the thread the <xref:System.Windows.Threading.Dispatcher> is associated with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-294">Poniższy przykład pokazuje, jak wyłączyć przetwarzanie dyspozytora i ponownie włączyć przetwarzanie dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-294">The following example shows how to disable dispatcher processing and re-enable dispatcher processing.</span></span>  <span data-ttu-id="83a83-295"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>jest wywoływana w instrukcji **using** .</span><span class="sxs-lookup"><span data-stu-id="83a83-295"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.</span></span>  <span data-ttu-id="83a83-296"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>zwraca strukturę, która jest używana jako obiekt do usunięcia, gdy zostanie zakończone **Używanie bloku.** <xref:System.Windows.Threading.DispatcherProcessingDisabled></span><span class="sxs-lookup"><span data-stu-id="83a83-296"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that is used as the object to be disposed when the **using** block finishes.</span></span>  <span data-ttu-id="83a83-297">Gdy <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> jest wywoływana <xref:System.Windows.Threading.DispatcherProcessingDisabled> w strukturze, przetwarzanie dyspozytora jest ponownego włączenia.</span><span class="sxs-lookup"><span data-stu-id="83a83-297">When <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> is called on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure, dispatcher processing is re-enabled.</span></span>  
  
 [!code-csharp[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdisableprocessing)]
 [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdisableprocessing)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAllFrames">
      <MemberSignature Language="C#" Value="public static void ExitAllFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExitAllFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExitAllFrames ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExitAllFrames();" />
      <MemberSignature Language="F#" Value="static member ExitAllFrames : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ExitAllFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83a83-298">Żądania, które opuszczają wszystkie ramki, w tym zagnieżdżone ramki.</span><span class="sxs-lookup"><span data-stu-id="83a83-298">Requests that all frames exit, including nested frames.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="83a83-299">do wywoływania tej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-299">for calling this method.</span></span> <span data-ttu-id="83a83-300">Skojarzone wyliczenia:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="83a83-300">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
        <altmember cref="T:System.Windows.Threading.DispatcherFrame" />
      </Docs>
    </Member>
    <Member MemberName="FromThread">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher FromThread (System.Threading.Thread thread);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Threading.Dispatcher FromThread(class System.Threading.Thread thread) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::Dispatcher ^ FromThread(System::Threading::Thread ^ thread);" />
      <MemberSignature Language="F#" Value="static member FromThread : System.Threading.Thread -&gt; System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.FromThread thread" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="System.Threading.Thread" />
      </Parameters>
      <Docs>
        <param name="thread"><span data-ttu-id="83a83-301">Wątek, z którego ma <see cref="T:System.Windows.Threading.Dispatcher" /> zostać uzyskana wartość.</span><span class="sxs-lookup"><span data-stu-id="83a83-301">The thread to obtain the <see cref="T:System.Windows.Threading.Dispatcher" /> from.</span></span></param>
        <summary><span data-ttu-id="83a83-302"><see cref="T:System.Windows.Threading.Dispatcher" /> Pobiera dla określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="83a83-302">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the specified thread.</span></span></summary>
        <returns><span data-ttu-id="83a83-303">Dyspozytor dla <paramref name="thread" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-303">The dispatcher for <paramref name="thread" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-304">Jeśli Dyspozytor nie jest dostępny dla określonego wątku, `null` zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="83a83-304">If a dispatcher is not available for the specified thread, `null` will be returned.</span></span>  
  
 <span data-ttu-id="83a83-305"><xref:System.Windows.Threading.Dispatcher.FromThread%2A>nie tworzy <xref:System.Windows.Threading.Dispatcher> w wątku, który nie <xref:System.Windows.Threading.Dispatcher>ma.</span><span class="sxs-lookup"><span data-stu-id="83a83-305"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> does not create a <xref:System.Windows.Threading.Dispatcher> on a thread that does not have a <xref:System.Windows.Threading.Dispatcher>.</span></span>   <span data-ttu-id="83a83-306">Nowy <xref:System.Windows.Threading.Dispatcher> element jest tworzony w wątku, który nie <xref:System.Windows.Threading.Dispatcher> ma jeszcze <xref:System.Windows.Threading.Dispatcher> próby <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> pobrania przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="83a83-306">A new <xref:System.Windows.Threading.Dispatcher> is created on a thread that does not already have a <xref:System.Windows.Threading.Dispatcher> when attempting to get the <xref:System.Windows.Threading.Dispatcher> by using the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownFinished">
      <MemberSignature Language="C#" Value="public bool HasShutdownFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownFinished" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownFinished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownFinished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownFinished : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-307">Określa, <see cref="T:System.Windows.Threading.Dispatcher" /> czy zakończono zamykanie.</span><span class="sxs-lookup"><span data-stu-id="83a83-307">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> has finished shutting down.</span></span></summary>
        <value><span data-ttu-id="83a83-308"><see langword="true" />Jeśli Dyspozytor zakończył zamykanie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="83a83-308"><see langword="true" /> if the dispatcher has finished shutting down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-309">Gdy rozpocznie się zamykanie <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> , zdarzenie jest wywoływane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest ustawione na `true`. <xref:System.Windows.Threading.Dispatcher></span><span class="sxs-lookup"><span data-stu-id="83a83-309">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-310"><xref:System.Windows.Threading.Dispatcher> Program nie zostanie całkowicie zamknięty do momentu zakończenia kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-310">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="83a83-311">Gdy Dyspozytor zakończy zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest wywoływane, <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> a właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="83a83-311">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-312">Po rozpoczęciu procesu zamykania wszystkie oczekujące elementy robocze w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="83a83-312">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownStarted : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-313">Określa, <see cref="T:System.Windows.Threading.Dispatcher" /> czy jest zamykany.</span><span class="sxs-lookup"><span data-stu-id="83a83-313">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> is shutting down.</span></span></summary>
        <value><span data-ttu-id="83a83-314"><see langword="true" />Jeśli rozpoczęło się <see cref="T:System.Windows.Threading.Dispatcher" /> zamykanie; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-314"><see langword="true" /> if the <see cref="T:System.Windows.Threading.Dispatcher" /> has started shutting down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-315">Gdy rozpocznie się zamykanie <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> , zdarzenie jest wywoływane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest ustawione na `true`. <xref:System.Windows.Threading.Dispatcher></span><span class="sxs-lookup"><span data-stu-id="83a83-315">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-316">Nie <xref:System.Windows.Threading.Dispatcher> zamyka się całkowicie do momentu zakończenia kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-316">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="83a83-317">Gdy Dyspozytor zakończy zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest wywoływane, <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> a właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="83a83-317">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-318">Po rozpoczęciu procesu zamykania wszystkie oczekujące elementy robocze w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="83a83-318">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hooks">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherHooks Hooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.DispatcherHooks Hooks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Hooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hooks As DispatcherHooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherHooks ^ Hooks { System::Windows::Threading::DispatcherHooks ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Hooks : System.Windows.Threading.DispatcherHooks" Usage="System.Windows.Threading.Dispatcher.Hooks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherHooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-319">Pobiera kolekcję punktów zaczepienia, które zawierają dodatkowe informacje o zdarzeniach <see cref="T:System.Windows.Threading.Dispatcher" />na temat.</span><span class="sxs-lookup"><span data-stu-id="83a83-319">Gets the collection of hooks that provide additional event information about the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <value><span data-ttu-id="83a83-320">Punkty zaczepienia skojarzone z tym <see cref="T:System.Windows.Threading.Dispatcher" />elementem.</span><span class="sxs-lookup"><span data-stu-id="83a83-320">The hooks associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-321">Klasa zawiera dodatkowe informacje <xref:System.Windows.Threading.Dispatcher>o zdarzeniach <xref:System.Windows.Threading.Dispatcher> , takie jak, gdy jest nieaktywny lub Kiedy operacja uległa konkurowaniu. <xref:System.Windows.Threading.DispatcherHooks></span><span class="sxs-lookup"><span data-stu-id="83a83-321">The <xref:System.Windows.Threading.DispatcherHooks> class provides additional event information about the <xref:System.Windows.Threading.Dispatcher>, such as when the <xref:System.Windows.Threading.Dispatcher> is inactive or when an operation has competed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="83a83-322">do uzyskania tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="83a83-322">for getting this property.</span></span>  <span data-ttu-id="83a83-323">Skojarzone wyliczenia:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="83a83-323">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83a83-324">Wykonuje określony delegat synchronicznie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-324">Executes the specified delegate synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-325">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-325">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-326">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-326">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-327">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-327">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-328">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-328">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-329"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-329"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-330">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-330">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-331"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-331"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-332">Poniższy przykład umieszcza delegata <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherPriority.Normal> na przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="83a83-332">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action -&gt; unit" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="83a83-333">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-333">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="83a83-334">Wykonuje określony <see cref="T:System.Action" /> synchronicznie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-334">Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action, priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="83a83-335">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-335">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-336">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-336">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="83a83-337">Wykonuje określony <see cref="T:System.Action" /> synchronicznie o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-337">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="83a83-338">Delegat do metody, która pobiera parametry określone w <paramref name="args" />, który jest wypychany <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-338">A delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-339">Tablica obiektów do przekazania jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-339">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="83a83-340">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-340">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="83a83-341">Wykonuje określony delegat z określonymi argumentami synchronicznie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-341">Executes the specified delegate with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-342">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-342">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-343">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-343">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="83a83-344">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-344">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="83a83-345">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-345">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="83a83-346">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-346">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="83a83-347"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-347"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="83a83-348">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-348">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-349"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-349"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-350">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-350">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-351">Delegat do metody, która nie przyjmuje argumentów, która jest wypychana <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-351">A delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="83a83-352">Wykonuje określony delegat synchronicznie o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-352">Executes the specified delegate synchronously at the specified priority on the thread on which the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-353">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-353">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-354">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-354">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-355">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-355">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-356">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-356">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-357">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-357">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-358"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-358"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-359">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-359">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-360"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-360"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-361">Poniższy przykład umieszcza delegata <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherPriority.Normal> na przy użyciu <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="83a83-361">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83a83-362"><paramref name="priority" />jest równe <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-362"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-363"><paramref name="priority" />nie jest prawidłowym priorytetem.</span><span class="sxs-lookup"><span data-stu-id="83a83-363"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-364"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-364"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="83a83-365">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-365">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-366">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-366">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="83a83-367">Obiekt, który wskazuje, czy anulować akcję.</span><span class="sxs-lookup"><span data-stu-id="83a83-367">An object that indicates whether to cancel the action.</span></span></param>
        <summary><span data-ttu-id="83a83-368">Wykonuje określony <see cref="T:System.Action" /> synchronicznie o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-368">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="83a83-369">Delegat do metody, która pobiera parametry określone w <paramref name="args" />, który jest wypychany <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-369">A delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="timeout"><span data-ttu-id="83a83-370">Maksymalna ilość czasu oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="83a83-370">The maximum amount of time to wait for the operation to complete.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-371">Tablica obiektów do przekazania jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-371">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="83a83-372">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-372">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="83a83-373">Wykonuje określony delegat w wyznaczonym przedziale czasu o określonym priorytecie z określonymi argumentami synchronicznie w wątku, <see cref="T:System.Windows.Threading.Dispatcher" /> z którym jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-373">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-374">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-374">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-375">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-375">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="83a83-376">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-376">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="83a83-377">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-377">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="83a83-378">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-378">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="83a83-379"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-379"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="83a83-380">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-380">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-381"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-381"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="83a83-382">Delegat do metody, która pobiera parametry określone w <paramref name="args" />, który jest wypychany <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-382">A delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-383">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-383">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-384">Tablica obiektów do przekazania jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-384">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="83a83-385">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-385">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="83a83-386">Wykonuje określony delegat o określonym priorytecie synchronicznie na wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-386">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-387">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-387">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-388">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-388">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="83a83-389">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-389">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="83a83-390">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-390">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="83a83-391">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-391">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="83a83-392"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-392"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="83a83-393">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-393">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-394"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-394"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-395">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-395">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-396">Delegat do metody, która przyjmuje jeden argument, który jest wypychany <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-396">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="83a83-397">Obiekt, który ma zostać przekazany jako argument do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-397">An object to pass as an argument to the given method.</span></span></param>
        <summary><span data-ttu-id="83a83-398">Wykonuje określony delegat o określonym priorytecie synchronicznie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-398">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-399">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-399">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-400">`Arg`może być `null` , jeśli argument nie jest wymagany</span><span class="sxs-lookup"><span data-stu-id="83a83-400">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="83a83-401">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-401">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-402">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-402">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-403">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-403">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-404">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-404">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-405"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-405"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-406">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-406">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-407"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-407"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83a83-408"><paramref name="priority" />jest równe <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-408"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-409"><paramref name="priority" />nie jest prawidłowym priorytetem.</span><span class="sxs-lookup"><span data-stu-id="83a83-409"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-410"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-410"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-411">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-411">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="83a83-412">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="83a83-412">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-413">Delegat do metody, która nie przyjmuje argumentów, która jest wypychana <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-413">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <summary><span data-ttu-id="83a83-414">Wykonuje określony delegat synchronicznie o określonym priorytecie i z określoną wartością limitu czasu w wątku, który <see cref="T:System.Windows.Threading.Dispatcher" /> został utworzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-414">Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> was created.</span></span></summary>
        <returns><span data-ttu-id="83a83-415">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-415">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-416">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-416">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-417">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-417">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-418">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-418">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-419">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-419">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-420"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-420"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-421">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-421">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-422"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-422"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="83a83-423">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-423">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-424">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-424">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="83a83-425">Obiekt, który wskazuje, czy anulować akcję.</span><span class="sxs-lookup"><span data-stu-id="83a83-425">An object that indicates whether to cancel the action.</span></span></param>
        <param name="timeout"><span data-ttu-id="83a83-426">Minimalny czas oczekiwania na uruchomienie operacji.</span><span class="sxs-lookup"><span data-stu-id="83a83-426">The minimum amount of time to wait for the operation to start.</span></span></param>
        <summary><span data-ttu-id="83a83-427">Wykonuje określony <see cref="T:System.Action" /> synchronicznie o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-427">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="83a83-428">Delegat do metody, która pobiera parametry określone w <paramref name="args" />, który jest wypychany <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-428">A delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="timeout"><span data-ttu-id="83a83-429">Maksymalna ilość czasu oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="83a83-429">The maximum amount of time to wait for the operation to complete.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-430">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-430">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-431">Tablica obiektów do przekazania jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-431">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="83a83-432">Może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-432">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="83a83-433">Wykonuje określony delegat w wyznaczonym przedziale czasu o określonym priorytecie z określonymi argumentami synchronicznie w wątku, <see cref="T:System.Windows.Threading.Dispatcher" /> z którym jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-433">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-434">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-434">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-435">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-435">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="83a83-436">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-436">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="83a83-437">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-437">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="83a83-438">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-438">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="83a83-439"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-439"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="83a83-440">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-440">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-441"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-441"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-442">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-442">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-443">Delegat do metody, która przyjmuje wiele argumentów, które są wypychane <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-443">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="83a83-444">Obiekt, który ma zostać przekazany jako argument do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-444">An object to pass as an argument to the given method.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-445">Tablica obiektów do przekazania jako argumenty do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-445">An array of objects to pass as arguments to the given method.</span></span></param>
        <summary><span data-ttu-id="83a83-446">Wykonuje określony delegat o określonym priorytecie synchronicznie na wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-446">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-447">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-447">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-448">`Arg`może być `null` , jeśli argument nie jest wymagany</span><span class="sxs-lookup"><span data-stu-id="83a83-448">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="83a83-449">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-449">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-450">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-450">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-451">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-451">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-452">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-452">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-453"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-453"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-454">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-454">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-455"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-455"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83a83-456"><paramref name="priority" />jest równe <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-456"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-457"><paramref name="priority" />nie jest prawidłowym priorytetem.</span><span class="sxs-lookup"><span data-stu-id="83a83-457"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-458"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-458"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-459">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-459">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="83a83-460">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="83a83-460">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-461">Delegat do metody, która przyjmuje wiele argumentów, które są wypychane <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-461">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="83a83-462">Obiekt, który ma zostać przekazany jako argument do danej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-462">An object to pass as an argument to the given method.</span></span> <span data-ttu-id="83a83-463">Może to być <see langword="null" /> brak argumentów.</span><span class="sxs-lookup"><span data-stu-id="83a83-463">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="83a83-464">Wykonuje określony delegat o określonym priorytecie synchronicznie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-464">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-465">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-465">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-466">`Arg`może być `null` , jeśli argument nie jest wymagany</span><span class="sxs-lookup"><span data-stu-id="83a83-466">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="83a83-467">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-467">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-468">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-468">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-469">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-469">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-470">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-470">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-471"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-471"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-472">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-472">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-473"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-473"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83a83-474"><paramref name="priority" />jest równe <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-474"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-475"><paramref name="priority" />nie jest prawidłowym priorytetem.</span><span class="sxs-lookup"><span data-stu-id="83a83-475"><paramref name="priority" /> is not a valid priority.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-476"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-476"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-477">Priorytet względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce zdarzeń jest wywoływany przez określoną metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-477">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span></span></param>
        <param name="timeout"><span data-ttu-id="83a83-478">Maksymalny czas oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="83a83-478">The maximum time to wait for the operation to finish.</span></span></param>
        <param name="method"><span data-ttu-id="83a83-479">Delegat do metody, która przyjmuje wiele argumentów, które są wypychane <see cref="T:System.Windows.Threading.Dispatcher" /> do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-479">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span></span></param>
        <param name="arg"><span data-ttu-id="83a83-480">Obiekt, który ma zostać przekazany jako argument do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-480">An object to pass as an argument to the specified method.</span></span></param>
        <param name="args"><span data-ttu-id="83a83-481">Tablica obiektów do przekazania jako argumenty do określonej metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-481">An array of objects to pass as arguments to the specified method.</span></span></param>
        <summary><span data-ttu-id="83a83-482">Wykonuje określony delegat o określonym priorytecie synchronicznie na wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-482">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-483">Wartość zwracana z wywoływanego delegata lub <see langword="null" /> Jeśli delegat nie ma zwracanej wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-483">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-484">`Arg`może być `null` , jeśli argument nie jest wymagany.</span><span class="sxs-lookup"><span data-stu-id="83a83-484">`Arg` can be `null` if an argument is not needed.</span></span>  
  
 <span data-ttu-id="83a83-485">W [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]programie tylko wątek, który utworzył element <xref:System.Windows.Threading.DispatcherObject> , może uzyskać dostęp do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="83a83-485">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="83a83-486">Na przykład wątek w tle, który jest odsunięty od głównego wątku interfejsu użytkownika, nie może zaktualizować zawartości <xref:System.Windows.Controls.Button> programu, który został utworzony w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-486">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="83a83-487">Aby wątek w tle mógł uzyskać dostęp do właściwości <xref:System.Windows.Controls.Button>zawartości, wątek w tle musi delegować prace <xref:System.Windows.Threading.Dispatcher> do skojarzonego z wątkiem interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-487">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="83a83-488">Jest to realizowane za pomocą <xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>albo.</span><span class="sxs-lookup"><span data-stu-id="83a83-488">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="83a83-489"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest synchroniczny <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="83a83-489"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="83a83-490">Operacja zostanie dodana do kolejki <xref:System.Windows.Threading.Dispatcher> zdarzeń o określonej <xref:System.Windows.Threading.DispatcherPriority>wartości.</span><span class="sxs-lookup"><span data-stu-id="83a83-490">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="83a83-491"><xref:System.Windows.Threading.Dispatcher.Invoke%2A>jest operacją synchroniczną; w związku z tym formant nie zwróci do obiektu wywołującego, dopóki nie zwróci wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="83a83-491"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83a83-492"><paramref name="priority" />jest równe <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-492"><paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-493"><paramref name="priority" />jest nieprawidłowy <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-493"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-494"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-494"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; -&gt; 'Result" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="83a83-495">Typ wartości zwracanej dla określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-495">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="83a83-496">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-496">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="83a83-497">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-497">Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-498">Wartość zwracana przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="83a83-498">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="83a83-499">Typ wartości zwracanej dla określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-499">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="83a83-500">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-500">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-501">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-501">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="83a83-502">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-502">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-503">Wartość zwracana przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="83a83-503">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="83a83-504">Typ wartości zwracanej dla określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-504">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="83a83-505">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-505">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-506">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-506">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="83a83-507">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="83a83-507">An object that indicates whether to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="83a83-508">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-508">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-509">Wartość zwracana przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="83a83-509">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="83a83-510">Typ wartości zwracanej dla określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-510">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="83a83-511">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-511">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-512">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-512">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="83a83-513">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="83a83-513">An object that indicates whether to cancel the operation.</span></span></param>
        <param name="timeout"><span data-ttu-id="83a83-514">Minimalny czas oczekiwania na uruchomienie operacji.</span><span class="sxs-lookup"><span data-stu-id="83a83-514">The minimum amount of time to wait for the operation to start.</span></span></param>
        <summary><span data-ttu-id="83a83-515">Wykonuje określony <see cref="T:System.Func`1" /> synchronicznie o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-515">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-516">Wartość zwracana przez `callback`.</span><span class="sxs-lookup"><span data-stu-id="83a83-516">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83a83-517">Wykonuje określony delegat asynchronicznie w wątku, z <see cref="T:System.Windows.Threading.Dispatcher" /> którym jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-517">Executes the specified delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="83a83-518">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-518">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="83a83-519">Wykonuje określony <see cref="T:System.Action" /> asynchronicznie w wątku, z <see cref="T:System.Windows.Threading.Dispatcher" /> którym jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-519">Executes the specified <see cref="T:System.Action" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-520">Obiekt, który jest zwracany bezpośrednio po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-520">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action, priority As DispatcherPriority) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="83a83-521">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-521">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-522">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-522">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="83a83-523">Wykonuje określone <see cref="T:System.Action" /> asynchroniczne o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-523">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-524">Obiekt, który jest zwracany bezpośrednio po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-524">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="83a83-525">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-525">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-526">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-526">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="83a83-527">Obiekt, który wskazuje, czy anulować akcję.</span><span class="sxs-lookup"><span data-stu-id="83a83-527">An object that indicates whether to cancel the action.</span></span></param>
        <summary><span data-ttu-id="83a83-528">Wykonuje określone <see cref="T:System.Action" /> asynchroniczne o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-528">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-529">Obiekt, który jest zwracany bezpośrednio po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-529">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult)) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="83a83-530">Typ wartości zwracanej dla określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-530">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="83a83-531">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-531">A delegate to invoke through the dispatcher.</span></span></param>
        <summary><span data-ttu-id="83a83-532">Wykonuje określony <see cref="T:System.Func`1" /> asynchronicznie w wątku, z <see cref="T:System.Windows.Threading.Dispatcher" /> którym jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-532">Executes the specified <see cref="T:System.Func`1" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-533">Obiekt, który jest zwracany bezpośrednio po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-533">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="83a83-534">Typ wartości zwracanej dla określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-534">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="83a83-535">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-535">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-536">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-536">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <summary><span data-ttu-id="83a83-537">Wykonuje określone <see cref="T:System.Func`1" /> asynchroniczne o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-537">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-538">Obiekt, który jest zwracany bezpośrednio po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-538">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="83a83-539">Typ wartości zwracanej dla określonego delegata.</span><span class="sxs-lookup"><span data-stu-id="83a83-539">The return value type of the specified delegate.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="83a83-540">Delegat do wywołania przez dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-540">A delegate to invoke through the dispatcher.</span></span></param>
        <param name="priority"><span data-ttu-id="83a83-541">Priorytet określający kolejność wywoływania określonego wywołania zwrotnego względem innych oczekujących operacji w <see cref="T:System.Windows.Threading.Dispatcher" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="83a83-541">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="83a83-542">Obiekt, który wskazuje, czy anulować operację.</span><span class="sxs-lookup"><span data-stu-id="83a83-542">An object that indicates whether to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="83a83-543">Wykonuje określone <see cref="T:System.Func`1" /> asynchroniczne o określonym priorytecie w wątku, z którym <see cref="T:System.Windows.Threading.Dispatcher" /> jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-543">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <returns><span data-ttu-id="83a83-544">Obiekt, który jest zwracany bezpośrednio po <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> wywołaniu, może być używany do współdziałania z delegatem, ponieważ oczekuje na wykonanie w kolejce zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-544">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeShutdown">
      <MemberSignature Language="C#" Value="public void InvokeShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeShutdown();" />
      <MemberSignature Language="F#" Value="member this.InvokeShutdown : unit -&gt; unit" Usage="dispatcher.InvokeShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83a83-545">Inicjuje proces <see cref="T:System.Windows.Threading.Dispatcher" /> zamykania synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="83a83-545">Initiates the shutdown process of the <see cref="T:System.Windows.Threading.Dispatcher" /> synchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-546"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A>wymaga uprawnień do nieograniczonego interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-546"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="83a83-547">Gdy rozpocznie się zamykanie <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> , zdarzenie jest wywoływane i <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> jest ustawione na `true`. <xref:System.Windows.Threading.Dispatcher></span><span class="sxs-lookup"><span data-stu-id="83a83-547">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-548">Nie <xref:System.Windows.Threading.Dispatcher> zamyka się całkowicie do momentu zakończenia kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-548">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="83a83-549">Gdy Dyspozytor zakończy zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest wywoływane, <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> a właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="83a83-549">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-550">Po rozpoczęciu procesu zamykania wszystkie oczekujące elementy robocze w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="83a83-550">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="83a83-551">do zamykania dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-551">for shutting down the dispatcher.</span></span>  <span data-ttu-id="83a83-552">Skojarzone wyliczenia:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="83a83-552">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PushFrame">
      <MemberSignature Language="C#" Value="public static void PushFrame (System.Windows.Threading.DispatcherFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushFrame(class System.Windows.Threading.DispatcherFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushFrame (frame As DispatcherFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushFrame(System::Windows::Threading::DispatcherFrame ^ frame);" />
      <MemberSignature Language="F#" Value="static member PushFrame : System.Windows.Threading.DispatcherFrame -&gt; unit" Usage="System.Windows.Threading.Dispatcher.PushFrame frame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Windows.Threading.DispatcherFrame" />
      </Parameters>
      <Docs>
        <param name="frame"><span data-ttu-id="83a83-553">Ramka do przetworzenia dla dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="83a83-553">The frame for the dispatcher to process.</span></span></param>
        <summary><span data-ttu-id="83a83-554">Wprowadza pętlę Execute.</span><span class="sxs-lookup"><span data-stu-id="83a83-554">Enters an execute loop.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-555"><xref:System.Windows.Threading.DispatcherFrame> Reprezentuje pętlę, która przetwarza oczekujące elementy robocze.</span><span class="sxs-lookup"><span data-stu-id="83a83-555">A <xref:System.Windows.Threading.DispatcherFrame> represents a loop that processes pending work items.</span></span>  
  
 <span data-ttu-id="83a83-556">Dyspozytor przetwarza kolejkę elementów roboczych w pętli.</span><span class="sxs-lookup"><span data-stu-id="83a83-556">The Dispatcher processes the work item queue in a loop.</span></span>  <span data-ttu-id="83a83-557">Pętla jest określana jako ramka.</span><span class="sxs-lookup"><span data-stu-id="83a83-557">The loop is referred to as a frame.</span></span>  <span data-ttu-id="83a83-558">Pętla początkowa jest zwykle inicjowana przez aplikację przez wywołanie <xref:System.Windows.Threading.Dispatcher.Run%2A>metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-558">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="83a83-559"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A>wprowadza pętlę reprezentowaną przez `frame`parametr.</span><span class="sxs-lookup"><span data-stu-id="83a83-559"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> enters a loop represented by the parameter `frame`.</span></span>  <span data-ttu-id="83a83-560">W każdej iteracji pętli <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> program sprawdzi Właściwość <xref:System.Windows.Threading.DispatcherFrame> klasy, aby określić, czy pętla powinna być kontynuowana, czy powinna zostać zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="83a83-560">At each iteration of the loop, the <xref:System.Windows.Threading.Dispatcher> will check the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property on the <xref:System.Windows.Threading.DispatcherFrame> class to determine whether the loop should continue or if it should stop.</span></span>  
  
 <span data-ttu-id="83a83-561"><xref:System.Windows.Threading.DispatcherFrame>umożliwia jawne ustawienie <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> <xref:System.Windows.Threading.Dispatcher>właściwości i przestrzega właściwości w. <xref:System.Windows.Threading.DispatcherFrame.Continue%2A></span><span class="sxs-lookup"><span data-stu-id="83a83-561"><xref:System.Windows.Threading.DispatcherFrame> allows for the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property to be set explicitly and it respects the <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> property on the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="83a83-562">Oznacza to, że <xref:System.Windows.Threading.Dispatcher> Kiedy rozpocznie się zamykanie, ramki używające domyślnej <xref:System.Windows.Threading.DispatcherFrame> implementacji zakończą działanie, co spowoduje zakończenie wszystkich zagnieżdżonych ramek.</span><span class="sxs-lookup"><span data-stu-id="83a83-562">This means when the <xref:System.Windows.Threading.Dispatcher> starts to shut down, frames that use the default <xref:System.Windows.Threading.DispatcherFrame> implementation will exit, which enables all nested frames to exit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-563">Poniższy przykład pokazuje, jak używać a <xref:System.Windows.Threading.DispatcherFrame> , aby osiągnąć podobne wyniki [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> jako metodę.</span><span class="sxs-lookup"><span data-stu-id="83a83-563">The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span>  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83a83-564"><paramref name="frame" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-564"><paramref name="frame" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83a83-565"><see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />była<see langword="true" /></span><span class="sxs-lookup"><span data-stu-id="83a83-565"><see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> is <see langword="true" /></span></span>  
  
<span data-ttu-id="83a83-566">—lub—</span><span class="sxs-lookup"><span data-stu-id="83a83-566">-or-</span></span> 
 <span data-ttu-id="83a83-567"><paramref name="frame" />działa na innym <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-567"><paramref name="frame" /> is running on a different <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span>  
  
<span data-ttu-id="83a83-568">—lub—</span><span class="sxs-lookup"><span data-stu-id="83a83-568">-or-</span></span> 
<span data-ttu-id="83a83-569">Przetwarzanie dyspozytora zostało wyłączone.</span><span class="sxs-lookup"><span data-stu-id="83a83-569">Dispatcher processing has been disabled.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="83a83-570">do wypychania ramki wykonawczej.</span><span class="sxs-lookup"><span data-stu-id="83a83-570">for pushing an execution frame.</span></span>  <span data-ttu-id="83a83-571">Skojarzone wyliczenia:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="83a83-571">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Run" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run();" />
      <MemberSignature Language="F#" Value="static member Run : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83a83-572">Wypchnij główną ramkę wykonania do kolejki <see cref="T:System.Windows.Threading.Dispatcher" />zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-572">Pushes the main execution frame on the event queue of the <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-573"><xref:System.Windows.Threading.Dispatcher> Przetwarza kolejkę zdarzeń w pętli.</span><span class="sxs-lookup"><span data-stu-id="83a83-573">The <xref:System.Windows.Threading.Dispatcher> processes the event queue in a loop.</span></span>  <span data-ttu-id="83a83-574">Pętla jest określana jako ramka.</span><span class="sxs-lookup"><span data-stu-id="83a83-574">The loop is referred to as a frame.</span></span>  <span data-ttu-id="83a83-575">Pętla początkowa jest zwykle inicjowana przez aplikację przez wywołanie <xref:System.Windows.Threading.Dispatcher.Run%2A>metody.</span><span class="sxs-lookup"><span data-stu-id="83a83-575">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="83a83-576">Główna ramka wykonania będzie kontynuowana do momentu <xref:System.Windows.Threading.Dispatcher> zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="83a83-576">The main execution frame will continue until the <xref:System.Windows.Threading.Dispatcher> is shutdown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownFinished">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownFinished" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownFinished As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownFinished;" />
      <MemberSignature Language="F#" Value="member this.ShutdownFinished : EventHandler " Usage="member this.ShutdownFinished : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-577">Występuje po <see cref="T:System.Windows.Threading.Dispatcher" /> zakończeniu zamykania.</span><span class="sxs-lookup"><span data-stu-id="83a83-577">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> finishes shutting down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-578">Po uruchomieniu <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> procesu zamykania systemu `true`zdarzenie jest wywoływane i jest ustawione na. <xref:System.Windows.Threading.Dispatcher.ShutdownStarted></span><span class="sxs-lookup"><span data-stu-id="83a83-578">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-579"><xref:System.Windows.Threading.Dispatcher> Program nie zostanie całkowicie zamknięty do momentu zakończenia kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-579">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="83a83-580">Gdy Dyspozytor zakończy zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest wywoływane, <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> a właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="83a83-580">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-581">Po rozpoczęciu procesu zamykania wszystkie oczekujące elementy robocze w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="83a83-581">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownStarted">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownStarted;" />
      <MemberSignature Language="F#" Value="member this.ShutdownStarted : EventHandler " Usage="member this.ShutdownStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-582">Występuje po <see cref="T:System.Windows.Threading.Dispatcher" /> rozpoczęciu zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="83a83-582">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> begins to shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-583">Po uruchomieniu <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> procesu zamykania systemu `true`zdarzenie jest wywoływane i jest ustawione na. <xref:System.Windows.Threading.Dispatcher.ShutdownStarted></span><span class="sxs-lookup"><span data-stu-id="83a83-583">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-584"><xref:System.Windows.Threading.Dispatcher> Program nie zostanie całkowicie zamknięty do momentu zakończenia kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-584">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="83a83-585">Gdy Dyspozytor zakończy zamykanie, <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> zdarzenie jest wywoływane, <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> a właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="83a83-585">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="83a83-586">Po rozpoczęciu procesu zamykania wszystkie oczekujące elementy robocze w kolejce zostaną przerwane.</span><span class="sxs-lookup"><span data-stu-id="83a83-586">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public System.Threading.Thread Thread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Thread Thread" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Thread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Thread ^ Thread { System::Threading::Thread ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thread : System.Threading.Thread" Usage="System.Windows.Threading.Dispatcher.Thread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-587">Pobiera wątek <see cref="T:System.Windows.Threading.Dispatcher" /> , z którym jest skojarzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-587">Gets the thread this <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span></span></summary>
        <value><span data-ttu-id="83a83-588">Wątek.</span><span class="sxs-lookup"><span data-stu-id="83a83-588">The thread.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Event UnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " Usage="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-589">Występuje, gdy wyjątek wątku jest zgłaszany i nieprzechwycony podczas wykonywania delegata w postaci <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> lub <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-589">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-590">To zdarzenie jest zgłaszane, gdy wystąpił wyjątek, który został zgłoszony podczas wykonywania delegata w <xref:System.Windows.Threading.Dispatcher.Invoke%2A> postaci <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> lub nie został przechwycony.</span><span class="sxs-lookup"><span data-stu-id="83a83-590">This event is raised when an exception that was thrown during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is uncaught.</span></span>  
  
 <span data-ttu-id="83a83-591">Program obsługi może oznaczyć wyjątek jako obsłużony, co uniemożliwi wywoływanie wewnętrznego programu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="83a83-591">A handler can mark the exception as handled, which will prevent the internal exception handler from being called.</span></span>  
  
 <span data-ttu-id="83a83-592">Obsługa zdarzeń dla tego zdarzenia musi być zapisywana, aby uniknąć tworzenia wyjątków pomocniczych i wychwycić wystąpienia, które wystąpią.</span><span class="sxs-lookup"><span data-stu-id="83a83-592">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span> <span data-ttu-id="83a83-593">Zaleca się uniknięcie przydzielania pamięci lub wykonywania operacji związanych z intensywnym użyciem zasobów w programie obsługi.</span><span class="sxs-lookup"><span data-stu-id="83a83-593">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="83a83-594">To <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> zdarzenie zapewnia metodę <xref:System.Windows.Threading.Dispatcher.UnhandledException> niezgłaszania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="83a83-594">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="83a83-595"><xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> <xref:System.Windows.Threading.Dispatcher.UnhandledException> `false`Zdarzenie jest zgłaszane jako pierwsze, a jeśli wartość jest ustawiona na, zdarzenie nie zostanie zgłoszone. <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter></span><span class="sxs-lookup"><span data-stu-id="83a83-595">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledExceptionFilter">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledExceptionFilter As DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionFilterEventHandler ^ UnhandledExceptionFilter;" />
      <MemberSignature Language="F#" Value="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " Usage="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83a83-596">Występuje, gdy wyjątek wątku jest zgłaszany i wyrzucany podczas wykonywania delegata <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> w trybie lub <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> na etapie filtrowania.</span><span class="sxs-lookup"><span data-stu-id="83a83-596">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> when in the filter stage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-597">To zdarzenie jest zgłaszane w fazie filtru dla wyjątku, który jest wywoływany podczas wykonywania delegata w postaci <xref:System.Windows.Threading.Dispatcher.Invoke%2A> lub <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> i jest odchwycony.</span><span class="sxs-lookup"><span data-stu-id="83a83-597">This event is raised during the filter stage for an exception that is raised during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> and is uncaught.</span></span>  
  
 <span data-ttu-id="83a83-598">Stos wywołań nie jest odrany w tym momencie (wyjątek pierwszej szansy).</span><span class="sxs-lookup"><span data-stu-id="83a83-598">The call stack is not unwound at this point (first-chance exception).</span></span>  
  
 <span data-ttu-id="83a83-599">Obsługa zdarzeń dla tego zdarzenia musi być zapisywana, aby uniknąć tworzenia wyjątków pomocniczych i wychwycić wystąpienia, które wystąpią.</span><span class="sxs-lookup"><span data-stu-id="83a83-599">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span>  <span data-ttu-id="83a83-600">Zaleca się uniknięcie przydzielania pamięci lub wykonywania operacji związanych z intensywnym użyciem zasobów w programie obsługi.</span><span class="sxs-lookup"><span data-stu-id="83a83-600">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="83a83-601">To <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> zdarzenie zapewnia metodę <xref:System.Windows.Threading.Dispatcher.UnhandledException> niezgłaszania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="83a83-601">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="83a83-602"><xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> <xref:System.Windows.Threading.Dispatcher.UnhandledException> `false`Zdarzenie jest zgłaszane jako pierwsze, a jeśli wartość jest ustawiona na, zdarzenie nie zostanie zgłoszone. <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter></span><span class="sxs-lookup"><span data-stu-id="83a83-602">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="83a83-603">w celu dodania lub usunięcia programu obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="83a83-603">for adding or removing a handler for this event.</span></span>  <span data-ttu-id="83a83-604">Skojarzone wyliczenia:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="83a83-604">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ValidatePriority">
      <MemberSignature Language="C#" Value="public static void ValidatePriority (System.Windows.Threading.DispatcherPriority priority, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidatePriority(valuetype System.Windows.Threading.DispatcherPriority priority, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidatePriority (priority As DispatcherPriority, parameterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidatePriority(System::Windows::Threading::DispatcherPriority priority, System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="static member ValidatePriority : System.Windows.Threading.DispatcherPriority * string -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ValidatePriority (priority, parameterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-605">Priorytet do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="83a83-605">The priority to check.</span></span></param>
        <param name="parameterName"><span data-ttu-id="83a83-606">Ciąg, który będzie zwracany przez wyjątek, który występuje, jeśli priorytet jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="83a83-606">A string that will be returned by the exception that occurs if the priority is invalid.</span></span></param>
        <summary><span data-ttu-id="83a83-607">Określa, czy określony <see cref="T:System.Windows.Threading.DispatcherPriority" /> jest prawidłowy priorytet.</span><span class="sxs-lookup"><span data-stu-id="83a83-607">Determines whether the specified <see cref="T:System.Windows.Threading.DispatcherPriority" /> is a valid priority.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="83a83-608"><paramref name="priority" />jest nieprawidłowy <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-608"><paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcher.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83a83-609">Określa, czy wątek wywołujący ma dostęp do <see cref="T:System.Windows.Threading.Dispatcher" />tego.</span><span class="sxs-lookup"><span data-stu-id="83a83-609">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-610">Tylko wątek, w <xref:System.Windows.Threading.Dispatcher> którym jest tworzony, może uzyskać <xref:System.Windows.Threading.Dispatcher>dostęp do.</span><span class="sxs-lookup"><span data-stu-id="83a83-610">Only the thread the <xref:System.Windows.Threading.Dispatcher> is created on may access the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="83a83-611">Ta metoda jest publiczna; w związku z tym każdy wątek może sprawdzić, czy ma dostęp do <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="83a83-611">This method is public; therefore, any thread can check to see whether it has access to the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="83a83-612"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> Różnica między <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> i zwraca wartość logiczną, jeśli wątek <xref:System.Windows.Threading.Dispatcher> wywołujący nie ma dostępu do i zgłasza wyjątek. <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A></span><span class="sxs-lookup"><span data-stu-id="83a83-612">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean if the calling thread does not have access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83a83-613">Poniższy przykład używa <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> do określenia, czy wątek ma dostęp do wątku <xref:System.Windows.Controls.Button> , w którym został utworzony.</span><span class="sxs-lookup"><span data-stu-id="83a83-613">The following example uses <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="83a83-614">Metoda przyjmuje obiekt jako argument, który jest rzutowany na <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="83a83-614">The method takes an object as an argument, which is cast to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="83a83-615"><xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> Metoda<xref:System.Windows.Threading.Dispatcher> obiektu jestwywoływanawceluzweryfikowaniadostępudowątku.<xref:System.Windows.Controls.Button></span><span class="sxs-lookup"><span data-stu-id="83a83-615">The <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  
  
 <span data-ttu-id="83a83-616">Jeśli wątek wywołujący ma dostęp do programu <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Controls.Button> , zostanie on zaktualizowany przez samo <xref:System.Windows.Controls.Button>uzyskanie dostępu do elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="83a83-616">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="83a83-617">Jeśli wątek wywołujący nie ma dostępu, <xref:System.InvalidOperationException> jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="83a83-617">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  <span data-ttu-id="83a83-618">Ten przykład przechwytuje wyjątek i wypycha delegata, który akceptuje <xref:System.Windows.Controls.Button> jako argument, <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Controls.Button>do.</span><span class="sxs-lookup"><span data-stu-id="83a83-618">This example catches the exception and pushes a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="83a83-619">Spowoduje <xref:System.Windows.Threading.Dispatcher> to wykonanie zadania <xref:System.Windows.Controls.Button>aktualizowania.</span><span class="sxs-lookup"><span data-stu-id="83a83-619">This <xref:System.Windows.Threading.Dispatcher> will do the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccessverifyaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83a83-620">Wątek wywołujący nie ma dostępu do tego <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="83a83-620">The calling thread does not have access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></exception>
        <altmember cref="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Yield">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83a83-621">Tworzy obiekt oczekujący, który asynchronicznie daje kontrolę z powrotem do bieżącego dyspozytora i umożliwia dyspozytorowi przetworzenie innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-621">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield();" />
      <MemberSignature Language="F#" Value="static member Yield : unit -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83a83-622">Tworzy obiekt oczekujący, który asynchronicznie daje kontrolę z powrotem do bieżącego dyspozytora i umożliwia dyspozytorowi przetworzenie innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-622">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></summary>
        <returns><span data-ttu-id="83a83-623">Obiekt oczekujący, który asynchronicznie daje kontrolę z powrotem do bieżącego dyspozytora i umożliwia dyspozytorowi przetworzenie innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-623">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-624">Ta metoda zapewnia sposób tymczasowego zwolnienia kontroli wykonywania do bieżącego dyspozytora, dzięki czemu może wykonywać inne czynności, takie jak przetwarzanie innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-624">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="83a83-625">Użyj, lub `Await` w Visual Basic, operatora na zwracanej wartości, aby zwrócić kontrolę do bieżącego dyspozytora. `await`</span><span class="sxs-lookup"><span data-stu-id="83a83-625">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="83a83-626">Użyj tej metody, jeśli chcesz, aby aplikacja mogła przetwarzać zdarzenia, podczas gdy aplikacja wykonuje wiele pracy w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-626">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="83a83-627">Na przykład można użyć tej metody w długotrwałej pętli, która aktualizuje formant.</span><span class="sxs-lookup"><span data-stu-id="83a83-627">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 <span data-ttu-id="83a83-628">Ta metoda jest równoważna z wywołaniem <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> metody i <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>przekazaniem.</span><span class="sxs-lookup"><span data-stu-id="83a83-628">This method is equivalent to calling the <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> method and passing in <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield (priority As DispatcherPriority) As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="static member Yield : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="83a83-629">Priorytet, dla którego ma zostać zaplanowana kontynuacja.</span><span class="sxs-lookup"><span data-stu-id="83a83-629">The priority at which to schedule the continuation.</span></span></param>
        <summary><span data-ttu-id="83a83-630">Tworzy obiekt oczekujący, który asynchronicznie daje kontrolę z powrotem do bieżącego dyspozytora i umożliwia dyspozytorowi przetworzenie innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-630">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span>  <span data-ttu-id="83a83-631">Pracy, która występuje, gdy sterowanie powraca do kodu oczekującego na wynik tej metody jest zaplanowana z określonym priorytetem.</span><span class="sxs-lookup"><span data-stu-id="83a83-631">The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</span></span></summary>
        <returns><span data-ttu-id="83a83-632">Obiekt oczekujący, który asynchronicznie daje kontrolę z powrotem do bieżącego dyspozytora i umożliwia dyspozytorowi przetworzenie innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-632">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83a83-633">Ta metoda zapewnia sposób tymczasowego zwolnienia kontroli wykonywania do bieżącego dyspozytora, dzięki czemu może wykonywać inne czynności, takie jak przetwarzanie innych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="83a83-633">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="83a83-634">Użyj, lub `Await` w Visual Basic, operatora na zwracanej wartości, aby zwrócić kontrolę do bieżącego dyspozytora. `await`</span><span class="sxs-lookup"><span data-stu-id="83a83-634">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="83a83-635">Użyj tej metody, jeśli chcesz, aby aplikacja mogła przetwarzać zdarzenia, podczas gdy aplikacja wykonuje wiele pracy w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="83a83-635">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="83a83-636">Na przykład można użyć tej metody w długotrwałej pętli, która aktualizuje formant.</span><span class="sxs-lookup"><span data-stu-id="83a83-636">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
