<Type Name="DispatcherUnhandledExceptionFilterEventArgs" FullName="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6cda9e5e49f1f83bd343cdc19f387512994784a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DispatcherUnhandledExceptionFilterEventArgs : System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DispatcherUnhandledExceptionFilterEventArgs extends System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DispatcherUnhandledExceptionFilterEventArgs&#xA;Inherits DispatcherEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherUnhandledExceptionFilterEventArgs sealed : System::Windows::Threading::DispatcherEventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="deb8b-101">Udostępnia dane dla <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="deb8b-101">Provides data for the <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb8b-102"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenie występuje, gdy kod wykonywania poprzez <xref:System.Windows.Threading.Dispatcher> zgłasza wyjątek, który nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="deb8b-102">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event occurs when code executing by way of the <xref:System.Windows.Threading.Dispatcher> throws an exception which is not handled.</span></span>  
  
 <span data-ttu-id="deb8b-103"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzeń umożliwia nie wygenerował <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="deb8b-103">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="deb8b-104"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzenie jest wywoływane po pierwsze i w razie <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> ustawiono `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzenie nie zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="deb8b-104">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb8b-105">Pobiera wyjątek zgłoszony podczas wykonywania kodu i Dyspozytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb8b-105">Gets the exception that was raised when executing code by way of the dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb8b-106">Wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb8b-106">The exception.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      </Docs>
    </Member>
    <Member MemberName="RequestCatch">
      <MemberSignature Language="C#" Value="public bool RequestCatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequestCatch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestCatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequestCatch { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="deb8b-107">Pobiera lub ustawia, czy wyjątek powinien zostać zgłoszony i wywoływane programy obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb8b-107">Gets or sets whether the exception should be caught and the event handlers called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="deb8b-108">
            <see langword="true" /> Jeśli <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> powinna być zgłoszono; w przeciwnym razie; <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb8b-108">
              <see langword="true" /> if the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> should be raised; otherwise; <see langword="false" />.</span>
          </span>
          <span data-ttu-id="deb8b-109">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb8b-109">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb8b-110"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Zdarzeń umożliwia nie wygenerował <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="deb8b-110">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="deb8b-111"><xref:System.Windows.Threading.Dispatcher.UnhandledException> Jest wywoływane po pierwsze i w razie <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> ustawiono `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException> zdarzenie nie zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="deb8b-111">The <xref:System.Windows.Threading.Dispatcher.UnhandledException> is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 <span data-ttu-id="deb8b-112">Poprzednią procedurę obsługi zdarzeń multiemisji może być już ustawić tę właściwość na `false`, wskazującą, czy wyjątek nie zostanie przechwycony.</span><span class="sxs-lookup"><span data-stu-id="deb8b-112">A previous handler in the event multicast might have already set this property to `false`, indicating that the exception will not be caught.</span></span>  <span data-ttu-id="deb8b-113">Zachowanie "catch nie" spowoduje zastąpienie wszystkich innych, ponieważ prawdopodobnie oznacza scenariusza debugowania.</span><span class="sxs-lookup"><span data-stu-id="deb8b-113">The "don't catch" behavior will override all others because it most likely means a debugging scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      </Docs>
    </Member>
  </Members>
</Type>