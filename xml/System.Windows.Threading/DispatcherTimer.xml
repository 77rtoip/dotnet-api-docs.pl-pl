<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DispatcherTimer.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53bc5bd6e538ac42e034d4b00fcacb3cd0db5d822.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bc5bd6e538ac42e034d4b00fcacb3cd0db5d822</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>A timer that is integrated into the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> queue which is processed at a specified interval of time and at a specified priority.</source>
          <target state="translated">Czasomierz, który jest zintegrowany z <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> kolejki, które są przetwarzane w określonym interwale czasu i z priorytetem.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> is reevaluated at the top of every <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> Jest ponownie oceniane w górnej części każdego <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> pętli.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</source>
          <target state="translated">Czasomierze nie ma gwarancji do wykonania, dokładnie tak, gdy występuje przedział czasu, ale ma gwarancji nie wykonać przed wystąpieniem przedział czasu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>This is because <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operations are placed on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue like other operations.</source>
          <target state="translated">Jest to spowodowane <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operacji są umieszczane na <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> kolejki, podobnie jak inne operacje.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operation executes is dependent on the other jobs in the queue and their priorities.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> wykonuje operację jest zależny od innych zadań w kolejce i ich priorytety.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>If a <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> is used in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application, it is worth noting that the <ph id="ph3">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> runs on a different thread then the <ph id="ph4">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> jest używany w <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> aplikacji, warto zauważyć, że <ph id="ph3">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> działa w innym wątku, a następnie <ph id="ph4">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> wątku.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>In order to access objects on the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread, it is necessary to post the operation onto the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread using <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>.</source>
          <target state="translated">Aby uzyskać dostęp do obiektów na <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> wątku, konieczne jest po operacji na <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> z <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> wątku przy użyciu <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> lub <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>Reasons for using a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> opposed to a <ph id="ph2">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> are that the <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the same thread as the <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> and a <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherPriority&gt;</ph> can be set on the <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
          <target state="translated">Kiedy korzystać z <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> przeciwieństwie do <ph id="ph2">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> działa na tym samym wątku, co <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> i <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherPriority&gt;</ph> można ustawić <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> will keep an object alive whenever the object's methods are bound to the timer.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> będzie podtrzymywania obiektu zawsze, gdy metody obiektu są powiązane z czasomierza.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> that updates the contents of a <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> and calls the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> method on the <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> który aktualizuje zawartość <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> i wywołuje <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> metoda <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object named <ph id="ph2">`dispatcherTimer`</ph> is created.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> obiektu o nazwie <ph id="ph2">`dispatcherTimer`</ph> jest tworzony.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The event handler <ph id="ph1">`dispatcherTimer_Tick`</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event of <ph id="ph3">`dispatcherTimer`</ph>.</source>
          <target state="translated">Program obsługi zdarzeń <ph id="ph1">`dispatcherTimer_Tick`</ph> jest dodawany do <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> zdarzenie <ph id="ph3">`dispatcherTimer`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> is set to 1 second using a <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> object, and the timer is started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> Ma ustawioną wartość 1 sekundę przy użyciu <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> obiekt i czasomierz jest uruchomiona.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event handler updates a <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> that displays the current second, and it calls <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> on the <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> Aktualizacje programu obsługi zdarzeń <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> który wyświetla bieżącą drugi, i wywołuje <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> na <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.#ctor">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the current thread at <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherPriority.Background&gt;</ph> priority.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> działa na <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> bieżącego wątku w <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherPriority.Background&gt;</ph> priorytet.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.#ctor">
          <source>To specify a different <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use the following constructor: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Aby określić inną <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, użyj następującego konstruktora: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">Priorytet, jaką można wywołać czasomierza.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class which processes timer events at the specified priority.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> klasy, która przetwarza zdarzenia w określony priorytet.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> działa na <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> bieżącego wątku.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
          <source>To specify a different <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use the following constructor: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;</ph>.</source>
          <target state="translated">Aby określić inną <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, użyj następującego konstruktora: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">Priorytet, jaką można wywołać czasomierza.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
          <source>The dispatcher the timer is associated with.</source>
          <target state="translated">Dyspozytor czasomierz jest skojarzony.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class which runs on the specified <ph id="ph2">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> at the specified priority.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> klasy, w którym jest uruchomiona na określonym <ph id="ph2">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> na określony priorytet.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
          <source><ph id="ph1">&lt;paramref name="dispatcher" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dispatcher" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>The period of time between ticks.</source>
          <target state="translated">Okres czasu między taktami.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">Priorytet, jaką można wywołać czasomierza.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>The event handler to call when the <ph id="ph1">&lt;see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /&gt;</ph> event occurs.</source>
          <target state="translated">Program obsługi zdarzeń do wywołania, gdy <ph id="ph1">&lt;see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /&gt;</ph> zdarzenie.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>The dispatcher the timer is associated with.</source>
          <target state="translated">Dyspozytor czasomierz jest skojarzony.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class which uses the specified time interval, priority, event handler, and <ph id="ph2">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> klasy, który używa określony interwał czasu, priorytet, program obsługi zdarzeń, a <ph id="ph2">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source><ph id="ph1">&lt;paramref name="interval" /&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="interval" /&gt;</ph> jest mniejsza niż 0 lub większą niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> skojarzony z tym <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
          <source>The dispatcher.</source>
          <target state="translated">Dyspozytor.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A&gt;</ph> property is determined at the creation of the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A&gt;</ph> Właściwości jest określany przy tworzeniu <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> property is set to the current <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> at the time of creation unless a different <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> is specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> Właściwość jest ustawiona na bieżącą <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> w czasie tworzenia chyba że innej <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> jest określona.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>Gets or sets the period of time between timer ticks.</source>
          <target state="translated">Pobiera lub ustawia czas między taktami.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The period of time between ticks.</source>
          <target state="translated">Okres czasu między taktami.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The default is 00:00:00.</source>
          <target state="translated">Wartość domyślna to 00:00:00.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</source>
          <target state="translated">Czasomierze nie ma gwarancji do wykonania, dokładnie tak, gdy występuje przedział czasu, ale ma gwarancji nie wykonać przed wystąpieniem przedział czasu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>This is because <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operations are placed on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue like other operations.</source>
          <target state="translated">Jest to spowodowane <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operacji są umieszczane na <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> kolejki, podobnie jak inne operacje.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operation executes is dependent on the other jobs in the queue and their priorities.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> wykonuje operację jest zależny od innych zadań w kolejce i ich priorytety.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>A new <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object named <ph id="ph2">`dispatcherTimer`</ph> is created.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> obiektu o nazwie <ph id="ph2">`dispatcherTimer`</ph> jest tworzony.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The event handler <ph id="ph1">`dispatcherTimer_Tick`</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event.</source>
          <target state="translated">Program obsługi zdarzeń <ph id="ph1">`dispatcherTimer_Tick`</ph> jest dodawany do <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> is set to 1 second using a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> Ma ustawioną wartość 1 sekundę przy użyciu <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source><ph id="ph1">&lt;paramref name="interval" /&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> milliseconds.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="interval" /&gt;</ph> jest mniejsza niż 0 lub większą niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> milisekund.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>Gets or sets a value that indicates whether the timer is running.</source>
          <target state="translated">Pobiera lub ustawia wartość wskazującą, czy czasomierz jest uruchomiona.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the timer is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Włączenie czasomierza; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph> for the <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event to be raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> należy wybrać opcję <ph id="ph2">`true`</ph> dla <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> się zdarzenia.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> ustawia <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> do <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> ustawia <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> do <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>A new <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object named <ph id="ph2">`dispatcherTimer`</ph> is created.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> obiektu o nazwie <ph id="ph2">`dispatcherTimer`</ph> jest tworzony.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>The event handler <ph id="ph1">`dispatcherTimer_Tick`</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event.</source>
          <target state="translated">Program obsługi zdarzeń <ph id="ph1">`dispatcherTimer_Tick`</ph> jest dodawany do <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> is set to 1 second using a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> Ma ustawioną wartość 1 sekundę przy użyciu <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>Starts the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</source>
          <target state="translated">Uruchamia <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> when the timer is started stops the timer.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> do <ph id="ph2">`false`</ph> po uruchomieniu czasomierza zatrzymuje czasomierza.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`true`</ph> when the timer is stopped starts the timer.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> do <ph id="ph2">`true`</ph> po zatrzymaniu czasomierza uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> do <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> resets the timer <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> Resetuje licznik <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>A new <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object named <ph id="ph2">`dispatcherTimer`</ph> is created.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> obiektu o nazwie <ph id="ph2">`dispatcherTimer`</ph> jest tworzony.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>The event handler <ph id="ph1">`dispatcherTimer_Tick`</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event.</source>
          <target state="translated">Program obsługi zdarzeń <ph id="ph1">`dispatcherTimer_Tick`</ph> jest dodawany do <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> is set to 1 second using a <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> Ma ustawioną wartość 1 sekundę przy użyciu <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.Stop">
          <source>Stops the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</source>
          <target state="translated">Zatrzymuje <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Stop">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> when the timer is started stops the timer.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> do <ph id="ph2">`false`</ph> po uruchomieniu czasomierza zatrzymuje czasomierza.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Stop">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`true`</ph> when the timer is stopped starts the timer.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> do <ph id="ph2">`true`</ph> po zatrzymaniu czasomierza uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Stop">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> ustawia <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> do <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.Tag">
          <source>Gets or sets a user-defined data object.</source>
          <target state="translated">Pobiera lub ustawia obiekt danych zdefiniowane przez użytkownika.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Tag">
          <source>The user-defined data.</source>
          <target state="translated">Dane zdefiniowane przez użytkownika.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Tag">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="E:System.Windows.Threading.DispatcherTimer.Tick">
          <source>Occurs when the timer interval has elapsed.</source>
          <target state="translated">Występuje po upłynięciu interwału czasomierza.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Threading.DispatcherTimer.Tick">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event handler.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Threading.DispatcherTimer.Tick">
          <source>The event handler updates a <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> that displays the current second, and it calls <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</source>
          <target state="translated">Aktualizacje programu obsługi zdarzeń <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> który wyświetla bieżącą drugi, i wywołuje <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> na <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>