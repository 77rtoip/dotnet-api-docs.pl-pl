<Type Name="DispatcherOperation" FullName="System.Windows.Threading.DispatcherOperation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="276991a089f904890e1cf149404079bfbc0da980" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69435349" /></Metadata><TypeSignature Language="C#" Value="public class DispatcherOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DispatcherOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherOperation" />
  <TypeSignature Language="F#" Value="type DispatcherOperation = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d0eed-101">Reprezentuje obiekt, który jest używany do współpracy z operacją, która została opublikowana <see cref="T:System.Windows.Threading.Dispatcher" /> w kolejce.</span><span class="sxs-lookup"><span data-stu-id="d0eed-101">Represents an object that is used to interact with an operation that has been posted to the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0eed-102"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A><xref:System.Windows.Threading.DispatcherOperation> zwraca obiekt, gdy jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="d0eed-102"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object when it is called.</span></span>  
  
 <span data-ttu-id="d0eed-103">Obiekt może być używany do współdziałania z delegatem <xref:System.Windows.Threading.Dispatcher> w kolejce, takich jak zmiana priorytetu operacji lub przerywanie operacji. <xref:System.Windows.Threading.DispatcherOperation></span><span class="sxs-lookup"><span data-stu-id="d0eed-103">The <xref:System.Windows.Threading.DispatcherOperation> object can be used to interact with the delegate on the <xref:System.Windows.Threading.Dispatcher> queue, such as changing the priority of the operation or aborting the operation.</span></span>  
  
 <span data-ttu-id="d0eed-104">Aby uzyskać wartość zwracaną wywołanego delegata, należy użyć <xref:System.Windows.Threading.DispatcherOperation.Result%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d0eed-104">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 <span data-ttu-id="d0eed-105">Nie <xref:System.Windows.Threading.DispatcherOperation> jest granicą obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="d0eed-105">The <xref:System.Windows.Threading.DispatcherOperation> is not an exception handling boundary.</span></span> <span data-ttu-id="d0eed-106">Oznacza to, że wyjątki są obsługiwane przez <xref:System.Windows.Threading.Dispatcher> program i nie są zachowywane przez operację.</span><span class="sxs-lookup"><span data-stu-id="d0eed-106">This means that exceptions are handled by the <xref:System.Windows.Threading.Dispatcher> and are not preserved by the operation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public bool Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Function Abort () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; bool" Usage="dispatcherOperation.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0eed-107">Przerywa operację.</span><span class="sxs-lookup"><span data-stu-id="d0eed-107">Aborts the operation.</span></span></summary>
        <returns><span data-ttu-id="d0eed-108"><see langword="true" />Jeśli operacja została przerwana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d0eed-108"><see langword="true" /> if the operation was aborted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0eed-109">Jeśli operacja jest już w toku, ta metoda `false`zwróci wartość.</span><span class="sxs-lookup"><span data-stu-id="d0eed-109">If an operation is already in progress, this method will return `false`.</span></span>  
  
 <span data-ttu-id="d0eed-110">Gdy operacja zostanie <xref:System.Windows.Threading.DispatcherOperation.Status%2A> przerwana, <xref:System.Windows.Threading.DispatcherOperation> <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted> jest ustawiona na, a zdarzeniejestzgłaszane.<xref:System.Windows.Threading.DispatcherOperation.Aborted></span><span class="sxs-lookup"><span data-stu-id="d0eed-110">When an operation is aborted, the <xref:System.Windows.Threading.DispatcherOperation.Status%2A> of the <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted> and the <xref:System.Windows.Threading.DispatcherOperation.Aborted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Threading.DispatcherOperation.Aborted" />
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public event EventHandler Aborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Aborted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherOperation.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Aborted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Aborted;" />
      <MemberSignature Language="F#" Value="member this.Aborted : EventHandler " Usage="member this.Aborted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0eed-111">Występuje, gdy operacja zostanie przerwana.</span><span class="sxs-lookup"><span data-stu-id="d0eed-111">Occurs when the operation is aborted.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherOperation.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0eed-112">Występuje po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="d0eed-112">Occurs when the operation has completed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherOperation.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0eed-113"><see cref="T:System.Windows.Threading.Dispatcher" /> Pobiera, aby operacja była opublikowana.</span><span class="sxs-lookup"><span data-stu-id="d0eed-113">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> that the operation was posted to.</span></span></summary>
        <value><span data-ttu-id="d0eed-114">Dyspozytor.</span><span class="sxs-lookup"><span data-stu-id="d0eed-114">The dispatcher.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.TaskAwaiter GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::TaskAwaiter GetAwaiter();" />
      <MemberSignature Language="F#" Value="member this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="dispatcherOperation.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0eed-115">Zwraca obiekt, który jest powiadamiany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="d0eed-115">Returns an object that is notified when the asynchronous operation is finished.</span></span></summary>
        <returns><span data-ttu-id="d0eed-116">Obiekt, który jest powiadamiany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="d0eed-116">An object that is notified when the asynchronous operation is finished.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeDelegateCore">
      <MemberSignature Language="C#" Value="protected virtual object InvokeDelegateCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object InvokeDelegateCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeDelegateCore () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ InvokeDelegateCore();" />
      <MemberSignature Language="F#" Value="abstract member InvokeDelegateCore : unit -&gt; obj&#xA;override this.InvokeDelegateCore : unit -&gt; obj" Usage="dispatcherOperation.InvokeDelegateCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0eed-117">Rozpoczyna operację, która jest skojarzona z <see cref="T:System.Windows.Threading.DispatcherOperation" />tym elementem.</span><span class="sxs-lookup"><span data-stu-id="d0eed-117">Begins the operation that is associated with this <see cref="T:System.Windows.Threading.DispatcherOperation" />.</span></span></summary>
        <returns><span data-ttu-id="d0eed-118"><see langword="null" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="d0eed-118"><see langword="null" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Threading.DispatcherPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As DispatcherPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherPriority Priority { System::Windows::Threading::DispatcherPriority get(); void set(System::Windows::Threading::DispatcherPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Windows.Threading.DispatcherPriority with get, set" Usage="System.Windows.Threading.DispatcherOperation.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0eed-119">Pobiera lub ustawia priorytet operacji w <see cref="T:System.Windows.Threading.Dispatcher" /> kolejce.</span><span class="sxs-lookup"><span data-stu-id="d0eed-119">Gets or sets the priority of the operation in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
        <value><span data-ttu-id="d0eed-120">Priorytet delegata kolejki.</span><span class="sxs-lookup"><span data-stu-id="d0eed-120">The priority of the delegate on the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Windows.Threading.DispatcherOperation.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0eed-121">Pobiera wynik operacji po jej zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="d0eed-121">Gets the result of the operation after it has completed.</span></span></summary>
        <value><span data-ttu-id="d0eed-122">Wynik operacji-lub — <see langword="null" /> Jeśli operacja nie została ukończona.</span><span class="sxs-lookup"><span data-stu-id="d0eed-122">The result of the operation -or- <see langword="null" /> if the operation has not completed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Threading.DispatcherOperationStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherOperationStatus Status { System::Windows::Threading::DispatcherOperationStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Windows.Threading.DispatcherOperationStatus" Usage="System.Windows.Threading.DispatcherOperation.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0eed-123">Pobiera bieżący stan operacji.</span><span class="sxs-lookup"><span data-stu-id="d0eed-123">Gets the current status of the operation.</span></span></summary>
        <value><span data-ttu-id="d0eed-124">Stan operacji.</span><span class="sxs-lookup"><span data-stu-id="d0eed-124">The status of the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0eed-125">Etapy <xref:System.Windows.Threading.DispatcherOperation> są <xref:System.Windows.Threading.DispatcherOperationStatus.Pending>, ,<xref:System.Windows.Threading.DispatcherOperationStatus.Executing>i .<xref:System.Windows.Threading.DispatcherOperationStatus.Completed></span><span class="sxs-lookup"><span data-stu-id="d0eed-125">The stages of a <xref:System.Windows.Threading.DispatcherOperation> are <xref:System.Windows.Threading.DispatcherOperationStatus.Pending>, <xref:System.Windows.Threading.DispatcherOperationStatus.Executing>, and <xref:System.Windows.Threading.DispatcherOperationStatus.Completed>.</span></span>  <span data-ttu-id="d0eed-126">W dowolnym momencie przed ukończeniem operacji można ustawić stan na <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="d0eed-126">At any point before the operation has completed, the status can be set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Task" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Task { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task" Usage="System.Windows.Threading.DispatcherOperation.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0eed-127">Pobiera element <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący bieżącą operację.</span><span class="sxs-lookup"><span data-stu-id="d0eed-127">Gets a <see cref="T:System.Threading.Tasks.Task`1" /> that represents the current operation.</span></span></summary>
        <value><span data-ttu-id="d0eed-128">Obiekt, który reprezentuje bieżącą operację.</span><span class="sxs-lookup"><span data-stu-id="d0eed-128">An object that represents the current operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d0eed-129">Czeka na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="d0eed-129">Waits for the operation to finish.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherOperationStatus Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait () As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperationStatus Wait();" />
      <MemberSignature Language="F#" Value="member this.Wait : unit -&gt; System.Windows.Threading.DispatcherOperationStatus" Usage="dispatcherOperation.Wait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0eed-130">Czeka na zakończenie operacji</span><span class="sxs-lookup"><span data-stu-id="d0eed-130">Waits for the operation to complete</span></span></summary>
        <returns><span data-ttu-id="d0eed-131">Stan operacji.</span><span class="sxs-lookup"><span data-stu-id="d0eed-131">The status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0eed-132">Aby uzyskać wartość zwracaną wywołanego delegata, należy użyć <xref:System.Windows.Threading.DispatcherOperation.Result%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d0eed-132">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d0eed-133"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" />jest równe <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span><span class="sxs-lookup"><span data-stu-id="d0eed-133"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> is equal to <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span></span>  <span data-ttu-id="d0eed-134">Może się to zdarzyć podczas oczekiwania na operację, która jest już wykonywana w tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="d0eed-134">This can occur when waiting for an operation that is already executing on the same thread.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherOperationStatus Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperationStatus Wait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan -&gt; System.Windows.Threading.DispatcherOperationStatus" Usage="dispatcherOperation.Wait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d0eed-135">Maksymalny czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="d0eed-135">The maximum period of time to wait.</span></span></param>
        <summary><span data-ttu-id="d0eed-136">Czeka na zakończenie operacji w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="d0eed-136">Waits for the operation to complete in the specified period of time.</span></span></summary>
        <returns><span data-ttu-id="d0eed-137">Stan operacji.</span><span class="sxs-lookup"><span data-stu-id="d0eed-137">The status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0eed-138">Aby uzyskać wartość zwracaną wywołanego delegata, należy użyć <xref:System.Windows.Threading.DispatcherOperation.Result%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d0eed-138">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d0eed-139"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" />jest równe <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span><span class="sxs-lookup"><span data-stu-id="d0eed-139"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> is equal to <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span></span>  <span data-ttu-id="d0eed-140">Może się to zdarzyć podczas oczekiwania na operację, która jest już wykonywana w tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="d0eed-140">This can occur when waiting for an operation that is already executing on the same thread.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
