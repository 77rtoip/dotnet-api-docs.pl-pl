<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9127b6636e86acc136c4dfc774ac26d983a775c8" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56767399" /></Metadata><TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje standardowych funkcji formantów lub bibliotek, które przechowywanie i pobieranie ustawień aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj można dodać obsługę ustawienia aplikacji do aplikacji, tworząc klasę otoki ustawienia, która jest pochodną <xref:System.Configuration.ApplicationSettingsBase>, a następnie dodaj specjalne właściwości do klasy. Jednak to podejście nie wystarczająco hermetyzować ustawienia aplikacji dotyczące kontrolkę tak, aby jego kontenera jest chroniony przed szczegółowe informacje. <xref:System.Configuration.IPersistComponentSettings> Interfejs zapewnia aplikacji za pomocą standardowego interfejsu do komunikowania się aplikacji ustawienia stanu żądań zmiany moduł sterowania, składnika lub biblioteki. Narzędzi czasu projektowania jest także zależeć od prawidłowego zarządzania formanty i składniki w tym interfejsie.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Ustawienia aplikacji dotyczące kontrolek niestandardowych</related>
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje kontrolki ustawienia aplikacji na odpowiadające im właściwości i aktualizuje stan formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogólnie rzecz biorąc <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> metoda wykonuje dwie podstawowe operacje:  
  
-   Sprawia, że każde wystąpienie ustawienia aplikacji znajdujących się za pomocą kontroli można odświeżyć wartości właściwości ustawienia swojej aplikacji, zwykle przez wywołanie metody ich <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metody.  
  
-   Zgodnie z wymaganiami aktualizuje te właściwości ogólnych, które są zależne od tych ustawień wczytywanych właściwości. Na przykład, jeśli klasa ustawień zawiera `location` właściwość ustawień <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> upewnij się, że kontrolka <xref:System.Windows.Forms.Control.Location%2A> właściwość zostanie zaktualizowany w celu odzwierciedlenia ustawienie wczytywanych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Właściwości ustawień aplikacji formantu powoduje przywrócenie wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> zwykle wywołania metod <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metoda dla każdego wystąpienia klasy ustawienia aplikacji zawiera.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Utrzymuje właściwości ustawień aplikacji formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Metoda zapisuje wartości właściwości kontrolki: ustawienia aplikacji w magazynie powiązane dane. Technika magazynu i serializacja danych używa metody zależy od ustawienia skojarzonego z każdej klasy ustawienia za pośrednictwem <xref:System.Configuration.SettingsProviderAttribute>. Wybór Dostawca ustawień można zastąpić za pomocą <xref:System.Configuration.ISettingsProviderService> interfejsu.  
  
> [!NOTE]
>  Jeśli <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> właściwość jest `true`, formant powinien wywoływać <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> we własnym <xref:System.Windows.Forms.Control.Dispose%2A> metody, aby automatycznie przechowywania danych konfiguracji formantu przed zakończeniem aplikacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kontrolka automatycznie utrwalać jego właściwości ustawień aplikacji.</summary>
        <value><see langword="true" /> Jeśli kontrolka ma automatycznie utrwalić stanu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli formant zawiera dane konfiguracyjne, zwykle utrwali tych danych w odpowiedzi na jawnym wywołaniem <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> metody lub czasami niejawnie podczas formantu <xref:System.Windows.Forms.Control.Dispose%2A> metoda jest wywoływana. <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Właściwość określa, czy formant automatycznie będzie się powtarzał jego dane konfiguracji po jej usunięciu.  
  
 Wartość domyślna <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> jest zależna od implementacji formantu. Dokumentacja dla kontrolki powinna wskazywać, czy używa ustawienia aplikacji, jakie dane są utrwalane i jaka domyślna wartość <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób właściwe dla formantu sprawdzić wartość <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> właściwości, zanim spróbuje automatycznie utrwalić danych konfiguracji.  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość klucz Ustawienia aplikacji dla bieżącego wystąpienia formantu.</summary>
        <value>Element <see cref="T:System.String" /> zawierający klucz Ustawienia dla bieżącego wystąpienia formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> właściwość do rozróżniania grup właściwości ustawień aplikacji, gdy istnieje wiele wystąpień tej samej klasy otoki. Na przykład jeśli formant zawiera klasę otoki skojarzony, a następnie umieszczenie wiele wystąpień tej samej kontrolki w tej samej aplikacji będzie zazwyczaj wynikiem wielu wystąpień klasy otoki. Wymagany jest klucz Ustawienia, tylko wtedy, gdy dane konfiguracji, który różni się na podstawie poszczególnych wystąpień; na przykład lokalizacja dynamicznie określonym położeniem kontrolki.  
  
 Następujące zasady ogólne dotyczą użytkowania <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   Kontrolki, takie jak każda klasa może zawierać zero lub więcej klas ustawienia aplikacji, pochodzące z <xref:System.Configuration.ApplicationSettingsBase>. Każda klasa ustawień zawiera swój własny <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> właściwość, która pomaga odróżnić wiele wystąpień tej klasy.  
  
-   Formant należy oddzielić swoje dane na wystąpienie i jego udostępnionych danych na różne ustawienia klasy.  
  
-   Kontrolki z wszelkimi danymi konfiguracji poszczególnych wystąpień `get` akcesor <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> właściwości powinny domyślnie <xref:System.Windows.Forms.Control.Name%2A> formantu. W większości przypadków nazwą formantu jest unikatowa w obrębie aplikacji. Jeśli kontrolka zawiera tylko dane konfiguracji udostępnione `get` powinny domyślnie `null`.  
  
-   `set` Metody dostępu dla tej właściwości powinny być zrealizowane w celu rozróżnienia między klasami ustawienia zawierające poszczególnych wystąpień i dane konfiguracji udostępnionej. Dla każdej klasy ustawienia zawierające dane na wystąpienie `set` należy po prostu przekazywane do <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> właściwość klasy ustawienia. Dla ustawienia klas zawierający udostępnionych danych `set` należy wykonywać żadnej akcji dla tej klasy ustawienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Ustawienia aplikacji dotyczące kontrolek niestandardowych</related>
      </Docs>
    </Member>
  </Members>
</Type>