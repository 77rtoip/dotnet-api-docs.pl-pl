<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7334668a390ddea282822d40a701007c04e22340" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129496" /></Metadata><TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje standardowe funkcje formantów lub bibliotek, które przechowują i pobierają ustawienia aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle do aplikacji można dodać obsługę ustawień aplikacji przez utworzenie klasy otoki ustawień, która jest pochodną od <xref:System.Configuration.ApplicationSettingsBase>, a następnie dodanie specjalnych właściwości do tej klasy. Jednak takie podejście nie zapewnia wystarczającej hermetyzowania ustawień aplikacji dla kontrolki, aby jej kontener był chroniony przed szczegółowymi informacjami. <xref:System.Configuration.IPersistComponentSettings> Interfejs udostępnia aplikację ze standardowym interfejsem do przekazywania żądań zmiany stanu ustawień aplikacji do modułu sterującego, składnika lub biblioteki. Narzędzia czasu projektowania także zależą od tego interfejsu, aby prawidłowo zarządzać kontrolkami i składnikami.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Ustawienia aplikacji dotyczące kontrolek niestandardowych</related>
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje ustawienia aplikacji kontrolki do odpowiednich właściwości i aktualizuje stan formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogólnie rzecz biorąc, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> Metoda wykonuje dwie podstawowe operacje:  
  
-   Powoduje to, że każde wystąpienie ustawień aplikacji zawarte przez kontrolkę odświeża wartości właściwości ustawień aplikacji, zazwyczaj wywołując ich <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metody.  
  
-   W razie potrzeby aktualizuje te właściwości ogólne, które są zależne od tych właściwości ponownie załadowanych ustawień. Na przykład jeśli Klasa Settings zawierała `location` Właściwość Settings, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> należy <xref:System.Windows.Forms.Control.Location%2A> upewnić się, że właściwość kontrolki zostanie zaktualizowana w celu odzwierciedlenia tego ponownie załadowanego ustawienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje właściwości ustawień aplikacji kontrolki do ich wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> metody zwykle <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> wywołuje metodę dla każdego wystąpienia klasy ustawień aplikacji, która zawiera.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zachowuje właściwości ustawień aplikacji kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Metoda zapisuje wartości właściwości ustawień aplikacji kontrolki w skojarzonym magazynie danych. Użycie metody do przechowywania i serializacji danych jest określane przez dostawcę ustawień skojarzoną z każdą klasą ustawień za pośrednictwem <xref:System.Configuration.SettingsProviderAttribute>. Wybór dostawcy ustawień można zastąpić za pomocą <xref:System.Configuration.ISettingsProviderService> interfejsu.  
  
> [!NOTE]
>  Jeśli właściwość ma `true`wartość, formant powinien wywołać <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> własną <xref:System.Windows.Forms.Control.Dispose%2A> metodę, aby dane konfiguracji kontrolki były przechowywane automatycznie przed zakończeniem aplikacji. <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant powinien automatycznie utrwalać właściwości ustawień aplikacji.</summary>
        <value><see langword="true" />Jeśli formant powinien automatycznie utrzymywać swój stan; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli kontrolka zawiera dane konfiguracji, zwykle zachowuje te dane w odpowiedzi na jawne wywołanie <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> metody lub czasami niejawnie, gdy wywoływana jest <xref:System.Windows.Forms.Control.Dispose%2A> Metoda kontrolki. Właściwość <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> określa, czy formant automatycznie utrzymuje dane konfiguracji, gdy zostanie usunięty.  
  
 Wartość domyślna jest <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> zależna od implementacji formantu. Dokumentacja kontrolki powinna wskazywać, czy używa ona ustawień aplikacji, jakie dane są utrwalane i jaka jest wartość <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> domyślna właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje właściwy sposób, aby formant sprawdzał wartość <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> właściwości przed próbą automatycznego utrwalania danych konfiguracyjnych.  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość klucza ustawień aplikacji dla bieżącego wystąpienia formantu.</summary>
        <value>A <see cref="T:System.String" /> zawierający klucz ustawień dla bieżącego wystąpienia formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> Użyj właściwości, aby odróżnić grupy właściwości ustawienia aplikacji, gdy istnieje wiele wystąpień tej samej klasy otoki. Na przykład, Jeśli kontrolka zawiera skojarzoną klasę otoki, umieszczenie wielu wystąpień tej samej kontrolki w tej samej aplikacji zwykle spowoduje powstanie wielu wystąpień klasy otoki. Klucz ustawień jest wymagany tylko wtedy, gdy dane konfiguracji różnią się w zależności od wystąpienia; na przykład lokalizacja dynamicznie umieszczonych kontrolek.  
  
 Następujące reguły ogólne mają zastosowanie do <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   Kontrolka, podobnie jak każda klasa, może zawierać zero lub więcej klas ustawień aplikacji pochodzących od <xref:System.Configuration.ApplicationSettingsBase>. Każda Klasa ustawień zawiera własną <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> właściwość, która pomaga odróżnić wiele wystąpień tej klasy.  
  
-   Kontrolka powinna oddzielić swoje dane poszczególnych wystąpień i ich udostępnione dane do różnych klas ustawień.  
  
-   W przypadku kontrolki z dowolnymi danymi `get` konfiguracyjnymi dla poszczególnych wystąpień metoda dostępu <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> do <xref:System.Windows.Forms.Control.Name%2A> właściwości powinna domyślnie mieć wartość kontrolki. W większości przypadków nazwa formantu będzie unikatowa w obrębie aplikacji. Jeśli formant zawiera tylko udostępnione dane konfiguracji, `get` powinien `null`domyślnie mieć wartość.  
  
-   `set` Metoda dostępu dla tej właściwości powinna zostać wdrożona w celu rozróżnienia klas ustawień zawierających dane dotyczące poszczególnych wystąpień i danych konfiguracji udostępnionej. Dla każdej klasy ustawień zawierającej dane wystąpienia, `set` należy tylko przekazać <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> do właściwości klasy ustawień. Dla klas ustawień zawierających udostępnione dane `set` nie należy wykonywać żadnej akcji dla tej klasy ustawień.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Ustawienia aplikacji dotyczące kontrolek niestandardowych</related>
      </Docs>
    </Member>
  </Members>
</Type>
