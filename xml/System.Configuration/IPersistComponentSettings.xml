<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5ec69e6290ad921c6c9c8003c4ffa4160afbca1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36696730" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje standardowych funkcji formantów lub bibliotek, które przechowują i pobierają ustawienia aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj można dodać obsługę ustawienia aplikacji do aplikacji przez utworzenie klasy otoki ustawienia, która jest pochodną <xref:System.Configuration.ApplicationSettingsBase>, a następnie dodaj specjalne właściwości do tej klasy. Jednak ta metoda nie wystarczająco hermetyzować ustawienia aplikacji dla formantu tak, aby jego kontenera jest chroniony przed szczegóły. <xref:System.Configuration.IPersistComponentSettings> Interfejs umożliwia aplikacji z interfejsem standardowa do przekazywania żądań zmiany stanu ustawienia aplikacji do modułu biblioteki, składnika lub kontrolki. Czasu projektowania narzędzi również są zależne od prawidłowego zarządzania formanty i składniki w tym interfejsie.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje formantu ustawienia aplikacji do ich odpowiednich właściwości i aktualizuje stan formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogólnie rzecz biorąc <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> metoda przeprowadza dwóch podstawowych operacji:  
  
-   Ta powoduje, że każde wystąpienie ustawień aplikacji zawarte przez formant do odświeżenia wartości właściwości ustawień aplikacji zwykle przez wywołanie metody ich <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metody.  
  
-   Zgodnie z wymaganiami aktualizuje tych właściwości ogólnych, które są zależne od tych ustawień wczytywanych właściwości. Na przykład, jeśli zawiera klasy ustawienia `location` właściwość ustawień <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> powinien upewnij się, że kontrolki <xref:System.Windows.Forms.Control.Location%2A> właściwości jest aktualizowana w celu odzwierciedlenia ustawienie wczytywanych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje właściwości ustawień kontroli aplikacji do wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> zwykle wywołuje metodę <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metody dla każdego wystąpienia klasy ustawienia aplikacji zawiera.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Utrzymuje właściwości ustawień kontroli aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Metody zapisuje wartości właściwości ustawień kontroli aplikacji w magazynie danych. Techniki magazynu i serializacja danych używa metody zależy od ustawień dostawcy skojarzonego z każdej klasy ustawienia za pomocą <xref:System.Configuration.SettingsProviderAttribute>. Wybór dostawcy ustawień można zastąpić przy użyciu <xref:System.Configuration.ISettingsProviderService> interfejsu.  
  
> [!NOTE]
>  Jeśli <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> właściwość jest `true`, kontrolki powinny wywoływać <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> we własnym <xref:System.Windows.Forms.Control.Dispose%2A> metody, aby automatycznie przechowywania danych konfiguracji formantu przed zakończeniem aplikacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant automatycznie ma utrwalić ustawienia właściwości aplikacji.</summary>
        <value>
          <see langword="true" /> Jeśli formant ma automatycznie utrwalić stanu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli formant zawiera dane konfiguracji, zazwyczaj będzie zachować te dane w odpowiedzi na jawnym wywołaniem <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> metody lub czasami niejawnie podczas formantu <xref:System.Windows.Forms.Control.Dispose%2A> wywołania metody. <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Właściwość określa, czy formant automatycznie będzie się powtarzał jego dane konfiguracji po jej usunięciu.  
  
 Wartość domyślna <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> zależy od implementacji formantu. Dokumentacja dla kontrolki powinna wskazywać, czy używa ustawienia aplikacji, jakie dane jest trwały i jakie wartość domyślną <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób właściwe dla formantu sprawdzić wartość <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> właściwość zanim spróbuje automatycznie utrwalić danych konfiguracji.  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość klucz Ustawienia aplikacji dla bieżącego wystąpienia formantu.</summary>
        <value>A <see cref="T:System.String" /> zawierający klucz Ustawienia dla bieżącego wystąpienia formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> właściwości do odróżniania grupy właściwości ustawień aplikacji, gdy istnieje wiele wystąpień tej samej klasy otoki. Na przykład jeśli formant zawiera klasy otoki skojarzony, następnie umieszczenie wiele wystąpień tej samej kontrolki w tej samej aplikacji zazwyczaj powodują wiele wystąpień klasy otoki. Ustawienia klucz jest wymagany tylko wtedy, gdy dane konfiguracyjne różni się na zasadzie poszczególnych wystąpień; na przykład lokalizacja dynamicznie określonym położeniem kontrolki.  
  
 Mają zastosowanie następujące reguły ogólne użycie <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   Formant, takich jak dowolnej klasy może zawierać zero lub więcej klasy ustawienia aplikacji, pochodną <xref:System.Configuration.ApplicationSettingsBase>. Każda klasa ustawień zawiera własną <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> właściwość, która pomaga odróżnić wiele wystąpień tej klasy.  
  
-   Formant Rozdziel jej dane na wystąpienie i jego danych udostępnionych klasom różne ustawienia.  
  
-   Kontrolki z żadnych danych konfiguracji poszczególnych wystąpień `get` akcesor <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> powinna Domyślnie właściwość <xref:System.Windows.Forms.Control.Name%2A> formantu. W większości przypadków nazwa formantu jest unikatowa w obrębie aplikacji. Jeśli formant zawiera tylko udostępnione dane konfiguracji `get` powinna domyślnie `null`.  
  
-   `set` Metody dostępu dla tej właściwości powinny być implementowane w celu rozróżnienia między klasami ustawień zawierająca poszczególnych wystąpień i dane konfiguracji udostępnionej. Dla każdej klasy ustawienia zawierającego dane dotyczące poszczególnych wystąpień `set` należy po prostu przekazywanego do <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> właściwość klasy ustawienia. Dla klas ustawienia zawierające danych udostępnionych `set` powinien nie wykonuj akcji dla tej klasy ustawienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>