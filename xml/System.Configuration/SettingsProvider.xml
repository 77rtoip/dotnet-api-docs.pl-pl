<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31d8c24177faf87f120fc44d8de7e00562ab630f" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39824629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Działa jako klasa bazowa dla elementu pochodnego dla ustawień niestandardowych dostawców Architektura ustawień aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostawca ustawień definiuje mechanizm do przechowywania danych konfiguracji używanych w Architektura ustawień aplikacji. .NET Framework zawiera dostawcę ustawienia jednej domyślnej <xref:System.Configuration.LocalFileSettingsProvider>, która przechowuje dane konfiguracji do lokalnego systemu plików. Jednak można utworzyć mechanizmy alternatywnego magazynu wynikające z abstrakcyjnej <xref:System.Configuration.SettingsProvider> klasy. Dostawca, który używa klasy otoki jest określana przez urządzanie klasy otoki z <xref:System.Configuration.SettingsProviderAttribute>. Jeśli ten atrybut nie zostanie podany, wartość domyślna <xref:System.Configuration.LocalFileSettingsProvider>, jest używany.  
  
 Po utworzeniu dostawcy ustawień niestandardowych, co najmniej należy podać niedotyczące trzy metody tej klasy: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> i <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.  
  
 Dla aplikacji klienckich, możesz dodać więcej standardowe funkcje do niestandardowego dostawcę, również implementując <xref:System.Configuration.IApplicationSettingsProvider> interfejsu. Ten interfejs odzwierciedla metod w <xref:System.Configuration.ApplicationSettingsBase> klasy, która przede wszystkim umożliwia obsługę wersji.  
  
 Zazwyczaj należy projektować dostawców ustawień jako pojedynczego wystąpienia Aby uniknąć rywalizacji o zasoby magazynu. Dostawców powinny być również metodą o bezpiecznych wątkach, ponieważ one mogą być wywoływane jednocześnie z wielu wystąpień otoki w domenie pojedynczej aplikacji lub z wielu aplikacji w różnych domenach.  
  
 Co najmniej Dostawca ustawień musi rozpoznać trzy atrybuty —<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, i <xref:System.Configuration.DefaultSettingValueAttribute>. Aby uzyskać pełną listę atrybutów, które mogą być stosowane do ustawień aplikacji, zobacz [atrybuty ustawień aplikacji](~/docs/framework/winforms/advanced/application-settings-attributes.md). Ustawienia niestandardowego dostawcy powinna być rozpoznawana atrybuty stosowane do ustawienia właściwości w następujący sposób:  
  
1.  Jeśli dostawca może spełnić żądania też dorozumianych przez atrybut, oczywiście go należy to zrobić.  
  
2.  Jeśli dostawca nie może wykonać żądania, jego należy go zignorować dyskretnie.  
  
3.  Jeśli dwa lub więcej właściwości pozostaje w konflikcie; na przykład właściwość jest dekorowane za pomocą obu <xref:System.Configuration.ApplicationScopedSettingAttribute> i <xref:System.Configuration.UserScopedSettingAttribute>; dostawca powinien zgłaszać <xref:System.Configuration.ConfigurationException>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie <see cref="T:System.Configuration.SettingsProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to domyślny Konstruktor chroniony dla tej klasy abstrakcyjnej. Pochodne ustawień niestandardowych dostawców nie jest wymagane podanie jawny Konstruktor, ponieważ <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> metoda przeważnie wykonuje wszystkie inicjowania.  
  
 Kod klienta zazwyczaj nie bezpośrednio utworzyć wystąpienia dostawcy ustawień; Zamiast tego użyj poniższej procedury można znaleźć dostawcy ustawień dla właściwości określone ustawienia:  
  
1.  Wywołaj <xref:System.ComponentModel.Component.GetService%2A> metody na bieżącym <xref:System.ComponentModel.Component> lub <xref:System.ComponentModel.ISite> zwraca odwołanie do bieżącego <xref:System.Configuration.ISettingsProviderService>.  
  
2.  Wywołaj <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> metody <xref:System.Configuration.ISettingsProviderService> pobranego w pierwszym krokiem do zwrócenia Dostawca ustawień.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aktualnie uruchomionej aplikacji.</summary>
        <value>A <see cref="T:System.String" /> zawiera skróconą nazwę aplikacji, która nie zawiera pełną ścieżkę lub rozszerzenia, na przykład, <c>SimpleAppSettings</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SettingsProvider.ApplicationName%2A> i <xref:System.Configuration.Provider.ProviderBase.Name%2A> pomocy właściwości do odróżniania podobnie nazwanych Ustawianie właściwości w innych aplikacjach.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> opisujący sposób bieżącego użycia aplikacji.</param>
        <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> zawierające grupa właściwości ustawienia, których wartości, które mają być pobierane.</param>
        <summary>Zwraca kolekcję ustawień wartości właściwości określonej instancji i ustawień właściwości grupy aplikacji.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> zawierające wartości dla grupy właściwości określonych ustawień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> Metoda musi zostać wdrożone do obsługi ustawienia specjalne, te oznaczone <xref:System.Configuration.SpecialSettingAttribute>, jak również uzgodnienia aplikacji i ustawień użytkowników.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> opisujące bieżące użycie aplikacji.</param>
        <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> reprezentującej grupę ustawień właściwości do ustawienia.</param>
        <summary>Ustawia wartości określonej grupy ustawień właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> zawiera <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metody, która jest wywoływana, aby zachować wartości wszystkich właściwości ustawień. Ta metoda wylicza wszystkie ustawienia dostawcy skojarzone z jego właściwości ustawień i wywołania <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metody dla każdego <xref:System.Configuration.SettingsProvider> do wykonania tej operacji rzeczywiste serializacji.  
  
 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> Metody powinny zostać wdrożone z myślą o bezpieczeństwie:  
  
-   Tylko w pełni zaufany kod powinien zaktualizować ustawień aplikacji. Częściowo zaufany kod powinien zaktualizować tylko ustawienia aplikacji użytkownika. Zazwyczaj niezaufanego kodu nie jest dozwolone można zaktualizować ustawień aplikacji.  
  
-   Limity przydziału użycia należy rozważyć w celu ochrony przed atakami z zasobów przez częściowo zaufanych aplikacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>