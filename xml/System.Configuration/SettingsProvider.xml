<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa09583daffbf6437947c8d4cc711b1951a21c0e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129198" /></Metadata><TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Działa jako klasa bazowa do wyprowadzania niestandardowych dostawców ustawień w architekturze ustawień aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostawca ustawień definiuje mechanizm przechowywania danych konfiguracyjnych używanych w architekturze ustawień aplikacji. .NET Framework zawiera pojedynczego domyślnego dostawcę <xref:System.Configuration.LocalFileSettingsProvider>ustawień, który przechowuje dane konfiguracji w lokalnym systemie plików. Można jednak tworzyć alternatywne mechanizmy magazynu, wywodząc się z klasy abstrakcyjnej <xref:System.Configuration.SettingsProvider> . Dostawca, którego używa Klasa otoki, jest określany przez dekorowania nazwy klasy otoki <xref:System.Configuration.SettingsProviderAttribute>z. Jeśli ten atrybut nie zostanie podany, zostanie użyta <xref:System.Configuration.LocalFileSettingsProvider>wartość domyślna,.  
  
 Podczas tworzenia niestandardowego dostawcy ustawień należy zapewnić implementacje dla trzech metod tej klasy: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> i <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.  
  
 W przypadku aplikacji klienckich można dodać bardziej ustandaryzowaną funkcję do niestandardowego dostawcy, implementując <xref:System.Configuration.IApplicationSettingsProvider> także interfejs. Ten interfejs odzwierciedla metody znajdujące się <xref:System.Configuration.ApplicationSettingsBase> w klasie, która głównie umożliwia obsługę wersji.  
  
 Zazwyczaj należy zaprojektować dostawców ustawień, aby można było mieć pojedyncze wystąpienie, aby uniknąć rywalizacji o zasoby magazynu. Dostawcy powinny również być bezpieczne wątkowo, ponieważ mogą być wywoływane jednocześnie z wielu wystąpień otoki w jednej domenie aplikacji lub z wielu aplikacji w różnych domenach.  
  
 Co najmniej Dostawca ustawień musi rozpoznać trzy atrybuty — <xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>i <xref:System.Configuration.DefaultSettingValueAttribute>. Aby zapoznać się z pełną listą atrybutów, które można zastosować do ustawień aplikacji, zobacz [atrybuty ustawień aplikacji](~/docs/framework/winforms/advanced/application-settings-attributes.md). Niestandardowy dostawca ustawień powinien rozpoznawać atrybuty zastosowane do właściwości ustawień w następujący sposób:  
  
1.  Jeśli dostawca może spełnić żądanie implikowane przez atrybut, oczywiście należy to zrobić.  
  
2.  Jeśli dostawca nie może zrealizować żądania, powinien go zignorować w trybie dyskretnym.  
  
3.  Jeśli co najmniej dwie właściwości powodują konflikt; Załóżmy na przykład, że właściwość jest dekoracyjna <xref:System.Configuration.ApplicationScopedSettingAttribute> zarówno <xref:System.Configuration.UserScopedSettingAttribute>, jak i; dostawca powinien <xref:System.Configuration.ConfigurationException>zgłosić.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Architektura ustawień aplikacji</related>
    <related type="Article" href="https://msdn.microsoft.com/library/53caa66c-a9fb-43a5-953c-ad092590098d">Atrybuty ustawień aplikacji</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie <see cref="T:System.Configuration.SettingsProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to domyślny konstruktor chroniony dla tej klasy abstrakcyjnej. Dostawcy ustawień niestandardowych pochodni nie muszą dostarczać konstruktora jawnego, <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> ponieważ metoda zazwyczaj wykonuje wszystkie operacje inicjowania.  
  
 Kod klienta zazwyczaj nie tworzy bezpośrednio wystąpienia dostawcy ustawień; Zamiast tego należy użyć poniższej procedury, aby znaleźć dostawcę ustawień dla określonej właściwości ustawień:  
  
1.  Wywołaj <xref:System.ComponentModel.Component> <xref:System.ComponentModel.ISite> metodę na bieżącym lub, aby zwrócić odwołanie do bieżącego <xref:System.Configuration.ISettingsProviderService>elementu. <xref:System.ComponentModel.Component.GetService%2A>  
  
2.  Wywołaj <xref:System.Configuration.ISettingsProviderService> metodę pobieraną w pierwszym kroku, aby zwrócić dostawcę ustawień. <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aktualnie uruchomionej aplikacji.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera skróconą nazwę aplikacji, która nie zawiera pełnej ścieżki lub rozszerzenia, na przykład <c>SimpleAppSettings</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Configuration.SettingsProvider.ApplicationName%2A> i<xref:System.Configuration.Provider.ProviderBase.Name%2A> pomagają odróżnić nazwy ustawień o podobnej nazwie w różnych aplikacjach.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opis użycia bieżącej aplikacji.</param>
        <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> zawierająca grupy właściwości ustawienia, których wartości mają być pobierane.</param>
        <summary>Zwraca kolekcję wartości właściwości ustawień dla określonego wystąpienia aplikacji i grupy właściwości ustawienia.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> zawierający wartości dla określonej grupy właściwości ustawień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda musi zostać wdrożona w celu obsługi ustawień specjalnych, które są <xref:System.Configuration.SpecialSettingAttribute>oznaczone przy użyciu, a także do uzgadniania ustawień aplikacji i użytkownika. <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opisującą bieżące użycie aplikacji.</param>
        <param name="collection"><see cref="T:System.Configuration.SettingsPropertyValueCollection" /> Reprezentujący grupę ustawień właściwości, które mają zostać ustawione.</param>
        <summary>Ustawia wartości określonej grupy ustawień właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase><xref:System.Configuration.ApplicationSettingsBase.Save%2A> zawiera metodę, która jest wywoływana w celu utrwalenia wartości wszystkich właściwości ustawień. Ta metoda wylicza wszystkie dostawcy ustawień skojarzone ze swoimi właściwościami ustawień i wywołuje <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metodę dla każdej z nich <xref:System.Configuration.SettingsProvider> w celu wykonania rzeczywistej operacji serializacji.  
  
 Należy <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> zaimplementować metodę z uwzględnieniem zabezpieczeń:  
  
-   Tylko w pełni zaufany kod powinien być uprawniony do aktualizowania ustawień aplikacji. Częściowo zaufany kod powinien zezwalać na aktualizowanie tylko ustawień aplikacji użytkownika. Niezaufany kod nie jest zazwyczaj dozwolony do aktualizowania ustawień aplikacji.  
  
-   Przydziały użycia należy traktować jako chroniące przed atakami zasobów przez częściowo zaufane aplikacje.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>
