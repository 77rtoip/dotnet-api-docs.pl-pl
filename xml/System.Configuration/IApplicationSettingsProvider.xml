<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53e3d96ee4c1f73a05d936c3f4ace5c9859c54c0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69378291" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje rozszerzone możliwości dla dostawców ustawień aplikacji opartych na kliencie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Architektura ustawień aplikacji umożliwia zapewnienie niestandardowego mechanizmu magazynowania dla ustawień aplikacji przez utworzenie niestandardowego dostawcy ustawień, który jest klasą pochodną <xref:System.Configuration.SettingsProvider>. Taka Klasa zawiera podstawowe funkcje przechowywania i pobierania właściwości. Można jednak dodać dodatkowe funkcje standardowe, implementując <xref:System.Configuration.IApplicationSettingsProvider> interfejs w dostawcy ustawień niestandardowych. Ten interfejs zawiera trzy metody, które przede wszystkim umożliwiają dostawcy ustawień bardziej inteligentnie obsługiwać zmiany wersji aplikacji. Zazwyczaj Dostawca ustawień będzie przechowywać ustawienia aplikacji dla różnych wersji aplikacji oddzielnie, aby przewidzieć następujące sytuacje:  
  
-   Wykonywanie równoczesne różnych wersji aplikacji.  
  
-   Zachowywanie ustawień aplikacji podczas uaktualniania aplikacji.  
  
-   Resetowanie ustawień aplikacji do wartości domyślnych dla aktualnie używanej wersji.  
  
 <xref:System.Configuration.LocalFileSettingsProvider> Klasa<xref:System.Configuration.IApplicationSettingsProvider> implementuje interfejs. Ten sam zestaw metod zawartych <xref:System.Configuration.IApplicationSettingsProvider> <xref:System.Configuration.ApplicationSettingsBase> w programie znajduje się również w klasie, umożliwiając zakładanie wstępnie zdefiniowanego kanału komunikacyjnego między otoką ustawień aplikacji a jej dostawcą ustawień.  
  
> [!NOTE]
>  Ten interfejs jest opcjonalny. Jeśli dostawca nie implementuje tego interfejsu, infrastruktura ustawień zakończy się niepowodzeniem bez powiadomienia, jeśli próbuje uzyskać dostęp do dowolnych metod zdefiniowanych przez ten interfejs.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Architektura ustawień aplikacji</related>
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opisującą bieżące użycie aplikacji.</param>
        <param name="property"><see cref="T:System.Configuration.SettingsProperty" /> Którego wartość ma zostać zwrócona.</param>
        <summary>Zwraca wartość określonej właściwości ustawienia dla poprzedniej wersji tej samej aplikacji.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValue" /> zawierająca wartość określonego ustawienia właściwości, która została ostatnio ustawiona w poprzedniej wersji aplikacji, lub <see langword="null" /> Jeśli nie można znaleźć tego ustawienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> Metody można użyć w połączeniu <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> z metodą migracji ustawień aplikacji podczas instalacji nowej wersji aplikacji lub po jej zakończeniu.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Dla <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> uprawnienia.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Wykonywanie równoczesne</related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opisującą bieżące użycie aplikacji.</param>
        <summary>Resetuje ustawienia aplikacji skojarzone z określoną aplikacją do wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> Metoda ponownie inicjuje przechowywane wartości określonej grupy ustawień aplikacji. W przeciwieństwie <xref:System.Configuration.DefaultSettingValueAttribute> , dostarcza wartość domyślną dla właściwości pojedyncze ustawienia podczas inicjowania właściwości, jeśli nie ma ona zapisanej wartości.  
  
 Dostawca ustawień określa odpowiednie wartości domyślne dla określonej grupy ustawień aplikacji. Na przykład implementacja w programie <xref:System.Configuration.LocalFileSettingsProvider> resetuje ustawienia o zakresie użytkownika do ich wartości udostępnionych `application.exe.config` w pliku; z kolei pozostawia ustawienia o zakresie aplikacji bez zmian.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Dla <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> uprawnienia.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opisującą bieżące użycie aplikacji.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> zawierająca grupy właściwości ustawienia, których wartości mają być pobierane.</param>
        <summary>Wskazuje dostawcy, że aplikacja została uaktualniona. Dzięki temu dostawca może uaktualnić przechowywane ustawienia zgodnie z potrzebami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework umożliwia instalację równoległą i wykonywanie różnych wersji tej samej aplikacji. Dostawca ustawień aplikacji przechowuje ustawienia aplikacji osobno dla każdej wersji aplikacji, aby zapewnić izolację. Można jednak przeprowadzić migrację ustawień z poprzedniej wersji aplikacji do istniejącej. Aby zapewnić tę funkcjonalność migracji, należy użyć <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> metody zaimplementowane w klasie pochodnej z. <xref:System.Configuration.SettingsProvider>  
  
 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> Metody można użyć w połączeniu <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> z metodą migracji ustawień aplikacji podczas instalacji nowej wersji aplikacji lub po jej zakończeniu.  
  
 Ta metoda powinna być pomijana dla każdego ustawienia aplikacji, do którego <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> zastosowano ten element, lub do całej klasy otoki ustawień pochodnej od <xref:System.Configuration.ApplicationSettingsBase>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Dla <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> uprawnienia.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Wykonywanie równoczesne</related>
      </Docs>
    </Member>
  </Members>
</Type>
