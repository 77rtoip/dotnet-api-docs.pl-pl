<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3aa435fff853654c718bfa236672c3bfa1e986ac" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129254" /></Metadata><TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalFileSettingsProvider&#xA;Inherits SettingsProvider&#xA;Implements IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalFileSettingsProvider : System::Configuration::SettingsProvider, System::Configuration::IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type LocalFileSettingsProvider = class&#xA;    inherit SettingsProvider&#xA;    interface IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia trwałość dla klas ustawień aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie dostawcy definiują mechanizm przechowywania danych konfiguracyjnych używanych w architekturze ustawień aplikacji. Zawiera pojedynczego domyślnego <xref:System.Configuration.LocalFileSettingsProvider>dostawcę ustawień, który przechowuje dane konfiguracji w lokalnym systemie plików. [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Właściwość lub grupa właściwości ustawień aplikacji jest skojarzona z określonym dostawcą ustawień przy <xref:System.Configuration.SettingsProviderAttribute>użyciu.  
  
 Zazwyczaj program kliencki nie uzyskuje jawnie dostępu do tej klasy; Zamiast tego Architektura ustawień aplikacji automatycznie wywołuje odpowiednie ustawienia dostawcy, gdy usługi są wymagane. Na przykład wielu członków <xref:System.Configuration.ApplicationSettingsBase> delegowania pracy do skojarzonego dostawcy ustawień.  
  
 <xref:System.Configuration.LocalFileSettingsProvider>utrzymuje ustawienia w plikach konfiguracji, które mają rozszerzenie `.config`. Zawartość plików konfiguracji jest uporządkowana jako dokumenty XML. W zależności od tego, czy ustawienie ma zakres na poziomie aplikacji czy na poziomie użytkownika, dane konfiguracji są przechowywane jako elementy w `<applicationSettings>` `<userSettings>` lub grupie sekcji odpowiednio. Każda z tych grup sekcji jest reprezentowana przez odpowiednie <xref:System.Configuration.AppSettingsSection> lub <xref:System.Configuration.ClientSettingsSection>, odpowiednio. Każdy obiekt sekcji jest własnością i administrowany przez procedurę obsługi sekcji konfiguracji, która jest obiektem typu <xref:System.Configuration.IConfigurationSectionHandler>.  
  
 Ustawienia o zakresie aplikacji i domyślne ustawienia zakresu użytkownika są przechowywane w pliku o nazwie `application.exe.config`, który jest tworzony w tym samym katalogu, w którym znajduje się plik wykonywalny. Ustawienia konfiguracji aplikacji są tylko do odczytu. Określone dane użytkownika są przechowywane w pliku o nazwie `user.config`przechowywane w katalogu macierzystym użytkownika. Jeśli profile roamingu są włączone, może istnieć dwie wersje pliku konfiguracji użytkownika. W takim przypadku wpisy w wersji mobilnej mają pierwszeństwo przed zduplikowanymi wpisami w lokalnym pliku konfiguracji użytkownika.  
  
 Aby uzyskać więcej informacji na temat ustawień aplikacji, zobacz [Ustawienia aplikacji dla Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Architektura ustawień aplikacji</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalFileSettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.LocalFileSettingsProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor bez parametrów ustawia <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> właściwość na. <xref:System.String.Empty>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aktualnie uruchomionej aplikacji.</summary>
        <value>Ciąg, który zawiera nazwę wyświetlaną aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> i<xref:System.Configuration.Provider.ProviderBase.Name%2A> pomagają odróżnić nazwy ustawień o podobnej nazwie w różnych aplikacjach.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue&#xA;override this.GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="localFileSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> , który opisuje, gdzie jest używana Właściwość ustawienia aplikacji.</param>
        <param name="property"><see cref="T:System.Configuration.SettingsProperty" /> Którego wartość ma zostać zwrócona.</param>
        <summary>Zwraca wartość właściwości nazwanych ustawień dla poprzedniej wersji tej samej aplikacji.</summary>
        <returns>Reprezentuje ustawienie aplikacji, <see langword="null" />jeśli znaleziono; w przeciwnym razie. <see cref="T:System.Configuration.SettingsPropertyValue" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest często używana w połączeniu <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> z metodą podczas migrowania ustawień aplikacji podczas instalacji nowej wersji aplikacji. <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> Aby uzyskać więcej informacji, zobacz <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (context As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="localFileSettingsProvider.GetPropertyValues (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opisującą bieżące użycie aplikacji.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> zawierająca grupy właściwości ustawienia, których wartości mają być pobierane.</param>
        <summary>Zwraca kolekcję wartości właściwości ustawienia dla określonego wystąpienia aplikacji i grupy właściwości ustawień.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> zawierający wartości dla określonej grupy właściwości ustawień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zarządza również specjalnym typem <xref:System.Configuration.SpecialSetting.ConnectionString>ustawień aplikacji. <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> Parametry połączenia są przechowywane w specjalnej sekcji pliku konfiguracji rozdzielanej przez element `<connectionstrings>`.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider>nie używa szyfrowania w celu utrwalenia jakichkolwiek ustawień. W związku z tym nie należy przechowywać haseł w postaci zwykłego tekstu ani innych informacji poufnych przy użyciu tego dostawcy bez konieczności wykonywania dodatkowych czynności, takich jak oddzielne szyfrowanie informacji w pliku konfiguracyjnym. Aby uzyskać więcej informacji, zobacz [szyfrowanie informacji o konfiguracji przy użyciu konfiguracji chronionej](https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Napotkano ustawienie o zakresie użytkownika, ale Bieżąca konfiguracja obsługuje tylko ustawienia z zakresu aplikacji.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, values As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="localFileSettingsProvider.Initialize (name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Przyjazna nazwa dostawcy.</param>
        <param name="values">Kolekcja par nazwa/wartość reprezentujących atrybuty specyficzne dla dostawcy określone w konfiguracji dla tego dostawcy.</param>
        <summary>Inicjuje dostawcę.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit&#xA;override this.Reset : System.Configuration.SettingsContext -&gt; unit" Usage="localFileSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opisującą bieżące użycie aplikacji.</param>
        <summary>Resetuje wartości domyślne wszystkich właściwości ustawień aplikacji skojarzonych z określoną aplikacją.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> Metoda przywraca przechowywane wartości określonej grupy ustawień aplikacji. Akcja <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> zależy od zakresu właściwości ustawienia aplikacji:  
  
-   Ustawienia o zakresie aplikacji nie podlegają usterce.  
  
-   Ustawienia o zakresie użytkownika są resetowane do wartości domyślnych, które są przechowywane jako wpisy tylko do odczytu w pliku `application.exe.config`konfiguracyjnym aplikacji. Jeśli profile mobilne są używane, wszystkie wartości ustawień aplikacji w profilu mobilnym mają pierwszeństwo przed duplikatami znalezionymi w profilu lokalnym.  
  
 Należy zauważyć, że jeśli są używane profile mobilne, mogą istnieć `user.config` dwa pliki — jeden dla ustawień lokalnych i jeden dla profilu mobilnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Napotkano ustawienie o zakresie użytkownika, ale Bieżąca konfiguracja obsługuje tylko ustawienia z zakresu aplikacji.</exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (context As SettingsContext, values As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="localFileSettingsProvider.SetPropertyValues (context, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opisującą bieżące użycie aplikacji.</param>
        <param name="values"><see cref="T:System.Configuration.SettingsPropertyValueCollection" /> Reprezentujący grupę ustawień właściwości, które mają zostać ustawione.</param>
        <summary>Ustawia wartości określonej grupy ustawień właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa otoki ustawień, pochodna <xref:System.Configuration.ApplicationSettingsBase>, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> zawiera metodę, która jest wywoływana w celu utrwalenia wartości wszystkich właściwości ustawień. Ta metoda wylicza wszystkie dostawcy ustawień skojarzone ze swoimi właściwościami ustawień i wywołuje <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metodę dla każdej z nich <xref:System.Configuration.SettingsProvider> w celu wykonania rzeczywistej operacji serializacji.  
  
 <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A>Pojedyncza Serializacja każdej właściwości ustawień aplikacji o zakresie użytkownika do odpowiedniego ustawienia aplikacji w odpowiednim `user.config` pliku konfiguracyjnym.  
  
 Domyślnie <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> Metoda używa następującej sekwencji logicznej do określenia schematu serializacji, w zależności od typu właściwości ustawienia:  
  
1.  Jeśli typ ma skojarzoną <xref:System.ComponentModel.TypeConverter> <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> z implementacją metody, ta konwersja jest używana.  
  
2.  Użyto serializacji XML.  
  
 Można jednak określić preferowany mechanizm serializacji za pomocą <xref:System.Configuration.SettingsSerializeAsAttribute>. <xref:System.Configuration.LocalFileSettingsProvider>nie obsługuje serializacji binarnej w [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Jeśli właściwość ustawienia o zakresie użytkownika zostanie ustawiona z powrotem na wartość domyślną, wówczas Dostawca ustawień plików lokalnych usunie wpis dla skojarzonego ustawienia z pliku konfiguracji użytkownika. Następny dostęp do odczytu dla tej właściwości będzie po prostu używał wartości domyślnej.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider>nie używa szyfrowania w celu utrwalenia jakichkolwiek ustawień. W związku z tym nie należy przechowywać haseł w postaci zwykłego tekstu ani innych informacji poufnych przy użyciu tego dostawcy bez konieczności wykonywania dodatkowych czynności, takich jak oddzielne szyfrowanie informacji w pliku konfiguracyjnym. Aby uzyskać więcej informacji, zobacz [szyfrowanie informacji o konfiguracji przy użyciu konfiguracji chronionej](https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Napotkano ustawienie o zakresie użytkownika, ale Bieżąca konfiguracja obsługuje tylko ustawienia z zakresu aplikacji.  
  
 —lub—  
  
 Wystąpił ogólny błąd podczas zapisywania ustawień w pliku konfiguracji.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit&#xA;override this.Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="localFileSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> Opisującą bieżące użycie aplikacji.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> zawierająca grupy właściwości ustawienia, których wartości mają być pobierane.</param>
        <summary>Próbuje przeprowadzić migrację poprzednich ustawień z zakresu użytkownika z poprzedniej wersji tej samej aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider>migruje ustawienia lokalne i mobilne w osobnych operacjach.  
  
 Metoda jest pomijana dla każdego ustawienia aplikacji, które <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> ma zastosowane do niego, lub do całej klasy otoki ustawień, pochodzące od <xref:System.Configuration.ApplicationSettingsBase>. <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>  
  
 W ten sposób wywoływana metoda zależy od typu uaktualnianej aplikacji:  
  
-   Każda wersja [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji jest przechowywana w własnym izolowanym katalogu instalacji. Po zainstalowaniu nowej wersji [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji, gdy nowa wersja jest najpierw uruchamiana, wewnętrzna logika <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> automatycznie wywoła migrację wszystkich typowych ustawień aplikacji do nowej wersji. Aby uzyskać więcej informacji, zobacz [ustawienia technologii ClickOnce i aplikacji](https://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).  
  
-   Standardowe Windows Forms i aplikacje konsolowe muszą ręcznie <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>wywołać, ponieważ nie jest to ogólny, automatyczny sposób na ustalenie, kiedy taka aplikacja jest uruchamiana po raz pierwszy. Dwa typowe sposoby wykonywania tych czynności pochodzą z programu instalacyjnego lub z poziomu aplikacji, przy użyciu utrwalonej właściwości, często o nazwie podobnej `IsFirstRun`do.  
  
 Należy pamiętać, że w celu przeprowadzenia migracji ustawień aplikacji w nowszej wersji musi być możliwe załadowanie i odczytanie starszej wersji ustawień aplikacji. W związku z tym musi zawierać klasy otoki zgodne z nowymi i poprzednimi wersjami aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Napotkano ustawienie o zakresie użytkownika, ale Bieżąca konfiguracja obsługuje tylko ustawienia z zakresu aplikacji.  
  
 —lub—  
  
 Nie można uzyskać dostępu do poprzedniej wersji pliku konfiguracji.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
