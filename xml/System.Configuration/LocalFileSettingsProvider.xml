<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a822b6cc681c461705008181eb7ff44de4c8b6cd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37687330" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalFileSettingsProvider&#xA;Inherits SettingsProvider&#xA;Implements IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalFileSettingsProvider : System::Configuration::SettingsProvider, System::Configuration::IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type LocalFileSettingsProvider = class&#xA;    inherit SettingsProvider&#xA;    interface IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Udostępnia stanów trwałych dla klasy ustawień aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie dostawcy zdefiniować mechanizm do przechowywania danych konfiguracji używanych w Architektura ustawień aplikacji. [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Zawiera dostawcę ustawienia jednej domyślnej <xref:System.Configuration.LocalFileSettingsProvider>, która przechowuje dane konfiguracji do lokalnego systemu plików. Właściwości ustawień aplikacji lub grupę właściwości są skojarzone z określonych ustawień dostawcy za pośrednictwem <xref:System.Configuration.SettingsProviderAttribute>.  
  
 Zazwyczaj program kliencki nie jawnie dostępu do tej klasy; przeciwnie Architektura ustawień aplikacji automatycznie wywołuje dostawcy odpowiednie ustawienia, gdy jego usługi są wymagane. Na przykład wiele elementów członkowskich <xref:System.Configuration.ApplicationSettingsBase> delegować swoją pracę do dostawcy skojarzone ustawienia.  
  
 <xref:System.Configuration.LocalFileSettingsProvider> będzie się powtarzał ustawienia w plikach konfiguracji, które mają rozszerzenie `.config`. Zawartość plików konfiguracji są ustrukturyzowane jako dokumentów XML. W zależności od tego, czy to ustawienie ma zakres na poziomie aplikacji lub na poziomie użytkownika, dane konfiguracji są przechowywane jako elementy w ramach `<applicationSettings>` lub `<userSettings>` sekcji z grupy, odpowiednio. Każda z tych grup sekcji jest reprezentowany przez odpowiednią <xref:System.Configuration.AppSettingsSection> lub <xref:System.Configuration.ClientSettingsSection>, odpowiednio. Każdy obiekt sekcji będące własnością i zarządzane przez program obsługi sekcji konfiguracji, który jest obiektem typu <xref:System.Configuration.IConfigurationSectionHandler>.  
  
 Ustawienia w zakresie aplikacji i domyślne ustawienia zakresu użytkownika są przechowywane w pliku o nazwie `application.exe.config`, który jest tworzony w tym samym katalogu co plik wykonywalny. Ustawienia konfiguracji aplikacji są przeznaczone tylko do odczytu. Dane użytkownika są przechowywane w pliku o nazwie `user.config`, przechowywanych w katalogu macierzystego użytkownika. Profile mobilne są włączone, może znajdować się dwie wersje pliku konfiguracji użytkownika. W takim przypadku wpisy w wersji mobilnego mają pierwszeństwo przed zduplikowane wpisy w pliku konfiguracji użytkownika lokalnego.  
  
 Aby uzyskać więcej informacji na temat ustawień aplikacji, zobacz [ustawienia aplikacji Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalFileSettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.LocalFileSettingsProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawia konstruktora domyślnego <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> właściwość <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aktualnie uruchomionej aplikacji.</summary>
        <value>Ciąg, który zawiera nazwę wyświetlaną aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> i <xref:System.Configuration.Provider.ProviderBase.Name%2A> pomocy właściwości do odróżniania podobnie nazwanych Ustawianie właściwości w innych aplikacjach.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue&#xA;override this.GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="localFileSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> opisujący, gdzie jest używana właściwość ustawień aplikacji.</param>
        <param name="property">
          <see cref="T:System.Configuration.SettingsProperty" /> Którego wartość ma zostać zwrócony.</param>
        <summary>Zwraca wartość właściwości o nazwie ustawień w poprzedniej wersji tej samej aplikacji.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValue" /> reprezentujący ustawienia aplikacji, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> Metoda jest często używana w połączeniu z <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> metody podczas migracji ustawień aplikacji podczas instalowania nowej wersji aplikacji. Aby uzyskać więcej informacji, zobacz <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (context As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="localFileSettingsProvider.GetPropertyValues (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> opisujące bieżące użycie aplikacji.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> zawierające grupa właściwości ustawienia, których wartości, które mają być pobierane.</param>
        <summary>Zwraca kolekcję ustawiania wartości właściwości dla określonej aplikacji wystąpienia i ustawień właściwości grupy.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> zawierające wartości dla grupy właściwości określonych ustawień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> Metoda zarządza także typ ustawienia aplikacji specjalnych <xref:System.Configuration.SpecialSetting.ConnectionString>. Parametry połączenia są przechowywane w specjalnej sekcji pliku konfiguracji, rozdzielone elementu `<connectionstrings>`.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> nie używa szyfrowania można utrwalić wszystkie ustawienia. W związku z tym nie należy przechowywać haseł w postaci zwykłego tekstu lub inne poufne informacje, przy użyciu tego dostawcy, bez konieczności przełączania dodatkowe środki ostrożności, np. szyfrowanie osobno informacji zawartych w pliku konfiguracji. Aby uzyskać więcej informacji, zobacz [szyfrowania informacji przy użyciu chronione Konfiguracja](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Napotkano ustawień z zakresu użytkownika, ale bieżąca konfiguracja obsługuje tylko ustawienia w zakresie aplikacji.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, values As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="localFileSettingsProvider.Initialize (name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Przyjazna nazwa dostawcy.</param>
        <param name="values">Kolekcja par nazw i wartości reprezentujących atrybuty specyficzne dla dostawcy określonego w konfiguracji dla tego dostawcy.</param>
        <summary>Inicjuje dostawcę.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit&#xA;override this.Reset : System.Configuration.SettingsContext -&gt; unit" Usage="localFileSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> opisujące bieżące użycie aplikacji.</param>
        <summary>Resetuje wszystkie właściwości ustawień aplikacji skojarzone z określoną aplikacją do wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> Metoda przywraca przechowywane wartości określonej ustawień grupy aplikacji. Akcja <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> zależy od zakresu właściwości ustawień aplikacji:  
  
-   Nie wpływają na ustawienia w zakresie aplikacji.  
  
-   Ustawienia z zakresu użytkownika zostają zresetowane do wartości domyślnych, które są przechowywane jako tylko do odczytu wpisy w pliku konfiguracyjnym aplikacji `application.exe.config`. Jeśli są używane profile mobilne, wartości ustawień aplikacji w profilu mobilnego mają pierwszeństwo przed duplikaty znalezione w lokalnym profilu.  
  
 Należy zauważyć, że profile mobilne są używane, może być dwa `user.config` pliki, jeden dla ustawienia lokalne i jeden dla profilu mobilnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Napotkano ustawień z zakresu użytkownika, ale bieżąca konfiguracja obsługuje tylko ustawienia w zakresie aplikacji.</exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (context As SettingsContext, values As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="localFileSettingsProvider.SetPropertyValues (context, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> opisujące bieżące użycie aplikacji.</param>
        <param name="values">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> reprezentującej grupę ustawień właściwości do ustawienia.</param>
        <summary>Ustawia wartości określonej grupy ustawień właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pochodną klasę otoki ustawienia <xref:System.Configuration.ApplicationSettingsBase>, zawiera <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metody, która jest wywoływana, aby zachować wartości wszystkich właściwości ustawień. Ta metoda wylicza wszystkie ustawienia dostawcy skojarzone z jego właściwości ustawień i wywołania <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metody dla każdego <xref:System.Configuration.SettingsProvider> do wykonania tej operacji rzeczywiste serializacji.  
  
 <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> serializuje indywidualnie każdej właściwości ustawień zakresu użytkownika aplikacji do swojej aplikacji odpowiednie ustawienie w odpowiedniej `user.config` pliku konfiguracji.  
  
 Domyślnie <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> metoda używa następującej logicznych, aby określić schematu serializacji, w zależności od typu właściwości ustawień:  
  
1.  Jeśli typ ma skojarzoną <xref:System.ComponentModel.TypeConverter> z <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> implementację metody, ta konwersja jest używany.  
  
2.  Serializacji XML jest używany.  
  
 Jednak można określić mechanizm serializacji preferowane przy użyciu <xref:System.Configuration.SettingsSerializeAsAttribute>. <xref:System.Configuration.LocalFileSettingsProvider> nie obsługuje serializacji binarnej w [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Jeśli właściwość ustawień z zakresu użytkownika jest powraca do wartości domyślnej jawnie, Dostawca ustawień pliku lokalnego spowoduje usunięcie wpisu dla ustawienia skojarzone z pliku konfiguracji użytkownika. Następny dostęp do odczytu dla tej właściwości będzie po prostu użyj wartości domyślnej.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> nie używa szyfrowania można utrwalić wszystkie ustawienia. W związku z tym nie należy przechowywać haseł w postaci zwykłego tekstu lub inne poufne informacje, przy użyciu tego dostawcy, bez konieczności przełączania dodatkowe środki ostrożności, np. szyfrowanie osobno informacji zawartych w pliku konfiguracji. Aby uzyskać więcej informacji, zobacz [szyfrowania informacji przy użyciu chronione Konfiguracja](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Napotkano ustawień z zakresu użytkownika, ale bieżąca konfiguracja obsługuje tylko ustawienia w zakresie aplikacji.  - lub - wystąpił błąd ogólny podczas zapisywania ustawień do pliku konfiguracji.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit&#xA;override this.Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="localFileSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> opisujące bieżące użycie aplikacji.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> zawierające grupa właściwości ustawienia, których wartości, które mają być pobierane.</param>
        <summary>Próbuje przeprowadzić migrację poprzednich ustawień zakresu użytkownika z poprzedniej wersji tej samej aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider> Migruje ustawienia lokalne i mobilne w oddzielne operacje.  
  
 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> Metody jest pominięty, dla każdej aplikacji, ustawienia ma <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> stosować do niej lub całą klasę otoki ustawienia pochodną <xref:System.Configuration.ApplicationSettingsBase>.  
  
 Ta metoda jest wywoływana w ten sposób zależy od typu aplikacji, który jest uaktualniany:  
  
-   Każda wersja [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacji są przechowywane w katalogu instalacji izolowanym. Po nową wersję [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplikacja jest zainstalowana, a po uruchomieniu nowej wersji logika wewnętrzna będzie automatycznie wywoływać <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> przeprowadzić migrację wszystkich typowych ustawień aplikacji do nowej wersji. Aby uzyskać więcej informacji, zobacz [ClickOnce i ustawienia aplikacji](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).  
  
-   Standardowa Windows Forms i aplikacji konsoli należy ręcznie wywołać <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, ponieważ nie jest ogólna, automatyczne sposobem ustalenia, podczas pierwszego uruchomienia takiej aplikacji. Dwa podstawowe sposoby czy się to z programu instalacyjnego lub korzystanie z aplikacji, za pomocą utrwalonych właściwości, często nazywane podobny `IsFirstRun`.  
  
 Należy pamiętać, że do nowszej wersji przeprowadzić migrację ustawień aplikacji, musi być w stanie także ładować i przeczytaj starszej wersji, ustawień aplikacji. W związku z tym musi ona zawierać klasy otoki jest zgodny z nowej i poprzedniej wersji aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Napotkano ustawień z zakresu użytkownika, ale bieżąca konfiguracja obsługuje tylko ustawienia w zakresie aplikacji.  - lub - nie można uzyskać dostępu do poprzednich wersji pliku konfiguracji.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>