<Type Name="RegexStringValidatorAttribute" FullName="System.Configuration.RegexStringValidatorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adcb8faf218b5479064c675c55fcb9674224ca35" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56779956" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegexStringValidatorAttribute : System.Configuration.ConfigurationValidatorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegexStringValidatorAttribute extends System.Configuration.ConfigurationValidatorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.RegexStringValidatorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegexStringValidatorAttribute&#xA;Inherits ConfigurationValidatorAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexStringValidatorAttribute sealed : System::Configuration::ConfigurationValidatorAttribute" />
  <TypeSignature Language="F#" Value="type RegexStringValidatorAttribute = class&#xA;    inherit ConfigurationValidatorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Deklaratywne powoduje, że .NET Framework w celu sprawdzenia poprawności ciągu na właściwość konfiguracji, za pomocą wyrażeń regularnych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Configuration.RegexStringValidatorAttribute> do dekorowania właściwości konfiguracji zleca .NET Framework w celu zweryfikowania właściwość za pomocą <xref:System.Configuration.RegexStringValidator> i przekażesz do niego wartości decorating parametrów.  
  
 Może stosować <xref:System.Configuration.RegexStringValidatorAttribute> obiektów tylko dla typów właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dekoracji właściwości niestandardowej <xref:System.Configuration.ConfigurationSection> przy użyciu <xref:System.Configuration.RegexStringValidatorAttribute> obiektu.  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#4)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationPropertyAttribute" />
    <altmember cref="T:System.Configuration.RegexStringValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexStringValidatorAttribute (string regex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string regex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (regex As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexStringValidatorAttribute(System::String ^ regex);" />
      <MemberSignature Language="F#" Value="new System.Configuration.RegexStringValidatorAttribute : string -&gt; System.Configuration.RegexStringValidatorAttribute" Usage="new System.Configuration.RegexStringValidatorAttribute regex" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regex" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regex">Ciąg do użycia w celu weryfikacji wyrażenia regularnego.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.RegexStringValidatorAttribute" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `regex` Parametr zawiera wzorzec wyrażenia regularnego, który musi być zgodny w ciągu przed może ona zostać przypisana do właściwości ozdobione element konfiguracji.  
  
 Możesz użyć tego konstruktora w modelu opartego na atrybutach aby upewnić się, że wartość ciągu, przypisane do powiązanych właściwości zawiera tylko znaki dozwolone.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Configuration.RegexStringValidatorAttribute.%23ctor%2A> konstruktora.  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#4)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.RegexStringValidator" />
      </Docs>
    </Member>
    <Member MemberName="Regex">
      <MemberSignature Language="C#" Value="public string Regex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Regex" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.RegexStringValidatorAttribute.Regex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Regex As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Regex { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Regex : string" Usage="System.Configuration.RegexStringValidatorAttribute.Regex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg używany do sprawdzenia poprawności wyrażenia regularnego.</summary>
        <value>Ciąg zawierający wyrażenie regularne służące do filtrowania ciągu przypisywane do właściwości ozdobione element konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Configuration.RegexStringValidatorAttribute.Regex%2A> właściwości.  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#16)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatorInstance">
      <MemberSignature Language="C#" Value="public override System.Configuration.ConfigurationValidatorBase ValidatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidatorInstance As ConfigurationValidatorBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::ConfigurationValidatorBase ^ ValidatorInstance { System::Configuration::ConfigurationValidatorBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatorInstance : System.Configuration.ConfigurationValidatorBase" Usage="System.Configuration.RegexStringValidatorAttribute.ValidatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wystąpienie elementu <see cref="T:System.Configuration.RegexStringValidator" /> klasy.</summary>
        <value><see cref="T:System.Configuration.ConfigurationValidatorBase" /> Wystąpienia modułu sprawdzania poprawności.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance%2A> właściwości do wykonywania sprawdzania poprawności ciąg przez wywołanie jego <xref:System.Configuration.StringValidator.Validate%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance%2A> metody.  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#15)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>