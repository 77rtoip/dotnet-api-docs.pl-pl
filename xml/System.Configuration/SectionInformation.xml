<Type Name="SectionInformation" FullName="System.Configuration.SectionInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="901da00d9e9c4b2d916f051dc57c7afadeac24d0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129525" /></Metadata><TypeSignature Language="C#" Value="public sealed class SectionInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SectionInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SectionInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SectionInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class SectionInformation sealed" />
  <TypeSignature Language="F#" Value="type SectionInformation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metadane dotyczące poszczególnych sekcji w hierarchii konfiguracji. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation> Obiekt zawiera metadane dotyczące poszczególnych sekcji w hierarchii konfiguracji. Ten obiekt może służyć do sprawdzania poprawności i zmieniania właściwości poszczególnych sekcji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation> jak uzyskać metadane skojarzone <xref:System.Configuration.ConfigurationSection> z obiektem.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#91](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#91)]
 [!code-vb[System.Configuration.ConfigurationElement#91](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#91)]  
  
 Poniższy przykład to fragment pliku konfiguracji, który jest używany w poprzednim przykładzie.  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  <configSections>  
    <section name="MyUrls" type="Samples.AspNet.UrlsSection,  
      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  
      PublicKeyToken=null" allowDefinition="Everywhere"  
      allowExeDefinition="MachineToApplication"  
      restartOnExternalChanges="true" />  
  </configSections>  
  <MyUrls name="MyFavorites">  
    <simple name="Contoso" url="http://www.contoso.com" port="8080" />  
    <urls>  
      <clear />  
      <add name="Microsoft" url="http://www.microsoft.com" port="0" />  
    </urls>  
  </MyUrls>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName="AllowDefinition">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationAllowDefinition AllowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefinition As ConfigurationAllowDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationAllowDefinition AllowDefinition { System::Configuration::ConfigurationAllowDefinition get(); void set(System::Configuration::ConfigurationAllowDefinition value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDefinition : System.Configuration.ConfigurationAllowDefinition with get, set" Usage="System.Configuration.SectionInformation.AllowDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationAllowDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, gdzie w hierarchii plików konfiguracji można zdefiniować skojarzoną sekcję konfiguracyjną.</summary>
        <value>Wartość wskazująca, gdzie w hierarchii plików konfiguracji można zadeklarować <see cref="T:System.Configuration.ConfigurationSection" /> skojarzony obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.AllowDefinition%2A>dotyczy tylko plików konfiguracji aplikacji sieci Web. W przypadku aplikacji klienckich należy użyć <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>programu.  
  
   
  
## Examples  
 W przykładach w tej sekcji pokazano, <xref:System.Configuration.SectionInformation.AllowDefinition%2A> jak pobrać wartość właściwości po uzyskaniu dostępu do powiązanych sekcji informacji w pliku konfiguracyjnym.  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation> obiekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation.AllowDefinition%2A> wartość.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#96](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#96)]
 [!code-vb[System.Configuration.ConfigurationElement#96](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#96)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Wybrana wartość powoduje konflikt z wartością, która jest już zdefiniowana.</exception>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="AllowExeDefinition">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowExeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowExeDefinition As ConfigurationAllowExeDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationAllowExeDefinition AllowExeDefinition { System::Configuration::ConfigurationAllowExeDefinition get(); void set(System::Configuration::ConfigurationAllowExeDefinition value); };" />
      <MemberSignature Language="F#" Value="member this.AllowExeDefinition : System.Configuration.ConfigurationAllowExeDefinition with get, set" Usage="System.Configuration.SectionInformation.AllowExeDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationAllowExeDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, gdzie w hierarchii plików konfiguracji można zadeklarować skojarzoną sekcję konfiguracyjną.</summary>
        <value>Wartość wskazująca, gdzie w hierarchii plików konfiguracji skojarzony <see cref="T:System.Configuration.ConfigurationSection" /> obiekt może być zadeklarowany dla plików. exe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>dotyczy tylko plików konfiguracji aplikacji klienckich. W przypadku aplikacji sieci Web należy użyć <xref:System.Configuration.SectionInformation.AllowDefinition%2A>programu.  
  
   
  
## Examples  
 W przykładach w tej sekcji pokazano, <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> jak pobrać wartość właściwości po uzyskaniu dostępu do powiązanych sekcji informacji w pliku konfiguracyjnym.  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation> obiekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> wartość.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#97](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#97)]
 [!code-vb[System.Configuration.ConfigurationElement#97](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#97)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Wybrana wartość powoduje konflikt z wartością, która jest już zdefiniowana.</exception>
        <altmember cref="T:System.Configuration.ConfigurationAllowExeDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AllowLocation">
      <MemberSignature Language="C#" Value="public bool AllowLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowLocation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowLocation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowLocation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowLocation : bool with get, set" Usage="System.Configuration.SectionInformation.AllowLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy sekcja konfiguracji zezwala na <see langword="location" /> atrybut.</summary>
        <value><see langword="true" />Jeśli atrybut jest dozwolony; w przeciwnym razie <see langword="false" />,. <see langword="location" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu na `false` <xref:System.Configuration.SectionInformation.AllowLocation%2A> Właściwość wskazuje, że do sekcji uzyskuje się dostęp za pomocą czytnika kodu natywnego. W związku z tym użycie `location` atrybutu jest niedozwolone, ponieważ czytelnicy kodu natywnego nie obsługują `location`koncepcji.  
  
   
  
## Examples  
 W przykładach w tej sekcji pokazano, <xref:System.Configuration.SectionInformation.AllowLocation%2A> jak pobrać wartość właściwości po uzyskaniu dostępu do powiązanych sekcji informacji w pliku konfiguracyjnym.  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation> obiekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation.AllowLocation%2A> wartość.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#98](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#98)]
 [!code-vb[System.Configuration.ConfigurationElement#98](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Wybrana wartość powoduje konflikt z wartością, która jest już zdefiniowana.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowOverride">
      <MemberSignature Language="C#" Value="public bool AllowOverride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowOverride" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowOverride" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowOverride { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowOverride : bool with get, set" Usage="System.Configuration.SectionInformation.AllowOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy skojarzona sekcja konfiguracji może być zastąpiona przez pliki konfiguracji niższego poziomu.</summary>
        <value><see langword="true" />Jeśli sekcja może być zastąpiona; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W przykładach w tej sekcji pokazano, <xref:System.Configuration.SectionInformation.AllowOverride%2A> jak pobrać wartość właściwości po uzyskaniu dostępu do powiązanych sekcji informacji w pliku konfiguracyjnym.  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation> obiekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation.AllowOverride%2A> wartość.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#99)]
 [!code-vb[System.Configuration.ConfigurationElement#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigSource">
      <MemberSignature Language="C#" Value="public string ConfigSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigSource" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ConfigSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigSource : string with get, set" Usage="System.Configuration.SectionInformation.ConfigSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pliku dołączanego, w którym zdefiniowano skojarzoną sekcję konfiguracyjną, jeśli taki plik istnieje.</summary>
        <value>Nazwa dołączanego pliku, w którym jest zdefiniowana <see cref="T:System.Configuration.ConfigurationSection" /> skojarzona, jeśli taki plik istnieje; w przeciwnym razie, pusty ciąg ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość reprezentuje wartość `configSource` <xref:System.Configuration.SectionInformation> atrybutu<xref:System.Configuration.ConfigurationSection> , który jest określony dla obiektu, który jest skojarzony z obiektem. <xref:System.Configuration.SectionInformation.ConfigSource%2A>  
  
 <xref:System.Configuration.ConfigurationSection> Implementacja może opcjonalnie określić oddzielny plik, w którym są zdefiniowane ustawienia konfiguracji dla tej sekcji. Może to być przydatne na wiele sposobów:  
  
-   Użycie plików dołączanych może spowodować bardziej logiczną i modularną strukturę dla plików konfiguracji.  
  
-   Zabezpieczenia dostępu do plików i uprawnienia mogą służyć do ograniczania dostępu do sekcji ustawień konfiguracji.  
  
-   Ustawienia w pliku dołączania, które nie są używane podczas inicjowania aplikacji, można modyfikować i ładować ponownie bez konieczności ponownego uruchamiania aplikacji.  
  
 Poniższy przykład pokazuje, jak ten atrybut jest używany w pliku konfiguracji, aby określić, że `pages` sekcja jest zdefiniowana w zewnętrznym pliku dołączanym:  
  
 `<pages configSource="pages.config"/>`  
  
 Jeśli którekolwiek z ustawień w pliku konfiguracji dołączania wymaga, aby aplikacja została ponownie uruchomiona po zmodyfikowaniu, należy <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> ustawić właściwość `true`na.  
  
 W aplikacjach ASP.NET w czasie wykonywania można przypisać do <xref:System.Configuration.SectionInformation.ConfigSource%2A> właściwości nazwę alternatywnego pliku konfiguracji. W takim przypadku zawartość pliku jest zastępowana przez domyślne informacje o parametrach połączenia, które znajdują się w pliku Web. config. Dzieje się tak również, gdy plik alternatywny nie istnieje i jest tworzony w czasie wykonywania. Jeśli plik Web. config nie zawiera informacji o parametrach połączenia, do pliku alternatywnego zostanie dodana pusta sekcja.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
      </Docs>
    </Member>
    <Member MemberName="ConfigurationBuilder">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationBuilder ConfigurationBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationBuilder ConfigurationBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ConfigurationBuilder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfigurationBuilder As ConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationBuilder ^ ConfigurationBuilder { System::Configuration::ConfigurationBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationBuilder : System.Configuration.ConfigurationBuilder" Usage="System.Configuration.SectionInformation.ConfigurationBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Configuration.ConfigurationBuilder" /> Pobiera obiekt dla tej sekcji konfiguracji.</summary>
        <value><see cref="T:System.Configuration.ConfigurationBuilder" /> Obiekt dla tej sekcji konfiguracji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForceDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wymusza, aby sekcja skojarzonej konfiguracji była wyświetlana w pliku konfiguracji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sekcja konfiguracji nie jest zapisywana w pliku konfiguracji, gdy jest dziedziczona z pliku nadrzędnego. Jeśli chcesz, aby sekcja nadrzędna była wyświetlana w podrzędnym pliku konfiguracji, należy ustawić <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> na. `true` Powoduje to, że plik konfiguracji jest bardziej przenośny z jednego komputera na inny. Pozwala to również upewnić się, że sekcja istnieje, nawet jeśli nie masz kontroli nad nadrzędnymi plikami konfiguracyjnymi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration();" />
      <MemberSignature Language="F#" Value="member this.ForceDeclaration : unit -&gt; unit" Usage="sectionInformation.ForceDeclaration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wymusza, aby sekcja skojarzonej konfiguracji była wyświetlana w pliku konfiguracji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wymusza zapisanie <xref:System.Configuration.SectionInformation> tej deklaracji w pliku konfiguracji. <xref:System.Configuration.SectionInformation.ForceDeclaration%2A>  
  
> [!NOTE]
>  Metoda może wymusić zapisanie deklaracji w pliku konfiguracji, nawet jeśli sekcja nie jest wymagana, ponieważ jest już zadeklarowana w pliku nadrzędnym. <xref:System.Configuration.SectionInformation> <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> Użycie metody może spowodować, że plik konfiguracji jest bardziej przenośny z jednego komputera na inny. Pozwala to upewnić się, że sekcja istnieje, nawet jeśli nie masz kontroli nad nadrzędnymi plikami konfiguracyjnymi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool force) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (force As Boolean)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool require) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (require As Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ForceDeclaration : bool -&gt; unit" Usage="sectionInformation.ForceDeclaration require" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.ForceDeclaration : bool -&gt; unit" Usage="sectionInformation.ForceDeclaration require" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="require" Type="System.Boolean" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="force"><see langword="true" />Jeśli skojarzona sekcja powinna zostać zapisywana w pliku konfiguracji; w przeciwnym razie. <see langword="false" /></param>
        <param name="require">To be added.</param>
        <summary>Wymusza, aby sekcja skojarzonej konfiguracji była wyświetlana w pliku konfiguracji, lub usuwa istniejącą sekcję z pliku konfiguracyjnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> wymusza, aby <xref:System.Configuration.SectionInformation> ta deklaracja była zapisywana w pliku konfiguracji, `force` Jeśli `true`jest. Jeśli `force` <xref:System.Configuration.SectionInformation> jest `false`, ta akcja może zostać zignorowana, jeśli deklaracja jest wymagana przez system.  
  
> [!NOTE]
>  Metoda może wymusić zapisanie deklaracji w pliku konfiguracji, nawet jeśli ta sekcja nie jest wymagana, ponieważ jest już zadeklarowana w pliku nadrzędnym. <xref:System.Configuration.SectionInformation> <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> Użycie metody może spowodować, że plik konfiguracji jest bardziej przenośny z jednego komputera na inny. Pozwala to również upewnić się, że sekcja istnieje, nawet jeśli nie masz kontroli nad nadrzędnymi plikami konfiguracyjnymi.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> jak używać metody.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#113](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#113)]
 [!code-vb[System.Configuration.ConfigurationElement#113](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#113)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><paramref name="force" />jest <see langword="true" /> i nie można wyeksportować skojarzonej sekcji do podrzędnego pliku konfiguracji lub jest ona niezadeklarowana.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
      </Docs>
    </Member>
    <Member MemberName="ForceSave">
      <MemberSignature Language="C#" Value="public bool ForceSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceSave" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ForceSave" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceSave { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ForceSave : bool with get, set" Usage="System.Configuration.SectionInformation.ForceSave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy skojarzona sekcja konfiguracji zostanie zapisana, nawet jeśli nie została zmodyfikowana.</summary>
        <value><see langword="true" />Jeśli skojarzony <see cref="T:System.Configuration.ConfigurationSection" /> obiekt zostanie zapisany nawet wtedy, <see langword="false" />gdy nie został zmodyfikowany; w przeciwnym razie. Wartość domyślna to <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Jeśli plik konfiguracji zostanie zapisany (nawet jeśli nie ma żadnych modyfikacji), ASP.NET uruchamia ponownie aplikację.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.ForceSave%2A> jak używać właściwości <xref:System.Configuration.ConfigurationSection> obiektu.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#1)]
 [!code-vb[System.Configuration.ConfigurationElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentSection">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSection GetParentSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Configuration.ConfigurationSection GetParentSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.GetParentSection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentSection () As ConfigurationSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::ConfigurationSection ^ GetParentSection();" />
      <MemberSignature Language="F#" Value="member this.GetParentSection : unit -&gt; System.Configuration.ConfigurationSection" Usage="sectionInformation.GetParentSection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera sekcję konfiguracyjną zawierającą sekcję konfiguracyjną skojarzoną z tym obiektem.</summary>
        <returns>Sekcja konfiguracji zawierająca <see cref="T:System.Configuration.ConfigurationSection" /> , która jest skojarzona z tym <see cref="T:System.Configuration.SectionInformation" /> obiektem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ten <xref:System.Configuration.ConfigurationSection> obiekt nie ma sekcji nadrzędnych <xref:System.Configuration.SectionInformation.GetParentSection%2A> , metoda zwraca <xref:System.Configuration.SectionInformation.Name%2A> tę samą wartość, co właściwość.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.GetParentSection%2A> jak używać metody.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#92](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#92)]
 [!code-vb[System.Configuration.ConfigurationElement#92](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#92)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Metoda jest wywoływana z sekcji nadrzędnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRawXml">
      <MemberSignature Language="C#" Value="public string GetRawXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRawXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.GetRawXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRawXml();" />
      <MemberSignature Language="F#" Value="member this.GetRawXml : unit -&gt; string" Usage="sectionInformation.GetRawXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt węzła XML, który reprezentuje skojarzony obiekt sekcji konfiguracji.</summary>
        <returns>Reprezentacja XML dla tej sekcji konfiguracji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.GetRawXml%2A> jak używać metody.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#93](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#93)]
 [!code-vb[System.Configuration.ConfigurationElement#93](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#93)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ten obiekt konfiguracji jest zablokowany i nie można go edytować.</exception>
      </Docs>
    </Member>
    <Member MemberName="InheritInChildApplications">
      <MemberSignature Language="C#" Value="public bool InheritInChildApplications { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InheritInChildApplications" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.InheritInChildApplications" />
      <MemberSignature Language="VB.NET" Value="Public Property InheritInChildApplications As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InheritInChildApplications { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InheritInChildApplications : bool with get, set" Usage="System.Configuration.SectionInformation.InheritInChildApplications" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ustawienia określone w skojarzonej sekcji konfiguracji są dziedziczone przez aplikacje, które znajdują się w podkatalogu odpowiedniej aplikacji.</summary>
        <value><see langword="true" />Jeśli ustawienia określone w tym <see cref="T:System.Configuration.ConfigurationSection" /> obiekcie są dziedziczone przez aplikacje podrzędne; <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> Właściwość reprezentujeatrybut`location`elementu w pliku konfiguracji. `inheritInChildApplications`  
  
 Ustaw <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> na`false` , aby zapobiec dziedziczeniu przez aplikacje znajdujące się w podkatalogach ustawień specyficznych dla określonej lokalizacji (na przykład katalogu głównego witryny sieci Web).  
  
 Poniższy przykład pokazuje, jak używać tego atrybutu w pliku konfiguracji, aby określić, że ustawienia zdefiniowane w elemencie Location dla katalogu głównego witryny sieci Web nie powinny być dziedziczone przez aplikacje podrzędne:  
  
 `<location path="." inheritInChildApplications="false">`  
  
 <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> Właściwość ma zastosowanie tylko do ustawień konfiguracji specyficznych dla lokalizacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> jak pobrać wartość <xref:System.Configuration.ConfigurationSection> obiektu.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#100](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#100)]
 [!code-vb[System.Configuration.ConfigurationElement#100](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclarationRequired">
      <MemberSignature Language="C#" Value="public bool IsDeclarationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclarationRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclarationRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclarationRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeclarationRequired : bool" Usage="System.Configuration.SectionInformation.IsDeclarationRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy sekcja konfiguracji musi być zadeklarowana w pliku konfiguracji.</summary>
        <value><see langword="true" />Jeśli skojarzony <see cref="T:System.Configuration.ConfigurationSection" /> obiekt musi być zadeklarowany w pliku konfiguracji; w przeciwnym razie <see langword="false" />,.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W przykładach w tej sekcji pokazano, <xref:System.Configuration.SectionInformation.IsDeclarationRequired%2A> jak pobrać wartość właściwości po uzyskaniu dostępu do powiązanych sekcji informacji w pliku konfiguracyjnym.  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation> obiekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation.IsDeclarationRequired%2A> wartość.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#103](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#103)]
 [!code-vb[System.Configuration.ConfigurationElement#103](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#103)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsDeclared">
      <MemberSignature Language="C#" Value="public bool IsDeclared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclared" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsDeclared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeclared : bool" Usage="System.Configuration.SectionInformation.IsDeclared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy skojarzona sekcja konfiguracji jest zadeklarowana w pliku konfiguracji.</summary>
        <value><see langword="true" />Jeśli jest zadeklarowany w pliku konfiguracji; w przeciwnym razie <see langword="false" />,. <see cref="T:System.Configuration.ConfigurationSection" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W przykładach w tej sekcji pokazano, <xref:System.Configuration.SectionInformation.IsDeclared%2A> jak pobrać wartość właściwości po uzyskaniu dostępu do powiązanych sekcji informacji w pliku konfiguracyjnym.  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation> obiekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation.IsDeclared%2A> wartość.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#104](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#104)]
 [!code-vb[System.Configuration.ConfigurationElement#104](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsLocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocked : bool" Usage="System.Configuration.SectionInformation.IsLocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy skojarzona sekcja konfiguracji jest zablokowana.</summary>
        <value><see langword="true" />Jeśli sekcja jest zablokowana; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca `true` , <xref:System.Configuration.SectionInformation.AllowDefinition%2A> gdy<xref:System.Configuration.SectionInformation.AllowOverride%2A> sekcja pokrewna jest zablokowana przez lub właściwość. <xref:System.Configuration.SectionInformation.IsLocked%2A> Sekcja jest zablokowana, jeśli nie można jej zastąpić ani zdefiniować w bieżącym pliku konfiguracyjnym.  
  
   
  
## Examples  
 W przykładach w tej sekcji pokazano, <xref:System.Configuration.SectionInformation.IsLocked%2A> jak pobrać wartość właściwości po uzyskaniu dostępu do powiązanych sekcji informacji w pliku konfiguracyjnym.  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation> obiekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation.IsLocked%2A> wartość.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#105](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#105)]
 [!code-vb[System.Configuration.ConfigurationElement#105](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProtected">
      <MemberSignature Language="C#" Value="public bool IsProtected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProtected" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsProtected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsProtected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsProtected : bool" Usage="System.Configuration.SectionInformation.IsProtected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy skojarzona sekcja konfiguracji jest chroniona.</summary>
        <value><see langword="true" />Jeśli jest chroniona; w przeciwnym <see langword="false" />razie. <see cref="T:System.Configuration.ConfigurationSection" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sekcje chronionej konfiguracji są szyfrowane i tylko do odczytu.  
  
 Aby uzyskać więcej informacji na temat sekcji Konfiguracja chroniona, zobacz [szyfrowanie informacji o konfiguracji za pomocą konfiguracji chronionej](https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 W przykładach w tej sekcji pokazano, <xref:System.Configuration.SectionInformation.IsProtected%2A> jak pobrać wartość właściwości po uzyskaniu dostępu do powiązanych sekcji informacji w pliku konfiguracyjnym.  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation> obiekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 Poniższy przykład pobiera <xref:System.Configuration.SectionInformation.IsProtected%2A> wartość.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#106](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#106)]
 [!code-vb[System.Configuration.ConfigurationElement#106](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#106)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1">Szyfrowanie informacji o konfiguracji przy użyciu konfiguracji chronionej</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Configuration.SectionInformation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę skojarzonej sekcji konfiguracji.</summary>
        <value>Pełna nazwa sekcji konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.Name%2A> Jest nazwą sekcji bez ścieżki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.Name%2A> jak pobrać wartość <xref:System.Configuration.ConfigurationSection> obiektu.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#107](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#107)]
 [!code-vb[System.Configuration.ConfigurationElement#107](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideMode">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideMode" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideMode" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideMode As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideMode { System::Configuration::OverrideMode get(); void set(System::Configuration::OverrideMode value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideMode : System.Configuration.OverrideMode with get, set" Usage="System.Configuration.SectionInformation.OverrideMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Configuration.OverrideMode" /> wartość wyliczenia określającą, czy skojarzona sekcja konfiguracji może być zastąpiona przez podrzędne pliki konfiguracji.</summary>
        <value>Jedna z <see cref="T:System.Configuration.OverrideMode" /> wartości wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera lub ustawia wartość wskazującą, czy zasoby zadeklarowane `location` wewnątrz elementu mogą być przesłonięte przez podrzędne pliki konfiguracji. <xref:System.Configuration.SectionInformation.AllowOverride%2A> Właściwość pobiera lub ustawia wartość, która określa podobne zachowanie, ale robi to dla określonego elementu konfiguracji lub grupy, i używa jednej <xref:System.Configuration.OverrideMode> z wartości wyliczenia. <xref:System.Configuration.SectionInformation.OverrideMode%2A> <xref:System.Configuration.SectionInformation.OverrideMode%2A> Właściwość umożliwia dziedziczenie zachowania z elementu nadrzędnego.  
  
 Nie można programowo ustawić <xref:System.Configuration.SectionInformation.AllowOverride%2A> właściwości i. <xref:System.Configuration.SectionInformation.OverrideMode%2A> <xref:System.Configuration.SectionInformation.AllowOverride%2A> Ustawienie <xref:System.Configuration.SectionInformation.OverrideMode%2A> właściwości, aby <xref:System.Configuration.OverrideMode.Inherit>ustawia właściwość na. `true` <xref:System.Configuration.SectionInformation.AllowOverride%2A> Ustawienie <xref:System.Configuration.SectionInformation.OverrideMode%2A> właściwości, aby `false`ustawia właściwość na. `false`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Podjęto próbę zmiany <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> właściwości i <see cref="P:System.Configuration.SectionInformation.OverrideMode" /> , co nie jest obsługiwane ze względu na zgodność.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.AllowOverride" />
      </Docs>
    </Member>
    <Member MemberName="OverrideModeDefault">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideModeDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideModeDefault" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideModeDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideModeDefault As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideModeDefault { System::Configuration::OverrideMode get(); void set(System::Configuration::OverrideMode value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideModeDefault : System.Configuration.OverrideMode with get, set" Usage="System.Configuration.SectionInformation.OverrideModeDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą domyślne zachowanie przesłonięcia w sekcji konfiguracji przez podrzędne pliki konfiguracji.</summary>
        <value>Jedna z <see cref="T:System.Configuration.OverrideMode" /> wartości wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość sekcji konfiguracji można ustawić tylko <xref:System.Configuration.OverrideMode.Allow> na wartość <xref:System.Configuration.OverrideMode> lub <xref:System.Configuration.OverrideMode.Deny> Wyliczenie. <xref:System.Configuration.SectionInformation.OverrideModeDefault%2A> Ustawienie właściwości na <xref:System.Configuration.OverrideMode.Inherit> jest równoznaczne <xref:System.Configuration.OverrideMode.Allow>z ustawieniem wartości. <xref:System.Configuration.SectionInformation.OverrideModeDefault%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Zachowanie przesłonięcia jest określone w sekcji konfiguracji nadrzędnej.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.OverrideMode" />
      </Docs>
    </Member>
    <Member MemberName="OverrideModeEffective">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideModeEffective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideModeEffective" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideModeEffective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverrideModeEffective As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideModeEffective { System::Configuration::OverrideMode get(); };" />
      <MemberSignature Language="F#" Value="member this.OverrideModeEffective : System.Configuration.OverrideMode" Usage="System.Configuration.SectionInformation.OverrideModeEffective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zachowanie przesłonięcia sekcji konfiguracji, która jest zależna od tego, czy podrzędne pliki konfiguracji mogą blokować sekcję konfiguracyjną.</summary>
        <value>Jedna z <see cref="T:System.Configuration.OverrideMode" /> wartości wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca <xref:System.Configuration.OverrideMode.Deny> <xref:System.Configuration.OverrideMode.Allow>albo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionProvider">
      <MemberSignature Language="C#" Value="public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProtectedConfigurationProvider ProtectionProvider" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ProtectionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionProvider As ProtectedConfigurationProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProtectedConfigurationProvider ^ ProtectionProvider { System::Configuration::ProtectedConfigurationProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionProvider : System.Configuration.ProtectedConfigurationProvider" Usage="System.Configuration.SectionInformation.ProtectionProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ProtectedConfigurationProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dostawcę konfiguracji chronionej dla skojarzonej sekcji konfiguracji.</summary>
        <value>Dostawca konfiguracji ochrony dla tego <see cref="T:System.Configuration.ConfigurationSection" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku niechronionych sekcji <xref:System.Configuration.SectionInformation.ProtectionProvider%2A> właściwość jest. `null`  
  
 Aby uzyskać więcej informacji na temat sekcji Konfiguracja chroniona, zobacz [szyfrowanie informacji o konfiguracji za pomocą konfiguracji chronionej](https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.ProtectSection%2A> jak pobrać wartość <xref:System.Configuration.ConfigurationSection> obiektu.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#108](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#108)]
 [!code-vb[System.Configuration.ConfigurationElement#108](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#108)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1">Szyfrowanie informacji o konfiguracji przy użyciu konfiguracji chronionej</related>
      </Docs>
    </Member>
    <Member MemberName="ProtectSection">
      <MemberSignature Language="C#" Value="public void ProtectSection (string protectionProvider);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProtectSection(string protectionProvider) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSection (protectionProvider As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProtectSection(System::String ^ protectionProvider);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public void ProtectSection (string provider);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProtectSection(string provider) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSection (provider As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProtectSection(System::String ^ provider);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ProtectSection(System.String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ProtectSection : string -&gt; unit" Usage="sectionInformation.ProtectSection provider" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ProtectSection(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.ProtectSection : string -&gt; unit" Usage="sectionInformation.ProtectSection provider" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectionProvider" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="provider" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="protectionProvider">Nazwa dostawcy ochrony do użycia.</param>
        <param name="provider">To be added.</param>
        <summary>Oznacza sekcję konfiguracyjną do ochrony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.ProtectSection%2A> Metoda oznacza sekcję szyfrowania, aby była zapisywana w postaci zaszyfrowanej na dysku.  
  
 Następujący dostawcy ochrony są domyślnie włączeni:  
  
 <xref:System.Configuration.DpapiProtectedConfigurationProvider>  
  
 <xref:System.Configuration.RsaProtectedConfigurationProvider>  
  
> [!NOTE]
>  W przypadku wywołania <xref:System.Configuration.SectionInformation.ProtectSection%2A> metody `null` z parametrem lub pustym ciągiem <xref:System.Configuration.RsaProtectedConfigurationProvider> Klasa jest używana jako dostawca ochrony.  
  
 Aby uzyskać więcej informacji na temat sekcji Konfiguracja chroniona, zobacz [szyfrowanie informacji o konfiguracji za pomocą konfiguracji chronionej](https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.ProtectSection%2A> jak używać metody.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#94](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#94)]
 [!code-vb[System.Configuration.ConfigurationElement#94](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#94)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiona na <see langword="false" />. <see cref="P:System.Configuration.SectionInformation.AllowLocation" />  
  
—lub— 
Sekcja docelowa jest już sekcją danych chronionych.</exception>
        <altmember cref="T:System.Configuration.DpapiProtectedConfigurationProvider" />
        <altmember cref="T:System.Configuration.RsaProtectedConfigurationProvider" />
        <related type="Article" href="https://msdn.microsoft.com/library/53tyfkaw(v=vs.100).aspx">Szyfrowanie informacji o konfiguracji przy użyciu konfiguracji chronionej</related>
        <related type="Article" href="https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1">Szyfrowanie informacji o konfiguracji przy użyciu konfiguracji chronionej</related>
      </Docs>
    </Member>
    <Member MemberName="RequirePermission">
      <MemberSignature Language="C#" Value="public bool RequirePermission { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequirePermission" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.RequirePermission" />
      <MemberSignature Language="VB.NET" Value="Public Property RequirePermission As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequirePermission { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequirePermission : bool with get, set" Usage="System.Configuration.SectionInformation.RequirePermission" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy skojarzona sekcja konfiguracji wymaga uprawnień dostępu.</summary>
        <value><see langword="true" />Jeśli atrybut jest ustawiony na <see langword="true" />; w przeciwnym razie <see langword="false" />,. <see langword="requirePermission" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Configuration.SectionInformation.RequirePermission%2A> jest ustawiona na `true`, `GetSection` metody są ograniczone przez ustawienie poziomu zaufania aplikacji. Oznacza to, że metody lub właściwości zezwalające na dostęp do obsługi sekcji konfiguracji są ograniczone przez zestaw poziomu zaufania dla aplikacji sieci Web.  
  
> [!NOTE]
>  Ze względu na to, że wysoki i pełny zaufanie to jedyne poziomy, które zezwalają na dostęp do plików poza bieżącą domeną aplikacji, aplikacja może używać programów obsługi sekcji konfiguracji tylko na tych poziomach zaufania.  
  
 Gdy <xref:System.Configuration.SectionInformation.RequirePermission%2A> jest ustawiona na `false`, dostęp do danych konfiguracji nie jest ograniczany przez ustawienia poziomu zaufania aplikacji.  
  
> [!NOTE]
>  Odpowiednie uprawnienia do listy ACL plików (Access Control List) nadal są wymagane, niezależnie od <xref:System.Configuration.SectionInformation.RequirePermission%2A> ustawienia. Uprawnienia listy ACL określają, kto może uzyskać dostęp do pliku konfiguracji.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono dwa możliwe poziomy zaufania dla aplikacji sieci Web, gdy <xref:System.Configuration.SectionInformation.RequirePermission%2A> Właściwość `appSettings` sekcji jest `true`.  
  
```xml  
<system.web>  
   // With the following trust value   
   // the code below works.  
  <trust level="Full" />  
</system.web>  
  
<system.web>  
  // With the following trust value   
  // the code below does not work.  
  <trust level="Medium" />  
</system.web>  
```  
  
 W poniższym przykładzie przedstawiono kod, który jest uruchamiany bez błędów, gdy poziom zaufania jest ustawiony na pełny. W przeciwnym razie kod powoduje błąd.  
  
```csharp  
AppSettingsSection apSection =   
  ConfigurationManager.GetSection("appSettings") as AppSettingsSection;  
  
NameValueCollection apSectionCollection =  
  ConfigurationManager.AppSettings;  
```  
  
```vb  
Dim apSection As AppSettingsSection = _   
  TryCast(ConfigurationManager.GetSection("appSettings"),   
    AppSettingsSection)  
  
  Dim apSectionCollection As NameValueCollection = _   
    ConfigurationManager.AppSettings  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Wybrana wartość powoduje konflikt z wartością, która jest już zdefiniowana.</exception>
      </Docs>
    </Member>
    <Member MemberName="RestartOnExternalChanges">
      <MemberSignature Language="C#" Value="public bool RestartOnExternalChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RestartOnExternalChanges" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property RestartOnExternalChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RestartOnExternalChanges { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RestartOnExternalChanges : bool with get, set" Usage="System.Configuration.SectionInformation.RestartOnExternalChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy zmiana w pliku dołączania konfiguracji zewnętrznej wymaga ponownego uruchomienia aplikacji.</summary>
        <value><see langword="true" />Jeśli zmiana w pliku dołączania konfiguracji zewnętrznej wymaga ponownego uruchomienia aplikacji; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw właściwość na `false` , aby zapobiec ponownemu uruchomieniu aplikacji, gdy ustawienia konfiguracji w zewnętrznym pliku dołączanym <xref:System.Configuration.ConfigurationSection> są modyfikowane dla tego obiektu. <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> jak pobrać wartość <xref:System.Configuration.ConfigurationSection> właściwości obiektu.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#109](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#109)]
 [!code-vb[System.Configuration.ConfigurationElement#109](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Wybrana wartość powoduje konflikt z wartością, która jest już zdefiniowana.</exception>
      </Docs>
    </Member>
    <Member MemberName="RevertToParent">
      <MemberSignature Language="C#" Value="public void RevertToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevertToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.RevertToParent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevertToParent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevertToParent();" />
      <MemberSignature Language="F#" Value="member this.RevertToParent : unit -&gt; unit" Usage="sectionInformation.RevertToParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że skojarzona sekcja konfiguracji odziedziczy wszystkie jej wartości z sekcji nadrzędnej.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Nie można wywołać tej metody poza trybem edycji.</exception>
      </Docs>
    </Member>
    <Member MemberName="SectionName">
      <MemberSignature Language="C#" Value="public string SectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SectionName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.SectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SectionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SectionName : string" Usage="System.Configuration.SectionInformation.SectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę skojarzonej sekcji konfiguracji.</summary>
        <value>Nazwa skojarzonego <see cref="T:System.Configuration.ConfigurationSection" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Configuration.SectionInformation.SectionName%2A> właściwości to pełna nazwa sekcji, która obejmuje hierarchię dziedziczenia konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.SectionName%2A> jak pobrać wartość <xref:System.Configuration.ConfigurationSection> obiektu.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#110](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#110)]
 [!code-vb[System.Configuration.ConfigurationElement#110](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRawXml">
      <MemberSignature Language="C#" Value="public void SetRawXml (string rawXml);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRawXml(string rawXml) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRawXml (rawXml As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRawXml(System::String ^ rawXml);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public void SetRawXml (string xml);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRawXml(string xml) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRawXml (xml As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRawXml(System::String ^ xml);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.SetRawXml(System.String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SetRawXml : string -&gt; unit" Usage="sectionInformation.SetRawXml xml" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.SetRawXml(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.SetRawXml : string -&gt; unit" Usage="sectionInformation.SetRawXml xml" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawXml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawXml">KOD XML do użycia.</param>
        <param name="xml">To be added.</param>
        <summary>Ustawia obiekt na reprezentację w formacie XML skojarzonej sekcji konfiguracji w pliku konfiguracji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rawXml" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Configuration.SectionInformation.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę klasy sekcji.</summary>
        <value>Nazwa klasy, która jest skojarzona z tą <see cref="T:System.Configuration.ConfigurationSection" /> sekcją.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca nazwę klasy sekcji, która obsługuje to wystąpienie <xref:System.Configuration.ConfigurationSection> klasy. <xref:System.Configuration.SectionInformation.Type%2A>  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.SectionInformation.Type%2A> jak pobrać wartość <xref:System.Configuration.ConfigurationSection> obiektu.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#111](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#111)]
 [!code-vb[System.Configuration.ConfigurationElement#111](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wybrana wartość jest lub <see langword="null" /> jest pustym ciągiem ("").</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Wybrana wartość powoduje konflikt z wartością, która jest już zdefiniowana.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSection">
      <MemberSignature Language="C#" Value="public void UnprotectSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnprotectSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.UnprotectSection" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnprotectSection();" />
      <MemberSignature Language="F#" Value="member this.UnprotectSection : unit -&gt; unit" Usage="sectionInformation.UnprotectSection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa szyfrowanie chronionej konfiguracji ze skojarzonej sekcji konfiguracji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat sekcji Konfiguracja chroniona, zobacz [szyfrowanie informacji o konfiguracji za pomocą konfiguracji chronionej](https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać tej metody.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#112](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#112)]
 [!code-vb[System.Configuration.ConfigurationElement#112](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#112)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1">Szyfrowanie informacji o konfiguracji przy użyciu konfiguracji chronionej</related>
      </Docs>
    </Member>
  </Members>
</Type>
