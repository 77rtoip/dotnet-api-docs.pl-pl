<Type Name="LongValidator" FullName="System.Configuration.LongValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="08df61136e4a13913822600598f49ca98b0279a4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129222" /></Metadata><TypeSignature Language="C#" Value="public class LongValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LongValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LongValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class LongValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class LongValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type LongValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia sprawdzenie poprawności <see cref="T:System.Int64" /> wartości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy <xref:System.Configuration.LongValidator> do`long` upewnienia się, że (a 64-bitowa liczba całkowita ze znakiem) spełnia określone kryteria. Kryteria weryfikacji są ustanawiane podczas tworzenia wystąpienia <xref:System.Configuration.LongValidator> klasy. <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%29> Konstruktor gwarantuje `long` , że wartość, która jest sprawdzana, jest zgodna z minimalną i maksymalną długością. Konstruktor sprawdza zarówno wartości minimalne, jak i <xref:System.Int64> maksymalne, a także czy zakres walidacji jest na wyłączność. <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> Konstruktor sprawdza poprzednie trzy parametry i sprawdza, <xref:System.Int64> czy wartość jest równa określonej wartości rozwiązania. <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%2CSystem.Int64%29>  
  
 <xref:System.Configuration.LongValidator.CanValidate%2A> Metoda określa, czy sprawdzany typ obiektu jest zgodny z oczekiwanym typem. Zweryfikowany obiekt jest przenoszona jako parametr <xref:System.Configuration.LongValidator.Validate%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Configuration.LongValidator> jak używać typu.  
  
 [!code-csharp[System.Configuration.LongValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#1)]
 [!code-vb[System.Configuration.LongValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.LongValidator" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minValue">Wartość określająca minimalną długość <see langword="long" /> wartości. <see cref="T:System.Int64" /></param>
        <param name="maxValue">Wartość określająca maksymalną długość <see langword="long" /> wartości. <see cref="T:System.Int64" /></param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.LongValidator" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LongValidator.%23ctor%2A> Konstruktor gwarantuje, że zweryfikowana wartość jest zgodna z minimalną i maksymalną długością.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long, rangeIsExclusive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 * bool -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue, rangeIsExclusive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue">Wartość określająca minimalną długość <see langword="long" /> wartości. <see cref="T:System.Int64" /></param>
        <param name="maxValue">Wartość określająca maksymalną długość <see langword="long" /> wartości. <see cref="T:System.Int64" /></param>
        <param name="rangeIsExclusive"><see cref="T:System.Boolean" /> Wartość określająca, czy zakres walidacji jest na wyłączność.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.LongValidator" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest używany <xref:System.Int64> Konstruktor,sprawdzazarównowartościminimalne,jakimaksymalne,atakżeczyzakreswalidacjijest<xref:System.Configuration.LongValidator.%23ctor%2A> na wyłączność. <xref:System.Int64> `minValue` `maxValue`Gdy parametr jest ustawiony na `true`, wartość nie może należeć do przedziału od do. `rangeIsExclusive`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Configuration.LongValidator.%23ctor%2A> konstruktora. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Configuration.LongValidator> klasy.  
  
 [!code-csharp[System.Configuration.LongValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#2)]
 [!code-vb[System.Configuration.LongValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue, bool rangeIsExclusive, long resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive, int64 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long, rangeIsExclusive As Boolean, resolution As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue, bool rangeIsExclusive, long resolution);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 * bool * int64 -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue, rangeIsExclusive, resolution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minValue">Wartość określająca minimalną długość <see langword="long" /> wartości. <see cref="T:System.Int64" /></param>
        <param name="maxValue">Wartość określająca maksymalną długość <see langword="long" /> wartości. <see cref="T:System.Int64" /></param>
        <param name="rangeIsExclusive"><see cref="T:System.Boolean" /> Wartość określająca, czy zakres walidacji jest na wyłączność.</param>
        <param name="resolution"><see cref="T:System.Int64" /> Wartość określająca konkretną wartość, która musi być dopasowana.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.LongValidator" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po określeniu `resolution` <xref:System.Int64> , zweryfikowana wartość musi być równa tej wartości, aby można było przekazywać walidację.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="resolution" />jest równa lub mniejsza niż <see langword="0" />.  
  
—lub— 
 <paramref name="maxValue" />jest mniejsze niż <paramref name="minValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="longValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ obiektu.</param>
        <summary>Określa, czy typ obiektu może być zweryfikowany.</summary>
        <returns><see langword="true" />Jeśli parametr <paramref name="type" /> jest zgodny z <see cref="T:System.Int64" /> wartością; w przeciwnym <see langword="false" />razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Configuration.LongValidator.CanValidate%2A> metody. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Configuration.LongValidator> klasy.  
  
 [!code-csharp[System.Configuration.LongValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#3)]
 [!code-vb[System.Configuration.LongValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="longValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Wartość obiektu.</param>
        <summary>Określa, czy wartość obiektu jest prawidłowa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa zawiera reguły niezbędne do <xref:System.Int64> walidacji obiektu. <xref:System.Configuration.LongValidator> Reguły są ustanawiane podczas tworzenia wystąpienia <xref:System.Configuration.LongValidator> klasy. Obiekt do walidacji jest przekazaniem jako parametr <xref:System.Configuration.LongValidator.Validate%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Configuration.LongValidator.Validate%2A> metody. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Configuration.LongValidator> klasy.  
  
 [!code-csharp[System.Configuration.LongValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#4)]
 [!code-vb[System.Configuration.LongValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>
