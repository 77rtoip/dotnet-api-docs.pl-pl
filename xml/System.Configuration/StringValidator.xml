<Type Name="StringValidator" FullName="System.Configuration.StringValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8564f41d230d73c3306fc999476c7236c314ebb9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36694936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.StringValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type StringValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia weryfikację ciągu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.StringValidator> Klasa jest używana do sprawdzenia, czy ciąg ma spełnia określone kryteria. Kryteria weryfikacji jest ustanawiane, jeśli wystąpienie <xref:System.Configuration.StringValidator> utworzyć klasy. Istnieją trzy przeciążenia konstruktora dla <xref:System.Configuration.StringValidator> klasy. <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> Minimalną dozwoloną długość ciągu sprawdzania poprawności weryfikuje konstruktora z jednym parametrem. <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Konstruktora z dwoma parametrami gwarantuje, że ciąg weryfikowany działa zgodnie z maksymalną długość i minimalna. <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> Konstruktora z trzema parametrami sprawdza zarówno wartości minimalna i maksymalna długość ciągu jest zweryfikowany, a także określa, czy znajdują się w ciągu sprawdzania poprawności określonych znaków.  
  
 <xref:System.Configuration.StringValidator.CanValidate%2A> Metoda określa, czy typ obiektu, sprawdzana jest zgodny z typem oczekiwanym. Obiekt sprawdzany został przekazany jako parametr <xref:System.Configuration.StringValidator.Validate%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Configuration.StringValidator> typu.  
  
 [!code-csharp[System.Configuration.StringValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#1)]
 [!code-vb[System.Configuration.StringValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.StringValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.StringValidator" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator minLength" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength">Liczba całkowita, która określa minimalną długość wartości ciągu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.StringValidator" /> klasy, na podstawie dostarczonego parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.StringValidator.%23ctor%2A> Minimalną dozwoloną długość ciągu sprawdzania poprawności weryfikuje konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength">Liczba całkowita, która określa minimalną długość wartości ciągu.</param>
        <param name="maxLength">Liczba całkowita, która określa maksymalną długość wartości ciągu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.StringValidator" /> klasy oparte na podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor zapewnia, że ciąg weryfikowany działa zgodnie z maksymalną długość i minimalna.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength, string invalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength, string invalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer, invalidCharacters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength, System::String ^ invalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int * string -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength, invalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
        <Parameter Name="invalidCharacters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="minLength">Liczba całkowita, która określa minimalną długość wartości ciągu.</param>
        <param name="maxLength">Liczba całkowita, która określa maksymalną długość wartości ciągu.</param>
        <param name="invalidCharacters">Ciąg, który reprezentuje nieprawidłowe znaki.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.StringValidator" /> klasy oparte na podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor temu ciąg sprawdzana działa zgodnie z maksymalną długość i minimalna i gwarantuje również, że określone znaki są wyłączone w ciągu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia to <xref:System.Configuration.StringValidator.%23ctor%2A> konstruktora. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Configuration.StringValidator> klasy.  
  
 [!code-csharp[System.Configuration.StringValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#2)]
 [!code-vb[System.Configuration.StringValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="stringValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ obiektu.</param>
        <summary>Określa, czy obiekt może być weryfikowane na podstawie typu.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="type" /> parametru dopasowuje ciąg znaków, a w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Configuration.StringValidator.CanValidate%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Configuration.StringValidator> klasy.  
  
 [!code-csharp[System.Configuration.StringValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#3)]
 [!code-vb[System.Configuration.StringValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="stringValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Wartość obiektu.</param>
        <summary>Określa, czy wartość obiektu jest nieprawidłowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.StringValidator> Klasa zawiera kryteriów niezbędnych do sprawdzania poprawności obiekt ciągu. Kryteria są ustalone, gdy wystąpienie klasy <xref:System.Configuration.StringValidator> utworzyć klasy. Obiekt do sprawdzania poprawności został przekazany jako parametr <xref:System.Configuration.StringValidator.Validate%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Configuration.StringValidator.Validate%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Configuration.StringValidator> klasy.  
  
 [!code-csharp[System.Configuration.StringValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#4)]
 [!code-vb[System.Configuration.StringValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> jest mniejsza niż <paramref name="minValue" /> lub większa niż <paramref name="maxValue" /> zgodnie z definicją w konstruktorze.  \- lub - <paramref name="value" /> zawiera nieprawidłowe znaki.</exception>
      </Docs>
    </Member>
  </Members>
</Type>