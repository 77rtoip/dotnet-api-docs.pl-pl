<Type Name="IntegerValidator" FullName="System.Configuration.IntegerValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b44544da224b1aa6e2225be09bccf1c886f20dc9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36696395" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IntegerValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegerValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IntegerValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegerValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntegerValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type IntegerValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ec2a4-101">Zapewnia weryfikację <see cref="T:System.Int32" /> wartość.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec2a4-101">Provides validation of an <see cref="T:System.Int32" /> value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2a4-102"><xref:System.Configuration.IntegerValidator> Klasa jest używana do sprawdzenia, czy całkowitą spełnia określone kryteria.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-102">The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria.</span></span> <span data-ttu-id="ec2a4-103">Ustanowiono kryteria sprawdzania poprawności, gdy wystąpienie klasy <xref:System.Configuration.IntegerValidator> utworzyć klasy.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-103">The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="ec2a4-104"><xref:System.Configuration.IntegerValidator.%23ctor%2A> Konstruktora z dwoma parametrami gwarantuje, że liczba całkowita, Trwa weryfikowanie opiera się na wartość maksymalna i minimalna.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-104">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value.</span></span> <span data-ttu-id="ec2a4-105"><xref:System.Configuration.IntegerValidator.%23ctor%2A> Konstruktora z trzema parametrami sprawdza minimalne i maksymalne <xref:System.Int32> wartości, a także czy jest wartość do sprawdzenia poprawności określonego zakresu.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-105">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range.</span></span> <span data-ttu-id="ec2a4-106"><xref:System.Configuration.IntegerValidator.%23ctor%2A> Konstruktora o parametrach cztery sprawdza czy poprzednie trzy parametry, a także kontroli <xref:System.Int32> wartość jest równa określonej rozdzielczości.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-106">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.</span></span>  
  
 <span data-ttu-id="ec2a4-107"><xref:System.Configuration.IntegerValidator.CanValidate%2A> Metoda określa, czy typ obiektu, sprawdzana jest zgodny z typem oczekiwanym.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-107">The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="ec2a4-108">Obiekt sprawdzany został przekazany jako parametr <xref:System.Configuration.IntegerValidator.Validate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-108">The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2a4-109">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Configuration.IntegerValidator> typu.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-109">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#1)]
 [!code-vb[System.Configuration.IntegerValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ec2a4-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.IntegerValidator" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-110">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <span data-ttu-id="ec2a4-111">
            <see cref="T:System.Int32" /> Obiekt, który określa minimalną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-111">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span>
          </span>
        </param>
        <param name="maxValue">
          <span data-ttu-id="ec2a4-112">
            <see cref="T:System.Int32" /> Obiekt, który określa maksymalną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-112">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec2a4-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.IntegerValidator" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-113">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2a4-114">To <xref:System.Configuration.IntegerValidator.%23ctor%2A> Konstruktor zapewnia, że liczba całkowita, Trwa weryfikowanie działa zgodnie z maksymalną długość i minimalna.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-114">This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int * bool -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue, rangeIsExclusive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <span data-ttu-id="ec2a4-115">
            <see cref="T:System.Int32" /> Obiekt, który określa minimalną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-115">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span>
          </span>
        </param>
        <param name="maxValue">
          <span data-ttu-id="ec2a4-116">
            <see cref="T:System.Int32" /> Obiekt, który określa maksymalną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-116">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span>
          </span>
        </param>
        <param name="rangeIsExclusive">
          <span data-ttu-id="ec2a4-117">
            <see langword="true" /> Aby określić, że zakres sprawdzania poprawności jest wyłączne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-117">
              <see langword="true" /> to specify that the validation range is exclusive.</span>
          </span>
          <span data-ttu-id="ec2a4-118">Wraz z wartościami granicznymi oznacza wartość do sprawdzenia poprawności musi należeć do zakresu określonego; wyłączny oznacza, że musi być mniejszy niż minimalny lub powyżej maksymalną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-118">Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec2a4-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.IntegerValidator" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-119">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2a4-120">Podczas tworzenia wystąpienia <xref:System.Configuration.IntegerValidator> klasy to <xref:System.Configuration.IntegerValidator.%23ctor%2A> Konstruktor sprawdza minimalne i maksymalne <xref:System.Int32> wartości, a także czy zakresu walidacji jest na wyłączność.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-120">When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive.</span></span> <span data-ttu-id="ec2a4-121">Gdy `rangeIsExclusive` ustawiono parametr `true`, <xref:System.Int32> nie musi mieć wartość między `minValue` i `maxValue` wartości parametrów.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-121">When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2a4-122">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Configuration.IntegerValidator.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-122">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="ec2a4-123">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Configuration.IntegerValidator> klasy.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-123">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#2)]
 [!code-vb[System.Configuration.IntegerValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive, int32 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean, resolution As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int * bool * int -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue, rangeIsExclusive, resolution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <span data-ttu-id="ec2a4-124">
            <see cref="T:System.Int32" /> Obiekt, który określa minimalną długość wartości całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-124">An <see cref="T:System.Int32" /> object that specifies the minimum length of the integer value.</span>
          </span>
        </param>
        <param name="maxValue">
          <span data-ttu-id="ec2a4-125">
            <see cref="T:System.Int32" /> Obiekt, który określa maksymalną długość wartości całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-125">An <see cref="T:System.Int32" /> object that specifies the maximum length of the integer value.</span>
          </span>
        </param>
        <param name="rangeIsExclusive">
          <span data-ttu-id="ec2a4-126">A <see cref="T:System.Boolean" /> wartość, która określa, czy zakres sprawdzania poprawności jest na wyłączność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-126">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</span>
          </span>
        </param>
        <param name="resolution">
          <span data-ttu-id="ec2a4-127">
            <see cref="T:System.Int32" /> Obiekt, który określa wartość, które muszą być zgodne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-127">An <see cref="T:System.Int32" /> object that specifies a value that must be matched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec2a4-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.IntegerValidator" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-128">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2a4-129"><xref:System.Int32> Sprawdzana wartość musi być równa `resolution` wartość celu przeszedł pomyślnie weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-129">The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec2a4-130">
            <paramref name="resolution" /> jest mniejsza niż <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-130">
              <paramref name="resolution" /> is less than <see langword="0" />.</span>
          </span>
          <span data-ttu-id="ec2a4-131">\- lub - <paramref name="minValue" /> jest większa niż <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-131">\- or -  <paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="integerValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="ec2a4-132">Typ obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-132">The type of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec2a4-133">Określa, czy można zweryfikować typ obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-133">Determines whether the type of the object can be validated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec2a4-134">
            <see langword="true" /> Jeśli <paramref name="type" /> odpowiada parametru <see cref="T:System.Int32" /> wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-134">
              <see langword="true" /> if the <paramref name="type" /> parameter matches an <see cref="T:System.Int32" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec2a4-135">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Configuration.IntegerValidator.CanValidate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-135">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="ec2a4-136">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Configuration.IntegerValidator> klasy.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-136">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#3)]
 [!code-vb[System.Configuration.IntegerValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="integerValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ec2a4-137">Wartość do sprawdzenia poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-137">The value to be validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec2a4-138">Określa, czy wartość obiektu jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec2a4-138">Determines whether the value of an object is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec2a4-139"><xref:System.Configuration.IntegerValidator> Obiekt zawiera zasady, które są niezbędne do weryfikacji obiektu liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-139">An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object.</span></span> <span data-ttu-id="ec2a4-140">Reguły są połączenia, gdy wystąpienie klasy <xref:System.Configuration.IntegerValidator> utworzyć klasy.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-140">The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="ec2a4-141">Liczba całkowita obiektu do weryfikacji jest przekazywany jako parametr <xref:System.Configuration.IntegerValidator.Validate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-141">The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec2a4-142">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Configuration.IntegerValidator.Validate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-142">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span> <span data-ttu-id="ec2a4-143">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Configuration.IntegerValidator> klasy.</span><span class="sxs-lookup"><span data-stu-id="ec2a4-143">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#4)]
 [!code-vb[System.Configuration.IntegerValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>