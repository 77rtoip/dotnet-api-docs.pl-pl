<Type Name="ConfigurationSection" FullName="System.Configuration.ConfigurationSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f77487e12defd2aa123b294b0f1b954faa897e8b" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56388024" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConfigurationSection : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationSection extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationSection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationSection&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationSection abstract : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ConfigurationSection = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje sekcję w pliku konfiguracji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Configuration.ConfigurationSection> klasy do zaimplementowania typu niestandardowego sekcji. Rozszerzanie <xref:System.Configuration.ConfigurationSection> klasy, aby zapewnić niestandardową obsługę i dostęp programistyczny do sekcji konfiguracji niestandardowej. Aby uzyskać informacje o tym, jak za pomocą sekcji konfiguracji niestandardowej, zobacz [jak: Tworzenie sekcji niestandardowej konfiguracji za pomocą ConfigurationSection](https://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234).  
  
 Sekcja rejestruje jego typ obsługi z wpisem w `configSections` elementu. Aby uzyskać przykład zobacz fragment pliku konfiguracji, które są wyświetlane w sekcji przykład.  
  
> [!NOTE]
>  W poprzednich wersjach programu .NET Framework, obsługi sekcji konfiguracji zostały użyte do wprowadzania zmian w ustawieniach konfiguracji programowo. Teraz wszystkie sekcje konfiguracja domyślna są reprezentowane przez klasy, które rozszerzają <xref:System.Configuration.ConfigurationSection> klasy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zaimplementować niestandardowy sekcji programowo.  
  
 Aby uzyskać kompletny przykład pokazuje, jak zaimplementować i używanie sekcji niestandardowej implementowane przy użyciu modelu opartego na atrybutach, zobacz <xref:System.Configuration.ConfigurationElement>.  
  
 [!code-csharp[System.Configuration.ConfigurationSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#1)]  
  
 Poniższy przykład to fragment pliku konfiguracji, ma zastosowanie do poprzedniego przykładu.  
  
 ```xml
<?xml version="1.0" encoding="utf-8"?>
  <configuration>  
    <configSections>
      <section name="CustomSection" type="Samples.AspNet. CustomSection, CustomConfigurationSection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" />
    </configSections>  

    <CustomSection fileName="default.txt" maxUsers="1000" maxIdleTime="00:15:00" /> 
 
  </configuration>
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Tworzenie sekcji niestandardowej konfiguracji można użyć rozwiązań programistycznych albo zezwala deklaratywne modelu programowania (opartego na atrybutach): 
-Model programowe. Ten model wymaga dla każdego atrybutu sekcji utworzenia właściwości, aby pobrać lub ustawić jej wartość i dodaj go do zbioru właściwości wewnętrznego elementu bazowego <see cref="T:System.Configuration.ConfigurationElement" /> klasy bazowej.  
  
-Deklaratywny model. Ten model prostsze, nazywany również modelu opartego na atrybutach umożliwia definiowanie atrybutów sekcji przy użyciu właściwości i urządzanie go za pomocą atrybutów. Te atrybuty poinstruować system konfiguracji programu ASP.NET o typach właściwości i ich wartości domyślne. Z tymi informacjami uzyskanymi za pośrednictwem odbicia systemu konfiguracji platformy ASP.NET tworzy sekcji właściwości obiektów i wykonuje inicjowanie wymagane.  
  
<see cref="T:System.Configuration.Configuration" /> Klasy zezwala na dostęp programistyczny do edycji plików konfiguracyjnych. Można do nich dostęp do odczytu lub zapisu w następujący sposób: 
— Odczytywanie. Możesz użyć <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> lub <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> można odczytać informacji o konfiguracji. Należy zwrócić uwagę na to, że użytkownik lub proces, który odczytuje musi mieć następujące uprawnienia: 
-Uprawnienie do odczytu w pliku konfiguracji na bieżącym poziomie konfiguracji w hierarchii.  
  
— Uprawnienia do odczytu wszystkich nadrzędnego plików konfiguracyjnych.  
  
Jeśli aplikacja wymaga dostęp tylko do odczytu do jego własnej konfiguracji, zaleca się używasz <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> przeciążone metody w przypadku aplikacji sieci Web lub <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> metodę w przypadku aplikacji klienckich.  
  
Metody te zapewniają dostęp do wartości konfiguracji pamięci podręcznej dla bieżącej aplikacji, która ma lepszą wydajność niż <see cref="T:System.Configuration.Configuration" /> klasy.  
  
 <block subset="none" type="note"><para>  
 Jeśli używasz statycznych <see langword="GetSection" /> metody, która przyjmuje <paramref name="path" /> parametru <paramref name="path" /> parametru musi odwoływać się do aplikacji, w którym wykonywany jest kod; w przeciwnym razie parametr jest ignorowany i informacje o konfiguracji dla obecnie działającej Aplikacja jest zwracana.  
  
</para></block>  
  
-Zapis. Możesz użyć jednej z <see cref="Overload:System.Configuration.Configuration.Save" /> metody, aby zapisać informacje o konfiguracji. Należy zwrócić uwagę na to, że użytkownik lub proces, który zapisuje musi mieć następujące uprawnienia: 
-Zapisać uprawnienia w pliku konfiguracji i katalogu na bieżącym poziomie konfiguracji w hierarchii.  
  
-Uprawnień do odczytu do wszystkich plików konfiguracji.</para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.SectionInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
    <related type="Article" href="https://msdn.microsoft.com/library/5696e8b2-d489-4220-aef2-f2e0ca9099b4">Omówienie interfejsu API konfiguracji platformy ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationSection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationSection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby użyć <xref:System.Configuration.ConfigurationSection.%23ctor%2A> konstruktora, należy najpierw zdefiniować typ niestandardowy sekcji. Na przykład zobacz <xref:System.Configuration.ConfigurationSection> klasa — Przegląd.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Configuration.ConfigurationSection.%23ctor%2A> konstruktora. W tym przykładzie założono, że utworzono klasę sekcji niestandardowej o nazwie `CustomSection`. Na przykład taka klasa zobacz <xref:System.Configuration.ConfigurationSection> klasa — Przegląd.  
  
 [!code-csharp[System.Configuration.ConfigurationSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual void DeserializeSection (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DeserializeSection(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub DeserializeSection (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DeserializeSection(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeSection : System.Xml.XmlReader -&gt; unit&#xA;override this.DeserializeSection : System.Xml.XmlReader -&gt; unit" Usage="configurationSection.DeserializeSection reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.Xml.XmlReader" /> Obiektu, który odczytuje z pliku konfiguracji.</param>
        <summary>Odczytuje XML z pliku konfiguracji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deserializacja odnosi się do odczytywania danych XML z pliku konfiguracji, przekształcanie danych w czasie rzeczywistym i jego magazyn w obiekcie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><paramref name="reader" /> znaleziono żadnych elementów w pliku konfiguracji.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeObject">
      <MemberSignature Language="C#" Value="protected internal virtual object GetRuntimeObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetRuntimeObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetRuntimeObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ GetRuntimeObject();" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeObject : unit -&gt; obj&#xA;override this.GetRuntimeObject : unit -&gt; obj" Usage="configurationSection.GetRuntimeObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt niestandardowe w przypadku przesłonięcia w klasie pochodnej.</summary>
        <returns>Obiekt reprezentujący sekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Configuration.Configuration.GetSection%2A> metoda jest wywoływana w czasie wykonywania, system konfiguracji najpierw tworzy odpowiednie wystąpienie <xref:System.Configuration.ConfigurationSection> klasy, a następnie zwraca obiekt uzyskuje z <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> metody.  
  
 Domyślnie <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> po prostu zwraca obiekt, który reprezentuje <xref:System.Configuration.ConfigurationSection> z którym jest wywoływana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> metody.  
  
 [!code-csharp[System.Configuration.ConfigurationSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#4)]
 [!code-vb[System.Configuration.ConfigurationSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można zastąpić <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> metodę, aby zwracany typ niestandardowy w czasie wykonywania.  
  
Na przykład w celu ograniczenia środowiska uruchomieniowego modyfikacji ustawień w <see cref="T:System.Configuration.ConfigurationSection" /> klasy, można zastąpić <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> i zwracają typ niestandardowy, który wymusza ograniczenia, które można modyfikować ustawienia, jeśli istnieje.  
  
Jeśli w obiekcie środowiska wykonawczego jest tylko wewnętrzna, zwrócony obiekt nie można użyć spoza zestawu, który go definiuje. Jednym ze sposobów, aby utworzyć obiekt, który pochodzi od klasy <see cref="T:System.Configuration.ConfigurationSection" /> i może zostać oceniony jedynie przez kod w swoim zestawie, wykonywania czasu jest utworzenie obiektu wewnętrznego środowiska uruchomieniowego, który ma metodę, która zwraca swoje <see cref="T:System.Configuration.ConfigurationSection" /> implementacji.</para></block>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberSignature Language="F#" Value="override this.IsModified : unit -&gt; bool" Usage="configurationSection.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy ten element konfiguracji został zmieniony, ponieważ był ostatnio zapisany lub załadowany po zaimplementowaniu w klasie pochodnej.</summary>
        <returns><see langword="true" /> Jeśli element został zmodyfikowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberSignature Language="F#" Value="override this.ResetModified : unit -&gt; unit" Usage="configurationSection.ResetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wartość <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> metody <see langword="false" /> po zaimplementowaniu w klasie pochodnej.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionInformation">
      <MemberSignature Language="C#" Value="public System.Configuration.SectionInformation SectionInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SectionInformation SectionInformation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSection.SectionInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionInformation As SectionInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SectionInformation ^ SectionInformation { System::Configuration::SectionInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SectionInformation : System.Configuration.SectionInformation" Usage="System.Configuration.ConfigurationSection.SectionInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SectionInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Configuration.SectionInformation" /> obiekt, który zawiera informacje inne niż możliwe do dostosowania i funkcjonalność <see cref="T:System.Configuration.ConfigurationSection" /> obiektu.</summary>
        <value>A <see cref="T:System.Configuration.SectionInformation" /> zawierający informacji nie można dostosowywać i funkcjonalność <see cref="T:System.Configuration.ConfigurationSection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Configuration.ConfigurationSection.SectionInformation%2A> właściwości.  
  
 [!code-csharp[System.Configuration.ConfigurationSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SectionInformation" />
      </Docs>
    </Member>
    <Member MemberName="SerializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual string SerializeSection (System.Configuration.ConfigurationElement parentElement, string name, System.Configuration.ConfigurationSaveMode saveMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string SerializeSection(class System.Configuration.ConfigurationElement parentElement, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeSection (parentElement As ConfigurationElement, name As String, saveMode As ConfigurationSaveMode) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ SerializeSection(System::Configuration::ConfigurationElement ^ parentElement, System::String ^ name, System::Configuration::ConfigurationSaveMode saveMode);" />
      <MemberSignature Language="F#" Value="abstract member SerializeSection : System.Configuration.ConfigurationElement * string * System.Configuration.ConfigurationSaveMode -&gt; string&#xA;override this.SerializeSection : System.Configuration.ConfigurationElement * string * System.Configuration.ConfigurationSaveMode -&gt; string" Usage="configurationSection.SerializeSection (parentElement, name, saveMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
      </Parameters>
      <Docs>
        <param name="parentElement"><see cref="T:System.Configuration.ConfigurationElement" /> Wystąpienia do użycia jako element nadrzędny, podczas przeprowadzania un scalania.</param>
        <param name="name">Nazwa sekcji do utworzenia.</param>
        <param name="saveMode"><see cref="T:System.Configuration.ConfigurationSaveMode" /> Wystąpienia do użycia podczas zapisywania na ciąg.</param>
        <summary>Tworzy ciąg znaków XML zawierający niescalone widok <see cref="T:System.Configuration.ConfigurationSection" /> obiektu jako jednej sekcji, aby zapisać do pliku.</summary>
        <returns>Ciąg znaków XML zawierający niescalone widok <see cref="T:System.Configuration.ConfigurationSection" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Serializacja odnosi się do przekształcania danych w czasie rzeczywistym, zawartych w obiekcie, do formatu XML i jego magazyn do pliku konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeElementInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeElementInTargetVersion (System.Configuration.ConfigurationElement element, string elementName, System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeElementInTargetVersion(class System.Configuration.ConfigurationElement element, string elementName, class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeElementInTargetVersion (element As ConfigurationElement, elementName As String, targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeElementInTargetVersion(System::Configuration::ConfigurationElement ^ element, System::String ^ elementName, System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeElementInTargetVersion : System.Configuration.ConfigurationElement * string * System.Runtime.Versioning.FrameworkName -&gt; bool&#xA;override this.ShouldSerializeElementInTargetVersion : System.Configuration.ConfigurationElement * string * System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="configurationSection.ShouldSerializeElementInTargetVersion (element, elementName, targetFramework)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="elementName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Configuration.ConfigurationElement" /> Obiekt, który jest kandydatem do serializacji.</param>
        <param name="elementName">Nazwa <see cref="T:System.Configuration.ConfigurationElement" /> obiektu jako jego wystąpieniu w formacie XML.</param>
        <param name="targetFramework">Wersja docelowa programu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</param>
        <summary>Wskazuje, czy określony element powinien zostać Zserializowany, w przypadku hierarchii obiektów konfiguracji jest serializowana z określoną docelową wersją [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</summary>
        <returns><see langword="true" /> Jeśli <paramref name="element" /> powinien być Zserializowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W każdej sekcji konfiguracji, które są tworzone dla [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] i nowszych wersjach musi jawnie przesłonić tę metodę i zwraca `true`, ale tylko wtedy, gdy określony element jest prawidłowy dla określonej wersji [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Istniejące sekcji konfiguracji, które zostały utworzone we wcześniejszych wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] nie trzeba go zmienić.  
  
 Typ podstawowy zawiera Domyślna implementacja tej metody, która zawsze zwraca `true`. Jeśli implementuje sekcję konfiguracji, a nie zastąpisz tej metody, domyślnie wszystkie elementy konfiguracji, które są zawarte w sekcji konfiguracji będzie serializowana we wszystkich wersjach framework.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76">Ustawianie elementów docelowych dla projektów sieci Web w programie .NET framework</related>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePropertyInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializePropertyInTargetVersion (System.Configuration.ConfigurationProperty property, string propertyName, System.Runtime.Versioning.FrameworkName targetFramework, System.Configuration.ConfigurationElement parentConfigurationElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializePropertyInTargetVersion(class System.Configuration.ConfigurationProperty property, string propertyName, class System.Runtime.Versioning.FrameworkName targetFramework, class System.Configuration.ConfigurationElement parentConfigurationElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializePropertyInTargetVersion (property As ConfigurationProperty, propertyName As String, targetFramework As FrameworkName, parentConfigurationElement As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializePropertyInTargetVersion(System::Configuration::ConfigurationProperty ^ property, System::String ^ propertyName, System::Runtime::Versioning::FrameworkName ^ targetFramework, System::Configuration::ConfigurationElement ^ parentConfigurationElement);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializePropertyInTargetVersion : System.Configuration.ConfigurationProperty * string * System.Runtime.Versioning.FrameworkName * System.Configuration.ConfigurationElement -&gt; bool&#xA;override this.ShouldSerializePropertyInTargetVersion : System.Configuration.ConfigurationProperty * string * System.Runtime.Versioning.FrameworkName * System.Configuration.ConfigurationElement -&gt; bool" Usage="configurationSection.ShouldSerializePropertyInTargetVersion (property, propertyName, targetFramework, parentConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Configuration.ConfigurationProperty" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="propertyName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parentConfigurationElement" Type="System.Configuration.ConfigurationElement" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="property"><see cref="T:System.Configuration.ConfigurationProperty" /> Obiekt, który jest kandydatem do serializacji.</param>
        <param name="propertyName">Nazwa <see cref="T:System.Configuration.ConfigurationProperty" /> obiektu jako jego wystąpieniu w formacie XML.</param>
        <param name="targetFramework">Wersja docelowa programu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</param>
        <param name="parentConfigurationElement">Element nadrzędny właściwości.</param>
        <summary>Wskazuje, czy określona właściwość powinien zostać Zserializowany, w przypadku hierarchii obiektów konfiguracji jest serializowana z określoną docelową wersją [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</summary>
        <returns><see langword="true" /> Jeśli <paramref name="property" /> powinien być Zserializowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W każdej sekcji konfiguracji, które są tworzone dla [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] i nowszych wersjach musi jawnie przesłonić tę metodę i zwraca `true`, ale tylko wtedy, gdy określona właściwość jest nieprawidłowa dla określonej wersji [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Istniejące sekcji konfiguracji, które zostały utworzone we wcześniejszych wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] nie trzeba go zmienić.  
  
 Typ podstawowy zawiera Domyślna implementacja tej metody, która zawsze zwraca `true`. Jeśli implementuje sekcję konfiguracji, a nie zastąpisz tej metody, domyślnie wszystkie właściwości konfiguracji, które są zawarte w sekcji Konfiguracja będzie serializowana we wszystkich wersjach framework.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76">Ustawianie elementów docelowych dla projektów sieci Web w programie .NET framework</related>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSectionInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeSectionInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeSectionInTargetVersion(class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeSectionInTargetVersion (targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeSectionInTargetVersion(System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeSectionInTargetVersion : System.Runtime.Versioning.FrameworkName -&gt; bool&#xA;override this.ShouldSerializeSectionInTargetVersion : System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="configurationSection.ShouldSerializeSectionInTargetVersion targetFramework" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetFramework">Wersja docelowa programu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</param>
        <summary>Wskazuje, czy bieżący <see cref="T:System.Configuration.ConfigurationSection" /> powinien zostać Zserializowany wystąpienie, gdy hierarchia obiektów konfiguracji jest serializowana z określoną docelową wersją [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</summary>
        <returns><see langword="true" /> Jeśli bieżąca sekcja powinien zostać Zserializowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W każdej sekcji konfiguracji, które są tworzone dla [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] i nowszych wersjach musi jawnie przesłonić tę metodę i zwraca `true`, ale tylko wtedy, gdy sekcji konfiguracji jest prawidłowy dla określonej wersji [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Istniejące sekcji konfiguracji, które zostały utworzone we wcześniejszych wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] nie trzeba go zmienić.  
  
 Typ podstawowy zawiera Domyślna implementacja tej metody, która zawsze zwraca `true`. Jeśli implementuje sekcję konfiguracji, a nie zastąpisz tej metody, domyślnie sekcji konfiguracji będzie serializowana we wszystkich wersjach framework.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76">Ustawianie elementów docelowych dla projektów sieci Web w programie .NET framework</related>
      </Docs>
    </Member>
  </Members>
</Type>