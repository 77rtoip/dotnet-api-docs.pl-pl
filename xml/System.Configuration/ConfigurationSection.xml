<Type Name="ConfigurationSection" FullName="System.Configuration.ConfigurationSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59faa4d3654b63707a0c6e842e8be351da46f612" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36697422" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConfigurationSection : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationSection extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationSection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationSection&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationSection abstract : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ConfigurationSection = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3b0e9-101">Reprezentuje sekcję w pliku konfiguracji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b0e9-101">Represents a section within a configuration file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b0e9-102">Możesz użyć <xref:System.Configuration.ConfigurationSection> klasy do zaimplementowania typu niestandardowego sekcji.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-102">You use the <xref:System.Configuration.ConfigurationSection> class to implement a custom section type.</span></span> <span data-ttu-id="3b0e9-103">Rozszerzanie <xref:System.Configuration.ConfigurationSection> klasę, aby zapewnić niestandardową obsługę i dostęp programistyczny do sekcji konfiguracji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-103">Extend the <xref:System.Configuration.ConfigurationSection> class to provide custom handling and programmatic access to custom configuration sections.</span></span> <span data-ttu-id="3b0e9-104">Informacje na temat konfiguracji niestandardowej sekcje zawierają informacje, zobacz [porady: Tworzenie niestandardowej konfiguracji sekcje przy użyciu elementu ConfigurationSection](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234).</span><span class="sxs-lookup"><span data-stu-id="3b0e9-104">For information about how use custom configuration sections, see [How to: Create Custom Configuration Sections Using ConfigurationSection](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234).</span></span>  
  
 <span data-ttu-id="3b0e9-105">Wpis w sekcji rejestruje jej typ obsługi `configSections` elementu.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-105">A section registers its handling type with an entry in the `configSections` element.</span></span> <span data-ttu-id="3b0e9-106">Na przykład zobacz fragment pliku konfiguracji pokazano w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-106">For an example, see the configuration file excerpt shown in the Example section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b0e9-107">W poprzednich wersjach programu .NET Framework, obsługi sekcji konfiguracji użyto w celu zmiany ustawień konfiguracji programowo.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-107">In previous versions of the .NET Framework, configuration section handlers were used to make changes to configuration settings programmatically.</span></span> <span data-ttu-id="3b0e9-108">Teraz, wszystkich sekcji konfiguracyjnych domyślne są reprezentowane przez klasy, które rozszerzają <xref:System.Configuration.ConfigurationSection> klasy.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-108">Now, all the default configuration sections are represented by classes that extend the <xref:System.Configuration.ConfigurationSection> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b0e9-109">Poniższy przykład pokazuje, jak programowo implementacji niestandardowych sekcji.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-109">The following example shows how to implement a custom section programmatically.</span></span>  
  
 <span data-ttu-id="3b0e9-110">Pełny przykład przedstawia sposób wdrożenie i używanie niestandardowej sekcji implementowane za pomocą modelu atrybutami, zobacz <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-110">For a complete example that shows how to implement and use a custom section implemented using the attributed model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#1)]  
  
 <span data-ttu-id="3b0e9-111">Poniższy przykład jest fragment pliku konfiguracji mają zastosowanie w poprzednim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-111">The following example is an excerpt of the configuration file as it applies to the previous example.</span></span>  
  
 ```xml
<?xml version="1.0" encoding="utf-8"?>
  <configuration>  
    <configSections>
      <section name="CustomSection" type="Samples.AspNet. CustomSection, CustomConfigurationSection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" />
    </configSections>  

    <CustomSection fileName="default.txt" maxUsers="1000" maxIdleTime="00:15:00" /> 
 
  </configuration>
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="3b0e9-112">
        <para>Programowe lub model deklaratywne kodowania (oparte na atrybutach) można użyć do tworzenia sekcji konfiguracji niestandardowej:-programowe modelu. Ten model wymaga dla każdego atrybutu sekcji utworzenia właściwości w celu pobrania lub ustaw dla niego wartość i dodaj go do zbioru właściwości wewnętrznej podstawowych <see cref="T:System.Configuration.ConfigurationElement" /> klasy podstawowej.  -Deklaratywne modelu. Ten model prostszy, skrót oparte na atrybutach modelu, można zdefiniować atrybutów sekcji przy użyciu właściwości i dekoracji go z atrybutami. Te atrybuty poinstruuj system konfiguracji programu ASP.NET o typy właściwości i ich wartości domyślne. Z tymi informacjami uzyskanymi za pośrednictwem odbicia ASP.NET — system konfiguracji tworzy sekcji właściwości obiektów i wykonuje wymagane inicjowania.  <see cref="T:System.Configuration.Configuration" /> Klasy zapewnia dostęp programistyczny edycję plików konfiguracyjnych. Należy do nich dostęp do odczytu lub zapisu w następujący sposób: - odczytywania. Możesz użyć <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> lub <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> można odczytać informacji o konfiguracji. Należy pamiętać, że użytkownik lub proces, która odczytuje musi mieć następujące uprawnienia:-uprawnienie do odczytu w pliku konfiguracji na bieżącym poziomie konfiguracji w hierarchii.  -Uprawnienia do odczytu element nadrzędny plików konfiguracyjnych.  Jeśli aplikacja potrzebuje dostępu tylko do odczytu własnych konfiguracją, zalecane jest używany <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> przeciążonej metody w przypadku aplikacji sieci Web, lub <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> metody w przypadku aplikacji klienckich.  Te metody zapewnienia dostępu do wartości konfiguracji pamięci podręcznej dla bieżącej aplikacji, który ma lepszą wydajność niż <see cref="T:System.Configuration.Configuration" /> klasy.  <block subset="none" type="note"><para> Jeśli używasz statycznego <see langword="GetSection" /> metody pobierającej <paramref name="path" /> parametru <paramref name="path" /> parametru musi odwoływać się do aplikacji, w którym wykonywany jest kod; w przeciwnym razie wartość parametru jest ignorowany i informacje o konfiguracji dla aktualnie działających zwracany jest aplikacja.  </para></block> — Pisania. Użyj jednej z <see cref="Overload:System.Configuration.Configuration.Save" /> metod można zapisać informacji o konfiguracji. Należy pamiętać, że użytkownik lub proces, który zapisuje musi mieć następujące uprawnienia:-zapisać uprawnienia w pliku konfiguracji i katalog na bieżącym poziomie hierarchii konfiguracji.  -Odczyt we wszystkich plikach konfiguracji.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="3b0e9-112">
          <para>You can use a programmatic or a declarative (attributed) coding model to create custom configuration sections:  -   Programmatic model. This model requires that for each section attribute you create a property to get or set its value and add it to the internal property bag of the underlying <see cref="T:System.Configuration.ConfigurationElement" /> base class.  -   Declarative model. This simpler model, also called the attributed model, allows you to define a section attribute by using a property and decorating it with attributes. These attributes instruct the ASP.NET configuration system about the property types and their default values. With this information, obtained through reflection, the ASP.NET configuration system creates the section property objects and performs the required initialization.  The <see cref="T:System.Configuration.Configuration" /> class allows programmatic access for editing configuration files. You can access these files for reading or writing as follows:  -   Reading. You use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information. Note that the user or process that reads must have the following permissions:  -   Read permission on the configuration file at the current configuration hierarchy level.  -   Read permissions on all the parent configuration files.  If your application needs read-only access to its own configuration, it is recommended you use the <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> overloaded methods in the case of Web applications, or the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method in the case of client applications.  These methods provide access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.  <block subset="none" type="note"><para> If you use a static <see langword="GetSection" /> method that takes a <paramref name="path" /> parameter, the <paramref name="path" /> parameter must refer to the application in which the code is running; otherwise, the parameter is ignored and configuration information for the currently-running application is returned.  </para></block>  -   Writing. You use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods to write configuration information. Note that the user or process that writes must have the following permissions:  -   Write permission on the configuration file and directory at the current configuration hierarchy level.  -   Read permissions on all the configuration files.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.SectionInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationSection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b0e9-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationSection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-113">Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b0e9-114">Aby użyć <xref:System.Configuration.ConfigurationSection.%23ctor%2A> konstruktora, należy najpierw zdefiniować typ sekcji niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-114">To use the <xref:System.Configuration.ConfigurationSection.%23ctor%2A> constructor, you need to define a custom section type first.</span></span> <span data-ttu-id="3b0e9-115">Na przykład zobacz <xref:System.Configuration.ConfigurationSection> Przegląd klasy.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-115">For an example see the <xref:System.Configuration.ConfigurationSection> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b0e9-116">Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationSection.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-116">The following example shows how to use the <xref:System.Configuration.ConfigurationSection.%23ctor%2A> constructor.</span></span> <span data-ttu-id="3b0e9-117">W tym przykładzie przyjęto założenie, że utworzono sekcji niestandardowej klasy o nazwie `CustomSection`.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-117">This example assumes that you have created a custom section class named `CustomSection`.</span></span> <span data-ttu-id="3b0e9-118">Na przykład taka klasa zobacz <xref:System.Configuration.ConfigurationSection> Przegląd klasy.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-118">For an example of such a class, see the <xref:System.Configuration.ConfigurationSection> class overview.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual void DeserializeSection (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DeserializeSection(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub DeserializeSection (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DeserializeSection(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeSection : System.Xml.XmlReader -&gt; unit&#xA;override this.DeserializeSection : System.Xml.XmlReader -&gt; unit" Usage="configurationSection.DeserializeSection reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="3b0e9-119">
            <see cref="T:System.Xml.XmlReader" /> Obiektu, który odczytuje z pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-119">The <see cref="T:System.Xml.XmlReader" /> object, which reads from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b0e9-120">Odczytuje XML z pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-120">Reads XML from the configuration file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b0e9-121">Deserializacja odnosi się do odczytywania danych XML z pliku konfiguracji, przekształcenia do danych w czasie rzeczywistym i jej magazynu w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-121">Deserialization refers to the reading of XML data from a configuration file, its transformation into real-time data, and its storage in an object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3b0e9-122">
            <paramref name="reader" /> znaleziono żadnych elementów w pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-122">
              <paramref name="reader" /> found no elements in the configuration file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeObject">
      <MemberSignature Language="C#" Value="protected internal virtual object GetRuntimeObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetRuntimeObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetRuntimeObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ GetRuntimeObject();" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeObject : unit -&gt; obj&#xA;override this.GetRuntimeObject : unit -&gt; obj" Usage="configurationSection.GetRuntimeObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b0e9-123">Zwraca obiekt niestandardowego w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-123">Returns a custom object when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b0e9-124">Obiekt reprezentujący sekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-124">The object representing the section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b0e9-125">Gdy <xref:System.Configuration.Configuration.GetSection%2A> metoda jest wywoływana w czasie wykonywania, system konfiguracji najpierw tworzy odpowiednie wystąpienie <xref:System.Configuration.ConfigurationSection> klasy, a następnie zwraca obiekt uzyska z <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-125">When the <xref:System.Configuration.Configuration.GetSection%2A> method is called at run time, the configuration system first creates an appropriate instance of the <xref:System.Configuration.ConfigurationSection> class, and then returns the object it obtains from the <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> method.</span></span>  
  
 <span data-ttu-id="3b0e9-126">Domyślnie <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> po prostu zwraca obiekt, który reprezentuje <xref:System.Configuration.ConfigurationSection> z którym jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-126">By default, <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> simply returns the object that represents the <xref:System.Configuration.ConfigurationSection> from which it is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b0e9-127">Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-127">The following example shows how to use the <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#4)]
 [!code-vb[System.Configuration.ConfigurationSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3b0e9-128">
            <para>Można zastąpić <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> metodę, aby zwracany typ niestandardowy w czasie wykonywania.  Na przykład, aby ograniczyć środowiska uruchomieniowego modyfikacji ustawień w <see cref="T:System.Configuration.ConfigurationSection" /> klasy, można zastąpić <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> i zwracać typu niestandardowego, który wymusza ograniczenia, na których można zmodyfikować ustawień, ile.  W przypadku obiektu środowiska wykonawczego wewnętrznej tylko zwrócony obiekt nie można użyć poza zestaw definiujący go. Jednym ze sposobów tworzenia obiektu pochodzącego od <see cref="T:System.Configuration.ConfigurationSection" /> i jest dostępny tylko przez kod w zestawie użytkownika przy uruchomieniu to czas tworzenia obiektu wewnętrznego środowiska uruchomieniowego, który ma metodę, która zwraca z <see cref="T:System.Configuration.ConfigurationSection" /> implementacji.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-128">
              <para>You can override the <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> method to return a custom type at run time.  For example, to restrict runtime modification of the settings in the <see cref="T:System.Configuration.ConfigurationSection" /> class, you can override <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> and return a custom type that enforces restrictions on which settings can be modified, if any.  If the runtime object is internal only, the returned object cannot be used outside the assembly that defines it. One way to create an object that derives from <see cref="T:System.Configuration.ConfigurationSection" /> and can only be accessed by code in your assembly at run time is to create an internal runtime object that has a method that returns your <see cref="T:System.Configuration.ConfigurationSection" /> implementation.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberSignature Language="F#" Value="override this.IsModified : unit -&gt; bool" Usage="configurationSection.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b0e9-129">Wskazuje, czy ten element konfiguracji został zmodyfikowany od czasu ostatniego został on zapisany lub załadować po zaimplementowaniu w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-129">Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b0e9-130">
            <see langword="true" /> Jeśli element został zmodyfikowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-130">
              <see langword="true" /> if the element has been modified; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberSignature Language="F#" Value="override this.ResetModified : unit -&gt; unit" Usage="configurationSection.ResetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b0e9-131">Wartość <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> metodę <see langword="false" /> po zaimplementowaniu w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-131">Resets the value of the <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> method to <see langword="false" /> when implemented in a derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionInformation">
      <MemberSignature Language="C#" Value="public System.Configuration.SectionInformation SectionInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SectionInformation SectionInformation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSection.SectionInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionInformation As SectionInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SectionInformation ^ SectionInformation { System::Configuration::SectionInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SectionInformation : System.Configuration.SectionInformation" Usage="System.Configuration.ConfigurationSection.SectionInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SectionInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b0e9-132">Pobiera <see cref="T:System.Configuration.SectionInformation" /> obiekt, który zawiera informacje niepodlegający dostosowywaniu i funkcjonalność <see cref="T:System.Configuration.ConfigurationSection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-132">Gets a <see cref="T:System.Configuration.SectionInformation" /> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b0e9-133">A <see cref="T:System.Configuration.SectionInformation" /> zawierający niepodlegający dostosowywaniu informacji i funkcji <see cref="T:System.Configuration.ConfigurationSection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-133">A <see cref="T:System.Configuration.SectionInformation" /> that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b0e9-134">Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationSection.SectionInformation%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-134">The following example shows how to use the <xref:System.Configuration.ConfigurationSection.SectionInformation%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SectionInformation" />
      </Docs>
    </Member>
    <Member MemberName="SerializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual string SerializeSection (System.Configuration.ConfigurationElement parentElement, string name, System.Configuration.ConfigurationSaveMode saveMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string SerializeSection(class System.Configuration.ConfigurationElement parentElement, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeSection (parentElement As ConfigurationElement, name As String, saveMode As ConfigurationSaveMode) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ SerializeSection(System::Configuration::ConfigurationElement ^ parentElement, System::String ^ name, System::Configuration::ConfigurationSaveMode saveMode);" />
      <MemberSignature Language="F#" Value="abstract member SerializeSection : System.Configuration.ConfigurationElement * string * System.Configuration.ConfigurationSaveMode -&gt; string&#xA;override this.SerializeSection : System.Configuration.ConfigurationElement * string * System.Configuration.ConfigurationSaveMode -&gt; string" Usage="configurationSection.SerializeSection (parentElement, name, saveMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
      </Parameters>
      <Docs>
        <param name="parentElement">
          <span data-ttu-id="3b0e9-135">
            <see cref="T:System.Configuration.ConfigurationElement" /> Wystąpienia używane jako element nadrzędny, podczas wykonywania un scalania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-135">The <see cref="T:System.Configuration.ConfigurationElement" /> instance to use as the parent when performing the un-merge.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="3b0e9-136">Nazwa sekcji do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-136">The name of the section to create.</span>
          </span>
        </param>
        <param name="saveMode">
          <span data-ttu-id="3b0e9-137">
            <see cref="T:System.Configuration.ConfigurationSaveMode" /> Wystąpienie do użycia podczas zapisywania na ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-137">The <see cref="T:System.Configuration.ConfigurationSaveMode" /> instance to use when writing to a string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b0e9-138">Tworzy ciąg XML zawierający widok niescalone <see cref="T:System.Configuration.ConfigurationSection" /> obiektu jako pojedynczy sekcji można zapisać do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-138">Creates an XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection" /> object as a single section to write to a file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b0e9-139">Ciąg XML zawierający widok niescalone <see cref="T:System.Configuration.ConfigurationSection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-139">An XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b0e9-140">Serializacja odwołuje się do przekształcania danych w czasie rzeczywistym, zawartych w obiekcie, do formatu XML i jej magazynu do pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-140">Serialization refers to the transformation of real-time data, contained in an object, to XML format and its storage to a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeElementInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeElementInTargetVersion (System.Configuration.ConfigurationElement element, string elementName, System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeElementInTargetVersion(class System.Configuration.ConfigurationElement element, string elementName, class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeElementInTargetVersion (element As ConfigurationElement, elementName As String, targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeElementInTargetVersion(System::Configuration::ConfigurationElement ^ element, System::String ^ elementName, System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeElementInTargetVersion : System.Configuration.ConfigurationElement * string * System.Runtime.Versioning.FrameworkName -&gt; bool&#xA;override this.ShouldSerializeElementInTargetVersion : System.Configuration.ConfigurationElement * string * System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="configurationSection.ShouldSerializeElementInTargetVersion (element, elementName, targetFramework)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3b0e9-141">
            <see cref="T:System.Configuration.ConfigurationElement" /> Obiekt, który jest kandydatem do serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-141">The <see cref="T:System.Configuration.ConfigurationElement" /> object that is a candidate for serialization.</span>
          </span>
        </param>
        <param name="elementName">
          <span data-ttu-id="3b0e9-142">Nazwa <see cref="T:System.Configuration.ConfigurationElement" /> obiekt występujące w kodzie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-142">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> object as it occurs in XML.</span>
          </span>
        </param>
        <param name="targetFramework">
          <span data-ttu-id="3b0e9-143">Docelowa wersja [! INCLUDE[dnprdnshort](~/includes/dnprdnshort-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-143">The target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b0e9-144">Wskazuje, czy określony element powinny być serializowane, gdy hierarchia obiektów konfiguracji jest serializowany wersja określony element docelowy dla [! INCLUDE[dnprdnshort](~/includes/dnprdnshort-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-144">Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b0e9-145">
            <see langword="true" /> Jeśli <paramref name="element" /> powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-145">
              <see langword="true" /> if the <paramref name="element" /> should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b0e9-146">W każdej sekcji konfiguracji, który jest tworzony dla [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] i nowszych wersjach musi jawnie przesłonić tę metodę i zwraca `true`, ale tylko wtedy, gdy określony element jest nieprawidłowa dla określonej wersji [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3b0e9-146">Each configuration section that is created for the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the specified element is valid for the specified version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="3b0e9-147">Istniejące sekcji konfiguracyjnych, które zostały utworzone we wcześniejszych wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] ma zostać zmienione.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-147">Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] do not have to be changed.</span></span>  
  
 <span data-ttu-id="3b0e9-148">Typ podstawowy zawiera Domyślna implementacja tej metody, która zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-148">The base type contains a default implementation of this method that always returns `true`.</span></span> <span data-ttu-id="3b0e9-149">Jeśli wdrożenie sekcji konfiguracji i nie można przesłonić tę metodę, domyślnie wszystkie elementy konfiguracji, które znajdują się w sekcji konfiguracji będą wykonywane szeregowo dla wszystkich wersji framework.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-149">If you implement a configuration section and you do not override this method, by default all configuration elements that are contained in the configuration section will be serialized for all framework versions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePropertyInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializePropertyInTargetVersion (System.Configuration.ConfigurationProperty property, string propertyName, System.Runtime.Versioning.FrameworkName targetFramework, System.Configuration.ConfigurationElement parentConfigurationElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializePropertyInTargetVersion(class System.Configuration.ConfigurationProperty property, string propertyName, class System.Runtime.Versioning.FrameworkName targetFramework, class System.Configuration.ConfigurationElement parentConfigurationElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializePropertyInTargetVersion (property As ConfigurationProperty, propertyName As String, targetFramework As FrameworkName, parentConfigurationElement As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializePropertyInTargetVersion(System::Configuration::ConfigurationProperty ^ property, System::String ^ propertyName, System::Runtime::Versioning::FrameworkName ^ targetFramework, System::Configuration::ConfigurationElement ^ parentConfigurationElement);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializePropertyInTargetVersion : System.Configuration.ConfigurationProperty * string * System.Runtime.Versioning.FrameworkName * System.Configuration.ConfigurationElement -&gt; bool&#xA;override this.ShouldSerializePropertyInTargetVersion : System.Configuration.ConfigurationProperty * string * System.Runtime.Versioning.FrameworkName * System.Configuration.ConfigurationElement -&gt; bool" Usage="configurationSection.ShouldSerializePropertyInTargetVersion (property, propertyName, targetFramework, parentConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Configuration.ConfigurationProperty" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
        <Parameter Name="parentConfigurationElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="3b0e9-150">
            <see cref="T:System.Configuration.ConfigurationProperty" /> Obiekt, który jest kandydatem do serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-150">The <see cref="T:System.Configuration.ConfigurationProperty" /> object that is a candidate for serialization.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="3b0e9-151">Nazwa <see cref="T:System.Configuration.ConfigurationProperty" /> obiekt występujące w kodzie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-151">The name of the <see cref="T:System.Configuration.ConfigurationProperty" /> object as it occurs in XML.</span>
          </span>
        </param>
        <param name="targetFramework">
          <span data-ttu-id="3b0e9-152">Docelowa wersja [! INCLUDE[dnprdnshort](~/includes/dnprdnshort-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-152">The target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </param>
        <param name="parentConfigurationElement">
          <span data-ttu-id="3b0e9-153">Właściwości elementu nadrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-153">The parent element of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b0e9-154">Wskazuje, czy określona właściwość powinny być serializowane, gdy hierarchia obiektów konfiguracji jest serializowany wersja określony element docelowy dla [! INCLUDE[dnprdnshort](~/includes/dnprdnshort-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-154">Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b0e9-155">
            <see langword="true" /> Jeśli <paramref name="property" /> powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-155">
              <see langword="true" /> if the <paramref name="property" /> should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b0e9-156">W każdej sekcji konfiguracji, który jest tworzony dla [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] i nowszych wersjach musi jawnie przesłonić tę metodę i zwraca `true`, ale tylko wtedy, gdy określona właściwość jest nieprawidłowa dla określonej wersji [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3b0e9-156">Each configuration section that is created for the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the specified property is valid for the specified version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="3b0e9-157">Istniejące sekcji konfiguracyjnych, które zostały utworzone we wcześniejszych wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] ma zostać zmienione.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-157">Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] do not have to be changed.</span></span>  
  
 <span data-ttu-id="3b0e9-158">Typ podstawowy zawiera Domyślna implementacja tej metody, która zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-158">The base type contains a default implementation of this method that always returns `true`.</span></span> <span data-ttu-id="3b0e9-159">Jeśli wdrożenie sekcji konfiguracji i nie można przesłonić tę metodę, domyślnie wszystkie właściwości konfiguracyjne, które znajdują się w sekcji konfiguracji będą wykonywane szeregowo dla wszystkich wersji framework.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-159">If you implement a configuration section and you do not override this method, by default all configuration properties that are contained in the configuration section will be serialized for all framework versions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSectionInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeSectionInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeSectionInTargetVersion(class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeSectionInTargetVersion (targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeSectionInTargetVersion(System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeSectionInTargetVersion : System.Runtime.Versioning.FrameworkName -&gt; bool&#xA;override this.ShouldSerializeSectionInTargetVersion : System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="configurationSection.ShouldSerializeSectionInTargetVersion targetFramework" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="targetFramework">
          <span data-ttu-id="3b0e9-160">Docelowa wersja [! INCLUDE[dnprdnshort](~/includes/dnprdnshort-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-160">The target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b0e9-161">Wskazuje, czy bieżący <see cref="T:System.Configuration.ConfigurationSection" /> powinny być serializowane wystąpienia, gdy hierarchia obiektów konfiguracji jest serializowany wersja określony element docelowy dla [! INCLUDE[dnprdnshort](~/includes/dnprdnshort-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-161">Indicates whether the current <see cref="T:System.Configuration.ConfigurationSection" /> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b0e9-162">
            <see langword="true" /> Jeśli w bieżącej sekcji powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b0e9-162">
              <see langword="true" /> if the current section should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b0e9-163">W każdej sekcji konfiguracji, który jest tworzony dla [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] i nowszych wersjach musi jawnie przesłonić tę metodę i zwraca `true`, ale tylko wtedy, gdy sekcja konfiguracji jest nieprawidłowa dla określonej wersji [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3b0e9-163">Each configuration section that is created for the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the configuration section is valid for the specified version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="3b0e9-164">Istniejące sekcji konfiguracyjnych, które zostały utworzone we wcześniejszych wersjach [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] ma zostać zmienione.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-164">Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] do not have to be changed.</span></span>  
  
 <span data-ttu-id="3b0e9-165">Typ podstawowy zawiera Domyślna implementacja tej metody, która zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-165">The base type contains a default implementation of this method that always returns `true`.</span></span> <span data-ttu-id="3b0e9-166">Jeśli wdrożenie sekcji konfiguracji i nie można przesłonić tę metodę, domyślnie sekcji konfiguracji będą wykonywane szeregowo dla wszystkich wersji framework.</span><span class="sxs-lookup"><span data-stu-id="3b0e9-166">If you implement a configuration section and you do not override this method, by default the configuration section will be serialized for all framework versions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>