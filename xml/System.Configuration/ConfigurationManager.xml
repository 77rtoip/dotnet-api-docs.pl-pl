<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf2bfcddc8ec362fe5527c2f8535e79cc99198f3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30443604" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3590f-101">Zapewnia dostęp do plików konfiguracji dla aplikacji klienckich.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3590f-101">Provides access to configuration files for client applications.</span>
      </span>
      <span data-ttu-id="3590f-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3590f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-103"><xref:System.Configuration.ConfigurationManager> Klasa umożliwia dostęp do komputera, aplikacji i informacje o konfiguracji użytkownika.</span><span class="sxs-lookup"><span data-stu-id="3590f-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="3590f-104">Ta klasa zastępuje <xref:System.Configuration.ConfigurationSettings> klasy, która jest przestarzały.</span><span class="sxs-lookup"><span data-stu-id="3590f-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="3590f-105">Dla aplikacji sieci web, użyj <xref:System.Web.Configuration.WebConfigurationManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="3590f-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="3590f-106">Aby użyć <xref:System.Configuration.ConfigurationManager> klasy musi odwoływać się projektu `System.Configuration` zestawu.</span><span class="sxs-lookup"><span data-stu-id="3590f-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="3590f-107">Domyślnie niektóre szablony projektów, takie jak aplikacja konsoli nie odwołuj się do tego zestawu, ręcznie musi odwoływać.</span><span class="sxs-lookup"><span data-stu-id="3590f-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3590f-108">Nazwa i lokalizacja pliku konfiguracji aplikacji są zależne od hosta aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3590f-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="3590f-109">Aby uzyskać więcej informacji, zobacz [NIB: pliki konfiguracji aplikacji](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span><span class="sxs-lookup"><span data-stu-id="3590f-109">For more information, see [NIB: Application Configuration Files](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="3590f-110">Można użyć wbudowanej <xref:System.Configuration> typów lub pochodzić od nich w celu obsługi informacji o konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="3590f-111">Korzystając z tych typów, możesz pracować bezpośrednio z informacji o konfiguracji i można rozszerzyć pliki konfiguracji, aby uwzględnić informacje niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="3590f-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="3590f-112"><xref:System.Configuration.ConfigurationManager> Klasa zawiera elementy, które umożliwiają wykonywanie następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="3590f-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="3590f-113">Sekcja do odczytu z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-113">Read a section from a configuration file.</span></span> <span data-ttu-id="3590f-114">Aby uzyskać dostęp do informacji o konfiguracji, należy wywołać <xref:System.Configuration.ConfigurationManager.GetSection%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3590f-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="3590f-115">Dla pewnych sekcji, takich jak `appSettings` i `connectionStrings`, użyj <xref:System.Configuration.ConfigurationManager.AppSettings%2A> i <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> klasy.</span><span class="sxs-lookup"><span data-stu-id="3590f-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="3590f-116">Te elementy członkowskie wykonywania operacji tylko do odczytu, używać jednego wystąpienia pamięci podręcznej konfiguracji i są wielowątkowe pamiętać.</span><span class="sxs-lookup"><span data-stu-id="3590f-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="3590f-117">Odczytywać i zapisywać pliki konfiguracji jako całość.</span><span class="sxs-lookup"><span data-stu-id="3590f-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="3590f-118">Aplikacja może odczytu i zapisu ustawień konfiguracji na dowolnym poziomie dla siebie lub innych aplikacji lub komputerów, lokalnie lub zdalnie.</span><span class="sxs-lookup"><span data-stu-id="3590f-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="3590f-119">Użyj jednej z metod dostarczonych przez <xref:System.Configuration.ConfigurationManager> klasy można otworzyć pliku konfiguracji, takich jak SampleApp.exe.config. Te metody zwracają <xref:System.Configuration.Configuration> obiekt, który z kolei udostępnia metody i właściwości można użyć do pracy z plikami konfiguracji skojarzone.</span><span class="sxs-lookup"><span data-stu-id="3590f-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="3590f-120">Metody wykonać odczytu lub operacje zapisu i tworzenia zawsze są zapisywane w pliku danych konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="3590f-121">Obsługuje zadania konfiguracyjne.</span><span class="sxs-lookup"><span data-stu-id="3590f-121">Support configuration tasks.</span></span> <span data-ttu-id="3590f-122">Następujące typy są używane do obsługi różnych zadań konfiguracji:</span><span class="sxs-lookup"><span data-stu-id="3590f-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="3590f-123">Oprócz pracy z istniejące informacje o konfiguracji, można tworzyć i pracować z elementami konfiguracji niestandardowej rozszerzając typy wbudowane konfiguracji, takich jak <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, i <xref:System.Configuration.ConfigurationSection> klasy.</span><span class="sxs-lookup"><span data-stu-id="3590f-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="3590f-124">Na przykład jak rozszerzyć typ wbudowany konfiguracji programowo zobacz <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="3590f-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="3590f-125">Na przykład jak rozszerzyć typu wbudowanego konfiguracji, który korzysta z modelu opartych na atrybutach zobacz <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="3590f-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-126">W pierwszym przykładzie prostej aplikacji konsolowej odczytuje ustawienia aplikacji, dodaje nowe ustawienie i aktualizuje istniejące ustawienie.</span><span class="sxs-lookup"><span data-stu-id="3590f-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="3590f-127">Poprzednim przykładzie przyjęto założenie, że projekt zawiera plik App.config, jak pokazano poniżej.</span><span class="sxs-lookup"><span data-stu-id="3590f-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="3590f-128">Poniższy przykład przedstawia użycie ciągu połączenia można odczytać danych z bazy danych.</span><span class="sxs-lookup"><span data-stu-id="3590f-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="3590f-129">Poprzednim przykładzie przyjęto założenie, że projekt ma App.config, jak pokazano poniżej.</span><span class="sxs-lookup"><span data-stu-id="3590f-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="3590f-130">
          <see cref="T:System.Configuration.Configuration" /> Klasy zapewnia dostęp programistyczny do edycji plików konfiguracyjnych.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3590f-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span>
        </span>
        <span data-ttu-id="3590f-131">Użyj jednej z metod Otwórz udostępniane przez <see cref="T:System.Configuration.ConfigurationManager" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3590f-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span>
        </span>
        <span data-ttu-id="3590f-132">Te metody zwracają <see cref="T:System.Configuration.Configuration" /> obiektu, który z kolei zawiera wymagane metody i właściwości do obsługi plików konfiguracji podstawowej.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3590f-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span>
        </span>
        <span data-ttu-id="3590f-133">Można uzyskać dostępu do tych plików do odczytu lub zapisu.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3590f-133">You can access these files for reading or writing.</span>
        </span>
        <span data-ttu-id="3590f-134">Aby odczytać plików konfiguracji, należy użyć <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> lub <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> można odczytać informacji o konfiguracji.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3590f-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span>
        </span>
        <span data-ttu-id="3590f-135">Użytkownik lub proces, która odczytuje musi mieć następujące uprawnienia:</span>
        <span class="sxs-lookup">
          <span data-stu-id="3590f-135">The user or process that reads must have the following permissions:</span>
        </span>  
  
-   <span data-ttu-id="3590f-136">Uprawnienie do odczytu w pliku konfiguracji na bieżącym poziomie konfiguracji w hierarchii.</span><span class="sxs-lookup"><span data-stu-id="3590f-136">Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
-   <span data-ttu-id="3590f-137">Odczyt wszystkich nadrzędnego plików konfiguracyjnych.</span><span class="sxs-lookup"><span data-stu-id="3590f-137">Read permissions on all the parent configuration files.</span></span><span data-ttu-id="3590f-138">Jeśli aplikacja potrzebuje dostępu tylko do odczytu własnych konfiguracją, firma Microsoft zaleca użycie <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="3590f-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span><span data-ttu-id="3590f-139">Ta metoda zapewnia dostęp do wartości konfiguracji pamięci podręcznej dla bieżącej aplikacji, który ma lepszą wydajność niż <see cref="T:System.Configuration.Configuration" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="3590f-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span><span data-ttu-id="3590f-140">Aby zapisać pliki konfiguracji, użyj jednej z <see cref="Overload:System.Configuration.Configuration.Save" /> metody.</span><span class="sxs-lookup"><span data-stu-id="3590f-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span><span data-ttu-id="3590f-141">Użytkownik lub proces, który zapisuje musi mieć następujące uprawnienia:</span><span class="sxs-lookup"><span data-stu-id="3590f-141">The user or process that writes must have the following permissions:</span></span>  
  
-   <span data-ttu-id="3590f-142">Zapisać uprawnienia w pliku konfiguracji i katalog na bieżącym poziomie hierarchii konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-142">Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
-   <span data-ttu-id="3590f-143">Odczyt we wszystkich plikach konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-143">Read permissions on all the configuration files.</span></span></para>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3590f-144">Pobiera <see cref="T:System.Configuration.AppSettingsSection" /> danych dla bieżącej aplikacji domyślnej konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-144">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3590f-145">Zwraca <see cref="T:System.Collections.Specialized.NameValueCollection" /> obiekt, który zawiera zawartość <see cref="T:System.Configuration.AppSettingsSection" /> obiektu dla bieżącej aplikacji domyślnej konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-145">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-146">A <xref:System.Configuration.AppSettingsSection> obiekt zawiera zawartość pliku konfiguracji `appSettings` sekcji.</span><span class="sxs-lookup"><span data-stu-id="3590f-146">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-147">W pierwszym przykładzie prostej aplikacji konsolowej odczytuje ustawienia aplikacji, dodaje nowe ustawienie i aktualizuje istniejące ustawienie.</span><span class="sxs-lookup"><span data-stu-id="3590f-147">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="3590f-148">Poprzednim przykładzie przyjęto założenie, że projekt zawiera plik App.config, jak pokazano poniżej.</span><span class="sxs-lookup"><span data-stu-id="3590f-148">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-149">Nie można pobrać <see cref="T:System.Collections.Specialized.NameValueCollection" /> obiektu z danych ustawień aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-149">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3590f-150">Pobiera <see cref="T:System.Configuration.ConnectionStringsSection" /> danych dla bieżącej aplikacji domyślnej konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-150">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3590f-151">Zwraca <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> obiekt, który zawiera zawartość <see cref="T:System.Configuration.ConnectionStringsSection" /> obiektu dla bieżącej aplikacji domyślnej konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-151">Returns a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-152">A <xref:System.Configuration.ConnectionStringsSection> obiekt zawiera zawartość pliku konfiguracji `connectionStrings` sekcji.</span><span class="sxs-lookup"><span data-stu-id="3590f-152">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-153">Poniższy przykład przedstawia użycie ciągu połączenia można odczytać danych z bazy danych.</span><span class="sxs-lookup"><span data-stu-id="3590f-153">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="3590f-154">Poprzednim przykładzie przyjęto założenie, że projekt ma App.config, jak pokazano poniżej.</span><span class="sxs-lookup"><span data-stu-id="3590f-154">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-155">Nie można pobrać <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-155">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="3590f-156">Ścieżka do sekcji konfiguracji i nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-156">The configuration section path and name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3590f-157">Pobiera sekcję konfiguracji określonej konfiguracji domyślnej bieżącej aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-157">Retrieves a specified configuration section for the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3590f-158">Określony <see cref="T:System.Configuration.ConfigurationSection" /> obiekt, lub <see langword="null" /> Jeśli sekcja nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-158">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-159">Dla aplikacji klienckich ta metoda pobiera plik konfiguracji uzyskany przez scalanie pliku konfiguracji aplikacji, użytkownika lokalnego pliku konfiguracji i mobilnych pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-159">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="3590f-160"><xref:System.Configuration.ConfigurationManager.GetSection%2A> Metoda uzyskuje dostęp do informacji o nie może zmieniać konfiguracji środowiska wykonawczego.</span><span class="sxs-lookup"><span data-stu-id="3590f-160">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="3590f-161">Aby zmienić konfigurację, należy użyć <xref:System.Configuration.Configuration.GetSection%2A> metody w pliku konfiguracji, którą można uzyskać za pomocą jednej z poniższych metod Otwórz:</span><span class="sxs-lookup"><span data-stu-id="3590f-161">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-162">Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationManager.GetSection%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3590f-162">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="3590f-163">Przykładem jest częścią większego przykładu udostępnionego dla <xref:System.Configuration.ConfigurationManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="3590f-163">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-164">Nie można załadować pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-164">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3590f-165">Należy rzutować wartości zwracanej z typem oczekiwanym konfiguracji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3590f-165">You must cast the return value to the expected configuration type.</span>
            </span>
            <span data-ttu-id="3590f-166">Aby uniknąć możliwych rzutowanie wyjątki, należy używać operacji rzutowania warunkowego takich jak <see langword="as" /> operatora w języku C# lub funkcji w języku Visual Basic.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3590f-166">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the  function in Visual Basic.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3590f-167">Otwiera plik konfiguracji określonego klienta jako <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-167">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel">
          <span data-ttu-id="3590f-168">
            <see cref="T:System.Configuration.ConfigurationUserLevel" /> Otwierane konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-168">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3590f-169">Otwiera plik konfiguracji dla bieżącej aplikacji jako <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-169">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3590f-170">A <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-170">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-171">Aplikacje klienckie Użyj konfigurację globalną, która ma zastosowanie do wszystkich użytkowników, oddzielne konfiguracje, które są stosowane do poszczególnych użytkowników i konfiguracje, które są stosowane do użytkowników mobilnych.</span><span class="sxs-lookup"><span data-stu-id="3590f-171">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="3590f-172">`userLevel` Parametr określa lokalizację pliku konfiguracji otwierany przez wskazującą, czy ma ona nie na poziomie użytkownika (plik konfiguracji jest w tym samym katalogu co aplikacja) lub na poziomie użytkownika (znajduje się w pliku konfiguracji Ustawienia ścieżka aplikacji ustaleniami na poziomie użytkownika).</span><span class="sxs-lookup"><span data-stu-id="3590f-172">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="3590f-173">Określ konfigurację, która do pobrania przez przekazanie jedną z następujących wartości `userLevel`:</span><span class="sxs-lookup"><span data-stu-id="3590f-173">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="3590f-174">Aby uzyskać <xref:System.Configuration.Configuration> obiekt, który ma zastosowanie do wszystkich użytkowników, ustawić `userLevel` do <xref:System.Configuration.ConfigurationUserLevel.None>.</span><span class="sxs-lookup"><span data-stu-id="3590f-174">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="3590f-175">Aby uzyskać lokalnej <xref:System.Configuration.Configuration> obiekt, który ma zastosowanie do bieżącego użytkownika, ustaw `userLevel` do <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span><span class="sxs-lookup"><span data-stu-id="3590f-175">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="3590f-176">Aby uzyskać mobilnego <xref:System.Configuration.Configuration> obiekt, który ma zastosowanie do bieżącego użytkownika, ustaw `userLevel` do <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span><span class="sxs-lookup"><span data-stu-id="3590f-176">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3590f-177">Aby uzyskać <xref:System.Configuration.Configuration> obiekt zasobu kodu musi mieć uprawnienia do odczytu we wszystkich plikach konfiguracji, z których dziedziczy ustawienia.</span><span class="sxs-lookup"><span data-stu-id="3590f-177">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="3590f-178">Aby zaktualizować plik konfiguracji, kodu Ponadto musi mieć uprawnienia do zapisu dla pliku konfiguracji i katalog, w którym istnieje.</span><span class="sxs-lookup"><span data-stu-id="3590f-178">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-179">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3590f-179">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-180">Nie można załadować pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-180">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath">
          <span data-ttu-id="3590f-181">Ścieżka pliku wykonywalnego (exe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-181">The path of the executable (exe) file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3590f-182">Otwiera plik konfiguracji określonego klienta jako <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-182">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3590f-183">A <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-183">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-184">Aplikacje klienckie Użyj konfigurację globalną, która ma zastosowanie do wszystkich użytkowników, oddzielne konfiguracje, które są stosowane do poszczególnych użytkowników i konfiguracje, które są stosowane do użytkowników mobilnych.</span><span class="sxs-lookup"><span data-stu-id="3590f-184">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="3590f-185">`userLevel` Wartość określa lokalizację pliku konfiguracji otwierany.</span><span class="sxs-lookup"><span data-stu-id="3590f-185">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="3590f-186">Wskazuje, czy ma on nie na poziomie użytkownika (plik konfiguracji jest w tym samym katalogu co aplikacja) lub na poziomie użytkownika (plik konfiguracji znajduje się w ścieżce Ustawienia aplikacji określana przez typ poziomu użytkownika.).</span><span class="sxs-lookup"><span data-stu-id="3590f-186">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="3590f-187">Wywołanie metody przeciążenie tej metody jest odpowiednikiem wywołania <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> przeciążenia z `preLoad` ustawiono parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="3590f-187">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-188">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3590f-188">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-189">Nie można załadować pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-189">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3590f-190">Otwiera plik konfiguracji maszyny na bieżącym komputerze jako <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-190">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3590f-191">A <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-191">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-192">Ustawienia konfiguracji maszyny dotyczą całego komputera i wszystkie aplikacje, które znajdują się w nim, chyba że zastąpione dla lokalnych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3590f-192">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="3590f-193">Ustawienia konfiguracji maszyny będą odczytywane z pliku Machine.config bieżącej wersji programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="3590f-193">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="3590f-194">Plik Machine.config znajduje się w podkatalogu następujące:</span><span class="sxs-lookup"><span data-stu-id="3590f-194">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="3590f-195">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="3590f-195">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3590f-196">Aby uzyskać <xref:System.Configuration.Configuration> obiekt zasobu kodu musi mieć uprawnienia do odczytu we wszystkich plikach konfiguracji, z których dziedziczy ustawienia.</span><span class="sxs-lookup"><span data-stu-id="3590f-196">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="3590f-197">Aby zaktualizować plik konfiguracji, kodu Ponadto musi mieć uprawnienia do zapisu dla pliku konfiguracji i katalog, w którym istnieje.</span><span class="sxs-lookup"><span data-stu-id="3590f-197">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="3590f-198">Nie jest możliwe uzyskanie dostępu do pliku Machine.config dla innych wersji programu .NET Framework, które może być zainstalowane na komputerze.</span><span class="sxs-lookup"><span data-stu-id="3590f-198">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-199">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> metodę, aby uzyskać wszystkie sekcje, które są zawarte w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-199">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-200">Nie można załadować pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-200">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3590f-201">Otwiera plik konfiguracji określonego klienta jako <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-201">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="3590f-202">
            <see cref="T:System.Configuration.ExeConfigurationFileMap" /> Obiekt, który odwołuje się do pliku konfiguracji do użycia zamiast domyślny plik konfiguracji aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-202">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="3590f-203">
            <see cref="T:System.Configuration.ConfigurationUserLevel" /> Obiektu, dla którego jest otwierane konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-203">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3590f-204">Otwiera plik konfiguracji określonego klienta jako <see cref="T:System.Configuration.Configuration" /> obiekt, który używa określonego pliku poziomu mapowania i użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-204">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3590f-205">Obiekt konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-205">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-206"><xref:System.Configuration.ConfigurationUserLevel> Obiektu określa lokalizację pliku konfiguracji otwierany.</span><span class="sxs-lookup"><span data-stu-id="3590f-206">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="3590f-207">Wskazuje, czy plik nie ma żadnych na poziomie użytkownika (plik konfiguracji jest w tym samym katalogu co aplikacja) lub na poziomie użytkownika (plik konfiguracji znajduje się w ścieżce Ustawienia aplikacji określana przez `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="3590f-207">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3590f-208">Aby uzyskać <xref:System.Configuration.Configuration> obiekt zasobu kodu musi mieć uprawnienia do odczytu we wszystkich plikach konfiguracji, z których dziedziczy ustawienia.</span><span class="sxs-lookup"><span data-stu-id="3590f-208">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="3590f-209">Aby zaktualizować plik konfiguracji, kodu Ponadto musi mieć uprawnienia do zapisu dla pliku konfiguracji i katalog, w którym istnieje.</span><span class="sxs-lookup"><span data-stu-id="3590f-209">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-210">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> metodę, aby uzyskać wszystkie sekcje znajdujące się w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-210">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-211">Nie można załadować pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-211">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
        <Parameter Name="preLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="3590f-212">
            <see cref="T:System.Configuration.ExeConfigurationFileMap" /> Obiekt, który odwołuje się plik konfiguracji, który będzie używany zamiast domyślnego pliku konfiguracyjnego aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-212">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="3590f-213">
            <see cref="T:System.Configuration.ConfigurationUserLevel" /> Obiektu, dla którego jest otwierane konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-213">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <param name="preLoad">
          <span data-ttu-id="3590f-214">
            <see langword="true" /> wstępnie wszystkich grup sekcji i sekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-214">
              <see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3590f-215">Otwiera plik konfiguracji określonego klienta jako <see cref="T:System.Configuration.Configuration" /> obiektu, który używa określonego pliku mapowania, na poziomie użytkownika i opcję wstępnego ładowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-215">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3590f-216">Obiekt konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-216">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-217"><xref:System.Configuration.ConfigurationUserLevel> Obiektu określa lokalizację pliku konfiguracji, który jest otwierany.</span><span class="sxs-lookup"><span data-stu-id="3590f-217">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="3590f-218">Wskazuje, czy plik nie ma żadnych na poziomie użytkownika (plik konfiguracji jest w tym samym katalogu co aplikacja) lub na poziomie użytkownika (plik konfiguracji jest w ścieżce Ustawienia aplikacji, która jest określana przez `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="3590f-218">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3590f-219">Aby uzyskać <xref:System.Configuration.Configuration> obiekt zasobu kodu musi mieć uprawnienia do odczytu we wszystkich plikach konfiguracji, z których dziedziczy ustawienia.</span><span class="sxs-lookup"><span data-stu-id="3590f-219">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="3590f-220">Aby zaktualizować plik konfiguracji, kodu Ponadto musi mieć uprawnienia do zapisu dla pliku konfiguracji i katalog, w którym istnieje.</span><span class="sxs-lookup"><span data-stu-id="3590f-220">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="3590f-221">Na przykład kod, zobacz <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="3590f-221">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-222">Nie można załadować pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-222">A configuration file could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="3590f-223">
            <see cref="T:System.Configuration.ExeConfigurationFileMap" /> Obiekt, który odwołuje się do pliku konfiguracji do użycia zamiast domyślny plik konfiguracji aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-223">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3590f-224">Otwiera plik konfiguracji maszyny jako <see cref="T:System.Configuration.Configuration" /> obiekt, który korzysta z określonego pliku mapowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-224">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3590f-225">A <see cref="T:System.Configuration.Configuration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-225">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-226">Ustawienia konfiguracji maszyny dotyczą całego komputera i wszystkie aplikacje, które znajdują się w nim, chyba że zastąpione dla lokalnych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3590f-226">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="3590f-227">Ustawienia konfiguracji maszyny będą odczytywane z pliku Machine.config bieżącej wersji programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="3590f-227">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="3590f-228">Plik Machine.config znajduje się w podkatalogu następujące:</span><span class="sxs-lookup"><span data-stu-id="3590f-228">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="3590f-229">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="3590f-229">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3590f-230">Aby uzyskać <xref:System.Configuration.Configuration> obiekt zasobu kodu musi mieć uprawnienia do odczytu we wszystkich plikach konfiguracji, z których dziedziczy ustawienia.</span><span class="sxs-lookup"><span data-stu-id="3590f-230">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="3590f-231">Aby zaktualizować plik konfiguracji, kodu Ponadto musi mieć uprawnienia do zapisu dla pliku konfiguracji i katalog, w którym istnieje.</span><span class="sxs-lookup"><span data-stu-id="3590f-231">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="3590f-232">Nie jest możliwe uzyskanie dostępu do pliku Machine.config dla innych wersji programu .NET Framework, które może być zainstalowane na komputerze.</span><span class="sxs-lookup"><span data-stu-id="3590f-232">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-233">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> metodę, aby uzyskać wszystkie sekcje w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="3590f-233">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3590f-234">Nie można załadować pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-234">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="3590f-235">Nazwa sekcji konfiguracji lub nazwa ścieżki i sekcji konfiguracji sekcji, aby odświeżyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-235">The configuration section name or the configuration path and section name of the section to refresh.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3590f-236">Odświeża nazwanej sekcji, dlatego jest ono pobierane przy następnym uruchomieniu go zostaną ponownie odczytane z dysku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3590f-236">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3590f-237">Ta metoda powoduje unieważnienie pamięci podręcznej dla sekcji konfiguracyjnej bez wpływu na pozostałe sekcje zasad.</span><span class="sxs-lookup"><span data-stu-id="3590f-237">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3590f-238">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> metodę, aby odświeżyć sekcji konfiguracji ustawień aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3590f-238">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>