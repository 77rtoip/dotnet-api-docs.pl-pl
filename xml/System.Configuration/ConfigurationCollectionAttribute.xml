<Type Name="ConfigurationCollectionAttribute" FullName="System.Configuration.ConfigurationCollectionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc7d1631fa0df5193209a2ea23fe5b1b94970166" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129858" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConfigurationCollectionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConfigurationCollectionAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationCollectionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConfigurationCollectionAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationCollectionAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConfigurationCollectionAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Deklaratywnie instruuje .NET Framework, aby utworzył wystąpienie kolekcji elementów konfiguracji. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj atrybutu, <xref:System.Configuration.ConfigurationCollectionAttribute> aby <xref:System.Configuration.ConfigurationElementCollection> dekorować element. Powoduje to, że .NET Framework utworzyć wystąpienie kolekcji i zainicjować ją przy użyciu wartości niestandardowych <xref:System.Configuration.ConfigurationElement> .  
  
> [!NOTE]
>  Najprostszym sposobem utworzenia niestandardowego elementu konfiguracji jest użycie modelu z atrybutem (deklaratywnym). Deklaruj elementy i dekorować je z <xref:System.Configuration.ConfigurationCollectionAttribute> atrybutem. Dla każdego elementu oznaczonego tym atrybutem .NET Framework używa odbicia, aby odczytać parametry dekorowania nazwy i utworzyć powiązane <xref:System.Configuration.ConfigurationElementCollection> wystąpienie. Można również użyć modelu programowego. W takim przypadku jest odpowiedzialny za zadeklarowanie niestandardowej kolekcji publicznej, ale również przesłonięcie <xref:System.Configuration.ConfigurationElementCollection> elementu członkowskiego i zwrócenie kolekcji właściwości.  
  
 System konfiguracji .NET Framework zawiera typy atrybutów, których można użyć podczas tworzenia niestandardowych elementów konfiguracji. Istnieją dwa rodzaje atrybutów:  
  
-   Atrybuty, które nakazują .NET Framework jak tworzyć wystąpienia właściwości niestandardowych elementów konfiguracji. Te typy obejmują:  
  
    -   <xref:System.Configuration.ConfigurationCollectionAttribute>  
  
    -   <xref:System.Configuration.ConfigurationPropertyAttribute>  
  
-   Atrybuty, które nakazują .NET Framework jak sprawdzać poprawność właściwości elementu konfiguracji niestandardowej. Te typy obejmują:  
  
    -   <xref:System.Configuration.IntegerValidatorAttribute>  
  
    -   <xref:System.Configuration.LongValidatorAttribute>  
  
    -   <xref:System.Configuration.RegexStringValidatorAttribute>  
  
    -   <xref:System.Configuration.StringValidatorAttribute>  
  
    -   <xref:System.Configuration.TimeSpanValidatorAttribute>  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.ConfigurationCollectionAttribute>jak używać.  
  
 Ten przykład składa się z trzech `UrlsSection`klas `UrlsCollection` : `UrlConfigElement`, i. `UrlsSection` Klasa<xref:System.Configuration.ConfigurationCollectionAttribute> używa do definiowania niestandardowej sekcji konfiguracji. Ta sekcja zawiera kolekcję adresów URL (zdefiniowaną przez `UrlsCollection` klasę) elementów adresu URL (zdefiniowanych `UrlConfigElement` przez klasę). Po uruchomieniu przykładu tworzone jest wystąpienie `UrlsSection` klasy, a w pliku konfiguracyjnym aplikacji są generowane następujące elementy konfiguracji:  
  
```xml  
<configuration>  
    <configSections>  
        <section name="MyUrls" type="UrlsSection,   
          ConfigurationCollectionAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />  
    </configSections>  
    <MyUrls>  
        <urls>  
            <remove name="Contoso" />  
            <add name="Contoso" url="http://www.contoso.com" port="0" />  
        </urls>  
    </MyUrls>  
</configuration  
```  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#1)]  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#31](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/configurationcollectionattribute.cs#31)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/configurationcollectionattribute.vb#31)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationPropertyAttribute" />
    <altmember cref="T:System.Configuration.IntegerValidatorAttribute" />
    <altmember cref="T:System.Configuration.LongValidatorAttribute" />
    <altmember cref="T:System.Configuration.RegexStringValidatorAttribute" />
    <altmember cref="T:System.Configuration.StringValidatorAttribute" />
    <altmember cref="T:System.Configuration.TimeSpanValidatorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationCollectionAttribute (Type itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (itemType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationCollectionAttribute(Type ^ itemType);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ConfigurationCollectionAttribute : Type -&gt; System.Configuration.ConfigurationCollectionAttribute" Usage="new System.Configuration.ConfigurationCollectionAttribute itemType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="itemType">Typ kolekcji właściwości do utworzenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor służy do poinformowania .NET Framework niestandardowego typu kolekcji właściwości, który ma zostać utworzony.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.ConfigurationCollectionAttribute.%23ctor%2A>jak używać.  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="itemType" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddItemName">
      <MemberSignature Language="C#" Value="public string AddItemName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddItemName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName" />
      <MemberSignature Language="VB.NET" Value="Public Property AddItemName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddItemName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddItemName : string with get, set" Usage="System.Configuration.ConfigurationCollectionAttribute.AddItemName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see langword="&lt;add&gt;" /> elementu konfiguracji.</summary>
        <value>Nazwa, która zastępuje nazwę standardową "Add" elementu konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> Właściwość umożliwia przypisanie innej nazwy do elementu konfiguracji. Można na przykład użyć `addUrl` zamiast polecenia "Dodaj".  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> jak używać właściwości.  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItemsName">
      <MemberSignature Language="C#" Value="public string ClearItemsName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClearItemsName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName" />
      <MemberSignature Language="VB.NET" Value="Public Property ClearItemsName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClearItemsName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClearItemsName : string with get, set" Usage="System.Configuration.ConfigurationCollectionAttribute.ClearItemsName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see langword="&lt;clear&gt;" /> elementu konfiguracji.</summary>
        <value>Nazwa, która zastępuje nazwę standardową "Clear" dla elementu konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia przypisanie innej nazwy `<clear>` do elementu konfiguracji. <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A> Można na przykład użyć `clearUrls` zamiast "Clear".  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A>jak używać.  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationElementCollectionType CollectionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Public Property CollectionType As ConfigurationElementCollectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationElementCollectionType CollectionType { System::Configuration::ConfigurationElementCollectionType get(); void set(System::Configuration::ConfigurationElementCollectionType value); };" />
      <MemberSignature Language="F#" Value="member this.CollectionType : System.Configuration.ConfigurationElementCollectionType with get, set" Usage="System.Configuration.ConfigurationCollectionAttribute.CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementCollectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> atrybutu.</summary>
        <value>Typ <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Configuration.ConfigurationCollectionAttribute.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ elementu kolekcji.</summary>
        <value>Typ elementu kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationCollectionAttribute.ItemType%2A> Właściwość jest używana przez odbicie w celu pobrania typu elementu konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItemName">
      <MemberSignature Language="C#" Value="public string RemoveItemName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoveItemName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoveItemName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemoveItemName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoveItemName : string with get, set" Usage="System.Configuration.ConfigurationCollectionAttribute.RemoveItemName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see langword="&lt;remove&gt;" /> elementu konfiguracji.</summary>
        <value>Nazwa, która zastępuje nazwę standardową "Remove" elementu konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia przypisanie innej nazwy `<remove>` do elementu konfiguracji. <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> Można na przykład użyć `removeUrl` zamiast polecenia "Usuń".  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> jak używać właściwości.  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
