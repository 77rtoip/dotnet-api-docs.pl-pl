<Type Name="ConfigurationCollectionAttribute" FullName="System.Configuration.ConfigurationCollectionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a081a554f87e1bc2f6aa2d0dd62b0a85f4959622" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36697754" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConfigurationCollectionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConfigurationCollectionAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationCollectionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConfigurationCollectionAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationCollectionAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConfigurationCollectionAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Deklaratywnie program .NET Framework w celu utworzenia wystąpienia kolekcji elementów konfiguracji. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Configuration.ConfigurationCollectionAttribute> atrybut do dekoracji <xref:System.Configuration.ConfigurationElementCollection> elementu. Powoduje to, że .NET Framework, można utworzyć wystąpienia kolekcji i zainicjować go za pomocą niestandardowe <xref:System.Configuration.ConfigurationElement> wartości.  
  
> [!NOTE]
>  Najprostszym sposobem, aby utworzyć element konfiguracji niestandardowej jest oparte na atrybutach modelu (deklaratywne). Deklarowanie elementów i dekoracji je za pomocą <xref:System.Configuration.ConfigurationCollectionAttribute> atrybutu. Dla każdego elementu z tym atrybutem programu .NET Framework używa odbicia do odczytu decorating parametrów i tworzenie powiązanych <xref:System.Configuration.ConfigurationElementCollection> wystąpienia. Umożliwia także programowe modelu. W takim przypadku go odpowiada deklarować kolekcji niestandardowej publiczne, ale również zastąpić <xref:System.Configuration.ConfigurationElementCollection> elementu członkowskiego i przywrócenie kolekcji właściwości.  
  
 System konfiguracji .NET Framework zapewnia typy atrybutów, których można użyć podczas tworzenia elementów konfiguracji niestandardowej. Istnieją dwa rodzaje atrybuty:  
  
-   Atrybuty, które poinstruować programu .NET Framework sposobu tworzenia wystąpień konfiguracji niestandardowej właściwości elementu. Te typy:  
  
    -   <xref:System.Configuration.ConfigurationCollectionAttribute>  
  
    -   <xref:System.Configuration.ConfigurationPropertyAttribute>  
  
-   Atrybuty, które poinstruować programu .NET Framework sprawdzania poprawności właściwości elementu konfiguracji niestandardowej. Te typy:  
  
    -   <xref:System.Configuration.IntegerValidatorAttribute>  
  
    -   <xref:System.Configuration.LongValidatorAttribute>  
  
    -   <xref:System.Configuration.RegexStringValidatorAttribute>  
  
    -   <xref:System.Configuration.StringValidatorAttribute>  
  
    -   <xref:System.Configuration.TimeSpanValidatorAttribute>  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationCollectionAttribute>.  
  
 W tym przykładzie składa się z trzech klas: `UrlsSection`, `UrlsCollection` i `UrlConfigElement`. `UrlsSection` Klasy używa <xref:System.Configuration.ConfigurationCollectionAttribute> do definiowania sekcji konfiguracji niestandardowej. Ta sekcja zawiera kolekcję adresu URL (zdefiniowane przez `UrlsCollection` klasy) elementów adresu URL (zdefiniowane przez `UrlConfigElement` klasy). Po uruchomieniu przykładzie wystąpienia `UrlsSection` klasy jest tworzony i następujące elementy konfiguracji są generowane w pliku konfiguracyjnym aplikacji:  
  
```  
<configuration>  
    <configSections>  
        <section name="MyUrls" type="UrlsSection,   
          ConfigurationCollectionAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />  
    </configSections>  
    <MyUrls>  
        <urls>  
            <remove name="Contoso" />  
            <add name="Contoso" url="http://www.contoso.com" port="0" />  
        </urls>  
    </MyUrls>  
</configuration  
```  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#1)]  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#31](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/configurationcollectionattribute.cs#31)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/configurationcollectionattribute.vb#31)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationPropertyAttribute" />
    <altmember cref="T:System.Configuration.IntegerValidatorAttribute" />
    <altmember cref="T:System.Configuration.LongValidatorAttribute" />
    <altmember cref="T:System.Configuration.RegexStringValidatorAttribute" />
    <altmember cref="T:System.Configuration.StringValidatorAttribute" />
    <altmember cref="T:System.Configuration.TimeSpanValidatorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationCollectionAttribute (Type itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (itemType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationCollectionAttribute(Type ^ itemType);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ConfigurationCollectionAttribute : Type -&gt; System.Configuration.ConfigurationCollectionAttribute" Usage="new System.Configuration.ConfigurationCollectionAttribute itemType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="itemType">Typ kolekcji właściwości do utworzenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia Poinformuj niestandardowego typu kolekcji właściwości do utworzenia programu .NET Framework.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationCollectionAttribute.%23ctor%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="itemType" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddItemName">
      <MemberSignature Language="C#" Value="public string AddItemName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddItemName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName" />
      <MemberSignature Language="VB.NET" Value="Public Property AddItemName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddItemName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddItemName : string with get, set" Usage="System.Configuration.ConfigurationCollectionAttribute.AddItemName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see langword="&lt;add&gt;" /> element konfiguracji.</summary>
        <value>Nazwa, która zastępuje standardową nazwą "Dodaj" dla elementu konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> Właściwość pozwala przypisać inną nazwę elementu konfiguracji. Na przykład można użyć `addUrl` zamiast "Dodaj".  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> właściwości.  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItemsName">
      <MemberSignature Language="C#" Value="public string ClearItemsName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClearItemsName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName" />
      <MemberSignature Language="VB.NET" Value="Public Property ClearItemsName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClearItemsName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClearItemsName : string with get, set" Usage="System.Configuration.ConfigurationCollectionAttribute.ClearItemsName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see langword="&lt;clear&gt;" /> element konfiguracji.</summary>
        <value>Nazwa, która zastępuje standardową nazwą "Wyczyść" dla elementu konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A> Właściwość pozwala przypisać inną nazwę `<clear>` element konfiguracji. Na przykład można użyć `clearUrls` zamiast "clear".  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationElementCollectionType CollectionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Public Property CollectionType As ConfigurationElementCollectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationElementCollectionType CollectionType { System::Configuration::ConfigurationElementCollectionType get(); void set(System::Configuration::ConfigurationElementCollectionType value); };" />
      <MemberSignature Language="F#" Value="member this.CollectionType : System.Configuration.ConfigurationElementCollectionType with get, set" Usage="System.Configuration.ConfigurationCollectionAttribute.CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementCollectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> atrybutu.</summary>
        <value>Typ <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Configuration.ConfigurationCollectionAttribute.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ elementu kolekcji.</summary>
        <value>Typ elementu kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationCollectionAttribute.ItemType%2A> Właściwość jest używana przez odbicie można uzyskać typu elementu konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItemName">
      <MemberSignature Language="C#" Value="public string RemoveItemName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoveItemName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoveItemName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemoveItemName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoveItemName : string with get, set" Usage="System.Configuration.ConfigurationCollectionAttribute.RemoveItemName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see langword="&lt;remove&gt;" /> element konfiguracji.</summary>
        <value>Nazwa, która zastępuje standardową nazwą "Usuń" dla elementu konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> Właściwość pozwala przypisać inną nazwę `<remove>` element konfiguracji. Na przykład można użyć `removeUrl` zamiast "Usuń".  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> właściwości.  
  
 [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]
 [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>