<Type Name="ConfigurationElementCollection" FullName="System.Configuration.ConfigurationElementCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65cedd38dba5a5efc0f61d1e3c4eaf6b9bcb707a" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42984919" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConfigurationElementCollection : System.Configuration.ConfigurationElement, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationElementCollection extends System.Configuration.ConfigurationElement implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationElementCollection&#xA;Inherits ConfigurationElement&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationElementCollection abstract : System::Configuration::ConfigurationElement, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ConfigurationElementCollection = class&#xA;    inherit ConfigurationElement&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1fa80-101">Reprezentuje element konfiguracji, zawierający kolekcję elementów podrzędnych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fa80-101">Represents a configuration element containing a collection of child elements.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-102"><xref:System.Configuration.ConfigurationElementCollection> Reprezentuje kolekcję elementów w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-102">The <xref:System.Configuration.ConfigurationElementCollection> represents a collection of elements within a configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fa80-103">Element w pliku konfiguracji odnosi się do podstawowego elementu XML lub sekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-103">An element within a configuration file refers to a basic XML element or a section.</span></span> <span data-ttu-id="1fa80-104">Prosty element jest — tag XML przy użyciu powiązanych atrybutów, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="1fa80-104">A simple element is an XML tag with related attributes, if any.</span></span> <span data-ttu-id="1fa80-105">Prosty element stanowi sekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-105">A simple element constitutes a section.</span></span> <span data-ttu-id="1fa80-106">Złożone sekcji może zawierać jeden lub więcej elementów prosty, kolekcję elementów i innych sekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-106">Complex sections can contain one or more simple elements, a collection of elements, and other sections.</span></span>  
  
 <span data-ttu-id="1fa80-107">Możesz użyć <xref:System.Configuration.ConfigurationElementCollection> do pracy z kolekcją <xref:System.Configuration.ConfigurationElement> obiektów.</span><span class="sxs-lookup"><span data-stu-id="1fa80-107">You use the <xref:System.Configuration.ConfigurationElementCollection> to work with a collection of <xref:System.Configuration.ConfigurationElement> objects.</span></span> <span data-ttu-id="1fa80-108">Implementowania tej klasy, aby dodać kolekcje niestandardowe <xref:System.Configuration.ConfigurationElement> elementów <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="1fa80-108">Implement this class to add collections of custom <xref:System.Configuration.ConfigurationElement> elements to a <xref:System.Configuration.ConfigurationSection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa80-109">Poniższy przykład pokazuje, jak używać <xref:System.Configuration.ConfigurationElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="1fa80-109">The following example shows how to use the <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 <span data-ttu-id="1fa80-110">Pierwszy przykład składa się z trzech klas: `UrlsSection`, `UrlsCollection` i `UrlConfigElement`. `UrlsSection` Klasy używa <xref:System.Configuration.ConfigurationCollectionAttribute> zdefiniować sekcję konfiguracji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="1fa80-110">The first example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the <xref:System.Configuration.ConfigurationCollectionAttribute> to define a custom configuration section.</span></span> <span data-ttu-id="1fa80-111">Ta sekcja zawiera kolekcję adresem URL (zdefiniowany przez `UrlsCollection` klasy) adresu URL elementów (zdefiniowany przez `UrlConfigElement` klasy).</span><span class="sxs-lookup"><span data-stu-id="1fa80-111">This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class).</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#1)]  
  
 <span data-ttu-id="1fa80-112">Ten drugi przykład kodu używa klas określone przed.</span><span class="sxs-lookup"><span data-stu-id="1fa80-112">This second code example uses the classes specified before.</span></span> <span data-ttu-id="1fa80-113">Możesz połączyć dwa poniższe przykłady, które są dostępne w projekcie aplikacji konsoli.</span><span class="sxs-lookup"><span data-stu-id="1fa80-113">You combine these two examples in a console application project.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/usingconfigurationcollectionelement.cs#31)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/usingconfigurationcollectionelement.vb#31)]  
  
 <span data-ttu-id="1fa80-114">Po uruchomieniu aplikacji konsoli, a wystąpienie `UrlsSection` klasa jest tworzona i w pliku konfiguracji aplikacji są generowane następujące elementy konfiguracji:</span><span class="sxs-lookup"><span data-stu-id="1fa80-114">When you run the console application, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:</span></span>  
  
```xml  
<configuration>  
    <configSections>  
        <section name="MyUrls" type="UrlsSection,   
          ConfigurationElementCollection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />  
    </configSections>  
    <MyUrls>  
        <urls>  
           <add name="Contoso" url="http://www.contoso.com" port="4040 />  
        </urls>  
    </MyUrls>  
</configuration  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="1fa80-115">
        <para>Aby utworzyć niestandardowy element konfiguracji, można użyć rozwiązań programistycznych albo zezwala deklaratywne modelu programowania (opartego na atrybutach).  Programowe model wymaga dla każdego atrybutu element utworzenie właściwości, aby pobrać i ustawić jej wartość i dodaj go do zbioru właściwości wewnętrznego elementu bazowego <see cref="T:System.Configuration.ConfigurationElement" /> klasy bazowej.  Model deklaratywne, nazywana także modelu opartego na atrybutach można zdefiniować atrybut elementu, za pomocą właściwości i konfigurując go za pomocą atrybutów. Te atrybuty poinstruować system konfiguracji programu ASP.NET o typach właściwości i ich wartości domyślne. ASP.NET umożliwia odbicia uzyskać te informacje, a następnie utwórz element właściwości obiektów i wykonać wymagane inicjowania.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="1fa80-115">
          <para>You can use a programmatic or a declarative (attributed) coding model to create a custom configuration element.  The programmatic model requires that for each element attribute you create a property to get and set its value, and that you add it to the internal property bag of the underlying <see cref="T:System.Configuration.ConfigurationElement" /> base class.  The declarative model, also referred to as the attributed model, allows you to define an element attribute by using a property and configuring it with attributes. These attributes instruct the ASP.NET configuration system about the property types and their default values. ASP.NET can use reflection to obtain this information and then create the element property objects and perform the required initialization.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Configuration.ElementInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
    <altmember cref="T:System.Configuration.ConfigurationElementCollectionType" />
    <altmember cref="T:System.Configuration.ConfigurationProperty" />
    <altmember cref="T:System.Configuration.ConfigurationPropertyCollection" />
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationElementCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-116">Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationElementCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-117">Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-118">Utwórz nowe wystąpienie klasy <xref:System.Configuration.ConfigurationElementCollection> gdy Twoja aplikacja potrzebuje do tworzenia niestandardowego <xref:System.Configuration.ConfigurationElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="1fa80-118">You create a new instance of the <xref:System.Configuration.ConfigurationElementCollection> when your application needs to create a custom <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElementCollection (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElementCollection(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ConfigurationElementCollection : System.Collections.IComparer -&gt; System.Configuration.ConfigurationElementCollection" Usage="new System.Configuration.ConfigurationElementCollection comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="1fa80-119">
            <see cref="T:System.Collections.IComparer" /> Porównania do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-119">The <see cref="T:System.Collections.IComparer" /> comparer to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-120">Tworzy nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationElementCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-120">Creates a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-121"><xref:System.Collections.IComparer> Służy do ustawiania porównania do użycia.</span><span class="sxs-lookup"><span data-stu-id="1fa80-121">The <xref:System.Collections.IComparer> is used to set a comparer to use.</span></span> <span data-ttu-id="1fa80-122">Na przykład można użyć funkcję porównującą bez uwzględniania wielkości liter do utworzenia klucza bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="1fa80-122">For example, you can use a case-insensitive comparer to make the key case insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fa80-123">
            <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-123">
              <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddElementName">
      <MemberSignature Language="C#" Value="protected internal string AddElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property AddElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ AddElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.AddElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-124">Pobiera lub ustawia nazwę <see cref="T:System.Configuration.ConfigurationElement" /> do skojarzenia z operacji dodawania w <see cref="T:System.Configuration.ConfigurationElementCollection" /> w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-124">Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the add operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-125">Nazwa elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-125">The name of the element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fa80-126">Wybrana wartość zaczyna się od zastrzeżonego prefiksu "Konfiguracja" lub "Zablokuj".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-126">The selected value starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-127">Dodaje <see cref="T:System.Configuration.ConfigurationElement" /> do <see cref="T:System.Configuration.ConfigurationElementCollection" /> wystąpienia w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-127">Adds a <see cref="T:System.Configuration.ConfigurationElement" /> to an <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-128">Użyj <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> metodę, aby dodać nowy <xref:System.Configuration.ConfigurationElement> do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-128">Use the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method to add a new <xref:System.Configuration.ConfigurationElement> to the collection.</span></span> <span data-ttu-id="1fa80-129">Zastąpienia w klasie pochodnej, jeśli wymagana jest niestandardowe zachowanie, gdy element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="1fa80-129">Override in a derived class if custom behavior is required when the element is added.</span></span>  
  
 <span data-ttu-id="1fa80-130">Podczas dodawania, element jest uznany za duplikat tylko wtedy, gdy klucze są identyczne, ale wartości są różne.</span><span class="sxs-lookup"><span data-stu-id="1fa80-130">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="1fa80-131">Elementy z identycznymi kluczami i wartościami są akceptowane dyskretnie, ponieważ elementy nie powodowały.</span><span class="sxs-lookup"><span data-stu-id="1fa80-131">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="1fa80-132">Jednak nie można dodać element z identycznym kluczem, ale inną wartością, ponieważ nie logikę w celu określenia, które konkurencyjnych wartości powinien honorowane.</span><span class="sxs-lookup"><span data-stu-id="1fa80-132">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected virtual void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BaseAdd (element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BaseAdd(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member BaseAdd : System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.BaseAdd : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.BaseAdd element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="1fa80-133">
            <see cref="T:System.Configuration.ConfigurationElement" /> Do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-133">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-134">Dodaje element konfiguracji do <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-134">Adds a configuration element to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-135">Użyj <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> metodę, aby dodać nowy <xref:System.Configuration.ConfigurationElement> do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-135">Use the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method to add a new <xref:System.Configuration.ConfigurationElement> to the collection.</span></span> <span data-ttu-id="1fa80-136">Zastąpienie go w klasie pochodnej, jeśli niestandardowe zachowanie jest wymagana, gdy element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="1fa80-136">Override it in a derived class if custom behavior is required when the element is added.</span></span>  
  
 <span data-ttu-id="1fa80-137">Podczas dodawania, element jest uznany za duplikat tylko wtedy, gdy klucze są identyczne, ale wartości są różne.</span><span class="sxs-lookup"><span data-stu-id="1fa80-137">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="1fa80-138">Elementy z identycznymi kluczami i wartościami są akceptowane dyskretnie, ponieważ elementy nie powodowały.</span><span class="sxs-lookup"><span data-stu-id="1fa80-138">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="1fa80-139">Jednak nie można dodać element z identycznym kluczem, ale inną wartością, ponieważ nie logikę w celu określenia, które konkurencyjnych wartości powinien honorowane.</span><span class="sxs-lookup"><span data-stu-id="1fa80-139">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa80-140">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> metody i wywoływania go z `Add` metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-140">The following code example shows how to override the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method and how to call it from an `Add` method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected void BaseAdd (System.Configuration.ConfigurationElement element, bool throwIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseAdd(class System.Configuration.ConfigurationElement element, bool throwIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseAdd (element As ConfigurationElement, throwIfExists As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseAdd(System::Configuration::ConfigurationElement ^ element, bool throwIfExists);" />
      <MemberSignature Language="F#" Value="member this.BaseAdd : System.Configuration.ConfigurationElement * bool -&gt; unit" Usage="configurationElementCollection.BaseAdd (element, throwIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="throwIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="1fa80-141">
            <see cref="T:System.Configuration.ConfigurationElement" /> Do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-141">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span>
          </span>
        </param>
        <param name="throwIfExists">
          <span data-ttu-id="1fa80-142">
            <see langword="true" /> Aby zgłosić wyjątek, jeśli <see cref="T:System.Configuration.ConfigurationElement" /> określonego znajduje się już w <see cref="T:System.Configuration.ConfigurationElementCollection" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-142">
              <see langword="true" /> to throw an exception if the <see cref="T:System.Configuration.ConfigurationElement" /> specified is already contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-143">Dodaje element konfiguracji do kolekcji elementów konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-143">Adds a configuration element to the configuration element collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-144">Użyj opcjonalnego parametru `throwIfExists` zgłosić <xref:System.Exception> wyjątek Jeśli określony <xref:System.Configuration.ConfigurationElement> obiekt już istnieje w <xref:System.Configuration.ConfigurationElementCollection> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-144">Use the optional parameter `throwIfExists` to throw an <xref:System.Exception> exception if the specified <xref:System.Configuration.ConfigurationElement> object already exists in the <xref:System.Configuration.ConfigurationElementCollection> collection.</span></span>  
  
 <span data-ttu-id="1fa80-145">Element jest uznany za duplikat, tylko wtedy, gdy klucze są identyczne, ale wartości są różne.</span><span class="sxs-lookup"><span data-stu-id="1fa80-145">An element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="1fa80-146">Elementy z identycznymi kluczami i wartościami są akceptowane dyskretnie, ponieważ elementy nie powodowały.</span><span class="sxs-lookup"><span data-stu-id="1fa80-146">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="1fa80-147">Jednak nie można dodać element z identycznym kluczem, ale inną wartością, ponieważ nie logikę w celu określenia, które konkurencyjnych wartości powinien honorowane.</span><span class="sxs-lookup"><span data-stu-id="1fa80-147">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="1fa80-148">
            <see cref="T:System.Configuration.ConfigurationElement" /> Już istnieje w <see cref="T:System.Configuration.ConfigurationElementCollection" /> i <paramref name="throwIfExists" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-148">The <see cref="T:System.Configuration.ConfigurationElement" /> to add already exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> and the <paramref name="throwIfExists" /> parameter is <see langword="true" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected virtual void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BaseAdd (index As Integer, element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BaseAdd(int index, System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member BaseAdd : int * System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.BaseAdd : int * System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.BaseAdd (index, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1fa80-149">Lokalizacja indeksu, w której mają zostać dodane w określonym <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-149">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="1fa80-150">
            <see cref="T:System.Configuration.ConfigurationElement" /> Do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-150">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-151">Dodaje element konfiguracji do kolekcji elementów konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-151">Adds a configuration element to the configuration element collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-152">Użyj `index` parametru, aby dodać <xref:System.Configuration.ConfigurationElement> obiekt <xref:System.Configuration.ConfigurationElementCollection> lokalizacji określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="1fa80-152">Use the `index` parameter to add the <xref:System.Configuration.ConfigurationElement> object to the <xref:System.Configuration.ConfigurationElementCollection> at a specific index location.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseClear">
      <MemberSignature Language="C#" Value="protected internal void BaseClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseClear();" />
      <MemberSignature Language="F#" Value="member this.BaseClear : unit -&gt; unit" Usage="configurationElementCollection.BaseClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-153">Usuwa wszystkie obiekty elementów konfiguracji z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-153">Removes all configuration element objects from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-154">Gdy <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> metoda jest wywoływana, powoduje usunięcie wszystkich <xref:System.Configuration.ConfigurationElement> obiektów z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-154">When the <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> method is called, it removes all <xref:System.Configuration.ConfigurationElement> objects from the collection.</span></span> <span data-ttu-id="1fa80-155">Wstawia również `clear` dyrektywy w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-155">It also inserts a `clear` directive into the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa80-156">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-156">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1fa80-157">Konfiguracja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-157">The configuration is read-only.</span>
          </span>
          <span data-ttu-id="1fa80-158">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-158">\- or -</span>
          </span>
          <span data-ttu-id="1fa80-159">Element kolekcji został zablokowany w wyższym poziomie konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-159">A collection item has been locked in a higher-level configuration.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseGet">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-160">Pobiera <see cref="T:System.Configuration.ConfigurationElement" /> w określonej lokalizacji indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-160">Gets the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected internal System.Configuration.ConfigurationElement BaseGet (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Configuration.ConfigurationElement BaseGet(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGet (index As Integer) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Configuration::ConfigurationElement ^ BaseGet(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : int -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.BaseGet index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1fa80-161">Lokalizacja w indeksie elementu <see cref="T:System.Configuration.ConfigurationElement" /> do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-161">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-162">Pobiera element konfiguracji w określonej lokalizacji indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-162">Gets the configuration element at the specified index location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-163">
            <see cref="T:System.Configuration.ConfigurationElement" /> Pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-163">The <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1fa80-164">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-164">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#8)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1fa80-165">
            <paramref name="index" /> jest mniejsza niż <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-165">
              <paramref name="index" /> is less than <see langword="0" />.</span>
          </span>
          <span data-ttu-id="1fa80-166">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-166">\- or -</span>
          </span>
          <span data-ttu-id="1fa80-167">Istnieje nie <see cref="T:System.Configuration.ConfigurationElement" /> w określonym <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-167">There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected internal System.Configuration.ConfigurationElement BaseGet (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Configuration.ConfigurationElement BaseGet(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGet (key As Object) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Configuration::ConfigurationElement ^ BaseGet(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : obj -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.BaseGet key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="1fa80-168">Klucz elementu do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-168">The key of the element to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-169">Zwraca element konfiguracji z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-169">Returns the configuration element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-170">
            <see cref="T:System.Configuration.ConfigurationElement" /> z określonym kluczem, a w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-170">The <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-171"><xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> Metoda zwraca `null` w przypadku nie <xref:System.Configuration.ConfigurationElement> obiektu z określonym kluczem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-171">The <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method returns `null` if there is no <xref:System.Configuration.ConfigurationElement> object with the specified key in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa80-172">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-172">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#9)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetAllKeys">
      <MemberSignature Language="C#" Value="protected internal object[] BaseGetAllKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance object[] BaseGetAllKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGetAllKeys () As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Object ^&gt; ^ BaseGetAllKeys();" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllKeys : unit -&gt; obj[]" Usage="configurationElementCollection.BaseGetAllKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-173">Zwraca tablicę kluczy dla wszystkich elementów konfiguracji znajdujących się w <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-173">Returns an array of the keys for all of the configuration elements contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-174">Tablica, która zawiera klucze dla wszystkich <see cref="T:System.Configuration.ConfigurationElement" /> obiektów zawartych w <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-174">An array that contains the keys for all of the <see cref="T:System.Configuration.ConfigurationElement" /> objects contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetKey">
      <MemberSignature Language="C#" Value="protected internal object BaseGetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance object BaseGetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Object ^ BaseGetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetKey : int -&gt; obj" Usage="configurationElementCollection.BaseGetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1fa80-175">Lokalizacja indeksu dla <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-175">The index location for the <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-176">Pobiera klucz dla <see cref="T:System.Configuration.ConfigurationElement" /> w określonej lokalizacji indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-176">Gets the key for the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-177">Klucz dla określonego <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-177">The key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1fa80-178">
            <paramref name="index" /> jest mniejsza niż <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-178">
              <paramref name="index" /> is less than <see langword="0" />.</span>
          </span>
          <span data-ttu-id="1fa80-179">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-179">\- or -</span>
          </span>
          <span data-ttu-id="1fa80-180">Istnieje nie <see cref="T:System.Configuration.ConfigurationElement" /> w określonym <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-180">There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseIndexOf">
      <MemberSignature Language="C#" Value="protected int BaseIndexOf (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 BaseIndexOf(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseIndexOf (element As ConfigurationElement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int BaseIndexOf(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.BaseIndexOf : System.Configuration.ConfigurationElement -&gt; int" Usage="configurationElementCollection.BaseIndexOf element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="1fa80-181">
            <see cref="T:System.Configuration.ConfigurationElement" /> Dla określonej lokalizacji indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-181">The <see cref="T:System.Configuration.ConfigurationElement" /> for the specified index location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-182">Wskazuje określony indeks <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-182">Indicates the index of the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-183">Indeksuje określony <see cref="T:System.Configuration.ConfigurationElement" />; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-183">The index of the specified <see cref="T:System.Configuration.ConfigurationElement" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1fa80-184">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Configuration.ConfigurationElementCollection.BaseIndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-184">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseIndexOf%2A> method.</span></span>  
  
 [!code-vb[System.Configuration.ConfigurationElementCollection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseIsRemoved">
      <MemberSignature Language="C#" Value="protected internal bool BaseIsRemoved (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool BaseIsRemoved(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseIsRemoved (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; bool BaseIsRemoved(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseIsRemoved : obj -&gt; bool" Usage="configurationElementCollection.BaseIsRemoved key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="1fa80-185">Klucz elementu do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-185">The key of the element to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-186">Wskazuje, czy <see cref="T:System.Configuration.ConfigurationElement" /> z określonym kluczem została usunięta z <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-186">Indicates whether the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-187">
            <see langword="true" /> Jeśli <see cref="T:System.Configuration.ConfigurationElement" /> z określonym kluczem został usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-187">
              <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fa80-188">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-188">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseRemove">
      <MemberSignature Language="C#" Value="protected internal void BaseRemove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseRemove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseRemove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseRemove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseRemove : obj -&gt; unit" Usage="configurationElementCollection.BaseRemove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="1fa80-189">Klucz <see cref="T:System.Configuration.ConfigurationElement" /> do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-189">The key of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-190">Usuwa <see cref="T:System.Configuration.ConfigurationElement" /> z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-190">Removes a <see cref="T:System.Configuration.ConfigurationElement" /> from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-191"><xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> Wstawia metoda `<remove>` dyrektywy w pliku konfiguracji dla <xref:System.Configuration.ConfigurationElement> z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="1fa80-191">The <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> method inserts a `<remove>` directive into the configuration file for the <xref:System.Configuration.ConfigurationElement> with the specified key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa80-192">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-192">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="1fa80-193">Nie <see cref="T:System.Configuration.ConfigurationElement" /> z określony klucz istnieje w kolekcji, element został już usunięty lub nie można usunąć elementu, ponieważ wartość jego <see cref="P:System.Configuration.ConfigurationProperty.Type" /> nie jest <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-193">No <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseRemoveAt">
      <MemberSignature Language="C#" Value="protected internal void BaseRemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseRemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseRemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseRemoveAt : int -&gt; unit" Usage="configurationElementCollection.BaseRemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1fa80-194">Lokalizacja w indeksie elementu <see cref="T:System.Configuration.ConfigurationElement" /> do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-194">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-195">Usuwa <see cref="T:System.Configuration.ConfigurationElement" /> w określonej lokalizacji indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-195">Removes the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-196"><xref:System.Configuration.ConfigurationElementCollection.BaseRemoveAt%2A> Wstawia metoda `<remove>` dyrektywy w pliku konfiguracji dla elementu w określonej lokalizacji indeksu.</span><span class="sxs-lookup"><span data-stu-id="1fa80-196">The <xref:System.Configuration.ConfigurationElementCollection.BaseRemoveAt%2A> method inserts a `<remove>` directive into the configuration file for the element at the specified index location.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1fa80-197">Konfiguracja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-197">The configuration is read-only.</span>
          </span>
          <span data-ttu-id="1fa80-198">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-198">\- or -</span>
          </span>
          <span data-ttu-id="1fa80-199">
            <paramref name="index" /> jest mniejsza niż <see langword="0" /> lub większa niż liczba <see cref="T:System.Configuration.ConfigurationElement" /> obiektów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-199">
              <paramref name="index" /> is less than <see langword="0" /> or greater than the number of <see cref="T:System.Configuration.ConfigurationElement" /> objects in the collection.</span>
          </span>
          <span data-ttu-id="1fa80-200">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-200">\- or -</span>
          </span>
          <span data-ttu-id="1fa80-201">
            <see cref="T:System.Configuration.ConfigurationElement" /> Obiekt został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-201">The <see cref="T:System.Configuration.ConfigurationElement" /> object has already been removed.</span>
          </span>
          <span data-ttu-id="1fa80-202">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-202">\- or -</span>
          </span>
          <span data-ttu-id="1fa80-203">Wartość <see cref="T:System.Configuration.ConfigurationElement" /> obiekt został zablokowany na wyższym poziomie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-203">The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object has been locked at a higher level.</span>
          </span>
          <span data-ttu-id="1fa80-204">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-204">\- or -</span>
          </span>
          <span data-ttu-id="1fa80-205">
            <see cref="T:System.Configuration.ConfigurationElement" /> Zostało odziedziczone na obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-205">The <see cref="T:System.Configuration.ConfigurationElement" /> object was inherited.</span>
          </span>
          <span data-ttu-id="1fa80-206">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-206">\- or -</span>
          </span>
          <span data-ttu-id="1fa80-207">Wartość <see cref="T:System.Configuration.ConfigurationElement" /> obiektu <see cref="P:System.Configuration.ConfigurationProperty.Type" /> nie <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> lub <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-207">The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object's <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> or <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearElementName">
      <MemberSignature Language="C#" Value="protected internal string ClearElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClearElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ClearElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ ClearElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClearElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.ClearElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-208">Pobiera lub ustawia nazwę <see cref="T:System.Configuration.ConfigurationElement" /> do skojarzenia z operacją wyczyść w <see cref="T:System.Configuration.ConfigurationElementCollection" /> w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-208">Gets or sets the name for the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the clear operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-209">Nazwa elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-209">The name of the element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fa80-210">Wybrana wartość zaczyna się od zastrzeżonego prefiksu "Konfiguracja" lub "Zablokuj".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-210">The selected value starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public virtual System.Configuration.ConfigurationElementCollectionType CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CollectionType As ConfigurationElementCollectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::ConfigurationElementCollectionType CollectionType { System::Configuration::ConfigurationElementCollectionType get(); };" />
      <MemberSignature Language="F#" Value="member this.CollectionType : System.Configuration.ConfigurationElementCollectionType" Usage="System.Configuration.ConfigurationElementCollection.CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementCollectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-211">Pobiera typ <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-211">Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-212">
            <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> Tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-212">The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> of this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-213">Typ będzie <xref:System.Configuration.ConfigurationElementCollectionType.BasicMap> lub <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> pola.</span><span class="sxs-lookup"><span data-stu-id="1fa80-213">The type will be either a <xref:System.Configuration.ConfigurationElementCollectionType.BasicMap> or an <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> field.</span></span> <span data-ttu-id="1fa80-214">Aby uzyskać więcej informacji, zobacz <xref:System.Configuration.ConfigurationElementCollectionType>.</span><span class="sxs-lookup"><span data-stu-id="1fa80-214">For more information, see <xref:System.Configuration.ConfigurationElementCollectionType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa80-215">Poniższy przykład kodu pokazuje, jak uzyskać <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fa80-215">The following code example shows how to get the <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#5)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Configuration.ConfigurationElement[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Configuration.ConfigurationElement[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ConfigurationElement(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Configuration::ConfigurationElement ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Configuration.ConfigurationElement[] * int -&gt; unit" Usage="configurationElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Configuration.ConfigurationElement[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="1fa80-216">Tablica, do którego skopiować zawartość <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-216">Array to which to copy the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1fa80-217">Lokalizacja indeksu, w którym chcesz rozpocząć kopiowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-217">Index location at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-218">Kopiuje zawartość <see cref="T:System.Configuration.ConfigurationElementCollection" /> do tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-218">Copies the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Configuration.ConfigurationElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-219">Pobiera liczbę elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-219">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-220">Liczba elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-220">The number of elements in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNewElement">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-221">W przypadku przesłonięcia w klasie pochodnej tworzy nowe <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-221">When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-222">Zastąp <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> metody do tworzenia niestandardowych <xref:System.Configuration.ConfigurationElement> obiektów określonego typu.</span><span class="sxs-lookup"><span data-stu-id="1fa80-222">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="1fa80-223">Podczas ładowania kolekcji z pliku konfiguracji <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> jest wywoływana w celu tworzenia pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1fa80-223">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="1fa80-224"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> musi zostać zastąpiona w klasach, które wynikają z <xref:System.Configuration.ConfigurationElementCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="1fa80-224"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected abstract System.Configuration.ConfigurationElement CreateNewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Configuration.ConfigurationElement CreateNewElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateNewElement () As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Configuration::ConfigurationElement ^ CreateNewElement();" />
      <MemberSignature Language="F#" Value="abstract member CreateNewElement : unit -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.CreateNewElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-225">W przypadku przesłonięcia w klasie pochodnej tworzy nowe <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-225">When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-226">Nowo utworzone <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-226">A newly created <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-227">Zastąp <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> metody do tworzenia niestandardowych <xref:System.Configuration.ConfigurationElement> obiektów określonego typu.</span><span class="sxs-lookup"><span data-stu-id="1fa80-227">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="1fa80-228">Podczas ładowania kolekcji z pliku konfiguracji <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> jest wywoływana w celu tworzenia pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1fa80-228">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="1fa80-229"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> musi zostać zastąpiona w klasach, które wynikają z <xref:System.Configuration.ConfigurationElementCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="1fa80-229"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa80-230">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-230">The following code example shows how to override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#6)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected virtual System.Configuration.ConfigurationElement CreateNewElement (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Configuration.ConfigurationElement CreateNewElement(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateNewElement (elementName As String) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Configuration::ConfigurationElement ^ CreateNewElement(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewElement : string -&gt; System.Configuration.ConfigurationElement&#xA;override this.CreateNewElement : string -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.CreateNewElement elementName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="1fa80-231">Nazwa <see cref="T:System.Configuration.ConfigurationElement" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-231">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-232">Tworzy nową <see cref="T:System.Configuration.ConfigurationElement" /> w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-232">Creates a new <see cref="T:System.Configuration.ConfigurationElement" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-233">Nowy <see cref="T:System.Configuration.ConfigurationElement" /> o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-233">A new <see cref="T:System.Configuration.ConfigurationElement" /> with a specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-234">Zastąp <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> metody do tworzenia niestandardowych <xref:System.Configuration.ConfigurationElement> obiektów określonego typu.</span><span class="sxs-lookup"><span data-stu-id="1fa80-234">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="1fa80-235">Podczas ładowania kolekcji z pliku konfiguracji <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> jest wywoływana w celu tworzenia pojedynczych elementów.</span><span class="sxs-lookup"><span data-stu-id="1fa80-235">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="1fa80-236"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> musi zostać zastąpiona w klasach, które wynikają z <xref:System.Configuration.ConfigurationElementCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="1fa80-236"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1fa80-237">
            <para>Jeśli tworzysz niestandardową <see cref="T:System.Configuration.ConfigurationElementCollection" /> kolekcji, która zawiera heterogeniczne <see cref="T:System.Configuration.ConfigurationElement" /> typów, należy wykonać następujące kroki:-zastąpić <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> metody.  -Upewnij się że <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> metoda zwraca ciąg, który identyfikuje typ elementu utworzonych przez wywoływanie <see cref="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" /> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-237">
              <para>If you create a custom <see cref="T:System.Configuration.ConfigurationElementCollection" /> collection that contains heterogeneous <see cref="T:System.Configuration.ConfigurationElement" /> types, you must perform these steps:  -   Override the <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> method.  -   Make sure that the <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> method returns a string that identifies the type of the element you created by calling the <see cref="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="protected virtual string ElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string" Usage="System.Configuration.ConfigurationElementCollection.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-238">Pobiera nazwę używany do identyfikowania tej kolekcji elementów w pliku konfiguracji w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-238">Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-239">Nazwa kolekcji w przeciwnym razie pusty ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-239">The name of the collection; otherwise, an empty string.</span>
          </span>
          <span data-ttu-id="1fa80-240">Wartość domyślna to ciąg pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-240">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-241">Zastąp <xref:System.Configuration.ConfigurationElementCollection.ElementName%2A> właściwość niestandardową nazwę <xref:System.Configuration.ConfigurationElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="1fa80-241">Override the <xref:System.Configuration.ConfigurationElementCollection.ElementName%2A> property to name a custom <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitClear">
      <MemberSignature Language="C#" Value="public bool EmitClear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmitClear" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
      <MemberSignature Language="VB.NET" Value="Public Property EmitClear As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EmitClear { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EmitClear : bool with get, set" Usage="System.Configuration.ConfigurationElementCollection.EmitClear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-242">Pobiera lub ustawia wartość określającą, czy kolekcja została wyczyszczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-242">Gets or sets a value that specifies whether the collection has been cleared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-243">
            <see langword="true" /> Jeśli kolekcja została wyczyszczona; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-243">
              <see langword="true" /> if the collection has been cleared; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fa80-244">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-244">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-245">Ustawienie <xref:System.Configuration.ConfigurationElementCollection.EmitClear%2A> właściwości `true` powoduje, że `<clear>` dyrektywy są zapisywane w pliku konfiguracji, gdy kolekcja jest serializowana.</span><span class="sxs-lookup"><span data-stu-id="1fa80-245">Setting the <xref:System.Configuration.ConfigurationElementCollection.EmitClear%2A> property to `true` causes a `<clear>` directive to be written to the configuration file when the collection is serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1fa80-246">Konfiguracja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-246">The configuration is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object compareTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object compareTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (compareTo As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ compareTo);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="configurationElementCollection.Equals compareTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compareTo">
          <span data-ttu-id="1fa80-247">Obiekt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-247">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-248">Porównuje <see cref="T:System.Configuration.ConfigurationElementCollection" /> do określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-248">Compares the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-249">
            <see langword="true" /> Jeśli obiekt do porównania z jest równa bieżącego <see cref="T:System.Configuration.ConfigurationElementCollection" /> wystąpienia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-249">
              <see langword="true" /> if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fa80-250">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-250">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected abstract object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member GetElementKey : System.Configuration.ConfigurationElement -&gt; obj" Usage="configurationElementCollection.GetElementKey element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="1fa80-251">
            <see cref="T:System.Configuration.ConfigurationElement" /> Zwrócić klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-251">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-252">Pobiera klucz elementu dla elementu konfiguracji w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-252">Gets the element key for a specified configuration element when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-253">
            <see cref="T:System.Object" /> Działający jako klucz dla określonego <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-253">An <see cref="T:System.Object" /> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1fa80-254">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Configuration.ConfigurationElementCollection.GetElementKey%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-254">The following code example shows how to override <xref:System.Configuration.ConfigurationElementCollection.GetElementKey%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#7)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="configurationElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-255">Pobiera <see cref="T:System.Collections.IEnumerator" /> używany do iterowania po <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-255">Gets an <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-256">
            <see cref="T:System.Collections.IEnumerator" /> Używany do iterowania po <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-256">An <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="configurationElementCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-257">Pobiera unikatowy wartość reprezentującą <see cref="T:System.Configuration.ConfigurationElementCollection" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-257">Gets a unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-258">Unikatowa wartość reprezentującą informację o <see cref="T:System.Configuration.ConfigurationElementCollection" /> bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-258">A unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementName">
      <MemberSignature Language="C#" Value="protected virtual bool IsElementName (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsElementName(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsElementName (elementName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsElementName(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member IsElementName : string -&gt; bool&#xA;override this.IsElementName : string -&gt; bool" Usage="configurationElementCollection.IsElementName elementName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="1fa80-259">Nazwa elementu, aby sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-259">The name of the element to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-260">Wskazuje, czy określony <see cref="T:System.Configuration.ConfigurationElement" /> istnieje w <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-260">Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-261">
            <see langword="true" /> Jeśli element istnieje w kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-261">
              <see langword="true" /> if the element exists in the collection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fa80-262">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-262">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-263">Zastąp <xref:System.Configuration.ConfigurationElementCollection.IsElementName%2A> metody w celu zapewnienia niestandardowe zachowanie.</span><span class="sxs-lookup"><span data-stu-id="1fa80-263">Override the <xref:System.Configuration.ConfigurationElementCollection.IsElementName%2A> method to provide custom behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementRemovable">
      <MemberSignature Language="C#" Value="protected virtual bool IsElementRemovable (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsElementRemovable(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsElementRemovable (element As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsElementRemovable(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member IsElementRemovable : System.Configuration.ConfigurationElement -&gt; bool&#xA;override this.IsElementRemovable : System.Configuration.ConfigurationElement -&gt; bool" Usage="configurationElementCollection.IsElementRemovable element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="1fa80-264">Element do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-264">The element to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-265">Wskazuje, czy określony <see cref="T:System.Configuration.ConfigurationElement" /> może zostać usunięty z <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-265">Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-266">
            <see langword="true" /> Jeśli określony <see cref="T:System.Configuration.ConfigurationElement" /> może zostać usunięty z tym <see cref="T:System.Configuration.ConfigurationElementCollection" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-266">
              <see langword="true" /> if the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from this <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fa80-267">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-267">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-268">Zapytanie <xref:System.Configuration.ConfigurationElementCollection.IsElementRemovable%2A> przed usunięciem elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-268">Query <xref:System.Configuration.ConfigurationElementCollection.IsElementRemovable%2A> before removing a collection element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberSignature Language="F#" Value="override this.IsModified : unit -&gt; bool" Usage="configurationElementCollection.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-269">Wskazuje, czy to <see cref="T:System.Configuration.ConfigurationElementCollection" /> został zmodyfikowany od czasu ostatniego został on zapisany lub załadowany w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-269">Indicates whether this <see cref="T:System.Configuration.ConfigurationElementCollection" /> has been modified since it was last saved or loaded when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-270">
            <see langword="true" /> Jeśli został zmodyfikowany dowolnego elementu zawarte; w przeciwnym razie <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-270">
              <see langword="true" /> if any contained element has been modified; otherwise, <see langword="false" /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-271">Jeśli <xref:System.Configuration.ConfigurationElement.IsModified%2A> metoda dowolnego <xref:System.Configuration.ConfigurationElement> zawartych w <xref:System.Configuration.ConfigurationElementCollection> zwraca `true`, <xref:System.Configuration.ConfigurationElementCollection.IsModified%2A> metoda całą kolekcję zwraca `true` także.</span><span class="sxs-lookup"><span data-stu-id="1fa80-271">If the <xref:System.Configuration.ConfigurationElement.IsModified%2A> method of any <xref:System.Configuration.ConfigurationElement> contained within a <xref:System.Configuration.ConfigurationElementCollection> returns `true`, the <xref:System.Configuration.ConfigurationElementCollection.IsModified%2A> method of the entire collection returns `true` as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.IsReadOnly : unit -&gt; bool" Usage="configurationElementCollection.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-272">Wskazuje, czy <see cref="T:System.Configuration.ConfigurationElementCollection" /> obiekt jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-272">Indicates whether the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-273">
            <see langword="true" /> Jeśli <see cref="T:System.Configuration.ConfigurationElementCollection" /> obiekt jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-273">
              <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-274">System definiuje elementów konfiguracji, które nie mogą być modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="1fa80-274">The system defines configuration elements that cannot be modified.</span></span> <span data-ttu-id="1fa80-275">Wywołaj tę metodę w celu określenia, czy elementy mogą być modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="1fa80-275">Call this method to determine whether elements can be modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Configuration.ConfigurationElementCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-276">Pobiera wartość wskazującą, czy dostęp do kolekcji jest zsynchronizowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-276">Gets a value indicating whether access to the collection is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-277">
            <see langword="true" /> Jeśli dostęp do <see cref="T:System.Configuration.ConfigurationElementCollection" /> jest zsynchronizowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-277">
              <see langword="true" /> if access to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> is synchronized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedElement">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedElement(string elementName, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedElement (elementName As String, reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedElement(System::String ^ elementName, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.OnDeserializeUnrecognizedElement : string * System.Xml.XmlReader -&gt; bool" Usage="configurationElementCollection.OnDeserializeUnrecognizedElement (elementName, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="1fa80-278">Nazwa nierozpoznany element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-278">The name of the unrecognized element.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="1fa80-279">Strumień wejściowy, która odczytuje XML z pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-279">An input stream that reads XML from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-280">Powoduje, że system konfiguracji zgłosić wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-280">Causes the configuration system to throw an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-281">
            <see langword="true" /> Jeśli nierozpoznany element została przeprowadzona pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-281">
              <see langword="true" /> if the unrecognized element was deserialized successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fa80-282">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-282">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-283"><xref:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement%2A> Jest wywoływana, gdy element konfiguracji nierozpoznany są odczytywane z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-283">The <xref:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement%2A> is called when an unrecognized configuration element is read from a configuration file.</span></span>  
  
 <span data-ttu-id="1fa80-284">Zastępuje tę metodę, by zapewnić niestandardową obsługę elementów nierozpoznany konfiguracji z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-284">Override this method to provide custom handling of unrecognized configuration elements from a configuration file.</span></span> <span data-ttu-id="1fa80-285">Wartość domyślna zwracają wartość, `false`, powoduje, że system konfiguracji zgłosić wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1fa80-285">The default return value, `false`, causes the configuration system to throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1fa80-286">Elementu określonego w parametrze <paramref name="elementName" /> jest <see langword="&lt;clear&gt;" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-286">The element specified in <paramref name="elementName" /> is the <see langword="&lt;clear&gt;" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fa80-287">
            <paramref name="elementName" /> rozpoczyna się od zastrzeżonego prefiksu "Konfiguracja" lub "Zablokuj".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-287">
              <paramref name="elementName" /> starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveElementName">
      <MemberSignature Language="C#" Value="protected internal string RemoveElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoveElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property RemoveElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ RemoveElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoveElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.RemoveElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-288">Pobiera lub ustawia nazwę <see cref="T:System.Configuration.ConfigurationElement" /> do skojarzenia z operacji usuwania w <see cref="T:System.Configuration.ConfigurationElementCollection" /> w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-288">Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the remove operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-289">Nazwa elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-289">The name of the element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fa80-290">Wybrana wartość zaczyna się od zastrzeżonego prefiksu "Konfiguracja" lub "Zablokuj".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-290">The selected value starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected internal override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">
          <span data-ttu-id="1fa80-291">
            <see cref="T:System.Configuration.ConfigurationElement" /> Reprezentujący element nadrzędny kolekcji, jeśli występują; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-291">The <see cref="T:System.Configuration.ConfigurationElement" /> representing the collection parent element, if any; otherwise, <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-292">Resetuje <see cref="T:System.Configuration.ConfigurationElementCollection" /> niezmodyfikowanego stan w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-292">Resets the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to its unmodified state when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-293">Domyślne zachowanie dla <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> metoda polega na wyczyścić wszystkie elementy zmodyfikowane <xref:System.Configuration.ConfigurationElementCollection> obiekt zawiera i ustawić elementy zmodyfikowane wartości określone przez ich nadrzędnego pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-293">The default behavior for the <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> method is to clear any modified elements a <xref:System.Configuration.ConfigurationElementCollection> object contains and to set the modified elements to the values specified by their parent configuration file.</span></span> <span data-ttu-id="1fa80-294">Jeśli dowolny element w <xref:System.Configuration.ConfigurationElementCollection> ma elementy podrzędne <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> nazywa się również w przypadku tych elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="1fa80-294">If any element in the <xref:System.Configuration.ConfigurationElementCollection> has child elements, <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> is also called on those child elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberSignature Language="F#" Value="override this.ResetModified : unit -&gt; unit" Usage="configurationElementCollection.ResetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-295">Wartość <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> właściwości <see langword="false" /> w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-295">Resets the value of the <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> property to <see langword="false" /> when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-296"><xref:System.Configuration.ConfigurationElementCollection.ResetModified%2A> Metoda określa, czy elementy tej kolekcji będą zapisywane do pliku konfiguracji po zaktualizowaniu konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-296">The <xref:System.Configuration.ConfigurationElementCollection.ResetModified%2A> method determines whether the elements of this collection will be written to the configuration file when the configuration is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeElement">
      <MemberSignature Language="C#" Value="protected internal override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool SerializeElement(class System.Xml.XmlWriter writer, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SerializeElement (writer As XmlWriter, serializeCollectionKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool SerializeElement(System::Xml::XmlWriter ^ writer, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="override this.SerializeElement : System.Xml.XmlWriter * bool -&gt; bool" Usage="configurationElementCollection.SerializeElement (writer, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="1fa80-297">Strumień wyjściowy, który zapisuje XML do pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-297">Output stream that writes XML to the configuration file.</span>
          </span>
        </param>
        <param name="serializeCollectionKey">
          <span data-ttu-id="1fa80-298">
            <see langword="true" /> do serializacji z określonym kluczem z kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-298">
              <see langword="true" /> to serialize the collection key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-299">Zapisuje dane konfiguracji do elementu XML w pliku konfiguracji w przypadku przesłonięcia w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-299">Writes the configuration data to an XML element in the configuration file when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fa80-300">
            <see langword="true" /> Jeśli <see cref="T:System.Configuration.ConfigurationElementCollection" /> zostało pomyślnie zapisane do pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-300">
              <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> was written to the configuration file successfully.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-301"><xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> Metoda zapisuje zawartość elementów konfiguracji znajdujących się w kolekcji i wszelkie zagnieżdżone elementy zawierają do pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-301">The <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> method writes the contents of the configuration elements contained in the collection and any nested elements they contain to the configuration file.</span></span> <span data-ttu-id="1fa80-302">Zastąp <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> zapewnienie niestandardowego napisać procedury z kolekcji, zawartość i elementy zagnieżdżone.</span><span class="sxs-lookup"><span data-stu-id="1fa80-302">Override <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> to provide a custom write procedure out of the collection contents and nested elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fa80-303">Jeden z elementów w kolekcji zostały dodane lub zastąpione i rozpoczyna się od zastrzeżonego prefiksu "Konfiguracja" lub "Zablokuj".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-303">One of the elements in the collection was added or replaced and starts with the reserved prefix "config" or "lock".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected internal override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="configurationElementCollection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-304">Zestawy <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> właściwość <see cref="T:System.Configuration.ConfigurationElementCollection" /> obiektu i dla wszystkich elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-304">Sets the <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> property for the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object and for all sub-elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-305">Ta metoda jest używana wewnętrznie w celu zrezygnować z tych elementów konfiguracji systemu, które nie mogą być modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="1fa80-305">This method is used internally to set aside those system configuration elements that cannot be modified.</span></span> <span data-ttu-id="1fa80-306">Aby określić, które elementy są modyfikowane przez, należy wywołać <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-306">To determine which elements are modifiable, call the <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Configuration.ConfigurationElementCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-307">Pobiera obiekt używany do synchronizowania dostępu do <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-307">Gets an object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-308">Obiekt używany do synchronizowania dostępu do <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-308">An object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (arr As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ arr, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="1fa80-309">Tablica, do którego należy kopiować to <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-309">Array to which to copy this <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1fa80-310">Lokalizacja indeksu, w którym chcesz rozpocząć kopiowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-310">Index location at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-311">Kopiuje <see cref="T:System.Configuration.ConfigurationElementCollection" /> do tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-311">Copies the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected virtual bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ThrowOnDuplicate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ThrowOnDuplicate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ThrowOnDuplicate : bool" Usage="System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fa80-312">Pobiera wartość wskazującą, czy próba dodania duplikat <see cref="T:System.Configuration.ConfigurationElement" /> do <see cref="T:System.Configuration.ConfigurationElementCollection" /> spowoduje zgłoszenie wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-312">Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fa80-313">
            <see langword="true" /> Jeśli próba dodania duplikat <see cref="T:System.Configuration.ConfigurationElement" /> tej <see cref="T:System.Configuration.ConfigurationElementCollection" /> spowoduje, że wyjątek jest wyrzucony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-313">
              <see langword="true" /> if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to this <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-314">Po dodaniu zduplikowany element, jest zgłaszany wyjątek, jeśli <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> wartość elementu jest albo <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> lub <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate>.</span><span class="sxs-lookup"><span data-stu-id="1fa80-314">When you add a duplicate element, an exception is thrown if the <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> value of the element is either <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> or <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate>.</span></span>  
  
 <span data-ttu-id="1fa80-315">Pamiętaj, że elementy z identycznymi kluczami i wartościami nie są traktowane jako duplikaty są akceptowane w trybie dyskretnym.</span><span class="sxs-lookup"><span data-stu-id="1fa80-315">Note that elements with identical keys and values are not considered duplicates, and are accepted silently.</span></span> <span data-ttu-id="1fa80-316">Tylko elementy z identycznymi kluczami, ale inne wartości są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="1fa80-316">Only elements with identical keys but different values are considered duplicates.</span></span> <span data-ttu-id="1fa80-317">Aby uzyskać więcej informacji, zobacz sekcję Spostrzeżenia, aby <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1fa80-317">For more information, see the Remarks section for the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unmerge">
      <MemberSignature Language="C#" Value="protected internal override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, saveMode As ConfigurationSaveMode)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode saveMode);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="protected internal override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode updateMode) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, updateMode As ConfigurationSaveMode)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Unmerge : System.Configuration.ConfigurationElement * System.Configuration.ConfigurationElement * System.Configuration.ConfigurationSaveMode -&gt; unit" Usage="configurationElementCollection.Unmerge (sourceElement, parentElement, updateMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceElement" Type="System.Configuration.ConfigurationElement" Index="0" />
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" Index="1" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
        <Parameter Name="updateMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceElement">
          <span data-ttu-id="1fa80-318">Element <see cref="T:System.Configuration.ConfigurationElement" /> obiektu na bieżącym poziomie zawierający widok scalony właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-318">A <see cref="T:System.Configuration.ConfigurationElement" /> object at the current level containing a merged view of the properties.</span>
          </span>
        </param>
        <param name="parentElement">
          <span data-ttu-id="1fa80-319">Element nadrzędny <see cref="T:System.Configuration.ConfigurationElement" /> obiektu bieżącego elementu lub <see langword="null" /> Jeśli jest to najwyższego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-319">The parent <see cref="T:System.Configuration.ConfigurationElement" /> object of the current element, or <see langword="null" /> if this is the top level.</span>
          </span>
        </param>
        <param name="saveMode">
          <span data-ttu-id="1fa80-320">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> wyliczyć wartość, która określa, które właściwości wartości do uwzględnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-320">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> enumerated value that determines which property values to include.</span>
          </span>
        </param>
        <param name="updateMode">
          <span data-ttu-id="1fa80-321">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> wyliczyć wartość, która określa, które właściwości wartości do uwzględnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-321">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> enumerated value that determines which property values to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fa80-322">Cofa efekt scalanie informacje o konfiguracji z różnych poziomów hierarchii konfiguracji</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fa80-322">Reverses the effect of merging configuration information from different levels of the configuration hierarchy</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa80-323"><xref:System.Configuration.ConfigurationElementCollection.Unmerge%2A> Metoda cofa efekt scalanie informacje o konfiguracji z różnych poziomów hierarchii konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-323">The <xref:System.Configuration.ConfigurationElementCollection.Unmerge%2A> method reverses the effect of merging configuration information from different levels of the configuration hierarchy.</span></span> <span data-ttu-id="1fa80-324">Dzięki temu zestaw konfiguracji na bieżącym poziomie hierarchii, aby być zróżnicowane z tego zbioru na poziomach nadrzędnego, przed serializacji.</span><span class="sxs-lookup"><span data-stu-id="1fa80-324">This allows configuration set at the current hierarchy level to be differentiated from that set at parent levels, before serialization.</span></span>  
  
 <span data-ttu-id="1fa80-325"><xref:System.Configuration.ConfigurationElementCollection.Unmerge%2A> jest wywoływana przez system na nowy element tymczasowy do porównania z obiektem nadrzędnym i obiektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="1fa80-325"><xref:System.Configuration.ConfigurationElementCollection.Unmerge%2A> is called by the system on a new temporary element to compare the parent object and the source object.</span></span> <span data-ttu-id="1fa80-326">Na podstawie <xref:System.Configuration.ConfigurationSaveMode> wartości, następnie ustawia tymczasowy obiekt danych, który musi być serializowana.</span><span class="sxs-lookup"><span data-stu-id="1fa80-326">Based on the <xref:System.Configuration.ConfigurationSaveMode> value, it then sets the temporary object to contain the data that needs to be serialized.</span></span> <span data-ttu-id="1fa80-327">Szczegółowe informacje na temat zapisywania trybów, zobacz <xref:System.Configuration.ConfigurationSaveMode.Minimal>.</span><span class="sxs-lookup"><span data-stu-id="1fa80-327">For details about save modes, see <xref:System.Configuration.ConfigurationSaveMode.Minimal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>