<Type Name="ConfigurationElementCollection" FullName="System.Configuration.ConfigurationElementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29dc1285edb5b63574332db8ed2c1eecb0e0bcc5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129842" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConfigurationElementCollection : System.Configuration.ConfigurationElement, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationElementCollection extends System.Configuration.ConfigurationElement implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationElementCollection&#xA;Inherits ConfigurationElement&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationElementCollection abstract : System::Configuration::ConfigurationElement, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ConfigurationElementCollection = class&#xA;    inherit ConfigurationElement&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="91a12-101">Reprezentuje element konfiguracji zawierający kolekcję elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="91a12-101">Represents a configuration element containing a collection of child elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-102"><xref:System.Configuration.ConfigurationElementCollection> Reprezentuje kolekcję elementów w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-102">The <xref:System.Configuration.ConfigurationElementCollection> represents a collection of elements within a configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91a12-103">Element w pliku konfiguracji odwołuje się do podstawowego elementu XML lub sekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-103">An element within a configuration file refers to a basic XML element or a section.</span></span> <span data-ttu-id="91a12-104">Prosty element jest tagiem XML z powiązanymi atrybutami, jeśli istnieją.</span><span class="sxs-lookup"><span data-stu-id="91a12-104">A simple element is an XML tag with related attributes, if any.</span></span> <span data-ttu-id="91a12-105">Prosty element stanowi sekcję.</span><span class="sxs-lookup"><span data-stu-id="91a12-105">A simple element constitutes a section.</span></span> <span data-ttu-id="91a12-106">Złożone sekcje mogą zawierać co najmniej jeden prosty element, kolekcję elementów i inne sekcje.</span><span class="sxs-lookup"><span data-stu-id="91a12-106">Complex sections can contain one or more simple elements, a collection of elements, and other sections.</span></span>  
  
 <span data-ttu-id="91a12-107">Używasz do pracy z kolekcją <xref:System.Configuration.ConfigurationElement>obiektów. <xref:System.Configuration.ConfigurationElementCollection></span><span class="sxs-lookup"><span data-stu-id="91a12-107">You use the <xref:System.Configuration.ConfigurationElementCollection> to work with a collection of <xref:System.Configuration.ConfigurationElement> objects.</span></span> <span data-ttu-id="91a12-108">Zaimplementuj tę klasę, aby dodać kolekcje <xref:System.Configuration.ConfigurationElement> elementów niestandardowych <xref:System.Configuration.ConfigurationSection>do.</span><span class="sxs-lookup"><span data-stu-id="91a12-108">Implement this class to add collections of custom <xref:System.Configuration.ConfigurationElement> elements to a <xref:System.Configuration.ConfigurationSection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91a12-109">Poniższy przykład pokazuje, <xref:System.Configuration.ConfigurationElementCollection>jak używać.</span><span class="sxs-lookup"><span data-stu-id="91a12-109">The following example shows how to use the <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 <span data-ttu-id="91a12-110">Pierwszy przykład składa się z trzech klas `UrlsSection`: `UrlsCollection` , `UrlConfigElement`i. `UrlsSection` Klasa<xref:System.Configuration.ConfigurationCollectionAttribute> używa do definiowania niestandardowej sekcji konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-110">The first example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the <xref:System.Configuration.ConfigurationCollectionAttribute> to define a custom configuration section.</span></span> <span data-ttu-id="91a12-111">Ta sekcja zawiera kolekcję adresów URL (zdefiniowaną przez `UrlsCollection` klasę) elementów adresu URL (zdefiniowanych `UrlConfigElement` przez klasę).</span><span class="sxs-lookup"><span data-stu-id="91a12-111">This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class).</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#1)]  
  
 <span data-ttu-id="91a12-112">Ten drugi przykład kodu używa klas określonych przed.</span><span class="sxs-lookup"><span data-stu-id="91a12-112">This second code example uses the classes specified before.</span></span> <span data-ttu-id="91a12-113">Te dwa przykłady są łączone w projekcie aplikacji konsolowej.</span><span class="sxs-lookup"><span data-stu-id="91a12-113">You combine these two examples in a console application project.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/usingconfigurationcollectionelement.cs#31)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/usingconfigurationcollectionelement.vb#31)]  
  
 <span data-ttu-id="91a12-114">Po uruchomieniu aplikacji konsolowej jest tworzone wystąpienie `UrlsSection` klasy, a w pliku konfiguracyjnym aplikacji są generowane następujące elementy konfiguracji:</span><span class="sxs-lookup"><span data-stu-id="91a12-114">When you run the console application, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:</span></span>  
  
```xml  
<configuration>  
    <configSections>  
        <section name="MyUrls" type="UrlsSection,   
          ConfigurationElementCollection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />  
    </configSections>  
    <MyUrls>  
        <urls>  
           <add name="Contoso" url="http://www.contoso.com" port="4040 />  
        </urls>  
    </MyUrls>  
</configuration  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="91a12-115">Aby utworzyć niestandardowy element konfiguracji, można użyć programistycznego lub deklaracyjnego modelu kodowania.</span><span class="sxs-lookup"><span data-stu-id="91a12-115">You can use a programmatic or a declarative (attributed) coding model to create a custom configuration element.</span></span>  
  
<span data-ttu-id="91a12-116">Model programistyczny wymaga, aby dla każdego atrybutu elementu utworzyć właściwość, aby pobrać i ustawić jej wartość oraz dodać do wewnętrznego zbioru <see cref="T:System.Configuration.ConfigurationElement" /> właściwości bazowej klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="91a12-116">The programmatic model requires that for each element attribute you create a property to get and set its value, and that you add it to the internal property bag of the underlying <see cref="T:System.Configuration.ConfigurationElement" /> base class.</span></span>  
  
<span data-ttu-id="91a12-117">Model deklaratywny, nazywany również modelem atrybutu, umożliwia zdefiniowanie atrybutu elementu przy użyciu właściwości i skonfigurowanie jej z atrybutami.</span><span class="sxs-lookup"><span data-stu-id="91a12-117">The declarative model, also referred to as the attributed model, allows you to define an element attribute by using a property and configuring it with attributes.</span></span> <span data-ttu-id="91a12-118">Te atrybuty instruują system konfiguracji ASP.NET o typach właściwości i ich wartościach domyślnych.</span><span class="sxs-lookup"><span data-stu-id="91a12-118">These attributes instruct the ASP.NET configuration system about the property types and their default values.</span></span> <span data-ttu-id="91a12-119">ASP.NET może użyć odbicia, aby uzyskać te informacje, a następnie utworzyć obiekty właściwości elementu i wykonać wymaganą inicjalizację.</span><span class="sxs-lookup"><span data-stu-id="91a12-119">ASP.NET can use reflection to obtain this information and then create the element property objects and perform the required initialization.</span></span></para></block>
    <altmember cref="T:System.Configuration.ElementInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
    <altmember cref="T:System.Configuration.ConfigurationElementCollectionType" />
    <altmember cref="T:System.Configuration.ConfigurationProperty" />
    <altmember cref="T:System.Configuration.ConfigurationPropertyCollection" />
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91a12-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationElementCollection" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="91a12-120">Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.ConfigurationElementCollection" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="91a12-121">Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-122">Tworzysz nowe wystąpienie, <xref:System.Configuration.ConfigurationElementCollection> gdy aplikacja musi utworzyć niestandardowe. <xref:System.Configuration.ConfigurationElementCollection></span><span class="sxs-lookup"><span data-stu-id="91a12-122">You create a new instance of the <xref:System.Configuration.ConfigurationElementCollection> when your application needs to create a custom <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElementCollection (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElementCollection(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ConfigurationElementCollection : System.Collections.IComparer -&gt; System.Configuration.ConfigurationElementCollection" Usage="new System.Configuration.ConfigurationElementCollection comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="91a12-123">Moduł <see cref="T:System.Collections.IComparer" /> porównujący do użycia.</span><span class="sxs-lookup"><span data-stu-id="91a12-123">The <see cref="T:System.Collections.IComparer" /> comparer to use.</span></span></param>
        <summary><span data-ttu-id="91a12-124">Tworzy nowe wystąpienie <see cref="T:System.Configuration.ConfigurationElementCollection" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="91a12-124">Creates a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-125"><xref:System.Collections.IComparer> Służy do ustawienia modułu porównującego, który ma być używany.</span><span class="sxs-lookup"><span data-stu-id="91a12-125">The <xref:System.Collections.IComparer> is used to set a comparer to use.</span></span> <span data-ttu-id="91a12-126">Można na przykład użyć modułu porównującego bez uwzględniania wielkości liter, aby zwiększyć wielkość liter w kluczu.</span><span class="sxs-lookup"><span data-stu-id="91a12-126">For example, you can use a case-insensitive comparer to make the key case insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91a12-127"><paramref name="comparer" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-127"><paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddElementName">
      <MemberSignature Language="C#" Value="protected internal string AddElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property AddElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ AddElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.AddElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-128">Pobiera lub ustawia nazwę, <see cref="T:System.Configuration.ConfigurationElement" /> która ma zostać skojarzona z operacją dodawania <see cref="T:System.Configuration.ConfigurationElementCollection" /> w przypadku zastąpienia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-128">Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the add operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="91a12-129">Nazwa elementu.</span><span class="sxs-lookup"><span data-stu-id="91a12-129">The name of the element.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91a12-130">Wybrana wartość zaczyna się od zastrzeżonego prefiksu "config" lub "Lock".</span><span class="sxs-lookup"><span data-stu-id="91a12-130">The selected value starts with the reserved prefix "config" or "lock".</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91a12-131"><see cref="T:System.Configuration.ConfigurationElement" /> Dodaje<see cref="T:System.Configuration.ConfigurationElementCollection" /> do wystąpienia, gdy jest zastępowany w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-131">Adds a <see cref="T:System.Configuration.ConfigurationElement" /> to an <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-132">Użyj metody, aby dodać nową <xref:System.Configuration.ConfigurationElement> do kolekcji. <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A></span><span class="sxs-lookup"><span data-stu-id="91a12-132">Use the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method to add a new <xref:System.Configuration.ConfigurationElement> to the collection.</span></span> <span data-ttu-id="91a12-133">Przesłoń w klasie pochodnej, jeśli jest wymagane zachowanie niestandardowe podczas dodawania elementu.</span><span class="sxs-lookup"><span data-stu-id="91a12-133">Override in a derived class if custom behavior is required when the element is added.</span></span>  
  
 <span data-ttu-id="91a12-134">Podczas dodawania element jest traktowany jako duplikat tylko wtedy, gdy klucze są identyczne, ale wartości są różne.</span><span class="sxs-lookup"><span data-stu-id="91a12-134">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="91a12-135">Elementy z identycznymi kluczami i wartościami są akceptowane w trybie dyskretnym, ponieważ elementy nie konkurują.</span><span class="sxs-lookup"><span data-stu-id="91a12-135">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="91a12-136">Jednak elementu z identycznym kluczem, ale inną wartością nie można dodać, ponieważ nie ma logiki do ustalenia, które z wartości konkurujących powinny być honorowane.</span><span class="sxs-lookup"><span data-stu-id="91a12-136">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected virtual void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BaseAdd (element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BaseAdd(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member BaseAdd : System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.BaseAdd : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.BaseAdd element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="91a12-137"><see cref="T:System.Configuration.ConfigurationElement" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="91a12-137">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span></span></param>
        <summary><span data-ttu-id="91a12-138">Dodaje element konfiguracji do <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-138">Adds a configuration element to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-139">Użyj metody, aby dodać nową <xref:System.Configuration.ConfigurationElement> do kolekcji. <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A></span><span class="sxs-lookup"><span data-stu-id="91a12-139">Use the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method to add a new <xref:System.Configuration.ConfigurationElement> to the collection.</span></span> <span data-ttu-id="91a12-140">Przesłoń ją w klasie pochodnej, jeśli jest wymagane zachowanie niestandardowe podczas dodawania elementu.</span><span class="sxs-lookup"><span data-stu-id="91a12-140">Override it in a derived class if custom behavior is required when the element is added.</span></span>  
  
 <span data-ttu-id="91a12-141">Podczas dodawania element jest traktowany jako duplikat tylko wtedy, gdy klucze są identyczne, ale wartości są różne.</span><span class="sxs-lookup"><span data-stu-id="91a12-141">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="91a12-142">Elementy z identycznymi kluczami i wartościami są akceptowane w trybie dyskretnym, ponieważ elementy nie konkurują.</span><span class="sxs-lookup"><span data-stu-id="91a12-142">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="91a12-143">Jednak elementu z identycznym kluczem, ale inną wartością nie można dodać, ponieważ nie ma logiki do ustalenia, które z wartości konkurujących powinny być honorowane.</span><span class="sxs-lookup"><span data-stu-id="91a12-143">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91a12-144">Poniższy przykład kodu pokazuje, <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> jak zastąpić metodę i jak wywołać ją `Add` z metody.</span><span class="sxs-lookup"><span data-stu-id="91a12-144">The following code example shows how to override the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method and how to call it from an `Add` method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected void BaseAdd (System.Configuration.ConfigurationElement element, bool throwIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseAdd(class System.Configuration.ConfigurationElement element, bool throwIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseAdd (element As ConfigurationElement, throwIfExists As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseAdd(System::Configuration::ConfigurationElement ^ element, bool throwIfExists);" />
      <MemberSignature Language="F#" Value="member this.BaseAdd : System.Configuration.ConfigurationElement * bool -&gt; unit" Usage="configurationElementCollection.BaseAdd (element, throwIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="throwIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="91a12-145"><see cref="T:System.Configuration.ConfigurationElement" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="91a12-145">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span></span></param>
        <param name="throwIfExists"><span data-ttu-id="91a12-146"><see langword="true" />Aby zgłosić wyjątek, jeśli <see cref="T:System.Configuration.ConfigurationElement" /> określony element jest już zawarty <see cref="T:System.Configuration.ConfigurationElementCollection" />w; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="91a12-146"><see langword="true" /> to throw an exception if the <see cref="T:System.Configuration.ConfigurationElement" /> specified is already contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="91a12-147">Dodaje element konfiguracji do kolekcji elementów konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-147">Adds a configuration element to the configuration element collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-148">Użyj opcjonalnego parametru `throwIfExists` , aby <xref:System.Exception> zgłosić wyjątek, jeśli określony <xref:System.Configuration.ConfigurationElement> obiekt już istnieje w <xref:System.Configuration.ConfigurationElementCollection> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-148">Use the optional parameter `throwIfExists` to throw an <xref:System.Exception> exception if the specified <xref:System.Configuration.ConfigurationElement> object already exists in the <xref:System.Configuration.ConfigurationElementCollection> collection.</span></span>  
  
 <span data-ttu-id="91a12-149">Element jest traktowany jako duplikat tylko wtedy, gdy klucze są identyczne, ale wartości są różne.</span><span class="sxs-lookup"><span data-stu-id="91a12-149">An element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="91a12-150">Elementy z identycznymi kluczami i wartościami są akceptowane w trybie dyskretnym, ponieważ elementy nie konkurują.</span><span class="sxs-lookup"><span data-stu-id="91a12-150">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="91a12-151">Jednak elementu z identycznym kluczem, ale inną wartością nie można dodać, ponieważ nie ma logiki do ustalenia, które z wartości konkurujących powinny być honorowane.</span><span class="sxs-lookup"><span data-stu-id="91a12-151">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="91a12-152">Do dodania istnieje już <see cref="T:System.Configuration.ConfigurationElementCollection" /> w i <paramref name="throwIfExists" /> parametr jest <see langword="true" />. <see cref="T:System.Configuration.ConfigurationElement" /></span><span class="sxs-lookup"><span data-stu-id="91a12-152">The <see cref="T:System.Configuration.ConfigurationElement" /> to add already exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> and the <paramref name="throwIfExists" /> parameter is <see langword="true" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected virtual void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BaseAdd (index As Integer, element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BaseAdd(int index, System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member BaseAdd : int * System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.BaseAdd : int * System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.BaseAdd (index, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91a12-153">Lokalizacja indeksu, w której ma zostać dodany określony <see cref="T:System.Configuration.ConfigurationElement" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-153">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span></span></param>
        <param name="element"><span data-ttu-id="91a12-154"><see cref="T:System.Configuration.ConfigurationElement" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="91a12-154">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span></span></param>
        <summary><span data-ttu-id="91a12-155">Dodaje element konfiguracji do kolekcji elementów konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-155">Adds a configuration element to the configuration element collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-156">Użyj parametru `index` , aby <xref:System.Configuration.ConfigurationElement> dodać obiekt do <xref:System.Configuration.ConfigurationElementCollection> obiektu w określonej lokalizacji indeksu.</span><span class="sxs-lookup"><span data-stu-id="91a12-156">Use the `index` parameter to add the <xref:System.Configuration.ConfigurationElement> object to the <xref:System.Configuration.ConfigurationElementCollection> at a specific index location.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseClear">
      <MemberSignature Language="C#" Value="protected internal void BaseClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseClear();" />
      <MemberSignature Language="F#" Value="member this.BaseClear : unit -&gt; unit" Usage="configurationElementCollection.BaseClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-157">Usuwa wszystkie obiekty elementów konfiguracji z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-157">Removes all configuration element objects from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-158">Gdy metoda jest wywoływana, usuwa wszystkie <xref:System.Configuration.ConfigurationElement> obiekty z kolekcji. <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A></span><span class="sxs-lookup"><span data-stu-id="91a12-158">When the <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> method is called, it removes all <xref:System.Configuration.ConfigurationElement> objects from the collection.</span></span> <span data-ttu-id="91a12-159">Dodaje `clear` także dyrektywę do pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-159">It also inserts a `clear` directive into the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91a12-160">Poniższy przykład kodu pokazuje, <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> jak wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-160">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="91a12-161">Konfiguracja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="91a12-161">The configuration is read-only.</span></span>  
  
<span data-ttu-id="91a12-162">—lub—</span><span class="sxs-lookup"><span data-stu-id="91a12-162">-or-</span></span>
  
 <span data-ttu-id="91a12-163">Element kolekcji został zablokowany w konfiguracji wyższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="91a12-163">A collection item has been locked in a higher-level configuration.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseGet">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91a12-164"><see cref="T:System.Configuration.ConfigurationElement" /> Pobiera o określonej lokalizacji indeksu.</span><span class="sxs-lookup"><span data-stu-id="91a12-164">Gets the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected internal System.Configuration.ConfigurationElement BaseGet (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Configuration.ConfigurationElement BaseGet(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGet (index As Integer) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Configuration::ConfigurationElement ^ BaseGet(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : int -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.BaseGet index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91a12-165">Lokalizacja <see cref="T:System.Configuration.ConfigurationElement" /> indeksu do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="91a12-165">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to return.</span></span></param>
        <summary><span data-ttu-id="91a12-166">Pobiera element konfiguracji w określonej lokalizacji indeksu.</span><span class="sxs-lookup"><span data-stu-id="91a12-166">Gets the configuration element at the specified index location.</span></span></summary>
        <returns><span data-ttu-id="91a12-167"><see cref="T:System.Configuration.ConfigurationElement" /> O określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="91a12-167">The <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91a12-168">Poniższy przykład kodu pokazuje, <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> jak wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-168">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#8)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="91a12-169"><paramref name="index" />jest mniejsze niż <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-169"><paramref name="index" /> is less than <see langword="0" />.</span></span>  
  
<span data-ttu-id="91a12-170">—lub—</span><span class="sxs-lookup"><span data-stu-id="91a12-170">-or-</span></span> 
<span data-ttu-id="91a12-171">Nie <see cref="T:System.Configuration.ConfigurationElement" /> ma określonego <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-171">There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected internal System.Configuration.ConfigurationElement BaseGet (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Configuration.ConfigurationElement BaseGet(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGet (key As Object) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Configuration::ConfigurationElement ^ BaseGet(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : obj -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.BaseGet key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="91a12-172">Klucz elementu do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="91a12-172">The key of the element to return.</span></span></param>
        <summary><span data-ttu-id="91a12-173">Zwraca element konfiguracji z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="91a12-173">Returns the configuration element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="91a12-174">Z określonym kluczem; w przeciwnym razie, <see langword="null" />. <see cref="T:System.Configuration.ConfigurationElement" /></span><span class="sxs-lookup"><span data-stu-id="91a12-174">The <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-175">Metoda <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> zwraca `null` , jeśli w kolekcji nie <xref:System.Configuration.ConfigurationElement> ma obiektu o określonym kluczu.</span><span class="sxs-lookup"><span data-stu-id="91a12-175">The <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method returns `null` if there is no <xref:System.Configuration.ConfigurationElement> object with the specified key in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91a12-176">Poniższy przykład kodu pokazuje, <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> jak wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-176">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#9)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetAllKeys">
      <MemberSignature Language="C#" Value="protected internal object[] BaseGetAllKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance object[] BaseGetAllKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGetAllKeys () As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Object ^&gt; ^ BaseGetAllKeys();" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllKeys : unit -&gt; obj[]" Usage="configurationElementCollection.BaseGetAllKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-177">Zwraca tablicę kluczy dla wszystkich elementów konfiguracji zawartych w <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-177">Returns an array of the keys for all of the configuration elements contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></summary>
        <returns><span data-ttu-id="91a12-178">Tablica zawierająca klucze dla wszystkich <see cref="T:System.Configuration.ConfigurationElement" /> obiektów zawartych <see cref="T:System.Configuration.ConfigurationElementCollection" />w.</span><span class="sxs-lookup"><span data-stu-id="91a12-178">An array that contains the keys for all of the <see cref="T:System.Configuration.ConfigurationElement" /> objects contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetKey">
      <MemberSignature Language="C#" Value="protected internal object BaseGetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance object BaseGetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Object ^ BaseGetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetKey : int -&gt; obj" Usage="configurationElementCollection.BaseGetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91a12-179">Lokalizacja <see cref="T:System.Configuration.ConfigurationElement" />indeksu.</span><span class="sxs-lookup"><span data-stu-id="91a12-179">The index location for the <see cref="T:System.Configuration.ConfigurationElement" />.</span></span></param>
        <summary><span data-ttu-id="91a12-180">Pobiera klucz dla <see cref="T:System.Configuration.ConfigurationElement" /> określonej lokalizacji indeksu.</span><span class="sxs-lookup"><span data-stu-id="91a12-180">Gets the key for the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span></span></summary>
        <returns><span data-ttu-id="91a12-181">Klucz dla określonego <see cref="T:System.Configuration.ConfigurationElement" />elementu.</span><span class="sxs-lookup"><span data-stu-id="91a12-181">The key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="91a12-182"><paramref name="index" />jest mniejsze niż <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-182"><paramref name="index" /> is less than <see langword="0" />.</span></span>  
  
<span data-ttu-id="91a12-183">—lub—</span><span class="sxs-lookup"><span data-stu-id="91a12-183">-or-</span></span> 
<span data-ttu-id="91a12-184">Nie <see cref="T:System.Configuration.ConfigurationElement" /> ma określonego <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-184">There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseIndexOf">
      <MemberSignature Language="C#" Value="protected int BaseIndexOf (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 BaseIndexOf(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseIndexOf (element As ConfigurationElement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int BaseIndexOf(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.BaseIndexOf : System.Configuration.ConfigurationElement -&gt; int" Usage="configurationElementCollection.BaseIndexOf element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="91a12-185"><see cref="T:System.Configuration.ConfigurationElement" /> Dla określonej lokalizacji indeksu.</span><span class="sxs-lookup"><span data-stu-id="91a12-185">The <see cref="T:System.Configuration.ConfigurationElement" /> for the specified index location.</span></span></param>
        <summary><span data-ttu-id="91a12-186">Wskazuje indeks określonego <see cref="T:System.Configuration.ConfigurationElement" />elementu.</span><span class="sxs-lookup"><span data-stu-id="91a12-186">Indicates the index of the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span></span></summary>
        <returns><span data-ttu-id="91a12-187">Indeks określonego <see cref="T:System.Configuration.ConfigurationElement" />; w przeciwnym razie,-1.</span><span class="sxs-lookup"><span data-stu-id="91a12-187">The index of the specified <see cref="T:System.Configuration.ConfigurationElement" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91a12-188">Poniższy przykład kodu pokazuje, <xref:System.Configuration.ConfigurationElementCollection.BaseIndexOf%2A> jak wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-188">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseIndexOf%2A> method.</span></span>  
  
 [!code-vb[System.Configuration.ConfigurationElementCollection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseIsRemoved">
      <MemberSignature Language="C#" Value="protected internal bool BaseIsRemoved (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool BaseIsRemoved(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseIsRemoved (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; bool BaseIsRemoved(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseIsRemoved : obj -&gt; bool" Usage="configurationElementCollection.BaseIsRemoved key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="91a12-189">Klucz elementu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="91a12-189">The key of the element to check.</span></span></param>
        <summary><span data-ttu-id="91a12-190">Wskazuje, czy <see cref="T:System.Configuration.ConfigurationElement" /> z określonym kluczem został usunięty <see cref="T:System.Configuration.ConfigurationElementCollection" />z.</span><span class="sxs-lookup"><span data-stu-id="91a12-190">Indicates whether the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></summary>
        <returns><span data-ttu-id="91a12-191"><see langword="true" />Jeśli z określonym kluczem został usunięty; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Configuration.ConfigurationElement" /></span><span class="sxs-lookup"><span data-stu-id="91a12-191"><see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="91a12-192">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-192">The default is <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseRemove">
      <MemberSignature Language="C#" Value="protected internal void BaseRemove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseRemove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseRemove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseRemove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseRemove : obj -&gt; unit" Usage="configurationElementCollection.BaseRemove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="91a12-193">Klucz <see cref="T:System.Configuration.ConfigurationElement" /> do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="91a12-193">The key of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove.</span></span></param>
        <summary><span data-ttu-id="91a12-194"><see cref="T:System.Configuration.ConfigurationElement" /> Usuwa z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-194">Removes a <see cref="T:System.Configuration.ConfigurationElement" /> from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-195">Metoda wstawia do pliku<xref:System.Configuration.ConfigurationElement> konfiguracji dyrektywęzokreślonymkluczem.`<remove>` <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A></span><span class="sxs-lookup"><span data-stu-id="91a12-195">The <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> method inserts a `<remove>` directive into the configuration file for the <xref:System.Configuration.ConfigurationElement> with the specified key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91a12-196">Poniższy przykład kodu pokazuje, <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> jak wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-196">The following code example shows how to call the <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="91a12-197">Nie <see cref="T:System.Configuration.ConfigurationElement" /> istnieje określony klucz w kolekcji, element został już usunięty lub nie można usunąć elementu, ponieważ jego <see cref="P:System.Configuration.ConfigurationProperty.Type" /> wartość nie <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />jest.</span><span class="sxs-lookup"><span data-stu-id="91a12-197">No <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseRemoveAt">
      <MemberSignature Language="C#" Value="protected internal void BaseRemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseRemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseRemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseRemoveAt : int -&gt; unit" Usage="configurationElementCollection.BaseRemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91a12-198">Lokalizacja <see cref="T:System.Configuration.ConfigurationElement" /> indeksu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="91a12-198">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove.</span></span></param>
        <summary><span data-ttu-id="91a12-199">Usuwa z <see cref="T:System.Configuration.ConfigurationElement" /> określonej lokalizacji indeksu.</span><span class="sxs-lookup"><span data-stu-id="91a12-199">Removes the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-200">Metodawstawiadoplikukonfiguracjidyrektywędlaelementuwokreślonejlokalizacjiindeksu.<xref:System.Configuration.ConfigurationElementCollection.BaseRemoveAt%2A> `<remove>`</span><span class="sxs-lookup"><span data-stu-id="91a12-200">The <xref:System.Configuration.ConfigurationElementCollection.BaseRemoveAt%2A> method inserts a `<remove>` directive into the configuration file for the element at the specified index location.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="91a12-201">Konfiguracja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="91a12-201">The configuration is read-only.</span></span>  
  
<span data-ttu-id="91a12-202">—lub—</span><span class="sxs-lookup"><span data-stu-id="91a12-202">-or-</span></span> 
 <span data-ttu-id="91a12-203"><paramref name="index" />jest mniejsza <see langword="0" /> lub równa <see cref="T:System.Configuration.ConfigurationElement" /> liczbie obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-203"><paramref name="index" /> is less than <see langword="0" /> or greater than the number of <see cref="T:System.Configuration.ConfigurationElement" /> objects in the collection.</span></span>  
  
<span data-ttu-id="91a12-204">—lub—</span><span class="sxs-lookup"><span data-stu-id="91a12-204">-or-</span></span> 
<span data-ttu-id="91a12-205"><see cref="T:System.Configuration.ConfigurationElement" /> Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="91a12-205">The <see cref="T:System.Configuration.ConfigurationElement" /> object has already been removed.</span></span>  
  
<span data-ttu-id="91a12-206">—lub—</span><span class="sxs-lookup"><span data-stu-id="91a12-206">-or-</span></span> 
<span data-ttu-id="91a12-207">Wartość <see cref="T:System.Configuration.ConfigurationElement" /> obiektu została zablokowana na wyższym poziomie.</span><span class="sxs-lookup"><span data-stu-id="91a12-207">The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object has been locked at a higher level.</span></span>  
  
<span data-ttu-id="91a12-208">—lub—</span><span class="sxs-lookup"><span data-stu-id="91a12-208">-or-</span></span> 
<span data-ttu-id="91a12-209"><see cref="T:System.Configuration.ConfigurationElement" /> Obiekt został odziedziczony.</span><span class="sxs-lookup"><span data-stu-id="91a12-209">The <see cref="T:System.Configuration.ConfigurationElement" /> object was inherited.</span></span>  
  
<span data-ttu-id="91a12-210">—lub—</span><span class="sxs-lookup"><span data-stu-id="91a12-210">-or-</span></span> 
<span data-ttu-id="91a12-211">Wartość <see cref="T:System.Configuration.ConfigurationElement" /> obiektunie<see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> jest lub .<see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" /> <see cref="P:System.Configuration.ConfigurationProperty.Type" /></span><span class="sxs-lookup"><span data-stu-id="91a12-211">The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object's <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> or <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearElementName">
      <MemberSignature Language="C#" Value="protected internal string ClearElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClearElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ClearElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ ClearElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClearElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.ClearElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-212">Pobiera lub ustawia nazwę, <see cref="T:System.Configuration.ConfigurationElement" /> która ma zostać skojarzona z operacją Clear <see cref="T:System.Configuration.ConfigurationElementCollection" /> w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-212">Gets or sets the name for the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the clear operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="91a12-213">Nazwa elementu.</span><span class="sxs-lookup"><span data-stu-id="91a12-213">The name of the element.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91a12-214">Wybrana wartość zaczyna się od zastrzeżonego prefiksu "config" lub "Lock".</span><span class="sxs-lookup"><span data-stu-id="91a12-214">The selected value starts with the reserved prefix "config" or "lock".</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public virtual System.Configuration.ConfigurationElementCollectionType CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CollectionType As ConfigurationElementCollectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::ConfigurationElementCollectionType CollectionType { System::Configuration::ConfigurationElementCollectionType get(); };" />
      <MemberSignature Language="F#" Value="member this.CollectionType : System.Configuration.ConfigurationElementCollectionType" Usage="System.Configuration.ConfigurationElementCollection.CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementCollectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-215">Pobiera typ <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-215">Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></summary>
        <value><span data-ttu-id="91a12-216">W <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-216">The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> of this collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-217">Typ będzie <xref:System.Configuration.ConfigurationElementCollectionType.BasicMap> <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> albo polem.</span><span class="sxs-lookup"><span data-stu-id="91a12-217">The type will be either a <xref:System.Configuration.ConfigurationElementCollectionType.BasicMap> or an <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> field.</span></span> <span data-ttu-id="91a12-218">Aby uzyskać więcej informacji, zobacz <xref:System.Configuration.ConfigurationElementCollectionType>.</span><span class="sxs-lookup"><span data-stu-id="91a12-218">For more information, see <xref:System.Configuration.ConfigurationElementCollectionType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91a12-219">Poniższy przykład kodu pokazuje, <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> jak pobrać właściwość.</span><span class="sxs-lookup"><span data-stu-id="91a12-219">The following code example shows how to get the <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#5)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Configuration.ConfigurationElement[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Configuration.ConfigurationElement[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ConfigurationElement(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Configuration::ConfigurationElement ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Configuration.ConfigurationElement[] * int -&gt; unit" Usage="configurationElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Configuration.ConfigurationElement[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="91a12-220">Tablica, do której ma zostać skopiowana zawartość <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-220">Array to which to copy the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="91a12-221">Lokalizacja indeksu, od której należy rozpocząć kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="91a12-221">Index location at which to begin copying.</span></span></param>
        <summary><span data-ttu-id="91a12-222">Kopiuje zawartość <see cref="T:System.Configuration.ConfigurationElementCollection" /> do tablicy.</span><span class="sxs-lookup"><span data-stu-id="91a12-222">Copies the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Configuration.ConfigurationElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-223">Pobiera liczbę elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-223">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="91a12-224">Liczba elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-224">The number of elements in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNewElement">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91a12-225">Gdy jest zastępowany w klasie pochodnej, tworzy nową <see cref="T:System.Configuration.ConfigurationElement" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-225">When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-226">Zastąp <xref:System.Configuration.ConfigurationElement> metodę, aby utworzyć obiekty niestandardowe określonego typu. <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A></span><span class="sxs-lookup"><span data-stu-id="91a12-226">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="91a12-227">Gdy kolekcja jest ładowana z pliku konfiguracji, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> jest wywoływana w celu utworzenia poszczególnych elementów.</span><span class="sxs-lookup"><span data-stu-id="91a12-227">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="91a12-228"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>musi zostać zastąpiony w klasach, które <xref:System.Configuration.ConfigurationElementCollection> pochodzą od klasy.</span><span class="sxs-lookup"><span data-stu-id="91a12-228"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected abstract System.Configuration.ConfigurationElement CreateNewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Configuration.ConfigurationElement CreateNewElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateNewElement () As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Configuration::ConfigurationElement ^ CreateNewElement();" />
      <MemberSignature Language="F#" Value="abstract member CreateNewElement : unit -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.CreateNewElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-229">Gdy jest zastępowany w klasie pochodnej, tworzy nową <see cref="T:System.Configuration.ConfigurationElement" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-229">When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</span></span></summary>
        <returns><span data-ttu-id="91a12-230">Nowo utworzony <see cref="T:System.Configuration.ConfigurationElement" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-230">A newly created <see cref="T:System.Configuration.ConfigurationElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-231">Zastąp <xref:System.Configuration.ConfigurationElement> metodę, aby utworzyć obiekty niestandardowe określonego typu. <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A></span><span class="sxs-lookup"><span data-stu-id="91a12-231">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="91a12-232">Gdy kolekcja jest ładowana z pliku konfiguracji, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> jest wywoływana w celu utworzenia poszczególnych elementów.</span><span class="sxs-lookup"><span data-stu-id="91a12-232">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="91a12-233"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>musi zostać zastąpiony w klasach, które <xref:System.Configuration.ConfigurationElementCollection> pochodzą od klasy.</span><span class="sxs-lookup"><span data-stu-id="91a12-233"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91a12-234">Poniższy przykład kodu pokazuje, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> jak zastąpić metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-234">The following code example shows how to override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#6)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected virtual System.Configuration.ConfigurationElement CreateNewElement (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Configuration.ConfigurationElement CreateNewElement(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateNewElement (elementName As String) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Configuration::ConfigurationElement ^ CreateNewElement(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewElement : string -&gt; System.Configuration.ConfigurationElement&#xA;override this.CreateNewElement : string -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.CreateNewElement elementName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="91a12-235">Nazwa <see cref="T:System.Configuration.ConfigurationElement" /> do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="91a12-235">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> to create.</span></span></param>
        <summary><span data-ttu-id="91a12-236">Tworzy nowy <see cref="T:System.Configuration.ConfigurationElement" /> , gdy jest zastępowany w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-236">Creates a new <see cref="T:System.Configuration.ConfigurationElement" /> when overridden in a derived class.</span></span></summary>
        <returns><span data-ttu-id="91a12-237">Nowe <see cref="T:System.Configuration.ConfigurationElement" /> o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="91a12-237">A new <see cref="T:System.Configuration.ConfigurationElement" /> with a specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-238">Zastąp <xref:System.Configuration.ConfigurationElement> metodę, aby utworzyć obiekty niestandardowe określonego typu. <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A></span><span class="sxs-lookup"><span data-stu-id="91a12-238">Override the <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> method to create custom <xref:System.Configuration.ConfigurationElement> objects of a specific type.</span></span> <span data-ttu-id="91a12-239">Gdy kolekcja jest ładowana z pliku konfiguracji, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> jest wywoływana w celu utworzenia poszczególnych elementów.</span><span class="sxs-lookup"><span data-stu-id="91a12-239">When a collection is loaded from the configuration file, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> is called to create individual elements.</span></span> <span data-ttu-id="91a12-240"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A>musi zostać zastąpiony w klasach, które <xref:System.Configuration.ConfigurationElementCollection> pochodzą od klasy.</span><span class="sxs-lookup"><span data-stu-id="91a12-240"><xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> must be overridden in classes that derive from the <xref:System.Configuration.ConfigurationElementCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="91a12-241">Jeśli tworzysz kolekcję niestandardową <see cref="T:System.Configuration.ConfigurationElementCollection" /> , która zawiera typy heterogeniczne <see cref="T:System.Configuration.ConfigurationElement" /> , musisz wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="91a12-241">If you create a custom <see cref="T:System.Configuration.ConfigurationElementCollection" /> collection that contains heterogeneous <see cref="T:System.Configuration.ConfigurationElement" /> types, you must perform these steps:</span></span> 
<span data-ttu-id="91a12-242">-Zastąp <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-242">-   Override the <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> method.</span></span>  
  
<span data-ttu-id="91a12-243">-Upewnij się, że <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> Metoda zwraca ciąg, który identyfikuje typ elementu, który został utworzony przez <see cref="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" /> wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="91a12-243">-   Make sure that the <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> method returns a string that identifies the type of the element you created by calling the <see cref="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="protected virtual string ElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string" Usage="System.Configuration.ConfigurationElementCollection.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-244">Pobiera nazwę używaną do identyfikowania tej kolekcji elementów w pliku konfiguracji, gdy jest zastępowana w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-244">Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="91a12-245">Nazwa kolekcji; w przeciwnym razie pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="91a12-245">The name of the collection; otherwise, an empty string.</span></span> <span data-ttu-id="91a12-246">Wartość domyślna to pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="91a12-246">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-247"><xref:System.Configuration.ConfigurationElementCollection>Zastąp Właściwośćnazwą<xref:System.Configuration.ConfigurationElementCollection.ElementName%2A> niestandardową.</span><span class="sxs-lookup"><span data-stu-id="91a12-247">Override the <xref:System.Configuration.ConfigurationElementCollection.ElementName%2A> property to name a custom <xref:System.Configuration.ConfigurationElementCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitClear">
      <MemberSignature Language="C#" Value="public bool EmitClear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmitClear" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
      <MemberSignature Language="VB.NET" Value="Public Property EmitClear As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EmitClear { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EmitClear : bool with get, set" Usage="System.Configuration.ConfigurationElementCollection.EmitClear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-248">Pobiera lub ustawia wartość określającą, czy kolekcja została wyczyszczona.</span><span class="sxs-lookup"><span data-stu-id="91a12-248">Gets or sets a value that specifies whether the collection has been cleared.</span></span></summary>
        <value><span data-ttu-id="91a12-249"><see langword="true" />Jeśli kolekcja została wyczyszczona; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="91a12-249"><see langword="true" /> if the collection has been cleared; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="91a12-250">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-250">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-251"><xref:System.Configuration.ConfigurationElementCollection.EmitClear%2A> Ustawienie właściwościpowoduje`<clear>`, że dyrektywa ma być zapisywana w pliku konfiguracji, gdy kolekcja jest serializowana. `true`</span><span class="sxs-lookup"><span data-stu-id="91a12-251">Setting the <xref:System.Configuration.ConfigurationElementCollection.EmitClear%2A> property to `true` causes a `<clear>` directive to be written to the configuration file when the collection is serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="91a12-252">Konfiguracja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="91a12-252">The configuration is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object compareTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object compareTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (compareTo As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ compareTo);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="configurationElementCollection.Equals compareTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compareTo"><span data-ttu-id="91a12-253">Obiekt do porównania.</span><span class="sxs-lookup"><span data-stu-id="91a12-253">The object to compare.</span></span></param>
        <summary><span data-ttu-id="91a12-254">Porównuje <see cref="T:System.Configuration.ConfigurationElementCollection" /> do określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="91a12-254">Compares the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to the specified object.</span></span></summary>
        <returns><span data-ttu-id="91a12-255"><see langword="true" />Jeśli obiekt, <see langword="false" />który ma zostać porównany, jest równy <see cref="T:System.Configuration.ConfigurationElementCollection" /> bieżącemu wystąpieniu; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="91a12-255"><see langword="true" /> if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="91a12-256">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-256">The default is <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected abstract object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member GetElementKey : System.Configuration.ConfigurationElement -&gt; obj" Usage="configurationElementCollection.GetElementKey element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="91a12-257">, <see cref="T:System.Configuration.ConfigurationElement" /> Aby zwrócić klucz.</span><span class="sxs-lookup"><span data-stu-id="91a12-257">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for.</span></span></param>
        <summary><span data-ttu-id="91a12-258">Pobiera klucz elementu dla określonego elementu konfiguracji, gdy jest zastępowany w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-258">Gets the element key for a specified configuration element when overridden in a derived class.</span></span></summary>
        <returns><span data-ttu-id="91a12-259">Który działa jako klucz dla określonego <see cref="T:System.Configuration.ConfigurationElement" />elementu. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="91a12-259">An <see cref="T:System.Object" /> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91a12-260">Poniższy przykład kodu pokazuje, jak przesłonić <xref:System.Configuration.ConfigurationElementCollection.GetElementKey%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-260">The following code example shows how to override <xref:System.Configuration.ConfigurationElementCollection.GetElementKey%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#7)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="configurationElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-261">Pobiera, <see cref="T:System.Configuration.ConfigurationElementCollection" />który jest używany do iteracji przez. <see cref="T:System.Collections.IEnumerator" /></span><span class="sxs-lookup"><span data-stu-id="91a12-261">Gets an <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></summary>
        <returns><span data-ttu-id="91a12-262">, Który jest używany do iteracji <see cref="T:System.Configuration.ConfigurationElementCollection" />przez. <see cref="T:System.Collections.IEnumerator" /></span><span class="sxs-lookup"><span data-stu-id="91a12-262">An <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="configurationElementCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-263">Pobiera unikatową wartość reprezentującą <see cref="T:System.Configuration.ConfigurationElementCollection" /> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="91a12-263">Gets a unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance.</span></span></summary>
        <returns><span data-ttu-id="91a12-264">Unikatowa wartość reprezentująca <see cref="T:System.Configuration.ConfigurationElementCollection" /> bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="91a12-264">A unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementName">
      <MemberSignature Language="C#" Value="protected virtual bool IsElementName (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsElementName(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsElementName (elementName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsElementName(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member IsElementName : string -&gt; bool&#xA;override this.IsElementName : string -&gt; bool" Usage="configurationElementCollection.IsElementName elementName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="91a12-265">Nazwa elementu do zweryfikowania.</span><span class="sxs-lookup"><span data-stu-id="91a12-265">The name of the element to verify.</span></span></param>
        <summary><span data-ttu-id="91a12-266">Wskazuje, czy określony <see cref="T:System.Configuration.ConfigurationElement" /> istnieje <see cref="T:System.Configuration.ConfigurationElementCollection" />w.</span><span class="sxs-lookup"><span data-stu-id="91a12-266">Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></summary>
        <returns><span data-ttu-id="91a12-267"><see langword="true" />Jeśli element istnieje w kolekcji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="91a12-267"><see langword="true" /> if the element exists in the collection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="91a12-268">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-268">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-269">Zastąp <xref:System.Configuration.ConfigurationElementCollection.IsElementName%2A> metodę, aby zapewnić zachowanie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="91a12-269">Override the <xref:System.Configuration.ConfigurationElementCollection.IsElementName%2A> method to provide custom behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementRemovable">
      <MemberSignature Language="C#" Value="protected virtual bool IsElementRemovable (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsElementRemovable(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsElementRemovable (element As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsElementRemovable(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member IsElementRemovable : System.Configuration.ConfigurationElement -&gt; bool&#xA;override this.IsElementRemovable : System.Configuration.ConfigurationElement -&gt; bool" Usage="configurationElementCollection.IsElementRemovable element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="91a12-270">Element do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="91a12-270">The element to check.</span></span></param>
        <summary><span data-ttu-id="91a12-271">Wskazuje, czy można <see cref="T:System.Configuration.ConfigurationElement" /> usunąć określony <see cref="T:System.Configuration.ConfigurationElementCollection" />z.</span><span class="sxs-lookup"><span data-stu-id="91a12-271">Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></summary>
        <returns><span data-ttu-id="91a12-272"><see langword="true" />Jeśli można usunąć <see cref="T:System.Configuration.ConfigurationElement" /> określony <see cref="T:System.Configuration.ConfigurationElementCollection" />z nich, <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="91a12-272"><see langword="true" /> if the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from this <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="91a12-273">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-273">The default is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-274">Zapytanie <xref:System.Configuration.ConfigurationElementCollection.IsElementRemovable%2A> przed usunięciem elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91a12-274">Query <xref:System.Configuration.ConfigurationElementCollection.IsElementRemovable%2A> before removing a collection element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberSignature Language="F#" Value="override this.IsModified : unit -&gt; bool" Usage="configurationElementCollection.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-275">Wskazuje, czy <see cref="T:System.Configuration.ConfigurationElementCollection" /> został on zmodyfikowany od momentu ostatniego zapisania lub załadowania w przypadku zastąpienia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-275">Indicates whether this <see cref="T:System.Configuration.ConfigurationElementCollection" /> has been modified since it was last saved or loaded when overridden in a derived class.</span></span></summary>
        <returns><span data-ttu-id="91a12-276"><see langword="true" />Jeśli którykolwiek z zawartych elementów został zmodyfikowany; przypadku<see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="91a12-276"><see langword="true" /> if any contained element has been modified; otherwise, <see langword="false" /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-277"><xref:System.Configuration.ConfigurationElement> <xref:System.Configuration.ConfigurationElementCollection> `true`Jeśli metoda dowolnego elementu zawartego wpowrocie`true` zwraca metodę, cała kolekcja również zwraca wartość. <xref:System.Configuration.ConfigurationElementCollection.IsModified%2A> <xref:System.Configuration.ConfigurationElement.IsModified%2A></span><span class="sxs-lookup"><span data-stu-id="91a12-277">If the <xref:System.Configuration.ConfigurationElement.IsModified%2A> method of any <xref:System.Configuration.ConfigurationElement> contained within a <xref:System.Configuration.ConfigurationElementCollection> returns `true`, the <xref:System.Configuration.ConfigurationElementCollection.IsModified%2A> method of the entire collection returns `true` as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.IsReadOnly : unit -&gt; bool" Usage="configurationElementCollection.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-278">Wskazuje, czy <see cref="T:System.Configuration.ConfigurationElementCollection" /> obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="91a12-278">Indicates whether the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only.</span></span></summary>
        <returns><span data-ttu-id="91a12-279"><see langword="true" />Jeśli obiekt <see cref="T:System.Configuration.ConfigurationElementCollection" /> jest tylko do odczytu; w przeciwnym <see langword="false" />razie,.</span><span class="sxs-lookup"><span data-stu-id="91a12-279"><see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-280">System definiuje elementy konfiguracji, których nie można modyfikować.</span><span class="sxs-lookup"><span data-stu-id="91a12-280">The system defines configuration elements that cannot be modified.</span></span> <span data-ttu-id="91a12-281">Wywołaj tę metodę, aby określić, czy elementy mogą być modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="91a12-281">Call this method to determine whether elements can be modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Configuration.ConfigurationElementCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-282">Pobiera wartość wskazującą, czy dostęp do kolekcji jest synchronizowany.</span><span class="sxs-lookup"><span data-stu-id="91a12-282">Gets a value indicating whether access to the collection is synchronized.</span></span></summary>
        <value><span data-ttu-id="91a12-283"><see langword="true" />Jeśli dostęp do programu <see cref="T:System.Configuration.ConfigurationElementCollection" /> jest synchronizowany; w przeciwnym <see langword="false" />razie,.</span><span class="sxs-lookup"><span data-stu-id="91a12-283"><see langword="true" /> if access to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedElement">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedElement(string elementName, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedElement (elementName As String, reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedElement(System::String ^ elementName, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.OnDeserializeUnrecognizedElement : string * System.Xml.XmlReader -&gt; bool" Usage="configurationElementCollection.OnDeserializeUnrecognizedElement (elementName, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="91a12-284">Nazwa nierozpoznanego elementu.</span><span class="sxs-lookup"><span data-stu-id="91a12-284">The name of the unrecognized element.</span></span></param>
        <param name="reader"><span data-ttu-id="91a12-285">Strumień wejściowy, który odczytuje dane XML z pliku konfiguracyjnego.</span><span class="sxs-lookup"><span data-stu-id="91a12-285">An input stream that reads XML from the configuration file.</span></span></param>
        <summary><span data-ttu-id="91a12-286">Powoduje zgłoszenie wyjątku przez system konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-286">Causes the configuration system to throw an exception.</span></span></summary>
        <returns><span data-ttu-id="91a12-287"><see langword="true" />Jeśli nierozpoznany element został pomyślnie rozszeregowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="91a12-287"><see langword="true" /> if the unrecognized element was deserialized successfully; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="91a12-288">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-288">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-289">Jest <xref:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement%2A> wywoływana, gdy nierozpoznany element konfiguracji zostanie odczytany z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-289">The <xref:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement%2A> is called when an unrecognized configuration element is read from a configuration file.</span></span>  
  
 <span data-ttu-id="91a12-290">Zastąp tę metodę, aby zapewnić niestandardową obsługę nierozpoznanych elementów konfiguracji z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-290">Override this method to provide custom handling of unrecognized configuration elements from a configuration file.</span></span> <span data-ttu-id="91a12-291">Domyślna wartość `false`zwracana, powoduje, że system konfiguracji zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="91a12-291">The default return value, `false`, causes the configuration system to throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="91a12-292">Element określony w <paramref name="elementName" /> <see langword="&lt;clear&gt;" /> elemencie jest elementem.</span><span class="sxs-lookup"><span data-stu-id="91a12-292">The element specified in <paramref name="elementName" /> is the <see langword="&lt;clear&gt;" /> element.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91a12-293"><paramref name="elementName" />rozpoczyna się od zastrzeżonego prefiksu "config" lub "Lock".</span><span class="sxs-lookup"><span data-stu-id="91a12-293"><paramref name="elementName" /> starts with the reserved prefix "config" or "lock".</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveElementName">
      <MemberSignature Language="C#" Value="protected internal string RemoveElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoveElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property RemoveElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ RemoveElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoveElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.RemoveElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-294">Pobiera lub ustawia nazwę elementu <see cref="T:System.Configuration.ConfigurationElement" /> do skojarzenia z operacją usuwania <see cref="T:System.Configuration.ConfigurationElementCollection" /> w przypadku zastąpienia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-294">Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the remove operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="91a12-295">Nazwa elementu.</span><span class="sxs-lookup"><span data-stu-id="91a12-295">The name of the element.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91a12-296">Wybrana wartość zaczyna się od zastrzeżonego prefiksu "config" lub "Lock".</span><span class="sxs-lookup"><span data-stu-id="91a12-296">The selected value starts with the reserved prefix "config" or "lock".</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected internal override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement"><span data-ttu-id="91a12-297">Reprezentuje element nadrzędny kolekcji, jeśli istnieje; <see langword="null" />w przeciwnym razie. <see cref="T:System.Configuration.ConfigurationElement" /></span><span class="sxs-lookup"><span data-stu-id="91a12-297">The <see cref="T:System.Configuration.ConfigurationElement" /> representing the collection parent element, if any; otherwise, <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="91a12-298">Resetuje <see cref="T:System.Configuration.ConfigurationElementCollection" /> do stanu niezmodyfikowanego w przypadku zastąpienia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-298">Resets the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to its unmodified state when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-299">Domyślnym zachowaniem <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> metody jest czyszczenie wszystkich zmodyfikowanych elementów, <xref:System.Configuration.ConfigurationElementCollection> które zawiera obiekt i aby ustawić zmodyfikowane elementy na wartości określone przez ich nadrzędny plik konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-299">The default behavior for the <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> method is to clear any modified elements a <xref:System.Configuration.ConfigurationElementCollection> object contains and to set the modified elements to the values specified by their parent configuration file.</span></span> <span data-ttu-id="91a12-300">Jeśli dowolny element w <xref:System.Configuration.ConfigurationElementCollection> elementach ma elementy podrzędne, <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> jest również wywoływana dla tych elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="91a12-300">If any element in the <xref:System.Configuration.ConfigurationElementCollection> has child elements, <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> is also called on those child elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberSignature Language="F#" Value="override this.ResetModified : unit -&gt; unit" Usage="configurationElementCollection.ResetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-301">Resetuje wartość <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> właściwości na, <see langword="false" /> gdy została przesłonięta w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-301">Resets the value of the <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> property to <see langword="false" /> when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-302"><xref:System.Configuration.ConfigurationElementCollection.ResetModified%2A> Metoda określa, czy elementy tej kolekcji będą zapisywane w pliku konfiguracji, gdy konfiguracja zostanie zaktualizowana.</span><span class="sxs-lookup"><span data-stu-id="91a12-302">The <xref:System.Configuration.ConfigurationElementCollection.ResetModified%2A> method determines whether the elements of this collection will be written to the configuration file when the configuration is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeElement">
      <MemberSignature Language="C#" Value="protected internal override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool SerializeElement(class System.Xml.XmlWriter writer, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SerializeElement (writer As XmlWriter, serializeCollectionKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool SerializeElement(System::Xml::XmlWriter ^ writer, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="override this.SerializeElement : System.Xml.XmlWriter * bool -&gt; bool" Usage="configurationElementCollection.SerializeElement (writer, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="91a12-303">Strumień wyjściowy, który zapisuje XML w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-303">Output stream that writes XML to the configuration file.</span></span></param>
        <param name="serializeCollectionKey"><span data-ttu-id="91a12-304"><see langword="true" />Aby serializować klucz kolekcji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="91a12-304"><see langword="true" /> to serialize the collection key; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="91a12-305">Zapisuje dane konfiguracji do elementu XML w pliku konfiguracji, gdy jest zastępowany w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="91a12-305">Writes the configuration data to an XML element in the configuration file when overridden in a derived class.</span></span></summary>
        <returns><span data-ttu-id="91a12-306"><see langword="true" /><see cref="T:System.Configuration.ConfigurationElementCollection" /> jeśli zapisano plik konfiguracji pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="91a12-306"><see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> was written to the configuration file successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-307"><xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> Metoda zapisuje zawartość elementów konfiguracji zawartych w kolekcji i wszelkich zagnieżdżonych elementów, które zawierają do pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-307">The <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> method writes the contents of the configuration elements contained in the collection and any nested elements they contain to the configuration file.</span></span> <span data-ttu-id="91a12-308">Przesłoń <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> , aby zapewnić niestandardową procedurę zapisu z zawartości kolekcji i elementów zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="91a12-308">Override <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> to provide a custom write procedure out of the collection contents and nested elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91a12-309">Jeden z elementów w kolekcji został dodany lub zastąpiony i zaczyna się od zastrzeżonego prefiksu "config" lub "Lock".</span><span class="sxs-lookup"><span data-stu-id="91a12-309">One of the elements in the collection was added or replaced and starts with the reserved prefix "config" or "lock".</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected internal override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="configurationElementCollection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91a12-310"><see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> Ustawia Właściwość<see cref="T:System.Configuration.ConfigurationElementCollection" /> dla obiektu i dla wszystkich elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="91a12-310">Sets the <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> property for the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object and for all sub-elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-311">Ta metoda jest używana wewnętrznie w celu odróżnienia tych elementów konfiguracji systemu, które nie mogą być modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="91a12-311">This method is used internally to set aside those system configuration elements that cannot be modified.</span></span> <span data-ttu-id="91a12-312">Aby określić, które elementy można modyfikować, wywołaj <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="91a12-312">To determine which elements are modifiable, call the <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Configuration.ConfigurationElementCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-313">Pobiera obiekt służący do synchronizowania dostępu do <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-313">Gets an object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></summary>
        <value><span data-ttu-id="91a12-314">Obiekt służący do synchronizowania dostępu do <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-314">An object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (arr As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ arr, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr"><span data-ttu-id="91a12-315">Tablica, do której ma zostać <see cref="T:System.Configuration.ConfigurationElementCollection" />skopiowana.</span><span class="sxs-lookup"><span data-stu-id="91a12-315">Array to which to copy this <see cref="T:System.Configuration.ConfigurationElementCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="91a12-316">Lokalizacja indeksu, od której należy rozpocząć kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="91a12-316">Index location at which to begin copying.</span></span></param>
        <summary><span data-ttu-id="91a12-317"><see cref="T:System.Configuration.ConfigurationElementCollection" /> Kopiuje do tablicy.</span><span class="sxs-lookup"><span data-stu-id="91a12-317">Copies the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected virtual bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ThrowOnDuplicate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ThrowOnDuplicate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ThrowOnDuplicate : bool" Usage="System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91a12-318">Pobiera wartość wskazującą, <see cref="T:System.Configuration.ConfigurationElement" /> <see cref="T:System.Configuration.ConfigurationElementCollection" /> czy próba dodania duplikatu do elementu spowoduje wystąpienie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="91a12-318">Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown.</span></span></summary>
        <value><span data-ttu-id="91a12-319"><see langword="true" />Jeśli próba dodania duplikatu <see cref="T:System.Configuration.ConfigurationElement" /> do niego <see cref="T:System.Configuration.ConfigurationElementCollection" /> spowoduje zgłoszenie wyjątku; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="91a12-319"><see langword="true" /> if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to this <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91a12-320">Po dodaniu zduplikowanego elementu wyjątek jest zgłaszany, jeśli <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> wartość elementu <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> jest <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate>albo.</span><span class="sxs-lookup"><span data-stu-id="91a12-320">When you add a duplicate element, an exception is thrown if the <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> value of the element is either <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> or <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate>.</span></span>  
  
 <span data-ttu-id="91a12-321">Należy zauważyć, że elementy z identycznymi kluczami i wartościami nie są uważane za duplikaty i są akceptowane w trybie dyskretnym.</span><span class="sxs-lookup"><span data-stu-id="91a12-321">Note that elements with identical keys and values are not considered duplicates, and are accepted silently.</span></span> <span data-ttu-id="91a12-322">Tylko elementy z identycznymi kluczami, ale różne wartości są uznawane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="91a12-322">Only elements with identical keys but different values are considered duplicates.</span></span> <span data-ttu-id="91a12-323">Aby uzyskać więcej informacji, zobacz sekcję Uwagi dla <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="91a12-323">For more information, see the Remarks section for the <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unmerge">
      <MemberSignature Language="C#" Value="protected internal override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, saveMode As ConfigurationSaveMode)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode saveMode);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C#" Value="protected internal override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode updateMode) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, updateMode As ConfigurationSaveMode)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Unmerge : System.Configuration.ConfigurationElement * System.Configuration.ConfigurationElement * System.Configuration.ConfigurationSaveMode -&gt; unit" Usage="configurationElementCollection.Unmerge (sourceElement, parentElement, updateMode)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="override this.Unmerge : System.Configuration.ConfigurationElement * System.Configuration.ConfigurationElement * System.Configuration.ConfigurationSaveMode -&gt; unit" Usage="configurationElementCollection.Unmerge (sourceElement, parentElement, updateMode)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceElement" Type="System.Configuration.ConfigurationElement" Index="0" />
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" Index="1" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceElement"><span data-ttu-id="91a12-324"><see cref="T:System.Configuration.ConfigurationElement" /> Obiekt na bieżącym poziomie zawierający scalony widok właściwości.</span><span class="sxs-lookup"><span data-stu-id="91a12-324">A <see cref="T:System.Configuration.ConfigurationElement" /> object at the current level containing a merged view of the properties.</span></span></param>
        <param name="parentElement"><span data-ttu-id="91a12-325">Obiekt nadrzędny <see cref="T:System.Configuration.ConfigurationElement" /> bieżącego elementu lub <see langword="null" /> , jeśli jest to najwyższy poziom.</span><span class="sxs-lookup"><span data-stu-id="91a12-325">The parent <see cref="T:System.Configuration.ConfigurationElement" /> object of the current element, or <see langword="null" /> if this is the top level.</span></span></param>
        <param name="saveMode"><span data-ttu-id="91a12-326">Jedna z wartości wyliczenia, która określa wartości właściwości do uwzględnienia.</span><span class="sxs-lookup"><span data-stu-id="91a12-326">One of the enumeration value that determines which property values to include.</span></span></param>
        <param name="updateMode">To be added.</param>
        <summary><span data-ttu-id="91a12-327">Odwraca efekt scalania informacji o konfiguracji z różnych poziomów hierarchii konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="91a12-327">Reverses the effect of merging configuration information from different levels of the configuration hierarchy.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
