<Type Name="TypeNameConverter" FullName="System.Configuration.TypeNameConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ad6c084f7406543b85d44b13412ce1a46684323" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53468805" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeNameConverter : System.Configuration.ConfigurationConverterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeNameConverter extends System.Configuration.ConfigurationConverterBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.TypeNameConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeNameConverter&#xA;Inherits ConfigurationConverterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeNameConverter sealed : System::Configuration::ConfigurationConverterBase" />
  <TypeSignature Language="F#" Value="type TypeNameConverter = class&#xA;    inherit ConfigurationConverterBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationConverterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wykonuje konwersję między typu i wartości ciągu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tego typu, takich jak wszystkich innych konfiguracji konwertera typów konwertuje ciągi znalezione w pliku konfiguracji do i z powiązanych właściwości silnie typizowanych.  
  
 W szczególności <xref:System.Configuration.TypeNameConverter> klasy konwertuje <xref:System.String> wartość przypisana do typu konfiguracji do <xref:System.Type> wartość i na odwrót. Typ określony jest klasa, która jest odpowiedzialna za przetwarzanie konfiguracji, który jest skojarzony.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak uzyskać typ skojarzony z niestandardowych sekcji. Implementacji niestandardowego sekcji, można znaleźć w przykładzie kodu w <xref:System.Configuration.ConfigurationConverterBase> klasy odniesienia.  
  
 [!code-csharp[System.Configuration.TypeNameConverter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.TypeNameConverter/CS/TypeNameConverter.cs#1)]
 [!code-vb[System.Configuration.TypeNameConverter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.TypeNameConverter/VB/TypeNameConverter.vb#1)]  
  
 Poniższy przykład jest fragment konfiguracji, używany w poprzednim przykładzie.  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  
  <configSections>  
    <section name="CustomSection"   
      type="Samples.AspNet.CustomSection,   
      ConfigurationConverters,   
      Version=1.0.0.0, Culture=neutral,   
      PublicKeyToken=null"   
      allowDefinition="Everywhere"   
      allowExeDefinition="MachineToApplication"   
      restartOnExternalChanges="true" />  
  </configSections>  
  
  <CustomSection fileName="default.txt" maxIdleTime="90"   
    timeDelay="infinite" cdStr="str0, str1" permission="Read"  
    maxUsers="Infinite"/>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.GenericEnumConverter" />
    <altmember cref="T:System.Configuration.InfiniteIntConverter" />
    <altmember cref="T:System.Configuration.InfiniteTimeSpanConverter" />
    <altmember cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />
    <altmember cref="T:System.Configuration.TimeSpanSecondsConverter" />
    <altmember cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />
    <altmember cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeNameConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TypeNameConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeNameConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Configuration.TypeNameConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj używasz konwertera typów, dostarczone przez system. Jedyną sytuacją, należy użyć <xref:System.Configuration.TypeNameConverter.%23ctor%2A> Konstruktor jest podczas tworzenia własnych konwersji typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (ctx As ITypeDescriptorContext, ci As CultureInfo, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeNameConverter.ConvertFrom (ctx, ci, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Obiekt używany do konwersji typu.</param>
        <param name="ci"><see cref="T:System.Globalization.CultureInfo" /> Obiektu użytego podczas konwersji.</param>
        <param name="data"><see cref="T:System.String" /> Obiektu do przekonwertowania.</param>
        <summary>Konwertuje <see cref="T:System.String" /> obiekt <see cref="T:System.Type" /> obiektu.</summary>
        <returns><see cref="T:System.Type" /> Reprezentujący <paramref name="data" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 System używa <xref:System.Configuration.TypeNameConverter.ConvertFrom%2A> metody podczas odczytu z pliku konfiguracji, aby przekonwertować <xref:System.String> wartość <xref:System.Type> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Type" /> Wartości nie można go rozpoznać.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeNameConverter.ConvertTo (ctx, ci, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Obiekt używany do konwersji typu.</param>
        <param name="ci"><see cref="T:System.Globalization.CultureInfo" /> Obiektu użytego podczas konwersji.</param>
        <param name="value">Wartość do przekonwertowania na.</param>
        <param name="type">Typ docelowy konwersji.</param>
        <summary>Konwertuje <see cref="T:System.Type" /> obiekt <see cref="T:System.String" /> obiektu.</summary>
        <returns><see cref="T:System.String" /> Reprezentujący <paramref name="value" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 System używa <xref:System.Configuration.TypeNameConverter.ConvertTo%2A> metody podczas zapisywania w pliku konfiguracji, aby przekonwertować <xref:System.Type> wartość <xref:System.String> wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>