<Type Name="ExpandSegmentCollection" FullName="System.Data.Services.ExpandSegmentCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7640a2e535fe9e0387009c0a72676375a920da14" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36681345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExpandSegmentCollection : System.Collections.Generic.List&lt;System.Data.Services.ExpandSegment&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpandSegmentCollection extends System.Collections.Generic.List`1&lt;class System.Data.Services.ExpandSegment&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.ExpandSegmentCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpandSegmentCollection&#xA;Inherits List(Of ExpandSegment)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpandSegmentCollection : System::Collections::Generic::List&lt;System::Data::Services::ExpandSegment ^&gt;" />
  <TypeSignature Language="F#" Value="type ExpandSegmentCollection = class&#xA;    inherit List&lt;ExpandSegment&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.List&lt;System.Data.Services.ExpandSegment&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Data.Services.ExpandSegment</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a8cac-101">Segmenty zapytania, które można rozszerzać przez <c>rozwiń $</c> klauzuli, która wykonuje zapytania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8cac-101">The segments of a query that can be expanded by the <c>$expand</c> clause that follows a query.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8cac-102">`$expand` Klauzuli wskazuje każdego Rozwiń element powinien być w pełni rozwinięta.</span><span class="sxs-lookup"><span data-stu-id="a8cac-102">An `$expand` clause indicates that each expand item should be fully expanded.</span></span> <span data-ttu-id="a8cac-103">Na przykład wartość `OrderLines.Product.Image` z `$expand` powoduje, że `OrderLines`, `Product` poszczególnych elementów `OrderLines`i `Image` z `Product` poszczególnych elementów `OrderLines` do wyodrębnienia.</span><span class="sxs-lookup"><span data-stu-id="a8cac-103">For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded.</span></span>  
  
 <span data-ttu-id="a8cac-104">Właściwość zasobu lewej w `$expand` klauzuli musi być właściwością w typie jednostki w zestawie jednostek identyfikowane przez ostatni segment ścieżki w identyfikatorze URI żądania.</span><span class="sxs-lookup"><span data-stu-id="a8cac-104">The left-most resource property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.</span></span>  
  
 <span data-ttu-id="a8cac-105">Nadmiarowe `$expand` klauzuli reguły są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="a8cac-105">Redundant `$expand` clause rules are ignored.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8cac-106">Tworzy kolekcję segmentów rozwiń dla zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cac-106">Creates a collection of expand segments for a query.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandSegmentCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ExpandSegmentCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandSegmentCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8cac-107">Tworzy kolekcję segmentów rozwiń dla zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cac-107">Creates a collection of expand segments for a query.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandSegmentCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandSegmentCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.ExpandSegmentCollection : int -&gt; System.Data.Services.ExpandSegmentCollection" Usage="new System.Data.Services.ExpandSegmentCollection capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="a8cac-108">Liczba segmentów Rozwiń, które początkowo mogą przechowywać nową kolekcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cac-108">The number of expand segments that the new collection can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8cac-109">Inicjuje nową kolekcję segmentów rozwiń jest pusty i ma określony początkowej pojemności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cac-109">Initializes a new collection of expand segments that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFilter">
      <MemberSignature Language="C#" Value="public bool HasFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFilter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegmentCollection.HasFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFilter : bool" Usage="System.Data.Services.ExpandSegmentCollection.HasFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cac-110">Wartość logiczna wskazująca, czy segmenty do wyodrębnienia zawierać klauzulę filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cac-110">Boolean value that indicates whether segments to be expanded include a filter clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cac-111">Wartość logiczna wskazująca, czy segmenty do wyodrębnienia zawierać klauzulę filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cac-111">Boolean value that indicates whether segments to be expanded include a filter clause.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>