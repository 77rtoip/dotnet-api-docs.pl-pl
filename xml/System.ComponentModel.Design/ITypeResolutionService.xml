<Type Name="ITypeResolutionService" FullName="System.ComponentModel.Design.ITypeResolutionService">
  <TypeSignature Language="C#" Value="public interface ITypeResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeResolutionService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c5787-101">Interfejs do pobierania zestawu lub typu według nazwy.</span><span class="sxs-lookup"><span data-stu-id="c5787-101">Provides an interface to retrieve an assembly or type by name.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5787-102">Ta usługa jest używana do ładowania typów w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="c5787-102">This service is used to load types at design time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5787-103">Następujący formant przykład zapewnia interfejs do wywołania metody <xref:System.ComponentModel.Design.ITypeResolutionService> w trybie projektowania.</span><span class="sxs-lookup"><span data-stu-id="c5787-103">The following example control provides an interface to call methods of the <xref:System.ComponentModel.Design.ITypeResolutionService> from design mode.</span></span>  
  
 [!code-cpp[ITypeResolutionServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CPP/ityperesolutionservicecontrol.cpp#1)]
 [!code-csharp[ITypeResolutionServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CS/ityperesolutionservicecontrol.cs#1)]
 [!code-vb[ITypeResolutionServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeResolutionServiceExample/VB/ityperesolutionservicecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAssembly">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c5787-104">Pobiera żądany zestaw.</span><span class="sxs-lookup"><span data-stu-id="c5787-104">Gets the requested assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly (name As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c5787-105">Nazwa zestawu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c5787-105">The name of the assembly to retrieve.</span></span></param>
        <summary><span data-ttu-id="c5787-106">Pobiera żądany zestaw.</span><span class="sxs-lookup"><span data-stu-id="c5787-106">Gets the requested assembly.</span></span></summary>
        <returns><span data-ttu-id="c5787-107">Wystąpienie żądany zestaw lub <see langword="null" /> Jeśli zestawu nie można zlokalizować.</span><span class="sxs-lookup"><span data-stu-id="c5787-107">An instance of the requested assembly, or <see langword="null" /> if no assembly can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly(class System.Reflection.AssemblyName name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly (name As AssemblyName, throwOnError As Boolean) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly(System::Reflection::AssemblyName ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c5787-108">Nazwa zestawu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c5787-108">The name of the assembly to retrieve.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="c5787-109"><see langword="true" /> Jeśli ta metoda powinien zgłosić wyjątek, jeśli nie można zlokalizować; zestawu w przeciwnym razie <see langword="false" />, a ta metoda zwraca <see langword="null" /> Jeśli nie można zlokalizować zestawu.</span><span class="sxs-lookup"><span data-stu-id="c5787-109"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <summary><span data-ttu-id="c5787-110">Pobiera żądany zestaw.</span><span class="sxs-lookup"><span data-stu-id="c5787-110">Gets the requested assembly.</span></span></summary>
        <returns><span data-ttu-id="c5787-111">Wystąpienie żądany zestaw lub <see langword="null" /> Jeśli zestawu nie można zlokalizować.</span><span class="sxs-lookup"><span data-stu-id="c5787-111">An instance of the requested assembly, or <see langword="null" /> if no assembly can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathOfAssembly">
      <MemberSignature Language="C#" Value="public string GetPathOfAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPathOfAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPathOfAssembly (name As AssemblyName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPathOfAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c5787-112">Nazwa zestawu.</span><span class="sxs-lookup"><span data-stu-id="c5787-112">The name of the assembly.</span></span></param>
        <summary><span data-ttu-id="c5787-113">Pobiera ścieżkę do pliku, z którego zestaw został załadowany.</span><span class="sxs-lookup"><span data-stu-id="c5787-113">Gets the path to the file from which the assembly was loaded.</span></span></summary>
        <returns><span data-ttu-id="c5787-114">Ścieżka do pliku, z którego zestaw został załadowany.</span><span class="sxs-lookup"><span data-stu-id="c5787-114">The path to the file from which the assembly was loaded.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c5787-115">Ładuje typu o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="c5787-115">Loads a type with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c5787-116">Nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="c5787-116">The name of the type.</span></span> <span data-ttu-id="c5787-117">Jeśli nazwa typu nie jest pełna nazwa, która wskazuje zestawu, ta usługa będzie szukał jej wewnętrzny zestawu zestawów występujących w odwołaniach.</span><span class="sxs-lookup"><span data-stu-id="c5787-117">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <summary><span data-ttu-id="c5787-118">Ładuje typu o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="c5787-118">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="c5787-119">Wystąpienie <see cref="T:System.Type" /> odpowiadający określonej nazwie lub <see langword="null" /> Jeśli nie może być odnaleźć typu.</span><span class="sxs-lookup"><span data-stu-id="c5787-119">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c5787-120">Nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="c5787-120">The name of the type.</span></span> <span data-ttu-id="c5787-121">Jeśli nazwa typu nie jest pełna nazwa, która wskazuje zestawu, ta usługa będzie szukał jej wewnętrzny zestawu zestawów występujących w odwołaniach.</span><span class="sxs-lookup"><span data-stu-id="c5787-121">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="c5787-122"><see langword="true" /> Jeśli ta metoda powinien zgłosić wyjątek, jeśli nie można zlokalizować; zestawu w przeciwnym razie <see langword="false" />, a ta metoda zwraca <see langword="null" /> Jeśli nie można zlokalizować zestawu.</span><span class="sxs-lookup"><span data-stu-id="c5787-122"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <summary><span data-ttu-id="c5787-123">Ładuje typu o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="c5787-123">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="c5787-124">Wystąpienie <see cref="T:System.Type" /> odpowiadający określonej nazwie lub <see langword="null" /> Jeśli nie może być odnaleźć typu.</span><span class="sxs-lookup"><span data-stu-id="c5787-124">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5787-125">Jeśli nie można załadować typu i `throwOnError` parametr jest `true`, to spowoduje zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="c5787-125">If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c5787-126">Nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="c5787-126">The name of the type.</span></span> <span data-ttu-id="c5787-127">Jeśli nazwa typu nie jest pełna nazwa, która wskazuje zestawu, ta usługa będzie szukał jej wewnętrzny zestawu zestawów występujących w odwołaniach.</span><span class="sxs-lookup"><span data-stu-id="c5787-127">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="c5787-128"><see langword="true" /> Jeśli ta metoda powinien zgłosić wyjątek, jeśli nie można zlokalizować; zestawu w przeciwnym razie <see langword="false" />, a ta metoda zwraca <see langword="null" /> Jeśli nie można zlokalizować zestawu.</span><span class="sxs-lookup"><span data-stu-id="c5787-128"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="c5787-129"><see langword="true" /> ignorowanie wielkości liter podczas wyszukiwania typów. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c5787-129"><see langword="true" /> to ignore case when searching for types; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c5787-130">Ładuje typu o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="c5787-130">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="c5787-131">Wystąpienie <see cref="T:System.Type" /> odpowiadający określonej nazwie lub <see langword="null" /> Jeśli nie może być odnaleźć typu.</span><span class="sxs-lookup"><span data-stu-id="c5787-131">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5787-132">Jeśli nie można załadować typu i `throwOnError` parametr jest `true`, to spowoduje zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="c5787-132">If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssembly">
      <MemberSignature Language="C#" Value="public void ReferenceAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReferenceAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReferenceAssembly (name As AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReferenceAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c5787-133"><see cref="T:System.Reflection.AssemblyName" /> Wskazujące odwołanie do zestawu.</span><span class="sxs-lookup"><span data-stu-id="c5787-133">An <see cref="T:System.Reflection.AssemblyName" /> that indicates the assembly to reference.</span></span></param>
        <summary><span data-ttu-id="c5787-134">Dodaje odwołanie do określonego zestawu.</span><span class="sxs-lookup"><span data-stu-id="c5787-134">Adds a reference to the specified assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5787-135">Po dodaniu odwołania do zestawu do tej usługi tej usługi można załadować typów z nazw, które nie określają zestaw.</span><span class="sxs-lookup"><span data-stu-id="c5787-135">Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
  </Members>
</Type>