<Type Name="ITypeDiscoveryService" FullName="System.ComponentModel.Design.ITypeDiscoveryService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e642e3b51b337634311cc65e6d4b88f28dfb66eb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30439392" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypeDiscoveryService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDiscoveryService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDiscoveryService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDiscoveryService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDiscoveryService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Odnajduje dostępnych typów w czasie projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDiscoveryService> Służy do odnajdywania dostępnych typów w czasie projektowania, gdy klient usługi nie ma nazwy istniejących typów lub zestawów występujących w odwołaniach.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetTypes (Type baseType, bool excludeGlobalTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetTypes(class System.Type baseType, bool excludeGlobalTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes (baseType As Type, excludeGlobalTypes As Boolean) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetTypes(Type ^ baseType, bool excludeGlobalTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="excludeGlobalTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseType">Podstawowy typ do dopasowania. Może być <see langword="null" />.</param>
        <param name="excludeGlobalTypes">Wskazuje, czy powinny być sprawdzane typów z wszystkich zestawów występujących w odwołaniach.</param>
        <summary>Pobiera listę dostępnych typów.</summary>
        <returns>Kolekcji typów spełniających kryteria określone przez <paramref name="baseType" /> i <paramref name="excludeGlobalTypes" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `baseType` jest `null`, zwracane są wszystkie typy. W przeciwnym razie zwracane są tylko typy pochodzące od określonego typu podstawowego. Jeśli `excludeGlobalTypes` jest `false`, są sprawdzane typów z wszystkich przywoływanych zestawów. W przeciwnym razie tylko typy z innych niż — globalnej pamięci podręcznej zestawów odwołania do zestawów są sprawdzane. Aby uzyskać więcej informacji, zobacz [Praca z zestawami i Global Assembly Cache](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>