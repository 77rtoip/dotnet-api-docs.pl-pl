<Type Name="IDesignerHost" FullName="System.ComponentModel.Design.IDesignerHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="365debbdfa6743d188157d75e82494e9ee4cf312" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69329858" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerHost implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerHost&#xA;Implements IServiceContainer, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerHost : IServiceProvider, System::ComponentModel::Design::IServiceContainer" />
  <TypeSignature Language="F#" Value="type IDesignerHost = interface&#xA;    interface IServiceContainer&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="49cff-101">Udostępnia interfejs do zarządzania transakcjami i składnikami projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-101">Provides an interface for managing designer transactions and components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-102"><xref:System.ComponentModel.Design.IDesignerHost>jest interfejsem, który współpracuje z architekturą projektanta formularzy .NET Framework, aby zapewnić obsługę transakcji projektanta i zarządzania składnikami.</span><span class="sxs-lookup"><span data-stu-id="49cff-102"><xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</span></span>  
  
 <span data-ttu-id="49cff-103">.NET Framework nie zapewnia implementacji tego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="49cff-103">The .NET Framework does not provide an implementation of this interface.</span></span> <span data-ttu-id="49cff-104">Interfejs jest implementowany przez narzędzia programistyczne obsługujące projektantów.</span><span class="sxs-lookup"><span data-stu-id="49cff-104">The interface is implemented by development tools that support designers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49cff-105">Poniższy przykład kodu demonstruje, <xref:System.ComponentModel.Design.IDesignerHost> jak uzyskać interfejs usługi z projektanta lub składnika zlokalizowanego.</span><span class="sxs-lookup"><span data-stu-id="49cff-105">The following example code demonstrates how to obtain the <xref:System.ComponentModel.Design.IDesignerHost> service interface from a designer or sited component.</span></span>  
  
 [!code-cpp[DesignerHostAcquisition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]
 [!code-csharp[DesignerHostAcquisition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]
 [!code-vb[DesignerHostAcquisition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  
  
 <span data-ttu-id="49cff-106">Poniższy przykładowy kod demonstruje użycie <xref:System.ComponentModel.Design.IDesignerHost> interfejsu do wyświetlania listy składników projektu.</span><span class="sxs-lookup"><span data-stu-id="49cff-106">The following example code demonstrates using the <xref:System.ComponentModel.Design.IDesignerHost> interface to list project components.</span></span>  
  
 [!code-cpp[IDesignerHostExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]
 [!code-csharp[IDesignerHostExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]
 [!code-vb[IDesignerHostExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="49cff-107">Aby uzyskać implementację <see cref="T:System.ComponentModel.Design.IDesignerHost" /> ze środowiska programistycznego, wywołaj <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> , gdy składnik jest aktywny w trybie projektowania <see cref="T:System.ComponentModel.Design.IDesignerHost" /> , przekazując <see cref="T:System.ComponentModel.Design.IDesignerHost" /> typ do żądania interfejsu usługi.</span><span class="sxs-lookup"><span data-stu-id="49cff-107">To obtain an implementation of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> from a development environment, call <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> while your component is active in design mode, passing the type of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to request an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> service interface.</span></span>  
  
 <span data-ttu-id="49cff-108"><see cref="T:System.ComponentModel.Design.IDesignerHost" />Program udostępnia następujące elementy członkowskie dotyczące stanu projektanta:</span><span class="sxs-lookup"><span data-stu-id="49cff-108"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to designer state:</span></span> 
<span data-ttu-id="49cff-109">-Właściwość <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> wskazuje, czy jest ładowany projektanta lub dokumentu.</span><span class="sxs-lookup"><span data-stu-id="49cff-109">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> property indicates whether a designer or document is being loaded.</span></span>  
  
<span data-ttu-id="49cff-110">-Zdarzenie <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> występuje, gdy Projektant jest aktywowany przed wyświetleniem.</span><span class="sxs-lookup"><span data-stu-id="49cff-110">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> event occurs when a designer is activated before display.</span></span>  
  
<span data-ttu-id="49cff-111">-Zdarzenie <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> występuje, gdy projektant zostanie zdezaktywowany.</span><span class="sxs-lookup"><span data-stu-id="49cff-111">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> event occurs when a designer is deactivated.</span></span>  
  
<span data-ttu-id="49cff-112"><see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> -Zdarzenie występuje po załadowaniu dokumentu.</span><span class="sxs-lookup"><span data-stu-id="49cff-112">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> event occurs after a document is loaded.</span></span>  
  
<span data-ttu-id="49cff-113"><see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> -Metoda aktywuje projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-113">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method activates the designer.</span></span>  
  
 <span data-ttu-id="49cff-114"><see cref="T:System.ComponentModel.Design.IDesignerHost" />Program udostępnia następujące elementy członkowskie związane z zarządzaniem składnikami:</span><span class="sxs-lookup"><span data-stu-id="49cff-114"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing components:</span></span> 
<span data-ttu-id="49cff-115"><see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> -Właściwość wskazuje kontener dla hosta projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-115">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> property indicates the container for the designer host.</span></span>  
  
<span data-ttu-id="49cff-116"><see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> -Właściwość wskazuje klasę bazową dla składnika głównego.</span><span class="sxs-lookup"><span data-stu-id="49cff-116">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> property indicates the base class for the root component.</span></span>  
  
<span data-ttu-id="49cff-117"><see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> -Właściwość wskazuje nazwę klasy głównego składnika.</span><span class="sxs-lookup"><span data-stu-id="49cff-117">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> property indicates the name of the class of the root component.</span></span>  
  
<span data-ttu-id="49cff-118"><see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> -Metoda tworzy określony typ składnika.</span><span class="sxs-lookup"><span data-stu-id="49cff-118">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> method creates the specified type of component.</span></span>  
  
<span data-ttu-id="49cff-119"><see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> -Metoda niszczy określony składnik.</span><span class="sxs-lookup"><span data-stu-id="49cff-119">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> method destroys the specified component.</span></span>  
  
<span data-ttu-id="49cff-120"><see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> -Metoda pobiera projektanta skojarzonego z określonym składnikiem.</span><span class="sxs-lookup"><span data-stu-id="49cff-120">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> method gets the designer associated with a specified component.</span></span>  
  
<span data-ttu-id="49cff-121"><see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> -Metoda pobiera wystąpienie typu o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="49cff-121">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> method gets an instance of the type with the specified name.</span></span>  
  
 <span data-ttu-id="49cff-122"><see cref="T:System.ComponentModel.Design.IDesignerHost" />Program udostępnia następujące elementy członkowskie związane z zarządzaniem transakcjami:</span><span class="sxs-lookup"><span data-stu-id="49cff-122"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing transactions:</span></span> 
<span data-ttu-id="49cff-123"><see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> -Właściwość wskazuje, czy projektant jest w transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-123">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> property indicates whether the designer is in a transaction.</span></span>  
  
<span data-ttu-id="49cff-124"><see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> -Właściwość wskazuje bieżący opis transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-124">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> property indicates the current transaction description.</span></span>  
  
<span data-ttu-id="49cff-125">-Zdarzenie <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> występuje, gdy transakcja została ukończona.</span><span class="sxs-lookup"><span data-stu-id="49cff-125">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event occurs when a transaction has been completed.</span></span>  
  
<span data-ttu-id="49cff-126">-Zdarzenie <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> występuje, gdy transakcja zostanie zakończona.</span><span class="sxs-lookup"><span data-stu-id="49cff-126">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event occurs when a transaction is about to be completed.</span></span>  
  
<span data-ttu-id="49cff-127">-Zdarzenie <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> występuje, gdy transakcja została rozpoczęta.</span><span class="sxs-lookup"><span data-stu-id="49cff-127">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event occurs when a transaction has begun.</span></span>  
  
<span data-ttu-id="49cff-128">— Zdarzenie <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> występuje, gdy zostanie rozpoczęta transakcja.</span><span class="sxs-lookup"><span data-stu-id="49cff-128">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event occurs when a transaction is about to begin.</span></span>  
  
<span data-ttu-id="49cff-129"><see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> -Metoda tworzy i zwraca nową transakcję.</span><span class="sxs-lookup"><span data-stu-id="49cff-129">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> method creates and returns a new transaction.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="iDesignerHost.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49cff-130">Aktywuje projektanta, który obsługuje ten host.</span><span class="sxs-lookup"><span data-stu-id="49cff-130">Activates the designer that this host is hosting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-131">Projektanci należy aktywować przed wyświetleniem ich interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="49cff-131">Designers should be activated before they display their user interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      <MemberSignature Language="VB.NET" Value="Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-132">Występuje po aktywowaniu tego projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-132">Occurs when this designer is activated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-133">Projektant jest aktywowany przed wyświetleniem.</span><span class="sxs-lookup"><span data-stu-id="49cff-133">A designer is activated before it is displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-134">Pobiera kontener dla tego hosta projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-134">Gets the container for this designer host.</span></span></summary>
        <value><span data-ttu-id="49cff-135"><see cref="T:System.ComponentModel.IContainer" /> Dla tego hosta.</span><span class="sxs-lookup"><span data-stu-id="49cff-135">The <see cref="T:System.ComponentModel.IContainer" /> for this host.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-136"><xref:System.ComponentModel.IContainer> Zawiera składniki bieżącego dokumentu trybu projektowania.</span><span class="sxs-lookup"><span data-stu-id="49cff-136">This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document.</span></span> <span data-ttu-id="49cff-137">Możesz wyświetlić dowolny składnik bieżącego dokumentu trybu projektowania lub uzyskać do niego dostęp, <xref:System.ComponentModel.IContainer.Components%2A> korzystając z tego <xref:System.ComponentModel.IContainer>elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="49cff-137">You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateComponent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49cff-138">Tworzy składnik określonego typu i dodaje go do dokumentu projektu.</span><span class="sxs-lookup"><span data-stu-id="49cff-138">Creates a component of the specified type and adds it to the design document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent componentClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentClass"><span data-ttu-id="49cff-139">Typ lub komponent, które należy utworzyć.</span><span class="sxs-lookup"><span data-stu-id="49cff-139">The type of the component to create.</span></span></param>
        <summary><span data-ttu-id="49cff-140">Tworzy składnik określonego typu i dodaje go do dokumentu projektu.</span><span class="sxs-lookup"><span data-stu-id="49cff-140">Creates a component of the specified type and adds it to the design document.</span></span></summary>
        <returns><span data-ttu-id="49cff-141">Nowo utworzony składnik.</span><span class="sxs-lookup"><span data-stu-id="49cff-141">The newly created component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-142">Jeśli typ nie może zostać rozpoznany do obiektu, który implementuje <xref:System.ComponentModel.IComponent>, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="49cff-142">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="49cff-143">Ta metoda nie określa nazwy składnika.</span><span class="sxs-lookup"><span data-stu-id="49cff-143">This method does not specify a name for the component.</span></span> <span data-ttu-id="49cff-144">Metoda tworzy składnik i dodaje go do kontenera projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-144">The method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type, name As String) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type * string -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent (componentClass, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentClass"><span data-ttu-id="49cff-145">Typ lub komponent, które należy utworzyć.</span><span class="sxs-lookup"><span data-stu-id="49cff-145">The type of the component to create.</span></span></param>
        <param name="name"><span data-ttu-id="49cff-146">Nazwa składnika.</span><span class="sxs-lookup"><span data-stu-id="49cff-146">The name for the component.</span></span></param>
        <summary><span data-ttu-id="49cff-147">Tworzy składnik o określonym typie i nazwie i dodaje go do dokumentu projektu.</span><span class="sxs-lookup"><span data-stu-id="49cff-147">Creates a component of the specified type and name, and adds it to the design document.</span></span></summary>
        <returns><span data-ttu-id="49cff-148">Nowo utworzony składnik.</span><span class="sxs-lookup"><span data-stu-id="49cff-148">The newly created component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-149">Jeśli typ nie może zostać rozpoznany do obiektu, który implementuje <xref:System.ComponentModel.IComponent>, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="49cff-149">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="49cff-150">Ta metoda tworzy składnik i dodaje go do kontenera projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-150">This method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTransaction">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49cff-151"><see cref="T:System.ComponentModel.Design.DesignerTransaction" /> Tworzy program, który może hermetyzować sekwencje zdarzeń w celu zwiększenia wydajności i włączania funkcji cofania i ponawiania.</span><span class="sxs-lookup"><span data-stu-id="49cff-151">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction () As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction();" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : unit -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49cff-152"><see cref="T:System.ComponentModel.Design.DesignerTransaction" /> Tworzy program, który może hermetyzować sekwencje zdarzeń w celu zwiększenia wydajności i włączania funkcji cofania i ponawiania.</span><span class="sxs-lookup"><span data-stu-id="49cff-152">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span></span></summary>
        <returns><span data-ttu-id="49cff-153">Nowe wystąpienie <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="49cff-153">A new instance of <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span></span> <span data-ttu-id="49cff-154">Po wykonaniu kroków w transakcji należy wywołać <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="49cff-154">When you complete the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-155">Ta metoda tworzy <xref:System.ComponentModel.Design.DesignerTransaction> metodę, która może służyć do hermetyzacji serii operacji.</span><span class="sxs-lookup"><span data-stu-id="49cff-155">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="49cff-156">Transakcje projektanta mogą zwiększyć wydajność, ograniczyć migotanie spowodowane przez wiele aktualizacji w trakcie procesu operacji i umożliwić cofnięcie większości operacji.</span><span class="sxs-lookup"><span data-stu-id="49cff-156">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="49cff-157">Długotrwałe operacje obejmujące wiele składników mogą spowodować wystąpienie wielu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="49cff-157">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="49cff-158">Zdarzenia te mogą powodować skutki uboczne, takie jak migotanie lub obniżenie wydajności.</span><span class="sxs-lookup"><span data-stu-id="49cff-158">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="49cff-159">W przypadku jednoczesnego działania wielu składników lub ustawiania wielu właściwości jednego składnika można poprawić wydajność, wykonując te zmiany w ramach transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-159">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="49cff-160">Niektóre operacje obsługują <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> zdarzenia i <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> i wykonują działania tylko wtedy, gdy transakcja nie jest w toku.</span><span class="sxs-lookup"><span data-stu-id="49cff-160">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="49cff-161">Więcej informacji o korzystaniu z transakcji znajduje się w dokumentacji <xref:System.ComponentModel.Design.DesignerTransaction>programu.</span><span class="sxs-lookup"><span data-stu-id="49cff-161">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction (description As String) As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : string -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="49cff-162">Tytuł lub opis nowo utworzonej transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-162">A title or description for the newly created transaction.</span></span></param>
        <summary><span data-ttu-id="49cff-163">Tworzy obiekt <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> , który może hermetyzować sekwencje zdarzeń w celu zwiększenia wydajności i włączania funkcji cofania i ponawiania prób, przy użyciu określonego opisu transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-163">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</span></span></summary>
        <returns><span data-ttu-id="49cff-164">Nowy <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="49cff-164">A new <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span></span> <span data-ttu-id="49cff-165">Po wykonaniu kroków w transakcji należy wywołać <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="49cff-165">When you have completed the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-166">Ta metoda tworzy <xref:System.ComponentModel.Design.DesignerTransaction> metodę, która może służyć do hermetyzacji serii operacji.</span><span class="sxs-lookup"><span data-stu-id="49cff-166">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="49cff-167">Transakcje projektanta mogą zwiększyć wydajność, ograniczyć migotanie spowodowane przez wiele aktualizacji w trakcie procesu operacji i umożliwić cofnięcie większości operacji.</span><span class="sxs-lookup"><span data-stu-id="49cff-167">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="49cff-168">Długotrwałe operacje obejmujące wiele składników mogą spowodować wystąpienie wielu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="49cff-168">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="49cff-169">Zdarzenia te mogą powodować skutki uboczne, takie jak migotanie lub obniżenie wydajności.</span><span class="sxs-lookup"><span data-stu-id="49cff-169">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="49cff-170">W przypadku jednoczesnego działania wielu składników lub ustawiania wielu właściwości jednego składnika można poprawić wydajność, wykonując te zmiany w ramach transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-170">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="49cff-171">Niektóre operacje obsługują <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> zdarzenia i <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> i wykonują działania tylko wtedy, gdy transakcja nie jest w toku.</span><span class="sxs-lookup"><span data-stu-id="49cff-171">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="49cff-172">Więcej informacji o korzystaniu z transakcji znajduje się w dokumentacji <xref:System.ComponentModel.Design.DesignerTransaction>programu.</span><span class="sxs-lookup"><span data-stu-id="49cff-172">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-173">Występuje, gdy ten Projektant zostanie zdezaktywowany.</span><span class="sxs-lookup"><span data-stu-id="49cff-173">Occurs when this designer is deactivated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-174">Projektant jest dezaktywowany tuż przed wyświetleniem go.</span><span class="sxs-lookup"><span data-stu-id="49cff-174">A designer is deactivated just before it is no longer displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DestroyComponent">
      <MemberSignature Language="C#" Value="public void DestroyComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DestroyComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DestroyComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member DestroyComponent : System.ComponentModel.IComponent -&gt; unit" Usage="iDesignerHost.DestroyComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="49cff-175">Składnik do zniszczenia.</span><span class="sxs-lookup"><span data-stu-id="49cff-175">The component to destroy.</span></span></param>
        <summary><span data-ttu-id="49cff-176">Niszczy określony składnik i usuwa go z kontenera projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-176">Destroys the specified component and removes it from the designer container.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetDesigner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDesigner (component As IComponent) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::IDesigner ^ GetDesigner(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetDesigner : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.IDesigner" Usage="iDesignerHost.GetDesigner component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="49cff-177"><see cref="T:System.ComponentModel.IComponent" /> Aby pobrać projektanta dla programu.</span><span class="sxs-lookup"><span data-stu-id="49cff-177">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the designer for.</span></span></param>
        <summary><span data-ttu-id="49cff-178">Pobiera wystąpienie projektanta zawierające określony składnik.</span><span class="sxs-lookup"><span data-stu-id="49cff-178">Gets the designer instance that contains the specified component.</span></span></summary>
        <returns><span data-ttu-id="49cff-179"><see cref="T:System.ComponentModel.Design.IDesigner" /> Lub<see langword="null" /> Jeśli nie istnieje Projektant określonego składnika.</span><span class="sxs-lookup"><span data-stu-id="49cff-179">An <see cref="T:System.ComponentModel.Design.IDesigner" />, or <see langword="null" /> if there is no designer for the specified component.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerHost.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="49cff-180">Nazwa typu do załadowania.</span><span class="sxs-lookup"><span data-stu-id="49cff-180">The name of the type to load.</span></span></param>
        <summary><span data-ttu-id="49cff-181">Pobiera wystąpienie określonej, w pełni kwalifikowanej nazwy typu.</span><span class="sxs-lookup"><span data-stu-id="49cff-181">Gets an instance of the specified, fully qualified type name.</span></span></summary>
        <returns><span data-ttu-id="49cff-182">Obiekt Type dla określonej nazwy typu lub <see langword="null" /> Jeśli nie można odnaleźć typu.</span><span class="sxs-lookup"><span data-stu-id="49cff-182">The type object for the specified type name, or <see langword="null" /> if the type cannot be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public bool InTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InTransaction : bool" Usage="System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-183">Pobiera wartość wskazującą, czy host projektanta jest obecnie w transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-183">Gets a value indicating whether the designer host is currently in a transaction.</span></span></summary>
        <value><span data-ttu-id="49cff-184"><see langword="true" />Jeśli transakcja jest w toku; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="49cff-184"><see langword="true" /> if a transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberSignature Language="F#" Value="member this.LoadComplete : EventHandler " Usage="member this.LoadComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-185">Występuje, gdy ten Projektant ukończy ładowanie dokumentu.</span><span class="sxs-lookup"><span data-stu-id="49cff-185">Occurs when this designer completes loading its document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-186">To zdarzenie występuje po zakończeniu ładowania dokumentu przez projektanta.</span><span class="sxs-lookup"><span data-stu-id="49cff-186">This event occurs after a designer completes loading its document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-187">Pobiera wartość wskazującą, czy host projektanta aktualnie ładuje dokument.</span><span class="sxs-lookup"><span data-stu-id="49cff-187">Gets a value indicating whether the designer host is currently loading the document.</span></span></summary>
        <value><span data-ttu-id="49cff-188"><see langword="true" />Jeśli host projektanta jest aktualnie ładowany do dokumentu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="49cff-188"><see langword="true" /> if the designer host is currently loading the document; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RootComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RootComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RootComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponent : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-189">Pobiera wystąpienie klasy bazowej używane jako składnik główny dla bieżącego projektu.</span><span class="sxs-lookup"><span data-stu-id="49cff-189">Gets the instance of the base class used as the root component for the current design.</span></span></summary>
        <value><span data-ttu-id="49cff-190">Wystąpienie klasy głównego składnika.</span><span class="sxs-lookup"><span data-stu-id="49cff-190">The instance of the root component class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-191">Ta klasa bazowa jest zwykle <xref:System.Windows.Forms.Form> wystąpieniem lub <xref:System.Windows.Forms.UserControl> ; definiuje klasę, dla której rozszerza klasę pochodną użytkownika.</span><span class="sxs-lookup"><span data-stu-id="49cff-191">This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponentClassName">
      <MemberSignature Language="C#" Value="public string RootComponentClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootComponentClassName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponentClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootComponentClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponentClassName : string" Usage="System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-192">Pobiera w pełni kwalifikowaną nazwę zaprojektowanej klasy.</span><span class="sxs-lookup"><span data-stu-id="49cff-192">Gets the fully qualified name of the class being designed.</span></span></summary>
        <value><span data-ttu-id="49cff-193">W pełni kwalifikowana nazwa klasy podstawowego składnika.</span><span class="sxs-lookup"><span data-stu-id="49cff-193">The fully qualified name of the base component class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionClosed">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosed As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosed;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-194">Dodaje procedurę obsługi zdarzeń dla <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="49cff-194">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-195">To zdarzenie występuje po zamknięciu transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-195">This event occurs after a transaction is closed.</span></span>  
  
 <span data-ttu-id="49cff-196">Transakcja może czasami zmienić wiele wartości.</span><span class="sxs-lookup"><span data-stu-id="49cff-196">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="49cff-197">Metody transakcji umożliwiają zapobieganie problemom z wydajnością i migotaniem, unikając powtarzanego przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="49cff-197">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="49cff-198">Te metody opóźniają przetwarzanie do momentu zamknięcia transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-198">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionClosing">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosing As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosing;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-199">Dodaje procedurę obsługi zdarzeń dla <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="49cff-199">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-200">To zdarzenie występuje tuż przed ukończeniem transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-200">This event occurs just before a transaction is completed.</span></span>  
  
 <span data-ttu-id="49cff-201">Transakcja może czasami zmienić wiele wartości.</span><span class="sxs-lookup"><span data-stu-id="49cff-201">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="49cff-202">Metody transakcji umożliwiają zapobieganie problemom z wydajnością i migotaniem, unikając powtarzanego przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="49cff-202">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="49cff-203">Te metody opóźniają przetwarzanie do momentu zamknięcia transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-203">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionDescription">
      <MemberSignature Language="C#" Value="public string TransactionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionDescription" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionDescription : string" Usage="System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-204">Pobiera opis bieżącej transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-204">Gets the description of the current transaction.</span></span></summary>
        <value><span data-ttu-id="49cff-205">Opis bieżącej transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-205">A description of the current transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-206">Opis jest ostatnim opisem określonym przy użyciu <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span><span class="sxs-lookup"><span data-stu-id="49cff-206">The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpened">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpened" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpened;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpened : EventHandler " Usage="member this.TransactionOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-207">Dodaje procedurę obsługi zdarzeń dla <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="49cff-207">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-208">To zdarzenie występuje, gdy transakcja została rozpoczęta.</span><span class="sxs-lookup"><span data-stu-id="49cff-208">This event occurs when a transaction has begun.</span></span>  
  
 <span data-ttu-id="49cff-209">Transakcja może czasami zmienić wiele wartości.</span><span class="sxs-lookup"><span data-stu-id="49cff-209">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="49cff-210">Metody transakcji umożliwiają zapobieganie problemom z wydajnością i migotaniem, unikając powtarzanego przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="49cff-210">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="49cff-211">Te metody opóźniają przetwarzanie do momentu zamknięcia transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-211">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpening">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpening" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpening;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpening : EventHandler " Usage="member this.TransactionOpening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49cff-212">Dodaje procedurę obsługi zdarzeń dla <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="49cff-212">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49cff-213">To zdarzenie występuje, gdy zostanie rozpoczęta transakcja.</span><span class="sxs-lookup"><span data-stu-id="49cff-213">This event occurs when a transaction is about to begin.</span></span>  
  
 <span data-ttu-id="49cff-214">Ta metoda umożliwia klientom hosta projektanta wykonywanie operacji, zanim inne procedury obsługi zostaną powiadomione o rozpoczęciu transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-214">This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</span></span> <span data-ttu-id="49cff-215">Określony program obsługi jest wywoływany tylko wtedy, gdy pierwsze <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> wywołanie zostało wykonane.</span><span class="sxs-lookup"><span data-stu-id="49cff-215">The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made.</span></span> <span data-ttu-id="49cff-216">Kolejne wywołania nie generują tego zdarzenia, dopóki nie zostaną usunięte wszystkie obiekty transakcji.</span><span class="sxs-lookup"><span data-stu-id="49cff-216">Subsequent calls do not generate this event until all transaction objects have been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
  </Members>
</Type>
