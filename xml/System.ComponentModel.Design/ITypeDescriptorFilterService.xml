<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19f185dc54e30b22d5d6351c4fced703878dc52a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69348641" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapewnia interfejs do modyfikowania zestawu deskryptorów elementów członkowskich dla składnika w trybie projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> Interfejs udostępnia interfejs, który umożliwia modyfikację właściwości, zdarzeń i atrybutów na poziomie klasy składnika w czasie projektowania. Ta modyfikacja odbywa się za pomocą zestawu deskryptorów udostępnianych przez <xref:System.ComponentModel.TypeDescriptor>składnik. Deskryptor typu będzie wysyłać zapytania do lokacji składnika dla <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> usługi i, jeśli istnieje, deskryptor typu przekaże wszystkie metadane zebrane do tej usługi. Następnie usługa może modyfikować metadane poprzez dodawanie, usuwanie i modyfikowanie istniejących cech składnika.  
  
 Na przykład właściwości składnika można modyfikować za pomocą wywołania <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> metody. Usługa Filter uzyskuje słownik zawierający nazwy właściwości i ich deskryptory właściwości typu <xref:System.ComponentModel.PropertyDescriptor>. Modyfikacje są implementowane przy użyciu następującej logiki.  
  
|Modyfikacji|Implementacja|  
|------------------|--------------------|  
|Praw|Usuń odpowiedni wpis w słowniku.|  
|Dodawanie|Dodaj odpowiedni wpis do słownika.|  
|Budowę|Wywołaj istniejące metody deskryptora właściwości, Zastąp skojarzony wpis deskryptora właściwości lub Zastąp całą parę klucz-wartość właściwości w słowniku.|  
  
 Wartość zwracana przez <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> określa, czy ten zestaw właściwości jest stały. W przypadku powrocie `true` <xref:System.ComponentModel.TypeDescriptor> tej metody element dla tego składnika może buforować wyniki. Ta pamięć podręczna jest utrzymywana do momentu, gdy składnik nie <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> zostanie pobrany lub metoda deskryptora typu jest wywoływana.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje projektanta, który używa <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> do filtrowania kolekcji atrybutów dowolnego nowego lub istniejącego <xref:System.Windows.Forms.Button> , aby dodać atrybut projektanta dla nowego projektanta przed załadowaniem lub ponownym załadowaniem projektanta dla przycisku.  
  
 Aby użyć tego przykładu, Dodaj kod do projektu Windows Forms i Załaduj składniki z biblioteki klas do przybornika.  
  
 Zobacz [również przewodnik: Automatyczne wypełnianie przybornika składnikami](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)niestandardowymi.  
  
 Dodaj kilka przycisków do formularza. `ButtonDesignerFilterComponent` Dodaj do formularza i pojawi się na pasku składnika. Spowoduje to dodanie, który implementuje <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>jako dostawcę usług trybu projektowania. `ButtonDesignerFilterService` `ButtonDesignerFilterComponent` Istniejące lub nowe <xref:System.Windows.Forms.Button> obiekty w formularzu zaczynają `ButtonDesignerFilterService` następować kolorowe cykle po zastąpieniu projektanta dla każdego istniejącego `ColorCycleButtonDesigner`i nowego przycisku z. Przyciski będą miały kolor cykl po przesunięciu wskaźnika myszy nad nimi, a Alternatywnie kontynuuje cykliczne lub resetuje kolory tła i pierwszego `MouseLeave` planu dla zdarzeń. Nowe <xref:System.Windows.Forms.Button> obiekty otrzymają `ColorCycleButtonDesigner` `ButtonDesignerFilterComponent` <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>metodę, która została załadowana, dopóki nie zostanie usunięta i zastąpi pierwotną. `ButtonDesignerFilterService` <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> Klasa w tym przykładzie <xref:System.Windows.Forms.Button> jest skojarzona z `ColorCycleButtonDesigner`. `ColorCycleButton`  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Aby odfiltrować deskryptory elementów członkowskich uwidocznione <see cref="T:System.ComponentModel.TypeDescriptor" />przez, zaimplementuj ten interfejs na składniku i <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />Zastąp metodę <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> , <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, lub metody tej klasy w celu odfiltrowania odpowiednio atrybutów, zdarzeń lub właściwości.</para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Składnik do filtrowania atrybutów.</param>
        <param name="attributes">Słownik atrybutów, które można modyfikować.</param>
        <summary>Filtruje atrybuty, które składnik ujawnia przez <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns><see langword="true" />Jeśli zestaw filtrowanych atrybutów ma być buforowany; <see langword="false" /> Jeśli usługa filtru musi ponownie wykonać zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik zażąda zestawu atrybutów dla składnika. Atrybuty są dodawane do słownika z atrybutem <xref:System.Attribute.TypeId%2A> jako klucze i faktyczny atrybut jako wartość. Realizatorzy tej usługi mogą dodawać, usuwać lub modyfikować istniejące wpisy atrybutów w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zwracaj <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ powtarzające się zapytania do usługi filtru deskryptora typu mogą obniżyć wydajność.</para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Składnik służący do filtrowania zdarzeń dla.</param>
        <param name="events">Słownik zdarzeń, które można modyfikować.</param>
        <summary>Filtruje zdarzenia, które składnik ujawnia przez <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns><see langword="true" />Jeśli zestaw filtrowanych zdarzeń ma być buforowany; <see langword="false" /> Jeśli usługa filtru musi ponownie wykonać zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik zażąda zestawu zdarzeń dla składnika. Zdarzenia są dodawane do słownika z nazwami zdarzeń jako klucze i odpowiednie <xref:System.ComponentModel.EventDescriptor> obiekty jako wartości. Realizatorzy tej usługi mogą dodawać, usuwać lub zmieniać wpisy zdarzeń w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zwracaj <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ powtarzające się zapytania do usługi filtru deskryptora typu mogą obniżyć wydajność.</para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Składnik służący do filtrowania właściwości.</param>
        <param name="properties">Słownik właściwości, które można modyfikować.</param>
        <summary>Filtruje właściwości, które składnik ujawnia przez <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns><see langword="true" />Jeśli zestaw filtrowanych właściwości ma być buforowany; <see langword="false" /> Jeśli usługa filtru musi ponownie wykonać zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik zażąda zestawu właściwości dla składnika. Właściwości są dodawane do słownika z nazwami właściwości jako klucze i odpowiednie <xref:System.ComponentModel.PropertyDescriptor> obiekty jako wartości. Realizatorzy tej usługi mogą dodawać, usuwać lub modyfikować wpisy właściwości w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zwracaj <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ powtarzające się zapytania do usługi filtru deskryptora typu mogą obniżyć wydajność.</para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>
