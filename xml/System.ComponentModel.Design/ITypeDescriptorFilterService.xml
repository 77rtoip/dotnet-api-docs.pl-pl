<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92756848b5b61c9983d7fef32dfd95381b9ff4b4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705720" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs, aby zmodyfikować zestaw deskryptorów elementu członkowskiego dla składnika w trybie projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> Interfejsu udostępnia interfejs, który umożliwia modyfikowanie właściwości, zdarzeń i atrybuty klasy składnika w czasie projektowania. Ta modyfikacja odbywa się przez zestaw deskryptorów dostępnych za pośrednictwem składnika <xref:System.ComponentModel.TypeDescriptor>. Deskryptor typu wysyła kwerendy do witryny składnika <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> usługi, a jeśli istnieje, deskryptor typu przekazuje wszystkie metadane zostały zebrane do tej usługi. Usługę można następnie zmodyfikować metadanych przez dodawanie, usuwanie i zmianę istniejącej właściwości składnika.  
  
 Na przykład można zmodyfikować właściwości składnika poprzez wywołanie <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> metody. Usługa filtru uzyskuje słownik zawierający nazw właściwości i ich deskryptorów właściwości typu <xref:System.ComponentModel.PropertyDescriptor>. Zmiany są implementowane za pomocą następujących logiki.  
  
|Modyfikowanie|Implementacja|  
|------------------|--------------------|  
|Usuwanie|Usuń odpowiadający mu wpis w słowniku.|  
|Dodawanie|Dodaj odpowiedni wpis do słownika.|  
|Zmiany|Wywołanie metody deskryptora właściwości, zastąp wpis deskryptora właściwości skojarzonej lub Zastąp całą właściwości parę klucza i wartości w słowniku.|  
  
 Wartość zwracana <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> Określa, czy ten zestaw właściwości został rozwiązany. Jeśli ta metoda zwraca `true`, <xref:System.ComponentModel.TypeDescriptor> dla tego składnika można buforować wyniki. Ta pamięć podręczna jest obsługiwany, dopóki albo składnika jest bezużytecznych lub <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> wywoływana jest metoda deskryptor typu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje projektanta, który używa <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> do filtrowania kolekcji atrybutów z każdym nowym lub istniejącym <xref:System.Windows.Forms.Button> można dodać atrybutu projektanta dla nowego projektanta przed ładowania lub ponownego ładowania projektanta dla przycisku.  
  
 Aby użyć przykładowego, Dodaj kod do projektu formularzy systemu Windows i ładowanie składników z biblioteki klas do przybornika.  
  
 Zobacz też [wskazówki: automatyczne zapełnianie przybornika składnikami niestandardowe](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 Niektóre przyciski dodawanie do formularza. Dodaj `ButtonDesignerFilterComponent` do formularza, i pojawi się w pasku składnika. `ButtonDesignerFilterComponent` Doda `ButtonDesignerFilterService`, który implementuje <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, jako dostawca usług tryb projektowania. Istniejącego lub nowego <xref:System.Windows.Forms.Button> obiektów w formularzu zostanie rozpoczęta kolor cyklicznie po `ButtonDesignerFilterService` zastępuje projektanta dla wszystkich istniejących i nowych przycisków z `ColorCycleButtonDesigner`. Przyciski będzie kolor cyklu po Przesuń wskaźnik myszy nad nimi i również kontynuować cyklicznie lub zresetować kolory pierwszego planu i tła na `MouseLeave` zdarzenia. Nowy <xref:System.Windows.Forms.Button> otrzymają obiektów `ColorCycleButtonDesigner` za pośrednictwem <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> metody `ButtonDesignerFilterService` który został załadowany do `ButtonDesignerFilterComponent` zostanie usunięty i zastępuje oryginalną <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>. `ColorCycleButton` Klasy w tym przykładzie jest <xref:System.Windows.Forms.Button> skojarzone z `ColorCycleButtonDesigner`.  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Aby filtrować deskryptory Członkowskie udostępnione przez <see cref="T:System.ComponentModel.TypeDescriptor" />, implementuje ten interfejs składnika i zastąpić <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, lub <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> metody tej klasy do filtrowania atrybutów, zdarzenia lub właściwości, odpowiednio.</para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Składnik do filtrowania atrybutów.</param>
        <param name="attributes">Słownik zawierający atrybuty, które mogą być modyfikowane.</param>
        <summary>Filtry atrybutów, które udostępnia składnika za pomocą <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>
          <see langword="true" /> w przypadku zestawu atrybutów filtrowane buforowane; <see langword="false" /> Jeśli usługa filtru musi ponownie zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik zażąda zestaw atrybutów dla składnika. Atrybuty zostaną dodane do słownika przy użyciu atrybutu <xref:System.Attribute.TypeId%2A> jako klucze i atrybut rzeczywiste jako wartość. Implementacje tej usługi można dodać, usunąć lub zmienić istniejący atrybut wpisów w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zwraca <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ powtarzany zapytania do usługi filtru deskryptora typu może obniżyć wydajność.</para>
        </block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Aby filtrować zdarzenia dla składnika.</param>
        <param name="events">Słownik zdarzeń, które mogą być modyfikowane.</param>
        <summary>Filtruje zdarzenia, które udostępnia składnika za pomocą <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>
          <see langword="true" /> Jeśli zestaw zdarzeń filtrowane jest buforowane; <see langword="false" /> Jeśli usługa filtru musi ponownie zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik zażąda zestaw zdarzeń dla składnika. Zdarzenia są dodawane do słownika z nazwami zdarzeń jako klucze i odpowiadający mu <xref:System.ComponentModel.EventDescriptor> obiektów jako wartości. Implementacje tej usługi można dodać, usunąć lub zmienić zdarzeń wpisów w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zwraca <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ powtarzany zapytania do usługi filtru deskryptora typu może obniżyć wydajność.</para>
        </block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Składnik do właściwości filtru.</param>
        <param name="properties">Słownik właściwości, które mogą być modyfikowane.</param>
        <summary>Filtry właściwości, które udostępnia składnika za pomocą <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>
          <see langword="true" /> Jeśli ten zestaw właściwości filtrowane jest buforowane; <see langword="false" /> Jeśli usługa filtru musi ponownie zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik żąda zbiór właściwości dla składnika. Właściwości są dodawane do słownika z nazwami właściwości jako klucze i odpowiadający mu <xref:System.ComponentModel.PropertyDescriptor> obiektów jako wartości. Implementacje tej usługi można dodać, usunąć lub zmienić właściwości wpisów w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zwraca <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ powtarzany zapytania do usługi filtru deskryptora typu może obniżyć wydajność.</para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>