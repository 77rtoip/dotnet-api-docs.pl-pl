<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="560d1d0f3f0ac591966c66d848c794269545cf1d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51919440" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs, aby zmodyfikować zestaw deskryptorów elementu członkowskiego dla składnika w trybie projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> Interfejsu udostępnia interfejs, który umożliwia modyfikowanie właściwości, zdarzeń i atrybuty klasy składnika w czasie projektowania. Ta modyfikacja odbywa się przez zestaw deskryptorów udostępnianych przez składnik za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>. Deskryptor typu zapytanie składnika witryny dla <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> usługi i, jeśli istnieje, deskryptor typu zostaną przetworzone wszystkie metadane zostały zebrane do tej usługi. Usługa następnie można zmodyfikować metadanych przez dodawanie, usuwanie i zmienianie właściwości istniejącego składnika.  
  
 Na przykład, można zmodyfikować właściwości składnika za pomocą wywołania <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> metody. Filtrowanie usługi uzyskuje słownika, która zawiera nazwy właściwości i ich deskryptorów właściwości typu <xref:System.ComponentModel.PropertyDescriptor>. Modyfikacje są implementowane za pomocą następujących logiki.  
  
|Modyfikacja|Implementacja|  
|------------------|--------------------|  
|Usuwanie|Usuń odpowiadający mu wpis w słowniku.|  
|Dodawanie|Dodaj odpowiedni wpis do słownika.|  
|Zmiany|Wywoływanie istniejących metod deskryptora właściwości, zastąp wpis deskryptora właściwości skojarzonej lub Zastąp pary klucz/wartość właściwości całego w słowniku.|  
  
 Wartość zwracana przez <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> decyduje, jeśli jest stała tym zestawem właściwości. Jeśli ta metoda zwraca `true`, <xref:System.ComponentModel.TypeDescriptor> dla tego składnika można buforować wyniki. Ta pamięć podręczna są utrzymywane, aż do składnika albo jest bezużyteczne lub <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> zostanie wywołana metoda deskryptor typu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje projektanta, który używa <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> do filtrowania kolekcji atrybutów żadnych nowych lub istniejących <xref:System.Windows.Forms.Button> Aby dodać atrybut projektanta dla nowego projektanta przed ładowania lub ponowne załadowanie projektanta dla przycisku.  
  
 Skorzystaj z przykładu, Dodaj kod do projektu Windows Forms i ładowanie składników z biblioteki klas do przybornika.  
  
 Zobacz też [wskazówki: automatyczne zapełnianie przybornika składnikami niestandardowe](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 Dodaj kilku przycisków do formularza. Dodaj `ButtonDesignerFilterComponent` do formularza, a pojawi się w zasobniku składnika. `ButtonDesignerFilterComponent` Doda `ButtonDesignerFilterService`, który implementuje <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, jako dostawcę usług w trybie projektowania. Istniejące lub nowe <xref:System.Windows.Forms.Button> obiektów w formularzu rozpocznie się kolor cykliczny po `ButtonDesignerFilterService` zastępuje projektanta dla każdego przycisku przy użyciu istniejących i nowych `ColorCycleButtonDesigner`. Przyciski będą kolor cykl po Przesuń wskaźnik myszy nad nimi i na przemian nadal cykliczny lub zresetować kolory pierwszego planu i tła `MouseLeave` zdarzenia. Nowe <xref:System.Windows.Forms.Button> otrzymają obiektów `ColorCycleButtonDesigner` za pośrednictwem <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> metody `ButtonDesignerFilterService` , został załadowany, dopóki `ButtonDesignerFilterComponent` zostanie usunięty i zastępuje oryginalne <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>. `ColorCycleButton` Klasa w tym przykładzie jest <xref:System.Windows.Forms.Button> skojarzone z `ColorCycleButtonDesigner`.  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Do filtrowania deskryptory elementu członkowskiego udostępniany przez <see cref="T:System.ComponentModel.TypeDescriptor" />, implementować ten interfejs składnika i zastąpić <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, lub <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> metody tej klasy do filtrowania atrybutów, zdarzenia lub właściwości, odpowiednio.</para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Składnik do filtrowania atrybutów.</param>
        <param name="attributes">Słownik atrybutów, które mogą być modyfikowane.</param>
        <summary>Filtry atrybutów, które składnik udostępnia za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns><see langword="true" /> Jeśli zestaw filtrowanych atrybutów jest przechowywanie w pamięci podręcznej; <see langword="false" /> Jeśli usługa filtru musi ponownie zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik zażąda zestaw atrybutów dla składnika. Atrybuty są dodawane do słownika przez atrybut <xref:System.Attribute.TypeId%2A> jako klucze i rzeczywiste atrybutu jako wartość. Implementacje tej usługi można dodać, usunąć lub zmienić istniejące wpisy atrybut w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zwróć <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ jest powtarzany, zapytania, aby usługa filtru deskryptor typu może obniżyć wydajność.</para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Składnik, aby filtrować zdarzenia dla.</param>
        <param name="events">Słownik zdarzeń, które mogą być modyfikowane.</param>
        <summary>Filtruje zdarzenia, które składnik udostępnia za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns><see langword="true" /> Jeśli zbiór odfiltrowanymi zdarzeniami jest przechowywanie w pamięci podręcznej; <see langword="false" /> Jeśli usługa filtru musi ponownie zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik zażąda zestaw zdarzeń dla składnika. Zdarzenia są dodawane do słownika z nazwami zdarzeń jako kluczami i odpowiedni <xref:System.ComponentModel.EventDescriptor> obiektów jako wartości. Implementacje tej usługi można dodać, usunąć lub zmienić wpisy zdarzeń w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zwróć <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ jest powtarzany, zapytania, aby usługa filtru deskryptor typu może obniżyć wydajność.</para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Składnik do właściwości filtru.</param>
        <param name="properties">Słownik właściwości, które mogą być modyfikowane.</param>
        <summary>Filtry właściwości, które składnik udostępnia za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns><see langword="true" /> Jeśli zestaw właściwości filtrowane jest przechowywanie w pamięci podręcznej; <see langword="false" /> Jeśli usługa filtru musi ponownie zapytanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik zażąda zbiór właściwości dla składnika. Właściwości są dodawane do słownika z nazwami właściwości jako klucze i odpowiedni <xref:System.ComponentModel.PropertyDescriptor> obiektów jako wartości. Implementacje tej usługi można dodać, usunąć lub zmienić właściwość wpisów w słowniku.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zwróć <see langword="false" /> tylko wtedy, gdy jest to konieczne, ponieważ jest powtarzany, zapytania, aby usługa filtru deskryptor typu może obniżyć wydajność.</para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>