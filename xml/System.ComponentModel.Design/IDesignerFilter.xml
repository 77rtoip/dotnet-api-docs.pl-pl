<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dbad6fdfb09f4fc16d8d85beafb69dfaa4f5eea" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37696283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0f497-101">Udostępnia interfejs umożliwiający projektanta do uzyskania dostępu i filtrowania słowników <see cref="T:System.ComponentModel.TypeDescriptor" /> który przechowuje deskryptorów właściwości, atrybutów i zdarzenia, ujawniające przez projektanta składników środowiska czasu projektowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f497-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f497-102"><xref:System.ComponentModel.Design.IDesignerFilter> Włącza projektanta do filtrowania zestawu właściwości, atrybutów i zdarzenia deskryptorów określających ogólną jego skojarzony składnik udostępnia za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="0f497-103">Metody tego interfejsu, których nazwy zaczynają się od `Pre` są wywoływane tuż przed metod, których nazwy zaczynają się od `Post`.</span><span class="sxs-lookup"><span data-stu-id="0f497-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="0f497-104">Aby dodać atrybut, zdarzenia lub deskryptorów właściwości, należy użyć <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, lub <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="0f497-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="0f497-105">Jeśli chcesz zmienić lub usunąć atrybutu, zdarzenie lub deskryptorów właściwości użyj <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, lub <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="0f497-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f497-106">W poniższym przykładzie pokazano nadpisanie <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> , dodaje właściwość typu projektanta do okna właściwości po zaznaczeniu projektanta formantu w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="0f497-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="0f497-107">Zobacz przykład <xref:System.Windows.Forms.Design.ControlDesigner> klasy, aby uzyskać kompletny przykład projektanta, który używa <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="0f497-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="0f497-108">
            <see cref="T:System.Attribute" /> Obiektów klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="0f497-109">Klucze w słowniku atrybutów są <see cref="P:System.Attribute.TypeId" /> wartości atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f497-110">W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta zmienić lub usunąć elementy z zestawu atrybutów udostępnianych za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f497-111">Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku atrybutów, które składnik skojarzony projektanta implementowania interfejsu udostępnia za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="0f497-112">Klucze w słowniku atrybutów są identyfikatora typu atrybutów.</span><span class="sxs-lookup"><span data-stu-id="0f497-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="0f497-113">Obiekty są typu <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="0f497-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="0f497-114">Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f497-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="0f497-115">Identyfikator typu atrybutu może być dowolny obiekt.</span><span class="sxs-lookup"><span data-stu-id="0f497-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="0f497-116">Domyślnie <xref:System.Attribute> zwraca jego <xref:System.Type> jako wartość jej <xref:System.Attribute.TypeId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0f497-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="0f497-117">Możesz sprawdzić <xref:System.Attribute.TypeId%2A> atrybutu w słownik równoważności przy użyciu znanego <xref:System.Attribute.TypeId%2A> dla atrybutu je zidentyfikować lub użyj <xref:System.Reflection> do identyfikowania sam obiekt atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0f497-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="0f497-118">Gdy atrybut, który ma taką samą <xref:System.Attribute.TypeId%2A> istniejących lub odziedziczonego atrybutu jest dodawany do składnika, nowy atrybut zastępuje stare atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0f497-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="0f497-119">W przypadku wielu atrybutów nowy atrybut tego samego typu spowoduje zastąpienie wszelkich poprzednich atrybut typu.</span><span class="sxs-lookup"><span data-stu-id="0f497-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="0f497-120">Jednak niektóre typy atrybutów zwraca <xref:System.Attribute.TypeId%2A> selektywnie który odróżnia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0f497-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="0f497-121">Na przykład w celu zapewnienia różnego rodzaju jednocześnie active projektantów dla typu, takie jak <xref:System.ComponentModel.Design.IRootDesigner> i <xref:System.ComponentModel.Design.IDesigner>, <xref:System.ComponentModel.DesignerAttribute> klasy zwraca <xref:System.Attribute.TypeId%2A> , który jednoznacznie identyfikuje atrybut i podstawowej projektanta Typ.</span><span class="sxs-lookup"><span data-stu-id="0f497-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="0f497-122"><xref:System.ComponentModel.DesignerAttribute> Konstruktor pozwala na określenie typu podstawowego projektanta projektanta oprócz jego określonego typu i <xref:System.ComponentModel.DesignerAttribute> zwraca <xref:System.Attribute.TypeId%2A> , które odzwierciedla to.</span><span class="sxs-lookup"><span data-stu-id="0f497-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="0f497-123">W związku z tym po dodaniu nowego <xref:System.ComponentModel.DesignerAttribute> za pomocą projektanta typ bazowy tego samego typu jako typu podstawowego projektanta do istniejącego <xref:System.ComponentModel.DesignerAttribute>, stary atrybut jest zastępowany przy użyciu nowego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0f497-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0f497-124">
            <para>Można filtrować bezpośrednio słownik, który jest dostępny za pośrednictwem <paramref name="attributes" /> parametr lub możesz pozostawić bez zmian. Jeśli w przesłaniania tej metody wywoływać implementację podstawową, po wykonaniu własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-124">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="0f497-125">
            <see cref="T:System.ComponentModel.EventDescriptor" /> Obiekty reprezentujące zdarzeń klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-125">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="0f497-126">Klucze w słowniku zdarzenia są nazwami zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-126">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f497-127">W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta zmienić lub usunąć elementy z zestawu zdarzeń, udostępnianych za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-127">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f497-128">Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku zdarzenia, które są udostępniane za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-128">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="0f497-129">Klucze w słowniku zdarzenia są nazwy zaistniałych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0f497-129">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="0f497-130">Obiekty są typu <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-130">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="0f497-131">Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f497-131">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0f497-132">
            <para>Można filtrować bezpośrednio słownik, który jest dostępny za pośrednictwem <paramref name="events" /> parametr lub możesz pozostawić bez zmian. Jeśli w przesłaniania tej metody wywoływać implementację podstawową, po wykonaniu własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-132">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="0f497-133">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> Obiekty reprezentujące właściwości klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-133">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="0f497-134">Klucze ze słownika właściwości są nazwy właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-134">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f497-135">W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta zmienić lub usunąć elementy z zestawu właściwości udostępnianych za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-135">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f497-136">Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku właściwości, które są udostępniane za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-136">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="0f497-137">Klucze ze słownika właściwości są nazwy właściwości.</span><span class="sxs-lookup"><span data-stu-id="0f497-137">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="0f497-138">Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-138">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="0f497-139">Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f497-139">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0f497-140">
            <para>Można filtrować bezpośrednio słownik, który jest dostępny za pośrednictwem <paramref name="properties" /> parametr lub możesz pozostawić bez zmian. Jeśli w przesłaniania tej metody wywoływać implementację podstawową, po wykonaniu własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-140">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="0f497-141">
            <see cref="T:System.Attribute" /> Obiektów klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-141">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="0f497-142">Klucze w słowniku atrybutów są <see cref="P:System.Attribute.TypeId" /> wartości atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-142">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f497-143">W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta do dodawania elementów do zestawu atrybutów udostępnianych za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-143">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f497-144">Ta metoda zapewnia sposób, aby dodać elementy do słownika atrybutów, które składnik skojarzony projektanta implementowania interfejsu udostępnia za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-144">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="0f497-145">Klucze w słowniku atrybutów są identyfikatora typu atrybutów.</span><span class="sxs-lookup"><span data-stu-id="0f497-145">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="0f497-146">Obiekty są typu <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="0f497-146">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="0f497-147">Ta metoda jest wywoływana tuż przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f497-147">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="0f497-148">Identyfikator typu atrybutu może być dowolny obiekt.</span><span class="sxs-lookup"><span data-stu-id="0f497-148">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="0f497-149">Domyślnie <xref:System.Attribute> zwraca jego <xref:System.Type> jako wartość jej <xref:System.Attribute.TypeId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0f497-149">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="0f497-150">Możesz sprawdzić <xref:System.Attribute.TypeId%2A> atrybutu w słownik równoważności przy użyciu znanego <xref:System.Attribute.TypeId%2A> dla atrybutu je zidentyfikować lub użyj <xref:System.Reflection> do identyfikowania sam obiekt atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0f497-150">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="0f497-151">Gdy atrybut, który ma taką samą <xref:System.Attribute.TypeId%2A> istniejących lub odziedziczonego atrybutu jest dodawany do składnika, nowy atrybut zastępuje stare atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0f497-151">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="0f497-152">W przypadku wielu atrybutów nowy atrybut tego samego typu spowoduje zastąpienie wszelkich poprzednich atrybut typu.</span><span class="sxs-lookup"><span data-stu-id="0f497-152">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="0f497-153">Jednak niektóre typy atrybutów zwraca <xref:System.Attribute.TypeId%2A> selektywnie który odróżnia atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0f497-153">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="0f497-154">Na przykład w celu zapewnienia różnego rodzaju jednocześnie active projektantów dla typu, takie jak <xref:System.ComponentModel.Design.IRootDesigner> i <xref:System.ComponentModel.Design.IDesigner>, <xref:System.ComponentModel.DesignerAttribute> klasy zwraca <xref:System.Attribute.TypeId%2A> , który jednoznacznie identyfikuje atrybut i podstawowej projektanta Typ.</span><span class="sxs-lookup"><span data-stu-id="0f497-154">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="0f497-155"><xref:System.ComponentModel.DesignerAttribute> Konstruktor pozwala na określenie typu podstawowego projektanta projektanta oprócz jego określonego typu i <xref:System.ComponentModel.DesignerAttribute> zwraca <xref:System.Attribute.TypeId%2A> , które odzwierciedla to.</span><span class="sxs-lookup"><span data-stu-id="0f497-155">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="0f497-156">W związku z tym po dodaniu nowego <xref:System.ComponentModel.DesignerAttribute> za pomocą projektanta typ bazowy tego samego typu jako typu podstawowego projektanta do istniejącego <xref:System.ComponentModel.DesignerAttribute>, stary atrybut jest zastępowany przy użyciu nowego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0f497-156">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0f497-157">
            <para>Można filtrować bezpośrednio słownik, który jest dostępny za pośrednictwem <paramref name="attributes" /> parametr lub możesz pozostawić bez zmian. Jeśli w przesłaniania tej metody wywoływać implementację podstawową, po wykonaniu własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-157">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="0f497-158">
            <see cref="T:System.ComponentModel.EventDescriptor" /> Obiekty reprezentujące zdarzeń klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-158">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="0f497-159">Klucze w słowniku zdarzenia są nazwami zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-159">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f497-160">W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta do dodawania elementów do zestaw zdarzeń, udostępnianych za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-160">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f497-161">Ta metoda zapewnia sposób, aby dodać elementy do słownika zdarzenia, które projektanta udostępnia za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-161">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="0f497-162">Klucze w słowniku zdarzenia są nazwy zaistniałych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0f497-162">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="0f497-163">Obiekty są typu <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-163">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="0f497-164">Ta metoda jest wywoływana tuż przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f497-164">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0f497-165">
            <para>Można bezpośrednio modyfikować słownik, który jest dostępny za pośrednictwem <paramref name="events" /> parametr lub możesz pozostawić bez zmian. Jeśli w przesłaniania tej metody należy wywoływać implementację podstawową przed wykonaniem własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-165">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="0f497-166">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> Obiekty reprezentujące właściwości klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-166">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="0f497-167">Klucze ze słownika właściwości są nazwy właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-167">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f497-168">W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta do dodawania elementów do zestawu właściwości udostępnianych za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-168">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f497-169">Ta metoda zapewnia sposób, aby dodać elementy do słownika właściwości, których Projektant udostępnia za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-169">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="0f497-170">Klucze ze słownika właściwości są nazwy właściwości.</span><span class="sxs-lookup"><span data-stu-id="0f497-170">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="0f497-171">Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0f497-171">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="0f497-172">Ta metoda jest wywoływana tuż przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f497-172">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0f497-173">
            <para>Można bezpośrednio modyfikować słownik, który jest dostępny za pośrednictwem <paramref name="properties" /> parametr lub możesz pozostawić bez zmian. Jeśli w przesłaniania tej metody należy wywoływać implementację podstawową przed wykonaniem własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0f497-173">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>