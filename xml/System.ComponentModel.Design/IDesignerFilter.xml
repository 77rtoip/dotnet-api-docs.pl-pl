<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d862169c56567e926bc58c0f8ad535e530ee90e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs umożliwiający projektanta dostępu i filtrowanie słowniki <see cref="T:System.ComponentModel.TypeDescriptor" /> który przechowuje deskryptorów właściwości, atrybut i zdarzenia, które projektanta składników mogą uwidaczniać środowiska czasu projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter> Włącza projektanta filtrować zestaw deskryptorów właściwości, atrybut i zdarzenia, które ujawnia jej składnik skojarzony za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>. Metody tego interfejsu, których nazwy zaczynają się od `Pre` są wywoływane bezpośrednio przed metody, których nazwy zaczynają się od `Post`.  
  
 Aby dodać atrybut, zdarzenia lub deskryptorów właściwości, należy użyć <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, lub <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> metody.  
  
 Jeśli chcesz zmienić lub usunąć atrybutu, zdarzenia lub deskryptorów właściwości <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, lub <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano zastępująca <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> dodająca właściwości projektanta do okna właściwości, gdy jest wybrana kontrolka projektanta w czasie projektowania. Zobacz przykład <xref:System.Windows.Forms.Design.ControlDesigner> klasy pełny przykład projektanta, który używa <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Attribute" /> Obiektów w klasie składnika. Klucze w słowniku atrybutów są <see cref="P:System.Attribute.TypeId" /> wartości atrybutów.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, pozwala na zmianę lub usunięcie elementów z zestawu atrybutów, które udostępnia ona za pomocą projektanta <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku atrybutów, które udostępnia składnik skojarzony projektanta implementacja interfejsu za pomocą <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku atrybutów są identyfikatora typu atrybutów. Obiekty są typu <xref:System.Attribute>. Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.  
  
 Identyfikator typu atrybutu może być dowolny obiekt. Domyślnie <xref:System.Attribute> zwraca jego <xref:System.Type> jako wartości jego <xref:System.Attribute.TypeId%2A> właściwości. Możesz sprawdzić <xref:System.Attribute.TypeId%2A> atrybutu w słowniku do pełnienia roli równoważnika ze znanego <xref:System.Attribute.TypeId%2A> do identyfikacji lub użyj atrybutu <xref:System.Reflection> do identyfikowania sam obiekt atrybutu.  
  
 Gdy atrybut, który ma taką samą <xref:System.Attribute.TypeId%2A> istniejących lub odziedziczonego atrybutu jest dodawany do składnika, nowy atrybut zastępuje stary atrybut. W przypadku wielu atrybutów nowy atrybut tego samego typu spowoduje zastąpienie wszelkich poprzednich atrybutu typu. Jednak niektóre typy atrybutów zwraca <xref:System.Attribute.TypeId%2A> selektywnie który odróżnia atrybutu. Na przykład w celu zapewnienia różnego rodzaju projektantów jednocześnie aktywne dla typu, takich jak <xref:System.ComponentModel.Design.IRootDesigner> i <xref:System.ComponentModel.Design.IDesigner>, <xref:System.ComponentModel.DesignerAttribute> klasy zwraca <xref:System.Attribute.TypeId%2A> który unikatowo identyfikuje zarówno atrybut i Projektant podstawowej Typ. <xref:System.ComponentModel.DesignerAttribute> Konstruktor umożliwia określenie typu podstawowego projektanta projektanta oprócz jego określonego typu i <xref:System.ComponentModel.DesignerAttribute> zwraca <xref:System.Attribute.TypeId%2A> , które odzwierciedla to. W związku z tym podczas dodawania nowego <xref:System.ComponentModel.DesignerAttribute> z tego samego typu jako typu podstawowego projektanta istniejącego typu podstawowego projektanta <xref:System.ComponentModel.DesignerAttribute>, stary atrybut jest zastępowany odciskiem nowego atrybutu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Słownik, który jest dostępny za pośrednictwem bezpośrednio można filtrować <paramref name="attributes" /> parametr, lub można pozostawić bez zmian. Jeśli w przypadku przesłaniania tej metody wywoływać implementację podstawową po wykonaniu własne filtrowania.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.ComponentModel.EventDescriptor" /> Obiektów, które reprezentują zdarzenia klasy składnika. Klucze w słowniku zdarzenia są nazw zdarzeń.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, pozwala na zmianę lub usunięcie elementów z zestawu zdarzeń, które udostępnia ona za pomocą projektanta <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku zdarzeń, które są dostępne za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku zdarzenia są nazwy zdarzenia. Obiekty są typu <xref:System.ComponentModel.EventDescriptor>. Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Słownik, który jest dostępny za pośrednictwem bezpośrednio można filtrować <paramref name="events" /> parametr, lub można pozostawić bez zmian. Jeśli w przypadku przesłaniania tej metody wywoływać implementację podstawową po wykonaniu własne filtrowania.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> Obiektów, które reprezentują właściwości klasy składnika. Klucze w słowniku właściwości są nazwy właściwości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, pozwala na zmianę lub usunięcie elementów z zbiór właściwości, które udostępnia ona za pomocą projektanta <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku właściwości, które są dostępne za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze ze słownika właściwości są nazwami właściwości. Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>. Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Słownik, który jest dostępny za pośrednictwem bezpośrednio można filtrować <paramref name="properties" /> parametr, lub można pozostawić bez zmian. Jeśli w przypadku przesłaniania tej metody wywoływać implementację podstawową po wykonaniu własne filtrowania.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Attribute" /> Obiektów w klasie składnika. Klucze w słowniku atrybutów są <see cref="P:System.Attribute.TypeId" /> wartości atrybutów.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zestawu atrybutów, które udostępnia ona za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodawanie elementów do słownika atrybutów, które udostępnia składnik skojarzony projektanta implementacja interfejsu za pomocą <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku atrybutów są identyfikatora typu atrybutów. Obiekty są typu <xref:System.Attribute>. Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.  
  
 Identyfikator typu atrybutu może być dowolny obiekt. Domyślnie <xref:System.Attribute> zwraca jego <xref:System.Type> jako wartości jego <xref:System.Attribute.TypeId%2A> właściwości. Możesz sprawdzić <xref:System.Attribute.TypeId%2A> atrybutu w słowniku do pełnienia roli równoważnika ze znanego <xref:System.Attribute.TypeId%2A> do identyfikacji lub użyj atrybutu <xref:System.Reflection> do identyfikowania sam obiekt atrybutu.  
  
 Gdy atrybut, który ma taką samą <xref:System.Attribute.TypeId%2A> istniejących lub odziedziczonego atrybutu jest dodawany do składnika, nowy atrybut zastępuje stary atrybut. W przypadku wielu atrybutów nowy atrybut tego samego typu spowoduje zastąpienie wszelkich poprzednich atrybutu typu. Jednak niektóre typy atrybutów zwraca <xref:System.Attribute.TypeId%2A> selektywnie który odróżnia atrybutu. Na przykład w celu zapewnienia różnego rodzaju projektantów jednocześnie aktywne dla typu, takich jak <xref:System.ComponentModel.Design.IRootDesigner> i <xref:System.ComponentModel.Design.IDesigner>, <xref:System.ComponentModel.DesignerAttribute> klasy zwraca <xref:System.Attribute.TypeId%2A> który unikatowo identyfikuje zarówno atrybut i Projektant podstawowej Typ. <xref:System.ComponentModel.DesignerAttribute> Konstruktor umożliwia określenie typu podstawowego projektanta projektanta oprócz jego określonego typu i <xref:System.ComponentModel.DesignerAttribute> zwraca <xref:System.Attribute.TypeId%2A> , które odzwierciedla to. W związku z tym podczas dodawania nowego <xref:System.ComponentModel.DesignerAttribute> z tego samego typu jako typu podstawowego projektanta istniejącego typu podstawowego projektanta <xref:System.ComponentModel.DesignerAttribute>, stary atrybut jest zastępowany odciskiem nowego atrybutu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Słownik, który jest dostępny za pośrednictwem bezpośrednio można filtrować <paramref name="attributes" /> parametr, lub można pozostawić bez zmian. Jeśli w przypadku przesłaniania tej metody wywoływać implementację podstawową po wykonaniu własne filtrowania.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.ComponentModel.EventDescriptor" /> Obiektów, które reprezentują zdarzenia klasy składnika. Klucze w słowniku zdarzenia są nazw zdarzeń.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zestawu zdarzeń, które udostępnia ona za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodawanie elementów do słownika zdarzenia, które udostępnia projektanta za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku zdarzenia są nazwy zdarzenia. Obiekty są typu <xref:System.ComponentModel.EventDescriptor>. Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można bezpośrednio modyfikować słownik, który jest dostępny za pośrednictwem <paramref name="events" /> parametr, lub można pozostawić bez zmian. Jeśli w przypadku przesłaniania tej metody wywoływać implementację podstawową, przed wykonaniem własne filtrowania.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> Obiektów, które reprezentują właściwości klasy składnika. Klucze w słowniku właściwości są nazwy właściwości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zbiór właściwości, które udostępnia ona za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodawanie elementów do słownika właściwości, które udostępnia projektanta za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze ze słownika właściwości są nazwami właściwości. Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>. Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można bezpośrednio modyfikować słownik, który jest dostępny za pośrednictwem <paramref name="properties" /> parametr, lub można pozostawić bez zmian. Jeśli w przypadku przesłaniania tej metody wywoływać implementację podstawową, przed wykonaniem własne filtrowania.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>