<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37922b851425bf4cdf3e90c34d8602cbe6265dfc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69348891" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs, który umożliwia projektantowi dostęp do słowników <see cref="T:System.ComponentModel.TypeDescriptor" /> , w których są przechowywane właściwości, atrybuty i deskryptory zdarzeń, które mogą uwidaczniać Projektant składników w środowisku czasu projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter>umożliwia projektantowi filtrowanie zestawu właściwości, atrybutów i deskryptorów zdarzeń, które skojarzony składnik ujawnia za pomocą <xref:System.ComponentModel.TypeDescriptor>. Metody tego interfejsu, których nazwy zaczynają `Pre` się od, są wywoływane bezpośrednio przed metodami, których nazwy `Post`zaczynają się od.  
  
 Jeśli chcesz dodać deskryptory atrybutów, zdarzeń lub właściwości, użyj <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>metody, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>lub <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> .  
  
 Jeśli chcesz zmienić lub usunąć deskryptory atrybutów, zdarzeń lub właściwości, użyj <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>metody, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>lub <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> .  
  
   
  
## Examples  
 Poniższy przykład ilustruje przesłonięcie <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> , które dodaje właściwość projektanta do okno właściwości, gdy kontrolka projektanta jest wybierana w czasie projektowania. Zapoznaj się z przykładem <xref:System.Windows.Forms.Design.ControlDesigner> klasy dla kompletnego przykładu projektanta korzystającego z <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><see cref="T:System.Attribute" /> Obiekty klasy składnika. Klucze w słowniku atrybutów są <see cref="P:System.Attribute.TypeId" /> wartościami atrybutów.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu atrybutów, które ujawnia za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia zmianę lub usunięcie elementów w słowniku atrybutów, które skojarzony składnik projektanta implementujący ten interfejs uwidacznia przez <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku atrybutów są identyfikatorami typów atrybutów. Obiekty są typu <xref:System.Attribute>. Ta metoda jest wywoływana natychmiast po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.  
  
 IDENTYFIKATORem typu atrybutu może być dowolny obiekt. Domyślnie <xref:System.Attribute> Funkcjazwraca<xref:System.Attribute.TypeId%2A>wartośćwłaściwości. <xref:System.Type> Można sprawdzić, czy <xref:System.Attribute.TypeId%2A> atrybut w słowniku jest równoważna z znanym <xref:System.Attribute.TypeId%2A> atrybutem do jego zidentyfikowania, lub użyć <xref:System.Reflection> do zidentyfikowania obiektu atrybutu.  
  
 Gdy atrybut, który jest taki sam <xref:System.Attribute.TypeId%2A> jak istniejący lub Dziedziczony atrybut jest dodawany do składnika, nowy atrybut zastępuje stary atrybut. Dla wielu atrybutów nowy atrybut tego samego typu zastąpi każdy poprzedni atrybut typu. Jednak niektóre typy atrybutów zwracają <xref:System.Attribute.TypeId%2A> atrybut, który odróżnia selektywnie atrybutu. Na przykład, aby udostępnić różne typy jednocześnie aktywnych projektantów dla <xref:System.ComponentModel.Design.IRootDesigner> typu, takich jak <xref:System.ComponentModel.Design.IDesigner>i <xref:System.Attribute.TypeId%2A> , <xref:System.ComponentModel.DesignerAttribute> Klasa zwraca, który jednoznacznie identyfikuje zarówno atrybut, jak i projektanta podstawowego Wprowadź. Konstruktor umożliwia określenie podstawowego typu projektanta projektanta oprócz jego określonego typu i <xref:System.ComponentModel.DesignerAttribute> zwraca <xref:System.Attribute.TypeId%2A> , który odzwierciedla to. <xref:System.ComponentModel.DesignerAttribute> W związku z tym po dodaniu nowego <xref:System.ComponentModel.DesignerAttribute> typu projektanta podstawowego tego samego typu co typ projektanta podstawowego istniejącego <xref:System.ComponentModel.DesignerAttribute>, stary atrybut jest zastępowany nowym atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można bezpośrednio filtrować słownik, który jest dostępny za pomocą <paramref name="attributes" /> parametru, lub pozostawić go bez zmian. Jeśli zastępujesz tę metodę, wywołaj implementację podstawową po wykonaniu własnego filtrowania.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><see cref="T:System.ComponentModel.EventDescriptor" /> Obiekty, które reprezentują zdarzenia klasy składnika. Klucze w słowniku zdarzeń to nazwy zdarzeń.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu zdarzeń, które uwidacznia za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapewnia możliwość zmiany lub usunięcia elementów w słowniku zdarzeń, które są udostępniane za pomocą <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku zdarzeń są nazwami zdarzeń. Obiekty są typu <xref:System.ComponentModel.EventDescriptor>. Ta metoda jest wywoływana natychmiast po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można bezpośrednio filtrować słownik, który jest dostępny za pomocą <paramref name="events" /> parametru, lub pozostawić go bez zmian. Jeśli zastępujesz tę metodę, wywołaj implementację podstawową po wykonaniu własnego filtrowania.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Obiekty, które reprezentują właściwości klasy składnika. Klucze w słowniku właściwości są nazwami właściwości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu właściwości, które uwidacznia za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapewnia sposób zmiany lub usuwania elementów w słowniku właściwości, które są udostępniane za pomocą <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku właściwości są nazwami właściwości. Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>. Ta metoda jest wywoływana natychmiast po <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można bezpośrednio filtrować słownik, który jest dostępny za pomocą <paramref name="properties" /> parametru, lub pozostawić go bez zmian. Jeśli zastępujesz tę metodę, wywołaj implementację podstawową po wykonaniu własnego filtrowania.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><see cref="T:System.Attribute" /> Obiekty klasy składnika. Klucze w słowniku atrybutów są <see cref="P:System.Attribute.TypeId" /> wartościami atrybutów.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu atrybutów, które ujawnia przez <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodanie elementów do słownika atrybutów, które skojarzony składnik projektanta implementujący ten interfejs uwidacznia przez <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku atrybutów są identyfikatorami typów atrybutów. Obiekty są typu <xref:System.Attribute>. Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.  
  
 IDENTYFIKATORem typu atrybutu może być dowolny obiekt. Domyślnie <xref:System.Attribute> Funkcjazwraca<xref:System.Attribute.TypeId%2A>wartośćwłaściwości. <xref:System.Type> Można sprawdzić, czy <xref:System.Attribute.TypeId%2A> atrybut w słowniku jest równoważna z znanym <xref:System.Attribute.TypeId%2A> atrybutem do jego zidentyfikowania, lub użyć <xref:System.Reflection> do zidentyfikowania obiektu atrybutu.  
  
 Gdy atrybut, który jest taki sam <xref:System.Attribute.TypeId%2A> jak istniejący lub Dziedziczony atrybut jest dodawany do składnika, nowy atrybut zastępuje stary atrybut. Dla wielu atrybutów nowy atrybut tego samego typu zastąpi każdy poprzedni atrybut typu. Jednak niektóre typy atrybutów zwracają <xref:System.Attribute.TypeId%2A> atrybut, który odróżnia selektywnie atrybutu. Na przykład, aby udostępnić różne typy jednocześnie aktywnych projektantów dla <xref:System.ComponentModel.Design.IRootDesigner> typu, takich jak <xref:System.ComponentModel.Design.IDesigner>i <xref:System.Attribute.TypeId%2A> , <xref:System.ComponentModel.DesignerAttribute> Klasa zwraca, który jednoznacznie identyfikuje zarówno atrybut, jak i projektanta podstawowego Wprowadź. Konstruktor umożliwia określenie podstawowego typu projektanta projektanta oprócz jego określonego typu i <xref:System.ComponentModel.DesignerAttribute> zwraca <xref:System.Attribute.TypeId%2A> , który odzwierciedla to. <xref:System.ComponentModel.DesignerAttribute> W związku z tym po dodaniu nowego <xref:System.ComponentModel.DesignerAttribute> typu projektanta podstawowego tego samego typu co typ projektanta podstawowego istniejącego <xref:System.ComponentModel.DesignerAttribute>, stary atrybut jest zastępowany nowym atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można bezpośrednio filtrować słownik, który jest dostępny za pomocą <paramref name="attributes" /> parametru, lub pozostawić go bez zmian. Jeśli zastępujesz tę metodę, wywołaj implementację podstawową po wykonaniu własnego filtrowania.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><see cref="T:System.ComponentModel.EventDescriptor" /> Obiekty, które reprezentują zdarzenia klasy składnika. Klucze w słowniku zdarzeń to nazwy zdarzeń.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu zdarzeń, które ujawnia przez <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodanie elementów do słownika zdarzeń, które Projektant ujawnia przez <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku zdarzeń są nazwami zdarzeń. Obiekty są typu <xref:System.ComponentModel.EventDescriptor>. Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Możesz bezpośrednio zmodyfikować słownik, który jest dostępny za pomocą <paramref name="events" /> parametru, lub pozostawić go bez zmian. Jeśli zastępujesz tę metodę, wywołaj implementację podstawową przed wykonaniem własnego filtrowania.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Obiekty, które reprezentują właściwości klasy składnika. Klucze w słowniku właściwości są nazwami właściwości.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu właściwości, które ujawnia przez <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodanie elementów do słownika właściwości, które Projektant ujawnia przez <xref:System.ComponentModel.TypeDescriptor>.  
  
 Klucze w słowniku właściwości są nazwami właściwości. Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>. Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Możesz bezpośrednio zmodyfikować słownik, który jest dostępny za pomocą <paramref name="properties" /> parametru, lub pozostawić go bez zmian. Jeśli zastępujesz tę metodę, wywołaj implementację podstawową przed wykonaniem własnego filtrowania.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
