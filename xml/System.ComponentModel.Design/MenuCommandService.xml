<Type Name="MenuCommandService" FullName="System.ComponentModel.Design.MenuCommandService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d63f3a6a1f4d7bf1c700b9a4a6153561337e17a6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69329470" /></Metadata><TypeSignature Language="C#" Value="public class MenuCommandService : IDisposable, System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuCommandService extends System.Object implements class System.ComponentModel.Design.IMenuCommandService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.MenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuCommandService&#xA;Implements IDisposable, IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuCommandService : IDisposable, System::ComponentModel::Design::IMenuCommandService" />
  <TypeSignature Language="F#" Value="type MenuCommandService = class&#xA;    interface IMenuCommandService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IMenuCommandService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b5622-101"><see cref="T:System.ComponentModel.Design.IMenuCommandService" /> Implementuje interfejs.</span><span class="sxs-lookup"><span data-stu-id="b5622-101">Implements the <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-102"><xref:System.ComponentModel.Design.MenuCommandService> Klasa<xref:System.ComponentModel.Design.IMenuCommandService> implementuje interfejs, który jest zarządzanym interfejsem używanym do dodawania obsługi poleceń menu i definiowania czasowników.</span><span class="sxs-lookup"><span data-stu-id="b5622-102">The <xref:System.ComponentModel.Design.MenuCommandService> class implements the <xref:System.ComponentModel.Design.IMenuCommandService> interface, which is the managed interface used to add handlers for menu commands and to define verbs.</span></span>  
  
 <span data-ttu-id="b5622-103">Klasa jest automatycznie oferowana przez klasę pakietu, aby oferować polecenia globalne dla całego pakietu i jest również oferowana `Microsoft.VisualStudio.Shell.WindowPane` przez klasę w celu oferowania poleceń dla bieżącego okna. <xref:System.ComponentModel.Design.MenuCommandService></span><span class="sxs-lookup"><span data-stu-id="b5622-103">The <xref:System.ComponentModel.Design.MenuCommandService> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the `Microsoft.VisualStudio.Shell.WindowPane` class to offer commands for the current window.</span></span> <span data-ttu-id="b5622-104">Ta oferta jest zawsze wykonywana przez kontener usługi, dzięki czemu każda osoba pochodna z pakietu lub z klas okienka okna może usunąć lub zamienić domyślną implementację <xref:System.ComponentModel.Design.IMenuCommandService> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="b5622-104">This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <xref:System.ComponentModel.Design.IMenuCommandService> interface.</span></span>  
  
 <span data-ttu-id="b5622-105"><xref:System.ComponentModel.Design.MenuCommandService> Klasa wykorzystuje kilka innych usług.</span><span class="sxs-lookup"><span data-stu-id="b5622-105">The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services.</span></span> <span data-ttu-id="b5622-106">Wszystkie te usługi są opcjonalne, w związku z czym zachowanie <xref:System.ComponentModel.Design.MenuCommandService> klasy ulega obniżeniu, jeśli brakuje co najmniej jednej usługi.</span><span class="sxs-lookup"><span data-stu-id="b5622-106">All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing.</span></span> <span data-ttu-id="b5622-107">W poniższej tabeli przedstawiono, które usługi są używane i w jakim celu.</span><span class="sxs-lookup"><span data-stu-id="b5622-107">The following table shows which services are used and for what purpose.</span></span>  
  
|<span data-ttu-id="b5622-108">Usługa</span><span class="sxs-lookup"><span data-stu-id="b5622-108">Service</span></span>|<span data-ttu-id="b5622-109">Cel</span><span class="sxs-lookup"><span data-stu-id="b5622-109">Purpose</span></span>|  
|-------------|-------------|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="b5622-110">Służy do wykrywania bieżącego wyboru w celu uzyskania zleceń oferowanych przez aktualnie wybranego projektanta.</span><span class="sxs-lookup"><span data-stu-id="b5622-110">Used to discover the current selection in order to obtain verbs offered by the currently selected designer.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="b5622-111">Służy do uzyskania projektanta dla aktualnie wybranego składnika, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="b5622-111">Used to obtain the designer for the currently selected component, if any.</span></span>|  
|`Microsoft.VisualStudio.Shell.Interop.IVsUIShell`|<span data-ttu-id="b5622-112">Służy do powiadamiania programu Visual Studio o zmianie stanu polecenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-112">Used to notify Visual Studio that the command status has changed.</span></span>|  
|`Microsoft.VisualStudio.Shell.Interop.IOleComponentUIManager`|<span data-ttu-id="b5622-113">Używane do wyświetlania menu kontekstowych.</span><span class="sxs-lookup"><span data-stu-id="b5622-113">Used to show context menus.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuCommandService (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuCommandService(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.MenuCommandService : IServiceProvider -&gt; System.ComponentModel.Design.MenuCommandService" Usage="new System.ComponentModel.Design.MenuCommandService serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="b5622-114">Dostawca usług, którego ta usługa używa do uzyskiwania innych usług.</span><span class="sxs-lookup"><span data-stu-id="b5622-114">The service provider that this service uses to obtain other services.</span></span></param>
        <summary><span data-ttu-id="b5622-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.MenuCommandService" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b5622-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandService" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-116">Jeśli usługa jest używana z projektantem, `serviceProvider` parametr powinien być dostawcą usług dla projektanta, tak jak w <xref:System.ComponentModel.Design.DesignSurface>przypadku.</span><span class="sxs-lookup"><span data-stu-id="b5622-116">If the service is being used with a designer, the `serviceProvider` parameter should be the service provider for the designer, as is the case with <xref:System.ComponentModel.Design.DesignSurface>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public virtual void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit&#xA;override this.AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="menuCommandService.AddCommand command" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="b5622-117"><see cref="T:System.ComponentModel.Design.MenuCommand" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="b5622-117">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</span></span></param>
        <summary><span data-ttu-id="b5622-118">Dodaje procedurę obsługi do usługi poleceń menu.</span><span class="sxs-lookup"><span data-stu-id="b5622-118">Adds a command handler to the menu command service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-119"><xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> Metoda dodaje procedurę obsługi do usługi poleceń menu.</span><span class="sxs-lookup"><span data-stu-id="b5622-119">The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service.</span></span> <span data-ttu-id="b5622-120">Programy obsługi poleceń nie definiują tekstu, skrótu ani rozmieszczenia elementu menu.</span><span class="sxs-lookup"><span data-stu-id="b5622-120">Command handlers do not define the text, shortcut, or placement of a menu item.</span></span> <span data-ttu-id="b5622-121">Zamiast tego definiuje zachowanie elementu menu, jeśli element zostanie kliknięty.</span><span class="sxs-lookup"><span data-stu-id="b5622-121">Rather, they define the menu item's behavior if the item is clicked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5622-122"><paramref name="command" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b5622-122"><paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b5622-123">Procedura obsługi <paramref name="command" /> poleceń już istnieje.</span><span class="sxs-lookup"><span data-stu-id="b5622-123">A command handler <paramref name="command" /> already exists.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit&#xA;override this.AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="menuCommandService.AddVerb verb" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><span data-ttu-id="b5622-124"><see cref="T:System.ComponentModel.Design.DesignerVerb" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="b5622-124">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</span></span></param>
        <summary><span data-ttu-id="b5622-125">Dodaje czasownik do tabeli <see cref="T:System.ComponentModel.Design.MenuCommandService" />Verb obiektu.</span><span class="sxs-lookup"><span data-stu-id="b5622-125">Adds a verb to the verb table of the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-126">To zlecenie jest dostępne niezależnie od tego, jaki Projektant jest obecnie wybrany.</span><span class="sxs-lookup"><span data-stu-id="b5622-126">This verb is available regardless of what designer is currently selected.</span></span> <span data-ttu-id="b5622-127">W przeciwieństwie do poleceń menu czasowniki mogą definiować tekst wyświetlany użytkownikowi, ale nie definiują położenia polecenia w menu rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="b5622-127">Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5622-128"><paramref name="verb" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b5622-128"><paramref name="verb" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5622-129">Zwalnia wszystkie zasoby używane przez <see cref="T:System.ComponentModel.Design.MenuCommandService" />program.</span><span class="sxs-lookup"><span data-stu-id="b5622-129">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="menuCommandService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5622-130">Zwalnia wszystkie zasoby używane przez <see cref="T:System.ComponentModel.Design.MenuCommandService" />program.</span><span class="sxs-lookup"><span data-stu-id="b5622-130">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-131">Wywołaj <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> po zakończeniu korzystania z <xref:System.ComponentModel.Design.MenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="b5622-131">Call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.MenuCommandService>.</span></span> <span data-ttu-id="b5622-132"><xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> Metoda<xref:System.ComponentModel.Design.MenuCommandService> pozostawia w stanie niezdatnym do użytku.</span><span class="sxs-lookup"><span data-stu-id="b5622-132">The <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.MenuCommandService> in an unusable state.</span></span> <span data-ttu-id="b5622-133">Po wywołaniu <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>należy wydać wszystkie odwołania <xref:System.ComponentModel.Design.MenuCommandService> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.ComponentModel.Design.MenuCommandService> , którą zajmował.</span><span class="sxs-lookup"><span data-stu-id="b5622-133">After calling <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.MenuCommandService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.MenuCommandService> was occupying.</span></span> <span data-ttu-id="b5622-134">Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b5622-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5622-135">Zawsze wywołuj <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.ComponentModel.Design.MenuCommandService>do.</span><span class="sxs-lookup"><span data-stu-id="b5622-135">Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>.</span></span> <span data-ttu-id="b5622-136">W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.ComponentModel.Design.MenuCommandService> `Finalize` metody obiektu przez moduł zbierający elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="b5622-136">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="menuCommandService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b5622-137"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="b5622-137"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b5622-138">Zwalnia wszystkie zasoby używane przez <see cref="T:System.ComponentModel.Design.MenuCommandService" />program.</span><span class="sxs-lookup"><span data-stu-id="b5622-138">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-139">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` <xref:System.Object.Finalize%2A> i metodę.</span><span class="sxs-lookup"><span data-stu-id="b5622-139">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b5622-140">`Dispose()`wywołuje metodę chronioną `Dispose(Boolean)` `disposing` z parametrem ustawionym `true`na.</span><span class="sxs-lookup"><span data-stu-id="b5622-140">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b5622-141"><xref:System.Object.Finalize%2A>wywołuje `Dispose` `false`z `disposing` ustawionym na.</span><span class="sxs-lookup"><span data-stu-id="b5622-141"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b5622-142">Gdy parametr ma wartość true, ta metoda zwalnia wszystkie zasoby przechowywane przez wszystkie obiekty zarządzane, do <xref:System.ComponentModel.Design.MenuCommandService> których odwołują się te odwołania. `disposing`</span><span class="sxs-lookup"><span data-stu-id="b5622-142">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.MenuCommandService> references.</span></span> <span data-ttu-id="b5622-143">Ta metoda wywołuje `Dispose()` metodę każdego przywoływanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="b5622-143">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5622-144">
            <see langword="Dispose" />może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="b5622-144">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b5622-145">W przypadku <see langword="Dispose(Boolean)" /> przesłaniania należy zachować ostrożność, aby nie odwoływać się do obiektów, które zostały <see langword="Dispose" />wcześniej usunięte w ramach wcześniejszego wywołania do.</span><span class="sxs-lookup"><span data-stu-id="b5622-145">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b5622-146">Aby uzyskać więcej informacji na temat sposobu <see langword="Dispose(Boolean)" />implementacji, zobacz [implementowanie metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b5622-146">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="b5622-147">Aby uzyskać więcej informacji <see langword="Dispose" /> na <see cref="M:System.Object.Finalize" />temat i, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [Zastępowanie metody Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="b5622-147">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EnsureVerbs">
      <MemberSignature Language="C#" Value="protected void EnsureVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureVerbs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureVerbs();" />
      <MemberSignature Language="F#" Value="member this.EnsureVerbs : unit -&gt; unit" Usage="menuCommandService.EnsureVerbs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5622-148">Zapewnia, że lista zleceń została utworzona.</span><span class="sxs-lookup"><span data-stu-id="b5622-148">Ensures that the verb list has been created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-149"><xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> Metoda tworzy listę zleceń, jeśli nie została jeszcze utworzona.</span><span class="sxs-lookup"><span data-stu-id="b5622-149">The <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> method creates the verb list if it has not already been created.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindCommand">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5622-150">Wyszukuje <see cref="T:System.ComponentModel.Design.MenuCommand" /> skojarzone z danym identyfikatorem polecenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-150">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand&#xA;override this.FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="menuCommandService.FindCommand commandID" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID"><span data-ttu-id="b5622-151"><see cref="T:System.ComponentModel.Design.CommandID" /> Do znalezienia.</span><span class="sxs-lookup"><span data-stu-id="b5622-151">The <see cref="T:System.ComponentModel.Design.CommandID" /> to find.</span></span></param>
        <summary><span data-ttu-id="b5622-152">Wyszukuje <see cref="T:System.ComponentModel.Design.MenuCommand" /> skojarzone z danym identyfikatorem polecenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-152">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</span></span></summary>
        <returns><span data-ttu-id="b5622-153">Skojarzone z danym poleceniem; w przeciwnym razie <see langword="null" /> , jeśli polecenie nie zostanie odnalezione. <see cref="T:System.ComponentModel.Design.MenuCommand" /></span><span class="sxs-lookup"><span data-stu-id="b5622-153">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.MenuCommand FindCommand (Guid guid, int id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.MenuCommand FindCommand(valuetype System.Guid guid, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(Guid guid, int id);" />
      <MemberSignature Language="F#" Value="member this.FindCommand : Guid * int -&gt; System.ComponentModel.Design.MenuCommand" Usage="menuCommandService.FindCommand (guid, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="guid"><span data-ttu-id="b5622-154">Identyfikator GUID polecenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-154">The GUID of the command.</span></span></param>
        <param name="id"><span data-ttu-id="b5622-155">Identyfikator polecenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-155">The ID of the command.</span></span></param>
        <summary><span data-ttu-id="b5622-156">Wyszukuje <see cref="T:System.ComponentModel.Design.MenuCommand" /> skojarzone z danym poleceniem.</span><span class="sxs-lookup"><span data-stu-id="b5622-156">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command.</span></span></summary>
        <returns><span data-ttu-id="b5622-157">Skojarzone z danym poleceniem; w przeciwnym razie <see langword="null" /> , jeśli polecenie nie zostanie odnalezione. <see cref="T:System.ComponentModel.Design.MenuCommand" /></span><span class="sxs-lookup"><span data-stu-id="b5622-157">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetCommandList">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection GetCommandList (Guid guid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.ICollection GetCommandList(valuetype System.Guid guid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::ICollection ^ GetCommandList(Guid guid);" />
      <MemberSignature Language="F#" Value="member this.GetCommandList : Guid -&gt; System.Collections.ICollection" Usage="menuCommandService.GetCommandList guid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="guid"><span data-ttu-id="b5622-158">Identyfikator GUID listy poleceń.</span><span class="sxs-lookup"><span data-stu-id="b5622-158">The GUID of the command list.</span></span></param>
        <summary><span data-ttu-id="b5622-159">Pobiera listę poleceń dla danego identyfikatora GUID.</span><span class="sxs-lookup"><span data-stu-id="b5622-159">Gets the command list for a given GUID.</span></span></summary>
        <returns><span data-ttu-id="b5622-160"><see cref="T:System.Collections.ICollection" /> Poleceń.</span><span class="sxs-lookup"><span data-stu-id="b5622-160">An <see cref="T:System.Collections.ICollection" /> of commands.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="menuCommandService.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="b5622-161"><see cref="T:System.Type" /> Usługa do pobrania.</span><span class="sxs-lookup"><span data-stu-id="b5622-161">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="b5622-162">Pobiera odwołanie do żądanej usługi.</span><span class="sxs-lookup"><span data-stu-id="b5622-162">Gets a reference to the requested service.</span></span></summary>
        <returns><span data-ttu-id="b5622-163">Odwołanie do <paramref name="serviceType" />; w przeciwnym razie <see langword="null" /> , jeśli usługa nie zostanie znaleziona.</span><span class="sxs-lookup"><span data-stu-id="b5622-163">A reference to <paramref name="serviceType" />; otherwise, <see langword="null" /> if the service is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5622-164"><paramref name="serviceType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b5622-164"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GlobalInvoke">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5622-165">Wywołuje polecenie w formularzu lokalnym lub w środowisku globalnym.</span><span class="sxs-lookup"><span data-stu-id="b5622-165">Invokes a command on the local form or in the global environment.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool&#xA;override this.GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool" Usage="menuCommandService.GlobalInvoke commandID" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID"><span data-ttu-id="b5622-166">Polecenie do wywołania.</span><span class="sxs-lookup"><span data-stu-id="b5622-166">The command to invoke.</span></span></param>
        <summary><span data-ttu-id="b5622-167">Wywołuje to polecenie w formularzu lokalnym lub w środowisku globalnym.</span><span class="sxs-lookup"><span data-stu-id="b5622-167">Invokes the given command on the local form or in the global environment.</span></span></summary>
        <returns><span data-ttu-id="b5622-168"><see langword="true" />, jeśli polecenie zostało znalezione; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b5622-168"><see langword="true" />, if the command was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-169">Formularz lokalny jest najpierw przeszukiwany dla danego identyfikatora polecenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-169">The local form is first searched for the given command ID.</span></span> <span data-ttu-id="b5622-170">Jeśli zostanie znalezione, jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="b5622-170">If it is found, it is invoked.</span></span> <span data-ttu-id="b5622-171">W przeciwnym razie identyfikator polecenia jest przesyłany do procedury obsługi poleceń środowiska globalnego, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="b5622-171">Otherwise, the command ID is passed to the global environment command handler, if one is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandId, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandId, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandId, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID * obj -&gt; bool&#xA;override this.GlobalInvoke : System.ComponentModel.Design.CommandID * obj -&gt; bool" Usage="menuCommandService.GlobalInvoke (commandId, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandId"><span data-ttu-id="b5622-172">Polecenie do wywołania.</span><span class="sxs-lookup"><span data-stu-id="b5622-172">The command to invoke.</span></span></param>
        <param name="arg"><span data-ttu-id="b5622-173">Parametr wywołania.</span><span class="sxs-lookup"><span data-stu-id="b5622-173">A parameter for the invocation.</span></span></param>
        <summary><span data-ttu-id="b5622-174">Wywołuje daną polecenie z podanym parametrem w formularzu lokalnym lub w środowisku globalnym.</span><span class="sxs-lookup"><span data-stu-id="b5622-174">Invokes the given command with the given parameter on the local form or in the global environment.</span></span></summary>
        <returns><span data-ttu-id="b5622-175"><see langword="true" />, jeśli polecenie zostało znalezione; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b5622-175"><see langword="true" />, if the command was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-176">Formularz lokalny jest najpierw przeszukiwany dla danego identyfikatora polecenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-176">The local form is first searched for the given command ID.</span></span> <span data-ttu-id="b5622-177">Jeśli zostanie znalezione, jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="b5622-177">If it is found, it is invoked.</span></span> <span data-ttu-id="b5622-178">W przeciwnym razie identyfikator polecenia jest przesyłany do procedury obsługi poleceń środowiska globalnego, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="b5622-178">Otherwise, the command ID is passed to the global environment command handler, if one is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="MenuCommandsChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuCommandsChanged As MenuCommandsChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::MenuCommandsChangedEventHandler ^ MenuCommandsChanged;" />
      <MemberSignature Language="F#" Value="member this.MenuCommandsChanged : System.ComponentModel.Design.MenuCommandsChangedEventHandler " Usage="member this.MenuCommandsChanged : System.ComponentModel.Design.MenuCommandsChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommandsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5622-179">Występuje po zmianie stanu polecenia menu.</span><span class="sxs-lookup"><span data-stu-id="b5622-179">Occurs when the status of a menu command has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-180">Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="b5622-180">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommandsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCommandsChanged (System.ComponentModel.Design.MenuCommandsChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommandsChanged(class System.ComponentModel.Design.MenuCommandsChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommandsChanged (e As MenuCommandsChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommandsChanged(System::ComponentModel::Design::MenuCommandsChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommandsChanged : System.ComponentModel.Design.MenuCommandsChangedEventArgs -&gt; unit&#xA;override this.OnCommandsChanged : System.ComponentModel.Design.MenuCommandsChangedEventArgs -&gt; unit" Usage="menuCommandService.OnCommandsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5622-181">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-181">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5622-182"><see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="b5622-182">Raises the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-183"><xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> Metoda jest wywoływana przez polecenie menu, gdy jego stan zmieni się.</span><span class="sxs-lookup"><span data-stu-id="b5622-183">The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method is called by a menu command when its status has changed.</span></span>  
  
 <span data-ttu-id="b5622-184">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="b5622-184">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5622-185">Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="b5622-185">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5622-186"><xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata.</span><span class="sxs-lookup"><span data-stu-id="b5622-186">The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5622-187">Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="b5622-187">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5622-188">Podczas zastępowania <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="b5622-188">When overriding <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public virtual void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit&#xA;override this.RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="menuCommandService.RemoveCommand command" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="b5622-189">Polecenie do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b5622-189">The command to remove.</span></span></param>
        <summary><span data-ttu-id="b5622-190">Usuwa podaną polecenie menu z dokumentu.</span><span class="sxs-lookup"><span data-stu-id="b5622-190">Removes the given menu command from the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-191">Jeśli w grupie poleceń nie ma więcej poleceń, Grupa zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="b5622-191">If there are no more commands in the command group, the group is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5622-192"><paramref name="command" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b5622-192"><paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public virtual void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit&#xA;override this.RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="menuCommandService.RemoveVerb verb" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><span data-ttu-id="b5622-193">Zlecenie do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b5622-193">The verb to remove.</span></span></param>
        <summary><span data-ttu-id="b5622-194">Usuwa daną czasownik z dokumentu.</span><span class="sxs-lookup"><span data-stu-id="b5622-194">Removes the given verb from the document.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5622-195"><paramref name="verb" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b5622-195"><paramref name="verb" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public virtual void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit&#xA;override this.ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit" Usage="menuCommandService.ShowContextMenu (menuID, x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID"><span data-ttu-id="b5622-196">Menu skrótów do wyświetlenia.</span><span class="sxs-lookup"><span data-stu-id="b5622-196">The shortcut menu to display.</span></span></param>
        <param name="x"><span data-ttu-id="b5622-197">Współrzędna x lokalizacji menu skrótów.</span><span class="sxs-lookup"><span data-stu-id="b5622-197">The x-coordinate of the shortcut menu's location.</span></span></param>
        <param name="y"><span data-ttu-id="b5622-198">Współrzędna y lokalizacji menu skrótów.</span><span class="sxs-lookup"><span data-stu-id="b5622-198">The y-coordinate of the shortcut menu's location.</span></span></param>
        <summary><span data-ttu-id="b5622-199">Pokazuje menu skrótów z danym IDENTYFIKATORem polecenia w danej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="b5622-199">Shows the shortcut menu with the given command ID at the given location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-200">Domyślna implementacja nie robi nic.</span><span class="sxs-lookup"><span data-stu-id="b5622-200">The default implementation does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.MenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.IMenuCommandService.Verbs</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5622-201">Pobiera kolekcję zleceń projektanta, które są obecnie dostępne.</span><span class="sxs-lookup"><span data-stu-id="b5622-201">Gets a collection of the designer verbs that are currently available.</span></span></summary>
        <value><span data-ttu-id="b5622-202"><see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> Aktualnie dostępne są zlecenia projektanta.</span><span class="sxs-lookup"><span data-stu-id="b5622-202">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of the designer verbs that are currently available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5622-203"><xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> Właściwość zawiera kolekcję zleceń.</span><span class="sxs-lookup"><span data-stu-id="b5622-203">The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs.</span></span> <span data-ttu-id="b5622-204">Te czasowniki pochodzą z dwóch miejsc:</span><span class="sxs-lookup"><span data-stu-id="b5622-204">These verbs come from two places:</span></span>  
  
-   <span data-ttu-id="b5622-205">Czasowniki dodane przez <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="b5622-205">Verbs added through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method of <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.</span></span>  
  
-   <span data-ttu-id="b5622-206">Zlecenia oferowane przez aktualnie wybranego projektanta.</span><span class="sxs-lookup"><span data-stu-id="b5622-206">Verbs offered by the currently selected designer.</span></span>  
  
 <span data-ttu-id="b5622-207">Czasowniki dodane do tej usługi za <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> pomocą metody są nazywane czasownikami globalnymi, ponieważ są one globalne dla tej usługi, ale ogólnie istnieje jedno wystąpienie tej usługi dla każdego okna narzędzi lub dokumentu.</span><span class="sxs-lookup"><span data-stu-id="b5622-207">Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window.</span></span> <span data-ttu-id="b5622-208">Zlecenia projektanta są uzyskiwane przez przeszukiwanie dostawcy usług dla <xref:System.ComponentModel.Design.IDesignerHost> i <xref:System.ComponentModel.Design.ISelectionService>.</span><span class="sxs-lookup"><span data-stu-id="b5622-208">Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>.</span></span> <span data-ttu-id="b5622-209">Jeśli usługa zaznaczania oferuje podstawową opcję, a Projektant może uzyskać ten wybór z <xref:System.ComponentModel.Design.IDesignerHost>, zlecenia projektanta zostaną dodane do tej listy.</span><span class="sxs-lookup"><span data-stu-id="b5622-209">If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer's verbs are added to this list.</span></span> <span data-ttu-id="b5622-210">Jeśli nazwa czasownika globalnego powoduje konflikt z nazwą zlecenia projektanta, pierwszeństwo ma zlecenie projektanta udostępniane przez projektanta.</span><span class="sxs-lookup"><span data-stu-id="b5622-210">If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>
