<Type Name="IMenuCommandService" FullName="System.ComponentModel.Design.IMenuCommandService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a9a3a8536807218cc2cde7158bb0f895669c98e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706330" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMenuCommandService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMenuCommandService" />
  <TypeSignature Language="F#" Value="type IMenuCommandService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia metody do zarządzania globalne zleceń projektanta i poleceń menu dostępne w trybie projektowania i wyświetlania niektóre typy menu skrótów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs zawiera metody służące do:  
  
-   Znajdź, wywołania, dodawać i usuwać polecenia globalnego zlecenie projektanta.  
  
-   Znajdź, wywołania, dodawać i usuwać polecenia standardowe menu.  
  
-   Zmiany obsługi zdarzeń skojarzonych z polecenia standardowe menu.  
  
-   Wyświetlić menu skrótów standardowych poleceń, który jest skojarzony z menu <xref:System.ComponentModel.Design.CommandID>.  
  
 Zleceń projektanta reprezentują niestandardowy poleceń, które są wyświetlane w menu skrótów w trybie projektowania. Zlecenie projektanta zapewniają określony tekst etykiety. Każdy projektanta zlecenie zostanie automatycznie przypisany unikatowy <xref:System.ComponentModel.Design.CommandID>. Projektant zapewniają projektanta zleceń za pośrednictwem jego <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> właściwości, ale te są dostępne tylko podczas aktualnie wybrany składnik projektanta. Globalne zleceń projektanta są poleceń projektanta zlecenie, które są dostępne z menu skrótów tryb projektowania, niezależnie od wybranego składnika. Ten interfejs umożliwia zarządzanie zestawem globalne projektanta zlecenia, które są dostępne w trybie projektowania.  
  
 Można dodać globalne zlecenie projektanta przy użyciu <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> metody, na które można usunąć globalne zlecenie projektanta przy użyciu <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> — metoda. Można wywołać za pomocą projektanta zlecenie <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> metodę, jeśli znasz <xref:System.ComponentModel.Design.CommandID> zlecenia. <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> Właściwość ten interfejs zawiera bieżący zestaw poleceń zlecenie projektanta mają być wyświetlane w menu skrótów. Ten zestaw poleceń projektanta zlecenie składa się z wszystkich zleceń projektanta globalne i wszelkie zleceń projektanta oferowane przez projektanta wszystkie aktualnie wybranego składnika. Ten zestaw poleceń jest aktualizowana każdorazowo składnik z projektanta oferty poleceń projektanta zlecenie jest zaznaczany lub odznaczany.  
  
 Polecenia menu są ograniczone do zestawu wstępnie zdefiniowanych standardowych poleceń. Większość wstępnie zdefiniowanych standardowych poleceń są zdefiniowane w <xref:System.ComponentModel.Design.StandardCommands> i <xref:System.Windows.Forms.Design.MenuCommands> wyliczenia. Można dodać, usunąć i wywołują polecenia menu i wyszukaj polecenia menu, które zostały dodane do menu za pomocą metody tego interfejsu.  
  
 Można dodać polecenia standardowe menu za pomocą <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> — metoda i usuń polecenia standardowe menu za pomocą <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> metody. Program obsługi zdarzeń można dołączyć do wstępnie zdefiniowanych standardowe polecenia, wykonując poniższe kroki szczegółowo opisane w dokumentacji <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> metody. Możesz pobrać polecenia menu przez <xref:System.ComponentModel.Design.CommandID> Jeśli został dodany do menu za pomocą <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metody. Można wywołać polecenia menu lub poleceń projektanta zlecenie przez <xref:System.ComponentModel.Design.CommandID> przy użyciu <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> metody.  
  
> [!NOTE]
>  Próba dodania polecenia menu z już istniejącym <xref:System.ComponentModel.Design.CommandID> zgłosi <xref:System.InvalidOperationException>. Podczas dodawania polecenia menu, pamiętaj sprawdzić, że nie jest już w menu za pomocą <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metody lub rozsądny sposób obsługi wyjątków użycia.  
  
> [!NOTE]
>  Polecenia menu mogą być dodawane do menu i mieć jego <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> lub <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> właściwości `false`. Jeśli nie możesz wizualnie zlokalizować polecenia menu, który został dodany do menu, może jednej z tych właściwości zostały ustawione na `false`.  
  
 Można wyświetlić niektórych menu skrótów standardowe zawierający polecenia menu w określonej lokalizacji przy użyciu <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> metody. Dokumentacja dla tej metody zawiera tabelę z listą identyfikatory poleceń, określających prawidłowe menu do wyświetlenia.  
  
   
  
## Examples  
 W tym przykładzie pokazano, za pomocą <xref:System.ComponentModel.Design.IMenuCommandService> można dodać <xref:System.ComponentModel.Design.MenuCommand>.  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.Windows.Forms.Design.MenuCommands" />
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
  </Docs>
  <Members>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.AddCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.ComponentModel.Design.MenuCommand" /> Do dodania.</param>
        <summary>Dodaje określony polecenie standardowe menu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.MenuCommands> i <xref:System.ComponentModel.Design.StandardCommands> wyliczenia zawierają <xref:System.ComponentModel.Design.CommandID> identyfikatory dla wstępnie zdefiniowanych poleceń standardowych i poleceń menu, które są już skojarzone z lokalizacji, w szczególności menu.  
  
> [!NOTE]
>  Próba dodania polecenia menu z już istniejącym <xref:System.ComponentModel.Design.CommandID> zgłosi <xref:System.InvalidOperationException>. Podczas dodawania polecenia menu, pamiętaj sprawdzić, że nie jest już w menu za pomocą <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metody lub rozsądny sposób obsługi wyjątków użycia.  
  
 Program obsługi zdarzeń można dołączyć do wstępnie zdefiniowanych polecenie z następującej procedury:  
  
1.  Jeśli polecenie, aby połączyć się z programem obsługi zdarzeń został dodany do menu lub znajduje się z <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metody, należy rozważyć, czy mają zostać później przywrócić tego polecenia menu i określa, czy chcesz wywołać bieżącego programu obsługi zdarzeń z nowy program obsługi zdarzeń. Kod może przywrócić polecenia menu lub łańcucha wywołanie procedury obsługi zdarzeń, należy przechowywać odwołanie do lokalizacji za pomocą polecenia menu.  
  
2.  Upewnij się, że dowolne polecenie istniejących o takim samym <xref:System.ComponentModel.Design.CommandID> został usunięty z menu przy użyciu <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> metody.  
  
3.  Utwórz nową <xref:System.ComponentModel.Design.MenuCommand> i określ obsługi zdarzenia w konstruktorze, wraz z <xref:System.ComponentModel.Design.CommandID> reprezentujący polecenie do dodania. Każde polecenie menu standardowego jest skojarzony z lokalizacją wstępnie zdefiniowanych menu, w których jest ona dodawana do. Identyfikatory poleceń obsługiwane są zdefiniowane w <xref:System.ComponentModel.Design.StandardCommands> i <xref:System.Windows.Forms.Design.MenuCommands> wyliczenia.  
  
4.  Jeśli chcesz wywołać żadnych istniejących programu obsługi zdarzeń dla polecenia menu, wywołanie <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> metody polecenia menu zastąpienia w menu z obsługi zdarzeń, który obsługuje zdarzenie wywołania polecenia menu.  
  
5.  Jeśli interesuje Cię w obsłudze zdarzeń istniejących polecenie menu, które zostały zastąpione odzyskiwania, Dodaj zapisana, istniejące wcześniej polecenie, po usunięciu zastępczy polecenia menu utworzone. Można dodać tego zachowania do `Dispose` metody dla danego typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.CommandID" /> Określonego <see cref="T:System.ComponentModel.Design.MenuCommand" /> znajduje się już w menu.</exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.AddVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">
          <see cref="T:System.ComponentModel.Design.DesignerVerb" /> Do dodania.</param>
        <summary>Dodaje określone zlecenie projektanta do zestawu projektanta zleceń globalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Projektanci składników, które zapewniają zleceń projektanta mają używać <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> właściwości ich designer, a nie wywołaniem tej metody. Ta metoda dodaje globalny zlecenie projektanta, dostępnej w menu skrótów kliknij prawym przyciskiem myszy w trybie projektowania, niezależnie od aktualnie wybranego składnika.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="iMenuCommandService.FindCommand commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">
          <see cref="T:System.ComponentModel.Design.CommandID" /> Do wyszukania.</param>
        <summary>Wyszukuje polecenie o określonym identyfikatorze i zwraca skojarzonego z nim polecenia menu.</summary>
        <returns>
          <see cref="T:System.ComponentModel.Design.MenuCommand" /> Skojarzonych z Identyfikatorem polecenia lub <see langword="null" /> przypadku nieznalezienia żadne polecenie.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool" Usage="iMenuCommandService.GlobalInvoke commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">
          <see cref="T:System.ComponentModel.Design.CommandID" /> Polecenia do wyszukiwania i wykonywanie.</param>
        <summary>Wywołuje menu lub projektanta polecenie zlecenie dopasowania identyfikatora określonego polecenia.</summary>
        <returns>
          <see langword="true" /> Jeśli polecenie został znaleziony i wywołać pomyślnie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda szuka polecenia menu lub projektanta zlecenie z <xref:System.ComponentModel.Design.CommandID> dopasowania określonego <xref:System.ComponentModel.Design.CommandID>. Ta metoda przeszukuje najpierw w kolekcji projektanta zleceń, składające się z globalnym i aktywne zleceń dostarczane przez projektanta przed kontynuowaniem wyszukiwania, jeśli to konieczne, za pośrednictwem usługi polecenia globalnego środowiska. Jeśli znajduje się odpowiedniego polecenia menu lub projektanta zlecenie, polecenie jest wywoływany.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.RemoveCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.ComponentModel.Design.MenuCommand" /> Do usunięcia.</param>
        <summary>Usuwa podanego standardowe polecenia menu z menu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda usuwa określoną <xref:System.ComponentModel.Design.MenuCommand> Jeśli został znaleziony. Ta metoda nie zgłaszał wyjątku lub zwraca wartość, jeśli określony <xref:System.ComponentModel.Design.MenuCommand> nie znaleziono. Użyj <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metodę, aby określić, czy <xref:System.ComponentModel.Design.MenuCommand> dopasowania określonej <xref:System.ComponentModel.Design.CommandID> znajduje się w menu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.RemoveVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">
          <see cref="T:System.ComponentModel.Design.DesignerVerb" /> Do usunięcia.</param>
        <summary>Usuwa określone zlecenie projektanta z kolekcji globalne zleceń projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda usuwa określone zlecenie projektanta globalne jeśli znajduje się on w kolekcji globalne zleceń projektanta. Zlecenie projektanta można dodać przy użyciu kolekcji globalne zleceń projektanta <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit" Usage="iMenuCommandService.ShowContextMenu (menuID, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID">
          <see cref="T:System.ComponentModel.Design.CommandID" /> Menu skrótów do wyświetlenia.</param>
        <param name="x">Współrzędna x jaką można wyświetlić menu, we współrzędnych ekranu.</param>
        <param name="y">Współrzędna y jaką można wyświetlić menu, we współrzędnych ekranu.</param>
        <summary>Pokazuje menu skrótów określony w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> Metody można wyświetlić następujące menu skrótów programu Visual Studio zawierający polecenia menu w określonym punkcie:  
  
|Menu|Identyfikator polecenia|  
|----------|---------------|  
|Menu skrótów wyświetlane kontenera|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  
|Menu skrótów wyświetlane dla składnika na pasku zadań|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  
|Menu skrótów wyświetlane dla wyboru|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  
|Menu skrótów wyświetlane dla wyboru na pasku zadań|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  
  
 Ta metoda może być także wyświetlane innych menu skrótów w zarejestrowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję poleceń projektanta, które są obecnie dostępne.</summary>
        <value>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> zawierający projektanta zlecenia, które są obecnie dostępne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zestaw dostępnych poleceń projektanta składa się z wszystkich globalnych zlecenia projektanta, które są dodawane przez <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> metody dla tego interfejsu, a poszczególne projektanta zlecenia, które są oferowane przez <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> właściwości poszczególnych projektantów. Nazwy globalne zlecenie konflikt nazw projektanta zlecenie, pierwszeństwo ma zlecenie projektanta dostarczane do projektanta.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <altmember cref="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </Docs>
    </Member>
  </Members>
</Type>