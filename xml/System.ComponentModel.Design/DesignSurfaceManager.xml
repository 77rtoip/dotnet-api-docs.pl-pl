<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignSurfaceManager.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c135a4e8156bfd925bea508991b3701370925168.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c135a4e8156bfd925bea508991b3701370925168</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Manages a collection of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> objects.</source>
          <target state="translated">Zarządza kolekcją <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class is designed to be a container of <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> Klasy została zaprojektowana jako kontener <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>It provides common services that handle event routing between designers, property windows, and other global objects.</source>
          <target state="translated">Udostępnia typowe usługi routingu tej obsługi zdarzeń między projektantami, właściwości systemu windows i innych obiektów globalnych.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> is optional, but it is recommended if you intend to have several designer windows.</source>
          <target state="translated">Przy użyciu <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> jest opcjonalny, ale jest zalecane, jeśli jest planowane jest kilka okien projektanta.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class provides several design-time services automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> Klasy automatycznie zapewnia kilka usług czasu projektowania.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>You can override each of these services by replacing them in the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">Można zastąpić każdej z tych usług, zastępując je w chronionej <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>To replace a service, override the constructor, call base, and make any changes through the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">Aby zastąpić usługi, zastąpienie konstruktora wywołać podstawową i wprowadzać żadnych zmian do chronionej <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>All services added to the service container that implement the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface are disposed when the design surface manager is disposed.</source>
          <target state="translated">Wszystkie usługi dodać do kontenera usługi, które implementują <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu są usuwane po usunięciu Menedżera powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class provides the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface as the default service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> Klasa udostępnia <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interfejs jako domyślnej usługi.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> provides a global eventing mechanism for designer events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> udostępnia mechanizm globalnej obsługi zdarzeń dla zdarzenia projektanta.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>With this mechanism, an application is informed when a designer becomes active.</source>
          <target state="translated">Z tym mechanizm aplikacji jest informowania o odebraniu projektanta staje się aktywny.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</source>
          <target state="translated">Usługa zawiera zbiór projektantów i jednego miejsca, w którym obiektów globalnych, np. w oknie właściwości, można monitorować wybór zdarzenia zmian.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>for full access to system resources.</source>
          <target state="translated">Aby uzyskać dostęp do zasobów systemowych.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">Żądanie wartości: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Associated state:</source>
          <target state="translated">Skojarzony stan:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
          <source>A parent service provider.</source>
          <target state="translated">Nadrzędny dostawca usługi.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
          <source>Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</source>
          <target state="translated">Żądania obsługi są przekazywane do tego dostawcy, jeśli nie jest rozpoznawany przez Menedżera powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>Gets or sets the active designer.</source>
          <target state="translated">Pobiera lub ustawia active projektanta.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>The active designer.</source>
          <target state="translated">Aktywne projektanta.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A&gt;</ph> property should be set by the designer's user interface whenever a designer becomes the active window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A&gt;</ph> Właściwości należy ustawić przy użyciu interfejsu użytkownika projektanta zawsze, gdy projektant staje się oknem aktywnym.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>The default implementation of this property works with the default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface to notify interested parties that a new designer is now active.</source>
          <target state="translated">Domyślna implementacja tej właściwości współpracuje z domyślną implementację elementu <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interfejsu powiadomiono zainteresowanych stron, czy nowy designer jest aktywny.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>If you provide your own implementation of <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, you should override this property to notify your service appropriately.</source>
          <target state="translated">Jeśli podasz implementacji programu <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, powinny przesłaniać tę właściwość, aby powiadamiać odpowiednie usługi.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>This property can be set to <ph id="ph1">`null`</ph>, indicating that no designer is active.</source>
          <target state="translated">Tej właściwości można ustawić <ph id="ph1">`null`</ph>, wskazującą, czy projektant nie jest aktywny.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
          <source>Occurs when the currently active designer changes.</source>
          <target state="translated">Występuje po zmianie aktywnego projektanta.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Creates an instance of a design surface.</source>
          <target state="translated">Tworzy wystąpienie powierzchnię projektu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
          <source>Creates an instance of a design surface.</source>
          <target state="translated">Tworzy wystąpienie powierzchnię projektu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
          <source>A new design surface instance.</source>
          <target state="translated">Nowe wystąpienie powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>A parent service provider.</source>
          <target state="translated">Nadrzędny dostawca usługi.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</source>
          <target state="translated">Nowego dostawcę usługi scalonych zostanie utworzony najpierw uzyskać ten dostawca usługi, a następnie przekazać zakończą się niepowodzeniem do obiektu Menedżera powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>This merged provider will be passed into the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /&gt;</ph> method.</source>
          <target state="translated">Ten dostawca scalone zostaną przekazane do <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>Creates an instance of a design surface.</source>
          <target state="translated">Tworzy wystąpienie powierzchnię projektu.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>A new design surface instance.</source>
          <target state="translated">Nowe wystąpienie powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>If you want to conveniently add additional per-designer services, use the <ph id="ph1">`parentProvider`</ph> parameter to provide a service provider for this design surface.</source>
          <target state="translated">Aby łatwo dodać dodatkowych usług na projektanta, należy użyć <ph id="ph1">`parentProvider`</ph> parametr, aby podać dostawcę usług dla tej warstwy projektowania.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> itself.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> Metoda tworzy scalone usługodawcy, która spełnia żądania obsługi od dostawcy danej usługi, jak również <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> samej siebie.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method then passes this service provider into the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> Metody następnie przekazuje tego dostawcy usług w <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> returns the design surface, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method tries to obtain the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>.</source>
          <target state="translated">Po <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> zwraca powierzchni projektowej <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> metoda próbuje uzyskać <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>If it is present, and if it is the instance of the service that <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> provided by default, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method raises the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt;</ph> event.</source>
          <target state="translated">Jeśli jest obecny, a to wystąpienie usługi który <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> domyślne, <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> metoda zgłasza <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="parentProvider" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parentProvider" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>If an external implementation of the service was provided, it is the responsibility of the class that derives from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class to raise the <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /&gt;</ph> event.</source>
          <target state="translated">Jeśli podano implementacji zewnętrznej usługi, jest odpowiedzialny za klasy, która jest pochodną <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> klasę, aby podnieść <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>A service provider to pass to the design surface.</source>
          <target state="translated">Dostawca usług do przekazania na powierzchnię projektu.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>This is either an instance of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> or an object that implements <ph id="ph2">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>, and represents a merge between the service provider of the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class and an externally passed provider.</source>
          <target state="translated">To wystąpienie elementu <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> lub obiekt, który implementuje <ph id="ph2">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>i reprezentuje scalania między dostawcą usługi <ph id="ph3">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> klasy i zewnętrznie przekazany dostawcy.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>Implementation that creates the design surface.</source>
          <target state="translated">Implementację, która tworzy powierzchnię projektu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>A new design surface instance.</source>
          <target state="translated">Nowe wystąpienie powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> method is called by both <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> Metoda jest wywoływana zarówno przez <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>It is the implementation that actually creates the design surface.</source>
          <target state="translated">Jest implementację, która faktycznie tworzy powierzchnię projektu.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>The default implementation just returns a new <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated">Domyślna implementacja zwraca po prostu nową <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>You may override this method to provide a custom object that derives from the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class.</source>
          <target state="translated">Mogą przesłonić tę metodę, aby zapewnić obiektów niestandardowych, która jest pochodną <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
          <source>Occurs when a designer is created.</source>
          <target state="translated">Występuje, gdy projektant jest tworzony.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
          <source>Occurs when a designer is disposed.</source>
          <target state="translated">Występuje, gdy projektant jest usunięty.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
          <source>Gets a collection of design surfaces.</source>
          <target state="translated">Pobiera kolekcję powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
          <source>A collection of design surfaces that are currently hosted by the design surface manager.</source>
          <target state="translated">Kolekcja powierzchni projektu, które są obecnie obsługiwane przez Menedżera powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A&gt;</ph> property is implemented directly on top of <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, so if you provide your own implementation of that service, this property uses your implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A&gt;</ph> Właściwość jest implementowana bezpośrednio nad <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, więc jeśli podasz implementacji tej usługi, ta właściwość używa implementacji.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph>.</source>
          <target state="translated">Zwalnia zasoby używane przez <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph>.</source>
          <target state="translated">Zwalnia zasoby używane przez <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">Publicznego <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> metoda zgodna standardowego <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> wzorca.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>Calling this method destroys the design surface manager.</source>
          <target state="translated">Wywołanie tej metody niszczy Menedżera powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>It also disposes the service container, which causes all services that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> to also be disposed.</source>
          <target state="translated">Również usuwa kontener usługi, co powoduje, że wszystkie usługi, które implementują <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> również usuwana.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">Chroniona wersja ta metoda jest <ph id="ph1">`virtual`</ph> i jest zgodna z normalnym <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> wzorca.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> nie ma żadnych kodu natywnego, aby wyczyścić, nie ma finalizator tego wywołania <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">Jeśli należy wywołać <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, możesz finalizator należy dodać.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zwolnić zasoby zarządzane i niezarządzane; <ph id="ph2">&lt;see langword="false" /&gt;</ph> aby zwolnić tylko zasoby niezarządzane.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Zwalnia zasoby niezarządzane używane przez <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> i opcjonalnie zwalnia zasoby zarządzane.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">Publicznego <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> metoda zgodna standardowego <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> wzorca.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>Calling this method destroys the design surface manager.</source>
          <target state="translated">Wywołanie tej metody niszczy Menedżera powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>It also disposes the service container, which causes all services that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> to also be disposed.</source>
          <target state="translated">Również usuwa kontener usługi, co powoduje, że wszystkie usługi, które implementują <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> również usuwana.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">Chroniona wersja ta metoda jest <ph id="ph1">`virtual`</ph> i jest zgodna z normalnym <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> wzorca.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> nie ma żadnych kodu natywnego, aby wyczyścić, nie ma finalizator tego wywołania <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">Jeśli należy wywołać <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, możesz finalizator należy dodać.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Ta metoda jest wywoływana przez metodę publiczną <ph id="ph1">`Dispose()`</ph> — metoda i <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> wywołuje chronioną metodę <ph id="ph2">`Dispose(Boolean)`</ph> metody z <ph id="ph3">`disposing`</ph> ustawiono parametr <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> wywołuje <ph id="ph2">`Dispose`</ph> z <ph id="ph3">`disposing`</ph> ustawioną <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> references.</source>
          <target state="translated">Gdy <ph id="ph1">`disposing`</ph> parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> odwołania.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Ta metoda wywołuje <ph id="ph1">`Dispose()`</ph> metody każdego odwołuje się do obiektu.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> można wywoływać wielokrotnie przez inne obiekty.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">W przypadku przesłaniania <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat sposobu wdrażania <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, zobacz <bpt id="p1">[</bpt>implementacja metody Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> i <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> i <bpt id="p2">[</bpt>przesłaniania metody Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
          <source>The service type to retrieve.</source>
          <target state="translated">Typ usługi do pobrania.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
          <source>Gets a service in the design surface manager’s service container.</source>
          <target state="translated">Pobiera usługę w kontenerze usługi Menedżera powierzchni projektu.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
          <source>An object that implements, or is a derived class of, the given service type; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the service does not exist in the service container.</source>
          <target state="translated">Obiekt, który implementuje lub jest klasy pochodnej z danego typu usługi; w przeciwnym razie <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli usługa nie istnieje w kontenerze usług.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A&gt;</ph> method forwards to any service provider that was given to the design surface manager at construction time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A&gt;</ph> Metoda przekazuje do dowolnego dostawcy usług, która została Menedżera powierzchni projektu podczas konstruowania.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
          <source>Occurs when the global selection changes.</source>
          <target state="translated">Występuje, gdy zmieni się zaznaczenie globalnego.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
          <source>This event is raised when the active designer's selection of component set changes.</source>
          <target state="translated">To zdarzenie jest wywoływane, gdy wybór active projektanta składnika zestawu zmian.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
          <source>This is mapped through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface.</source>
          <target state="translated">To jest mapowane za pośrednictwem <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
          <source>Gets the design surface manager's <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /&gt;</ph>.</source>
          <target state="translated">Pobiera Menedżera powierzchni projektu <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
          <source>The design surface manager's <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /&gt;</ph>.</source>
          <target state="translated">Menedżer powierzchni projektu <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
          <source>Classes inheriting from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class can use this property to add and remove services.</source>
          <target state="translated">Dziedziczenie z klas <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> Klasa ta właściwość służy do dodawania i usuwania usług.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>