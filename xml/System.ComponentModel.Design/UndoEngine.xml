<Type Name="UndoEngine" FullName="System.ComponentModel.Design.UndoEngine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="921558fdca96cca1a39d4c27af1a37fb89d55b6c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39837116" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class UndoEngine : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UndoEngine extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UndoEngine&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UndoEngine abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type UndoEngine = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ef4d0-101">Określa funkcje ogólnego Cofnij/ponów w czasie projektowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef4d0-101">Specifies generic undo/redo functionality at design time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4d0-102"><xref:System.ComponentModel.Design.UndoEngine> Klasę abstrakcyjną udostępnia domyślną implementację funkcji cofania w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-102">The <xref:System.ComponentModel.Design.UndoEngine> abstract class provides a default implementation of undo functionality at design time.</span></span> <span data-ttu-id="ef4d0-103">Jednostki cofania reprezentuje pojedynczą jednostkę pracy można cofnąć.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-103">An undo unit represents a single unit of undoable work.</span></span> <span data-ttu-id="ef4d0-104">Ta jednostka zostanie dodany do stosu, a użytkownik może przemieszczając stosu do cofnięcia każdego działania.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-104">This unit is added to a stack and the user can then walk the stack to undo each action.</span></span> <span data-ttu-id="ef4d0-105">Jednostek cofania zwykle są przeznaczone do przełączenia, co oznacza, że tego wywołania cofania zwraca dwa razy aplikacji do stanu początkowego.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-105">Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.</span></span>  
  
 <span data-ttu-id="ef4d0-106"><xref:System.ComponentModel.Design.UndoEngine> Klasy wykorzystuje następujące właściwości obiektów w ramach projektanta:</span><span class="sxs-lookup"><span data-stu-id="ef4d0-106">The <xref:System.ComponentModel.Design.UndoEngine> class takes advantage of the following characteristics of objects running within the designer:</span></span>  
  
-   <span data-ttu-id="ef4d0-107">Wszystkie obiekty interesujące może być utrwalony na niektórych format przez program ładujący projektanta.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-107">All interesting objects can be persisted to some format by the designer loader.</span></span>  
  
-   <span data-ttu-id="ef4d0-108">Wszystkie obiekty wywoływanie powiadomień o zmianie właściwości po zmianie właściwości.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-108">All objects raise property-change notifications when a property is changed.</span></span>  
  
-   <span data-ttu-id="ef4d0-109"><xref:System.ComponentModel.Design.IDesignerHost> oferuje pomysł transakcji, które mogą być używane z przeznaczeniem akcję cofania, obejmującej wiele mniejszych akcji do.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-109"><xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.</span></span>  
  
 <span data-ttu-id="ef4d0-110">Z tymi funkcjami <xref:System.ComponentModel.Design.UndoEngine> można przeznaczeniem żadnych jednostek cofania potrzebuje automatycznie.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-110">With these features, <xref:System.ComponentModel.Design.UndoEngine> can fabricate any undo units it needs automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ef4d0-111">Nie zmieniaj wartości właściwości bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-111">Do not change property values directly.</span></span> <span data-ttu-id="ef4d0-112"><xref:System.ComponentModel.Design.UndoEngine> Klasy, musisz to zrobić w odpowiednim <xref:System.ComponentModel.TypeDescriptor> w celu zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-112">The <xref:System.ComponentModel.Design.UndoEngine> class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values.</span></span>  
  
 <span data-ttu-id="ef4d0-113"><xref:System.ComponentModel.Design.UndoEngine> monitory, aby utworzyć powiadomienia o zmianach jednostek cofania i samych jednostek składają się Zserializowany obiekt stanów.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-113"><xref:System.ComponentModel.Design.UndoEngine> monitors for change notifications to create undo units, and the units themselves consist of serialized object states.</span></span> <span data-ttu-id="ef4d0-114">W poniższej tabeli przedstawiono usługi, które muszą być dostępne, kiedy <xref:System.ComponentModel.Design.UndoEngine> zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-114">The following table shows the services that must be available when <xref:System.ComponentModel.Design.UndoEngine> is created.</span></span>  
  
|<span data-ttu-id="ef4d0-115">Usługa</span><span class="sxs-lookup"><span data-stu-id="ef4d0-115">Service</span></span>|<span data-ttu-id="ef4d0-116">Opis</span><span class="sxs-lookup"><span data-stu-id="ef4d0-116">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|<span data-ttu-id="ef4d0-117">Zapisuje wartości właściwości i obiektów dla składnika, przed i po zmianie.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-117">Saves property and object values for a component before and after a change is made.</span></span>|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="ef4d0-118">Powiadamia aparatu Cofnij zmiany wprowadzone do składników.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-118">Notifies the undo engine of changes made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="ef4d0-119">Używane do śledzenia transakcji.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-119">Used to track transactions.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ef4d0-120">Ponieważ <xref:System.ComponentModel.Design.UndoEngine> klasa wymaga <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> i <xref:System.ComponentModel.Design.IComponentChangeService>, jest dostępna tylko w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-120">Because the <xref:System.ComponentModel.Design.UndoEngine> class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time.</span></span>  
  
 <span data-ttu-id="ef4d0-121">Aparat cofania śledzi transakcji i powoduje utworzenie jednostki pojedynczą czynność cofnięcia obejmującym transakcji.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-121">The undo engine tracks transactions and creates a single undo unit that encompasses a transaction.</span></span> <span data-ttu-id="ef4d0-122">W rezultacie Aparat cofania ma kontrolę nad czas trwania akcję można cofnąć.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-122">As a result, the undo engine has control over the duration of an undoable action.</span></span> <span data-ttu-id="ef4d0-123">Ponadto może być nazwane transakcji, dlatego można cofnąć akcje dziedziczy ich nazwy bieżącej transakcji.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-123">Also, because transactions can be named, undoable actions inherit their names from the current transaction.</span></span> <span data-ttu-id="ef4d0-124">Jeśli żadna transakcja nie jest dostępne, a zmiany są zgłaszane, aparat cofania tworzy nazwę cofania na podstawie typu zmiany (na przykład "Zmień właściwość"Text"").</span><span class="sxs-lookup"><span data-stu-id="ef4d0-124">If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, "Change property 'Text'").</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UndoEngine (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UndoEngine(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.UndoEngine : IServiceProvider -&gt; System.ComponentModel.Design.UndoEngine" Usage="new System.ComponentModel.Design.UndoEngine provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="ef4d0-125">Element nadrzędny usługodawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-125">A parenting service provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.UndoEngine" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4d0-127"><xref:System.ComponentModel.Design.UndoEngine> Wymaga kilku usług od `provider` parametru były przydatne.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-127">The <xref:System.ComponentModel.Design.UndoEngine> requires several services from the `provider` parameter to be useful.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4d0-128">
            <paramref name="provider" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-128">
              <paramref name="provider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef4d0-129">Nie można odnaleźć wymaganej usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-129">A required service cannot be found.</span>
          </span>
          <span data-ttu-id="ef4d0-130">Zobacz <see cref="T:System.ComponentModel.Design.UndoEngine" /> dla wymaganych usług.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-130">See <see cref="T:System.ComponentModel.Design.UndoEngine" /> for required services.</span>
          </span>
          <span data-ttu-id="ef4d0-131">Jeśli ta usługa została usunięta, upewnij się, że dostarczają zamiennika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-131">If you have removed this service, ensure that you provide a replacement.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddUndoUnit">
      <MemberSignature Language="C#" Value="protected abstract void AddUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddUndoUnit(class System.ComponentModel.Design.UndoEngine/UndoUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AddUndoUnit (unit As UndoEngine.UndoUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void AddUndoUnit(System::ComponentModel::Design::UndoEngine::UndoUnit ^ unit);" />
      <MemberSignature Language="F#" Value="abstract member AddUndoUnit : System.ComponentModel.Design.UndoEngine.UndoUnit -&gt; unit" Usage="undoEngine.AddUndoUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.ComponentModel.Design.UndoEngine+UndoUnit" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="ef4d0-132">Jednostki cofania do dodania</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-132">The undo unit to add</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-133">Dodaje <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> stosu cofania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-133">Adds an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> to the undo stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4d0-134">Tworzenie `unit` parametrów, wywołując <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-134">Create the `unit` parameter by calling the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="CreateUndoUnit">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.UndoEngine.UndoUnit CreateUndoUnit (string name, bool primary);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.UndoEngine/UndoUnit CreateUndoUnit(string name, bool primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateUndoUnit (name As String, primary As Boolean) As UndoEngine.UndoUnit" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::UndoEngine::UndoUnit ^ CreateUndoUnit(System::String ^ name, bool primary);" />
      <MemberSignature Language="F#" Value="abstract member CreateUndoUnit : string * bool -&gt; System.ComponentModel.Design.UndoEngine.UndoUnit&#xA;override this.CreateUndoUnit : string * bool -&gt; System.ComponentModel.Design.UndoEngine.UndoUnit" Usage="undoEngine.CreateUndoUnit (name, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine+UndoUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ef4d0-135">Nazwa jednostki do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-135">The name of the unit to create.</span>
          </span>
        </param>
        <param name="primary">
          <span data-ttu-id="ef4d0-136">
            <see langword="true" /> Aby utworzyć pierwszy z serii zagnieżdżonych jednostek. <see langword="false" /> tworzenia kolejnych jednostek zagnieżdżonych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-136">
              <see langword="true" /> to create the first of a series of nested units; <see langword="false" /> to create subsequent nested units.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-137">Tworzy nową <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-137">Creates a new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4d0-138">Nowy <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-138">A new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> with a specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4d0-139">Domyślna implementacja klasy <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> metoda po prostu zwraca nowy <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-139">The default implementation of the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.</span></span>  
  
 <span data-ttu-id="ef4d0-140">Domyślnie <xref:System.ComponentModel.Design.UndoEngine> nie działają z `primary` parametru, ale niektóre implementacje cofania, takich jak obejmujące COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` wzorca projektowego uwidocznić różnicę między jednostkę podstawową i jego elementów podrzędnych może być konieczne.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-140">By default, <xref:System.ComponentModel.Design.UndoEngine> does nothing with the `primary` parameter, but some implementations of undo, such as those involving the COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` design pattern, may need to identify the difference between a primary unit and its children.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardUndoUnit">
      <MemberSignature Language="C#" Value="protected virtual void DiscardUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DiscardUndoUnit(class System.ComponentModel.Design.UndoEngine/UndoUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DiscardUndoUnit (unit As UndoEngine.UndoUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DiscardUndoUnit(System::ComponentModel::Design::UndoEngine::UndoUnit ^ unit);" />
      <MemberSignature Language="F#" Value="abstract member DiscardUndoUnit : System.ComponentModel.Design.UndoEngine.UndoUnit -&gt; unit&#xA;override this.DiscardUndoUnit : System.ComponentModel.Design.UndoEngine.UndoUnit -&gt; unit" Usage="undoEngine.DiscardUndoUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.ComponentModel.Design.UndoEngine+UndoUnit" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="ef4d0-141">Jednostki można odrzucić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-141">The unit to discard.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-142">Odrzuca <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-142">Discards an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4d0-143">Przed <xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A> metoda jest wywoływana, jednostki cofania jest zamknięty i następnie wycofywania.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-143">Before the <xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A> method is called, the undo unit is closed and then undone.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef4d0-144">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-144">Releases the resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="undoEngine.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef4d0-145">Zwalnia wszelkie zasoby używane przez <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-145">Releases all resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="undoEngine.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ef4d0-146">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-146">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-147">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.ComponentModel.Design.UndoEngine" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-147">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.ComponentModel.Design.UndoEngine.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef4d0-148">Włącza lub wyłącza <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-148">Enables or disables the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef4d0-149">
            <see langword="true" /> Jeśli <see cref="T:System.ComponentModel.Design.UndoEngine" /> jest włączone; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-149">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine" /> is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService">
      <MemberSignature Language="C#" Value="protected object GetRequiredService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetRequiredService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetRequiredService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetRequiredService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetRequiredService : Type -&gt; obj" Usage="undoEngine.GetRequiredService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ef4d0-150">Typ usługi do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-150">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-151">Pobiera żądaną usługę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-151">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4d0-152">Żądana usługa, jeśli znaleziono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-152">The requested service, if found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4d0-153">
            <paramref name="serviceType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-153">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef4d0-154">
            <paramref name="serviceType" /> jest wymagany, ale nie można odnaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-154">
              <paramref name="serviceType" /> is required but cannot be found.</span>
          </span>
          <span data-ttu-id="ef4d0-155">Jeśli ta usługa została usunięta, upewnij się, że dostarczają zamiennika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-155">If you have removed this service, ensure that you provide a replacement.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="undoEngine.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ef4d0-156">Typ usługi do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-156">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-157">Pobiera żądaną usługę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-157">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4d0-158">Żądana usługa lub <see langword="null" /> Jeśli nie można odnaleźć żądanej usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-158">The requested service, or <see langword="null" /> if the requested service is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4d0-159">
            <paramref name="serviceType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-159">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnUndoing">
      <MemberSignature Language="C#" Value="protected virtual void OnUndoing (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUndoing(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUndoing (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUndoing(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUndoing : EventArgs -&gt; unit&#xA;override this.OnUndoing : EventArgs -&gt; unit" Usage="undoEngine.OnUndoing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ef4d0-160">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-160">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-161">Wywołuje <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-161">Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndone">
      <MemberSignature Language="C#" Value="protected virtual void OnUndone (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUndone(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUndone (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUndone(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUndone : EventArgs -&gt; unit&#xA;override this.OnUndone : EventArgs -&gt; unit" Usage="undoEngine.OnUndone e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ef4d0-162">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-162">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4d0-163">Wywołuje <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-163">Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undoing">
      <MemberSignature Language="C#" Value="public event EventHandler Undoing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Undoing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.UndoEngine.Undoing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Undoing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Undoing;" />
      <MemberSignature Language="F#" Value="member this.Undoing : EventHandler " Usage="member this.Undoing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef4d0-164">Występuje bezpośrednio przed wykonaniem akcji cofania jest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-164">Occurs immediately before an undo action is performed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoInProgress">
      <MemberSignature Language="C#" Value="public bool UndoInProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UndoInProgress" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoInProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UndoInProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UndoInProgress { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoInProgress : bool" Usage="System.ComponentModel.Design.UndoEngine.UndoInProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef4d0-165">Wskazuje, czy akcję cofania w toku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-165">Indicates if an undo action is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef4d0-166">
            <see langword="true" /> Jeśli akcję cofania jest w toku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-166">
              <see langword="true" /> if an undo action is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undone">
      <MemberSignature Language="C#" Value="public event EventHandler Undone;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Undone" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.UndoEngine.Undone" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Undone As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Undone;" />
      <MemberSignature Language="F#" Value="member this.Undone : EventHandler " Usage="member this.Undone : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef4d0-167">Występuje natychmiast, po wykonaniu akcji cofania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4d0-167">Occurs immediately after an undo action is performed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4d0-168"><xref:System.ComponentModel.Design.UndoEngine.Undone> Zdarzenie jest wywoływane zawsze, nawet wtedy, gdy zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ef4d0-168">The <xref:System.ComponentModel.Design.UndoEngine.Undone> event is always raised, even if an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>