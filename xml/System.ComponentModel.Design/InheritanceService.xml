<Type Name="InheritanceService" FullName="System.ComponentModel.Design.InheritanceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23096fd897c83bbf7f566a7c11531c9c0299bbfe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705746" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InheritanceService : IDisposable, System.ComponentModel.Design.IInheritanceService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InheritanceService extends System.Object implements class System.ComponentModel.Design.IInheritanceService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.InheritanceService" />
  <TypeSignature Language="VB.NET" Value="Public Class InheritanceService&#xA;Implements IDisposable, IInheritanceService" />
  <TypeSignature Language="C++ CLI" Value="public ref class InheritanceService : IDisposable, System::ComponentModel::Design::IInheritanceService" />
  <TypeSignature Language="F#" Value="type InheritanceService = class&#xA;    interface IInheritanceService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IInheritanceService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ddd81-101">Udostępnia zestaw metod identyfikacji składników odziedziczonych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ddd81-101">Provides a set of methods for identifying inherited components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-102"><xref:System.ComponentModel.Design.InheritanceService> Można znaleźć składników odziedziczonych, wybierz te, które można zignorować i pobierać z atrybutem dziedziczenia każdego dziedziczonej klasie, które są śledzone przez usługę.</span><span class="sxs-lookup"><span data-stu-id="ddd81-102">The <xref:System.ComponentModel.Design.InheritanceService> can be used to find inherited components, select which ones to ignore, and retrieve the inheritance attribute of each inherited class that is tracked by the service.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InheritanceService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InheritanceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddd81-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.InheritanceService" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.InheritanceService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddInheritedComponents">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddd81-104">Dodaje składniki dziedziczone przez określony składnik na <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-104">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="public void AddInheritedComponents (System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddInheritedComponents(class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInheritedComponents (component As IComponent, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddInheritedComponents(System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit&#xA;override this.AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="inheritanceService.AddInheritedComponents (component, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ddd81-105">Składnik wyszukiwania dla składników odziedziczonych dodać do określonego kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-105">The component to search for inherited components to add to the specified container.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="ddd81-106">Kontener, aby dodać składniki dziedziczonych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-106">The container to add the inherited components to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddd81-107">Dodaje składniki dziedziczone przez określony składnik na <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-107">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-108">Ta metoda przeszukuje wszystkie pola wszystkie klasy podstawowe określonego składnika.</span><span class="sxs-lookup"><span data-stu-id="ddd81-108">This method searches all the fields of all base classes of the specified component.</span></span> <span data-ttu-id="ddd81-109">Każde pole, który implementuje <xref:System.ComponentModel.IComponent> zostanie dodany do określonego kontenera.</span><span class="sxs-lookup"><span data-stu-id="ddd81-109">Each field that implements <xref:System.ComponentModel.IComponent> is added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="protected virtual void AddInheritedComponents (Type type, System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddInheritedComponents(class System.Type type, class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddInheritedComponents(Type ^ type, System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : Type * System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit&#xA;override this.AddInheritedComponents : Type * System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="inheritanceService.AddInheritedComponents (type, component, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="ddd81-110">Typ podstawowy do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-110">The base type to search for.</span>
          </span>
        </param>
        <param name="component">
          <span data-ttu-id="ddd81-111">Składnik wyszukiwania dla składników odziedziczonych dodać do określonego kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-111">The component to search for inherited components to add to the specified container.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="ddd81-112">Kontener, aby dodać składniki dziedziczonych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-112">The container to add the inherited components to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddd81-113">Dodaje składników określonego typu, które są dziedziczone przez określony składnik na <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-113">Adds the components of the specified type that are inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-114">Ta metoda przeszukuje wszystkie pola wszystkie klasy podstawowe składnika.</span><span class="sxs-lookup"><span data-stu-id="ddd81-114">This method searches all the fields of all base classes of component.</span></span> <span data-ttu-id="ddd81-115">Każde pole, który implementuje <xref:System.ComponentModel.IComponent> zostanie dodany do listy wewnętrznej, która przechowuje <xref:System.ComponentModel.InheritanceAttribute> identyfikującym poziomie dziedziczenia składnika.</span><span class="sxs-lookup"><span data-stu-id="ddd81-115">Each field that implements <xref:System.ComponentModel.IComponent> is added to an internal list that stores an <xref:System.ComponentModel.InheritanceAttribute> that identifies the inheritance level of the component.</span></span> <span data-ttu-id="ddd81-116">Składnik jest dodawane do określonego kontenera.</span><span class="sxs-lookup"><span data-stu-id="ddd81-116">The component is then added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddd81-117">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-117">Releases the resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inheritanceService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddd81-118">Zwalnia wszelkie zasoby używane przez <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-118">Releases all resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-119">Wywoływanie <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> umożliwia zasoby używane przez <xref:System.ComponentModel.Design.InheritanceService> odbiorczego do innych celów.</span><span class="sxs-lookup"><span data-stu-id="ddd81-119">Calling <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> allows the resources used by the <xref:System.ComponentModel.Design.InheritanceService> to be reallocated for other purposes.</span></span> <span data-ttu-id="ddd81-120">Aby uzyskać więcej informacji na temat <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="ddd81-120">For more information about <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="inheritanceService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ddd81-121">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-121">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddd81-122">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.ComponentModel.Design.InheritanceService" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-122">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-123">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ddd81-123">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ddd81-124">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="ddd81-124">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ddd81-125"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="ddd81-125"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ddd81-126">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.ComponentModel.Design.InheritanceService> odwołania.</span><span class="sxs-lookup"><span data-stu-id="ddd81-126">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.InheritanceService> references.</span></span> <span data-ttu-id="ddd81-127">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="ddd81-127">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ddd81-128">
            <para>
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenia Resources](~/docs/standard/garbage-collection/unmanaged.md) niezarządzane i [zastąpienie metody Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-128">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetInheritanceAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.InheritanceAttribute GetInheritanceAttribute (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.InheritanceAttribute GetInheritanceAttribute(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInheritanceAttribute (component As IComponent) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::InheritanceAttribute ^ GetInheritanceAttribute(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute&#xA;override this.GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute" Usage="inheritanceService.GetInheritanceAttribute component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="ddd81-129">Składnik można pobrać atrybutu dziedziczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-129">The component to retrieve the inheritance attribute for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddd81-130">Pobiera atrybut dziedziczenia z określonego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-130">Gets the inheritance attribute of the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddd81-131">
            <see cref="T:System.ComponentModel.InheritanceAttribute" /> Opisujący poziom ten składnik jest dostarczany z dziedziczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-131">An <see cref="T:System.ComponentModel.InheritanceAttribute" /> that describes the level of inheritance that this component comes from.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-132">Jeśli składnik nie jest dziedziczone, ta metoda zwraca wartość <xref:System.ComponentModel.InheritanceAttribute.NotInherited>.</span><span class="sxs-lookup"><span data-stu-id="ddd81-132">If the component is not inherited, this method returns the value <xref:System.ComponentModel.InheritanceAttribute.NotInherited>.</span></span> <span data-ttu-id="ddd81-133">W przeciwnym razie zwraca wartość atrybutu dziedziczenia dla tego składnika.</span><span class="sxs-lookup"><span data-stu-id="ddd81-133">Otherwise, it returns the inheritance attribute for this component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreInheritedMember">
      <MemberSignature Language="C#" Value="protected virtual bool IgnoreInheritedMember (System.Reflection.MemberInfo member, System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IgnoreInheritedMember(class System.Reflection.MemberInfo member, class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IgnoreInheritedMember (member As MemberInfo, component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IgnoreInheritedMember(System::Reflection::MemberInfo ^ member, System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member IgnoreInheritedMember : System.Reflection.MemberInfo * System.ComponentModel.IComponent -&gt; bool&#xA;override this.IgnoreInheritedMember : System.Reflection.MemberInfo * System.ComponentModel.IComponent -&gt; bool" Usage="inheritanceService.IgnoreInheritedMember (member, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="ddd81-134">Element do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-134">The member to check.</span>
          </span>
          <span data-ttu-id="ddd81-135">Ten element członkowski jest <see cref="T:System.Reflection.FieldInfo" /> lub <see cref="T:System.Reflection.MethodInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-135">This member is either a <see cref="T:System.Reflection.FieldInfo" /> or a <see cref="T:System.Reflection.MethodInfo" />.</span>
          </span>
        </param>
        <param name="component">
          <span data-ttu-id="ddd81-136">Wystąpienie składnika, który jest powiązany ten element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-136">The component instance this member is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddd81-137">Wskazuje, czy należy zignorować określonego elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-137">Indicates whether to ignore the specified member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddd81-138">
            <see langword="true" /> Jeśli określony element członkowski powinny być uwzględnione w zestawie składników odziedziczonych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-138">
              <see langword="true" /> if the specified member should be included in the set of inherited components; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ddd81-139">
            <para>Przez zastąpienie tej metody, użytkownicy mogą modyfikować zestaw elementów członkowskich, które ignoruje usługi dziedziczenia. Domyślna implementacja ignoruje wszystkie elementy członkowskie, które są prywatne i umożliwia tylko publiczne lub chronione elementy członkowskie.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddd81-139">
              <para>By overriding this method, users can modify the set of members that the inheritance service ignores. The default implementation ignores all members that are private, and allows only public or protected members.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
  </Members>
</Type>