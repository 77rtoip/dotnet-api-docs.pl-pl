<Type Name="CollectionEditor" FullName="System.ComponentModel.Design.CollectionEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9234250690917602a560e4df79c889d51265e9b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440379" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CollectionEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionEditor extends System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.CollectionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionEditor&#xA;Inherits UITypeEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionEditor : System::Drawing::Design::UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d9ebb-101">Udostępnia interfejs użytkownika, który można edytować większość typów kolekcji w czasie projektowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9ebb-101">Provides a user interface that can edit most types of collections at design time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9ebb-102">Poniższy przykład kodu wykorzystuje <xref:System.ComponentModel.EditorAttribute> do skojarzenia <xref:System.ComponentModel.Design.CollectionEditor> z właściwością.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-102">The following code example uses an <xref:System.ComponentModel.EditorAttribute> to associate the <xref:System.ComponentModel.Design.CollectionEditor> with a property.</span></span>  
  
 [!code-cpp[EditorAttributesExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/EditorAttributesExample/CPP/class1.cpp#1)]
 [!code-csharp[EditorAttributesExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/EditorAttributesExample/CS/class1.cs#1)]
 [!code-vb[EditorAttributesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EditorAttributesExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="d9ebb-103">Ten edytor umożliwia edytowanie kolekcji, które mają <see langword="Item" /> właściwości.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d9ebb-103">This editor can edit collections that have an <see langword="Item" /> property.</span>
        </span>
        <span data-ttu-id="d9ebb-104">Edytor można określić typu kolekcji z <see langword="Item" /> właściwości, jeśli istnieje.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d9ebb-104">The editor can determine the type of the collection from the <see langword="Item" /> property, if it exists.</span>
        </span>
        <span data-ttu-id="d9ebb-105">Jeśli kolekcja nie zawiera tej właściwości lub jeśli chcesz podać więcej niż jeden typ kolekcji, można zastąpić niektórych chronionych elementów członkowskich tej klasy, aby dostosować obsługuje inne typy kolekcji w edytorze.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d9ebb-105">If the collection does not have this property, or if you want to provide collections of more than one type, you can override certain protected members of this class to customize the editor to support other types of collections.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Drawing.Design.UITypeEditor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionEditor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CollectionEditor(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d9ebb-106">Typ kolekcji dla tego edytora do edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-106">The type of the collection for this editor to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.CollectionEditor" /> przy użyciu określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> class using the specified collection type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelChanges">
      <MemberSignature Language="C#" Value="protected virtual void CancelChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CancelChanges" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CancelChanges ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CancelChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-108">Anuluje zmiany w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-108">Cancels changes to the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d9ebb-109">Przesłania tę metodę, jeśli zachodzi potrzeba wykonania dodatkowego przetwarzania podczas zmiany w kolekcji zostały anulowane.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d9ebb-109">Override this method if you need to perform additional processing when changes to the collection are canceled.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveInstance">
      <MemberSignature Language="C#" Value="protected virtual bool CanRemoveInstance (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanRemoveInstance(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanRemoveInstance (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanRemoveInstance(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d9ebb-110">Wartość do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-110">The value to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-111">Wskazuje, czy można usunąć oryginalny członków kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-111">Indicates whether original members of the collection can be removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-112">
            <see langword="true" /> Jeśli jest dozwolone, Usuń tę wartość z kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-112">
              <see langword="true" /> if it is permissible to remove this value from the collection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d9ebb-113">Domyślna implementacja zawsze zwraca <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-113">The default implementation always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-114">Po zaimplementowaniu w klasie pochodnej, ta metoda określa, czy określona wartość może być usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-114">When implemented in a derived class, this method indicates whether the specified value can be removed from the collection.</span></span> <span data-ttu-id="d9ebb-115">Domyślnie ta metoda zawsze zwraca wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-115">By default, this method always returns `true`.</span></span>  
  
 <span data-ttu-id="d9ebb-116">Ta metoda jest wywoływana, gdy użytkownik próbuje usunąć elementu, który jest elementem członkowskim oryginalnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-116">This method is called when the user tries to remove an item that is an original member of the collection.</span></span> <span data-ttu-id="d9ebb-117">Ta metoda nie jest wywoływana podczas usuwania elementów, które zostały dodane w bieżącej sesji edytowania, ponieważ nie są jeszcze należy do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-117">This method is not called when removing items that were added in the current editing session because they are not yet part of the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelectMultipleInstances">
      <MemberSignature Language="C#" Value="protected virtual bool CanSelectMultipleInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanSelectMultipleInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanSelectMultipleInstances () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanSelectMultipleInstances();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-118">Wskazuje, czy wielu elementów w kolekcji można wybierać jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-118">Indicates whether multiple collection items can be selected at once.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-119">
            <see langword="true" /> Jeśli wielu członków kolekcji można ją wybrać w tym samym czasie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-119">
              <see langword="true" /> if it multiple collection members can be selected at the same time; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d9ebb-120">Domyślnie to polecenie zwróci <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-120">By default, this returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-121">Ta metoda wskazuje, czy w ramach okno dialogowe Edytor kolekcji można wybierać wielu elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-121">This method indicates whether multiple collection members can be selected within the collection editor dialog box.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionItemType">
      <MemberSignature Language="C#" Value="protected Type CollectionItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CollectionItemType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CollectionItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Type ^ CollectionItemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-122">Pobiera typ danych poszczególnych elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-122">Gets the data type of each item in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9ebb-123">Typ danych elementów kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-123">The data type of the collection items.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-124">Ta właściwość reprezentuje elementy kolekcji tego typu danych.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-124">This property represents the data type of the items of the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="protected Type CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CollectionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CollectionType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Type ^ CollectionType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-125">Pobiera typ danych obiektu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-125">Gets the data type of the collection object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9ebb-126">Typ danych obiektu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-126">The data type of the collection object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-127">Ta właściwość reprezentuje typ danych obiektu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-127">This property represents the data type of the collection object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.ITypeDescriptorContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ITypeDescriptorContext Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As ITypeDescriptorContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::ITypeDescriptorContext ^ Context { System::ComponentModel::ITypeDescriptorContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ITypeDescriptorContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-128">Pobiera deskryptor typu, która wskazuje bieżący kontekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-128">Gets a type descriptor that indicates the current context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9ebb-129">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Wskazujące kontekstu obecnie w użyciu, lub <see langword="null" /> Jeśli żaden kontekst nie jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-129">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context currently in use, or <see langword="null" /> if no context is available.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCollectionForm">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.CollectionEditor.CollectionForm CreateCollectionForm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.CollectionEditor/CollectionForm CreateCollectionForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCollectionForm () As CollectionEditor.CollectionForm" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::CollectionEditor::CollectionForm ^ CreateCollectionForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CollectionEditor+CollectionForm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-130">Tworzy nowy formularz, aby wyświetlić i edytować bieżącej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-130">Creates a new form to display and edit the current collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-131">A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> zapewnienie jako interfejs użytkownika do edycji kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-131">A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to provide as the user interface for editing the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d9ebb-132">Może dziedziczyć <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> własne formy.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d9ebb-132">You can inherit from <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to provide your own form.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateCollectionItemType">
      <MemberSignature Language="C#" Value="protected virtual Type CreateCollectionItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type CreateCollectionItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCollectionItemType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ CreateCollectionItemType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-133">Pobiera typ danych, który zawiera tę kolekcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-133">Gets the data type that this collection contains.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-134">Typ danych elementów w kolekcji lub <see cref="T:System.Object" /> Jeśli żadne <see langword="Item" /> właściwości może znajdować się w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-134">The data type of the items in the collection, or an <see cref="T:System.Object" /> if no <see langword="Item" /> property can be located on the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-135">Można pobrać typu danych elementów do kolekcji <xref:System.ComponentModel.Design.CollectionEditor.CollectionItemType%2A> właściwość, która jest szybsza niż tej metody.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-135">You can retrieve the data type of the items of the collection from the <xref:System.ComponentModel.Design.CollectionEditor.CollectionItemType%2A> property, which is faster than this method.</span></span>  
  
 <span data-ttu-id="d9ebb-136">Tej metody nie musi być wywoływany przez użytkowników, z wyjątkiem w klasach pochodnych, gdy ta metoda zostały zastąpione i zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-136">This method does not need to be called by users, except in derived classes where this method has been overridden and implemented.</span></span>  
  
 <span data-ttu-id="d9ebb-137">Domyślna implementacja tej metody zwraca typ danych `Item` właściwości kolekcji, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-137">The default implementation of this method returns the data type of the `Item` property of the collection, if it exists.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d9ebb-138">Deweloperzy mogą być przesłonić tę metodę do obsługi kolekcji, które nie są zgodne z modelu kolekcji typowe i obsługiwanych lub gdy wydajność krytyczne i oparty na odbiciu rozpoznawania typu jest zbyt wolno.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d9ebb-138">Developers can choose to override this method to support collections that do not follow the typical and supported collection model, or when performance is critical, and reflection-based type resolution is too slow.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance (itemType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="d9ebb-139">Typ elementu do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-139">The type of item to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-140">Tworzy nowe wystąpienie typu elementu w określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-140">Creates a new instance of the specified collection item type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-141">Nowe wystąpienie określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-141">A new instance of the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d9ebb-142">Ta metoda powinien zgłosić wyjątek, jeśli nie można utworzyć nowego wystąpienia określonego typu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d9ebb-142">This method should throw an exception if it cannot create a new instance of the specified type.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateNewItemTypes">
      <MemberSignature Language="C#" Value="protected virtual Type[] CreateNewItemTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type[] CreateNewItemTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateNewItemTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;Type ^&gt; ^ CreateNewItemTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-143">Pobiera typy danych, które mogą zawierać tego edytora kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-143">Gets the data types that this collection editor can contain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-144">Tablica typów danych, które mogą zawierać tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-144">An array of data types that this collection can contain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-145">Można pobrać typu danych elementów do kolekcji <xref:System.ComponentModel.Design.CollectionEditor.NewItemTypes%2A> właściwość, która jest szybsza niż tej metody.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-145">You can retrieve the data type of the items of the collection from the <xref:System.ComponentModel.Design.CollectionEditor.NewItemTypes%2A> property, which is faster than this method.</span></span>  
  
 <span data-ttu-id="d9ebb-146">Tej metody nie musi być wywoływany przez użytkowników, z wyjątkiem w klasach pochodnych, gdy ta metoda zostały zastąpione i zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-146">This method does not need to be called by users, except in derived classes where this method has been overridden and implemented.</span></span>  
  
 <span data-ttu-id="d9ebb-147">Domyślna implementacja tej metody zwraca wszystkie elementy kolekcji tego typu w tablicy typu.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-147">The default implementation of this method returns the type of all the collection items in a Type array.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d9ebb-148">Ta metoda musi zostać zastąpiona w celu obsługuje kolekcji z wieloma typami.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d9ebb-148">This method must be overridden to support collections with multiple types.</span>
            </span>
            <span data-ttu-id="d9ebb-149">Domyślna implementacja tej metody zwraca typ danych <see langword="Item" /> właściwości kolekcji, jeśli istnieje.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d9ebb-149">The default implementation of this method returns the data type of the <see langword="Item" /> property of the collection, if it exists.</span>
            </span>
            <span data-ttu-id="d9ebb-150">Użyj tej metody, aby zastąpić domyślną implementację.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d9ebb-150">Use this method to override the default implementation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DestroyInstance">
      <MemberSignature Language="C#" Value="protected virtual void DestroyInstance (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DestroyInstance(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DestroyInstance (instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DestroyInstance(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d9ebb-151">Obiekt do zniszczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-151">The object to destroy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-152">Niszczy określone wystąpienie obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-152">Destroys the specified instance of the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EditValue (context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EditValue(System::ComponentModel::ITypeDescriptorContext ^ context, IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d9ebb-153">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-153">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="d9ebb-154">Obiekt dostawcy usługi za pośrednictwem której można je uzyskać edycji usług.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-154">A service provider object through which editing services can be obtained.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d9ebb-155">Obiekt, który można edytować wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-155">The object to edit the value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-156">Edytuje wartość określonego obiektu przy użyciu określonego usługodawcę i kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-156">Edits the value of the specified object using the specified service provider and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-157">Nowa wartość obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-157">The new value of the object.</span>
          </span>
          <span data-ttu-id="d9ebb-158">Jeśli wartość obiektu nie została zmieniona, powinny zostać zwrócone tego samego obiektu, który został on przekazany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-158">If the value of the object has not changed, this should return the same object it was passed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Design.CheckoutException">
          <span data-ttu-id="d9ebb-159">Próba wyewidencjonowania pliku, który jest sprawdzany do zarządzania programu kodu źródłowego nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-159">An attempt to check out a file that is checked into a source code management program did not succeed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayText">
      <MemberSignature Language="C#" Value="protected virtual string GetDisplayText (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetDisplayText(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDisplayText (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetDisplayText(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d9ebb-160">Element listy, dla którego można pobrać wyświetlanego tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-160">The list item for which to retrieve display text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-161">Pobiera tekst wyświetlany elementu danej listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-161">Retrieves the display text for the given list item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-162">Tekst wyświetlany <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-162">The display text for <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditStyle (context As ITypeDescriptorContext) As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Design::UITypeEditorEditStyle GetEditStyle(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d9ebb-163">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-163">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-164">Pobiera styl edycji używane przez <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-164">Gets the edit style used by the <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-165">A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> styl wartość wyliczenia wskazująca podana edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-165">A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style.</span>
          </span>
          <span data-ttu-id="d9ebb-166">Jeśli metoda nie jest obsługiwana w określonym kontekście, ta metoda zwróci <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> identyfikator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-166">If the method is not supported in the specified context, this method will return the <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> identifier.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="protected virtual object[] GetItems (object editValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object[] GetItems(object editValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItems (editValue As Object) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetItems(System::Object ^ editValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="editValue">
          <span data-ttu-id="d9ebb-167">Kolekcja do edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-167">The collection to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-168">Pobiera tablicę obiektów zawierających określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-168">Gets an array of objects containing the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-169">Tablica zawierająca kolekcji obiektów lub tablica pustego obiektu, jeśli określona kolekcja nie dziedziczy <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-169">An array containing the collection objects, or an empty object array if the specified collection does not inherit from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsFromInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IList GetObjectsFromInstance (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IList GetObjectsFromInstance(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetObjectsFromInstance (instance As Object) As IList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IList ^ GetObjectsFromInstance(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d9ebb-170">
            <see cref="T:System.Collections.ArrayList" /> Zwracany jako obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-170">An <see cref="T:System.Collections.ArrayList" /> returned as an object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-171">Zwraca listę zawierającą dany obiekt</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-171">Returns a list containing the given object</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-172">
            <see cref="T:System.Collections.ArrayList" /> Zawierającą pojedyncze obiekty, które ma zostać utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-172">An <see cref="T:System.Collections.ArrayList" /> which contains the individual objects to be created.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="d9ebb-173">Typ usługi do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-173">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-174">Pobiera żądanej usługi, jeśli jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-174">Gets the requested service, if it is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-175">Wystąpienie usługi lub <see langword="null" /> Jeśli nie można odnaleźć usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-175">An instance of the service, or <see langword="null" /> if the service cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpTopic">
      <MemberSignature Language="C#" Value="protected virtual string HelpTopic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpTopic" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.HelpTopic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HelpTopic As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ HelpTopic { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-176">Pobiera słowo kluczowe pomocy, aby wyświetlić tematu pomocy lub listy tematów, gdy zostanie naciśnięty klawisz F1 lub przycisk Pomoc okno dialogowe Edytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-176">Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9ebb-177">Słowo kluczowe pomocy do wyświetlania tematu pomocy lub listy tematów, gdy pomoc zostanie wywołana w edytorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-177">The Help keyword to display the Help topic or topic list for when Help is requested from the editor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-178">Zastąp tę właściwość, aby wyświetlić innego tematu Pomocy.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-178">Override this property to display a different Help topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemTypes">
      <MemberSignature Language="C#" Value="protected Type[] NewItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] NewItemTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property NewItemTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property cli::array &lt;Type ^&gt; ^ NewItemTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-179">Pobiera dostępne typy elementów, które mogą zostać utworzone dla tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-179">Gets the available types of items that can be created for this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9ebb-180">Typy elementów, które mogą zostać utworzone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-180">The types of items that can be created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-181">Ta właściwość wskazuje typy danych, które można dodać do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-181">This property indicates the data types that can be added to the collection.</span></span> <span data-ttu-id="d9ebb-182">Domyślnie to polecenie zwróci jeden typ <xref:System.ComponentModel.Design.CollectionEditor.CollectionItemType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-182">By default, this returns a single type of <xref:System.ComponentModel.Design.CollectionEditor.CollectionItemType%2A>.</span></span> <span data-ttu-id="d9ebb-183">Jeśli więcej niż jeden typ jest zwracany, Edytor kolekcji interfejsu użytkownika umożliwia określenie typu elementu do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-183">If more than one type is returned, the collection editor UI provides a way to choose which item type to create.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItems">
      <MemberSignature Language="C#" Value="protected virtual object SetItems (object editValue, object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SetItems(object editValue, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetItems (editValue As Object, value As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SetItems(System::Object ^ editValue, cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editValue" Type="System.Object" />
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="editValue">
          <span data-ttu-id="d9ebb-184">Kolekcja do edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-184">The collection to edit.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d9ebb-185">Tablica obiektów, które można ustawić jako elementy kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-185">An array of objects to set as the collection items.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9ebb-186">Ustawia określonej tablicy jako elementy kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-186">Sets the specified array as the items of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9ebb-187">Obiekt nowo utworzoną kolekcję lub, w przeciwnym razie kolekcji wskazywanym przez <paramref name="editValue" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-187">The newly created collection object or, otherwise, the collection indicated by the <paramref name="editValue" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ebb-188">Jeśli ustawienie wymaga utworzenia nowego obiektu, zwracany jest nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-188">If setting requires that a new object be created, the new object is returned.</span></span> <span data-ttu-id="d9ebb-189">W przeciwnym razie `editValue` parametru jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="d9ebb-189">Otherwise, the `editValue` parameter is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="protected virtual void ShowHelp ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ShowHelp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.ShowHelp" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ShowHelp ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ShowHelp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9ebb-190">Wyświetla domyślny temat pomocy dla edytora kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9ebb-190">Displays the default Help topic for the collection editor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>