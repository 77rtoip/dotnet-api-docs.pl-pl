<Type Name="DesignSurface" FullName="System.ComponentModel.Design.DesignSurface">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3aa7493e17750216c5342b1ee5e784080710e3a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurface extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurface" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurface&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurface : IDisposable, IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="76451-101">Przedstawia informacje dotyczące projektowania składników interfejsu użytkownika.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76451-101">Presents a user interface for designing components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-102"><xref:System.ComponentModel.Design.DesignSurface> Klasa implementuje użytkownik przewiduje Projektant.</span><span class="sxs-lookup"><span data-stu-id="76451-102">The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer.</span></span> <span data-ttu-id="76451-103"><xref:System.ComponentModel.Design.DesignSurface> to interfejs użytkownika manipuluje zmienić funkcje czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="76451-103"><xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features.</span></span> <span data-ttu-id="76451-104"><xref:System.ComponentModel.Design.DesignSurface> udostępnia całkowicie niezależna powierzchnię.</span><span class="sxs-lookup"><span data-stu-id="76451-104"><xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.</span></span>  
  
 <span data-ttu-id="76451-105"><xref:System.ComponentModel.Design.DesignSurface> Klasy może być używany jako autonomiczny projektanta, lub mogą być połączone z <xref:System.ComponentModel.Design.DesignSurfaceManager> klasy do implementacji wspólne dla aplikacji, która obsługuje wiele <xref:System.ComponentModel.Design.DesignSurface> obiektów.</span><span class="sxs-lookup"><span data-stu-id="76451-105">The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span>  
  
 <span data-ttu-id="76451-106"><xref:System.ComponentModel.Design.DesignSurface> Klasa może być używana samodzielnie, lub użytkownik może dziedziczyć po nim nową klasę i rozszerzyć zachowanie.</span><span class="sxs-lookup"><span data-stu-id="76451-106">The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.</span></span>  
  
 <span data-ttu-id="76451-107"><xref:System.ComponentModel.Design.DesignSurface> Klasy automatycznie zapewnia kilka usług czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="76451-107">The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically.</span></span> <span data-ttu-id="76451-108"><xref:System.ComponentModel.Design.DesignSurface> Klasa dodaje wszystkie jego usług w jego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="76451-108">The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor.</span></span> <span data-ttu-id="76451-109">Większość usług może być zastąpiona przez zastąpienie ich w chronionej <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="76451-109">Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="76451-110">Aby zastąpić usługi, zastąpienie konstruktora wywołać podstawową i wprowadzać żadnych zmian do chronionej <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="76451-110">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="76451-111">Wszystkie usługi, które są dodawane do kontenera usług i implementują <xref:System.IDisposable> są usuwane po usunięciu powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-111">All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed.</span></span> <span data-ttu-id="76451-112">Domyślny zbiór replaceable usług <xref:System.ComponentModel.Design.DesignSurface> klasa udostępnia przedstawiono w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="76451-112">The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.</span></span>  
  
|<span data-ttu-id="76451-113">Usługa</span><span class="sxs-lookup"><span data-stu-id="76451-113">Service</span></span>|<span data-ttu-id="76451-114">Opis</span><span class="sxs-lookup"><span data-stu-id="76451-114">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IExtenderProviderService>|<span data-ttu-id="76451-115">Umożliwia obiektów, które nie są częścią kolekcji składników kontenera zapewnienie dostawców rozszerzeń.</span><span class="sxs-lookup"><span data-stu-id="76451-115">Enables objects that are not part of the container’s components collection to provide their own extender providers.</span></span>|  
|<xref:System.ComponentModel.Design.IExtenderListService>|<span data-ttu-id="76451-116">Używane przez <xref:System.ComponentModel.TypeDescriptor> w celu uzyskania listy dostawców rozszerzeń.</span><span class="sxs-lookup"><span data-stu-id="76451-116">Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers.</span></span> <span data-ttu-id="76451-117">Z tą usługą rozszerzający dostawców można na żywo poza kontenera.</span><span class="sxs-lookup"><span data-stu-id="76451-117">With this service, extender providers can live outside of the container.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="76451-118">Udostępnia punkty zaczepienia projektanta metadanych.</span><span class="sxs-lookup"><span data-stu-id="76451-118">Provides designer metadata hooks.</span></span> <span data-ttu-id="76451-119">Jest to podstawowy interfejs do filtrowania metadanych.</span><span class="sxs-lookup"><span data-stu-id="76451-119">This is the primary interface for metadata filtering.</span></span>|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="76451-120">Zapewnia sposób, aby wybrać składniki w projektancie.</span><span class="sxs-lookup"><span data-stu-id="76451-120">Provides a way to select components in the designer.</span></span>|  
|<xref:System.ComponentModel.Design.IReferenceService>|<span data-ttu-id="76451-121">Zapewnia sposób uzyskać nazwę dla obiektów, nawet wtedy, gdy te obiekty nie jest ulokowany.</span><span class="sxs-lookup"><span data-stu-id="76451-121">Provides a way to get a name for objects, even when those objects are not sited.</span></span>|  
|<xref:System.ComponentModel.Design.DesignSurface>|<span data-ttu-id="76451-122">Oferuje powierzchni projektu jako usługa.</span><span class="sxs-lookup"><span data-stu-id="76451-122">Offers the design surface itself as a service.</span></span>|  
|<xref:System.ComponentModel.Design.DesignerOptionService>|<span data-ttu-id="76451-123">Udostępnia klasę podstawową dla pobieranie i ustawianie wartości opcji dla projektanta.</span><span class="sxs-lookup"><span data-stu-id="76451-123">Provides a base class for getting and setting option values for a designer.</span></span>|  
  
 <span data-ttu-id="76451-124">W poniższej tabeli przedstawiono niewymienne usług świadczonych przez domyślny.</span><span class="sxs-lookup"><span data-stu-id="76451-124">The following table shows the non-replaceable services provided by default.</span></span>  
  
|<span data-ttu-id="76451-125">Usługa</span><span class="sxs-lookup"><span data-stu-id="76451-125">Service</span></span>|<span data-ttu-id="76451-126">Opis</span><span class="sxs-lookup"><span data-stu-id="76451-126">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="76451-127">Informuje o zdarzeniach zmiany do składników.</span><span class="sxs-lookup"><span data-stu-id="76451-127">Raises events as changes are made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="76451-128">Służy do sterowania dostępem do typów, usług i transakcji.</span><span class="sxs-lookup"><span data-stu-id="76451-128">Controls access to types, services, and transactions.</span></span> <span data-ttu-id="76451-129">Główny interfejs dla projektantów.</span><span class="sxs-lookup"><span data-stu-id="76451-129">Master interface for designers.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="76451-130">Właścicielem zestaw składników, które projektowania.</span><span class="sxs-lookup"><span data-stu-id="76451-130">Owns the set of components that are being designed.</span></span> <span data-ttu-id="76451-131">Każdy Konstruktor ma <xref:System.ComponentModel.IContainer> , który jest właścicielem składników.</span><span class="sxs-lookup"><span data-stu-id="76451-131">Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.</span></span>|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="76451-132">Pochodną <xref:System.IServiceProvider> i służy do dodawania i usuwania usług przy użyciu projektanta.</span><span class="sxs-lookup"><span data-stu-id="76451-132">Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.</span></span>|  
  
 <span data-ttu-id="76451-133">Oprócz tych usług <xref:System.ComponentModel.Design.DesignSurface> klasa udostępnia także jeden usługa, która jest dostępna za pośrednictwem witryny składnika.</span><span class="sxs-lookup"><span data-stu-id="76451-133">In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site.</span></span> <span data-ttu-id="76451-134">Ta usługa jest unikatowy dla każdego składnika.</span><span class="sxs-lookup"><span data-stu-id="76451-134">This service is unique for each component.</span></span> <span data-ttu-id="76451-135">W poniższej tabeli przedstawiono usługi, których nie można zastąpić.</span><span class="sxs-lookup"><span data-stu-id="76451-135">The following table shows the services that cannot be replaced.</span></span>  
  
|<span data-ttu-id="76451-136">Usługa</span><span class="sxs-lookup"><span data-stu-id="76451-136">Service</span></span>|<span data-ttu-id="76451-137">Opis</span><span class="sxs-lookup"><span data-stu-id="76451-137">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IDictionaryService>|<span data-ttu-id="76451-138">Ogólny słownik pary klucz wartość, które mogą służyć do przechowywania danych dowolnego dotyczących składnika.</span><span class="sxs-lookup"><span data-stu-id="76451-138">A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</span></span>|  
|<xref:System.ComponentModel.INestedContainer>|<span data-ttu-id="76451-139">Kontener, który włącza składnik, aby dodać kolejne podrzędne składniki do projektanta.</span><span class="sxs-lookup"><span data-stu-id="76451-139">A container that enables a component to add additional child components to the designer.</span></span> <span data-ttu-id="76451-140">Te składniki będzie częścią powierzchnię projektu, ale nie będzie uczestniczyć w serializacji.</span><span class="sxs-lookup"><span data-stu-id="76451-140">These components will be part of the design surface, but will not participate in serialization.</span></span> <span data-ttu-id="76451-141">Jest to przydatne w przypadku projektowania formant, który jest w stanie udostępnianie region siebie samego za pomocą projektanta, ale nie ma obszaru do udziału w serializacji.</span><span class="sxs-lookup"><span data-stu-id="76451-141">This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</span></span>|  
  
 <span data-ttu-id="76451-142">Oprócz <xref:System.ComponentModel.ISite>, lokacji implementuje również następujące interfejsy.</span><span class="sxs-lookup"><span data-stu-id="76451-142">In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="76451-143">Sprawdzaj istnienie tych interfejsów, zamiast używać niekontrolowane rzutowanie, ponieważ inne implementacje lokacji nie może ich wdrażania.</span><span class="sxs-lookup"><span data-stu-id="76451-143">Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</span></span>  
  
|<span data-ttu-id="76451-144">Usługa</span><span class="sxs-lookup"><span data-stu-id="76451-144">Service</span></span>|<span data-ttu-id="76451-145">Opis</span><span class="sxs-lookup"><span data-stu-id="76451-145">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="76451-146">Umożliwia uzyskanie dostępu do kontenera usług specyficzne dla lokacji.</span><span class="sxs-lookup"><span data-stu-id="76451-146">Provides a way to get to the container of site-specific services.</span></span> <span data-ttu-id="76451-147">Na przykład <xref:System.ComponentModel.Design.IDictionaryService> jest usługą specyficzne dla lokacji.</span><span class="sxs-lookup"><span data-stu-id="76451-147">For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service.</span></span> <span data-ttu-id="76451-148">Z tą usługą możesz dodać dodatkowe usługi specyficzne dla lokacji.</span><span class="sxs-lookup"><span data-stu-id="76451-148">With this service, you can add additional site-specific services.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="76451-149">Aby uzyskać dostęp do zasobów systemowych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76451-149">for full access to system resources.</span>
      </span>
      <span data-ttu-id="76451-150">Żądanie wartości: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76451-150">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="76451-151">Skojarzony stan:</span>
      <span class="sxs-lookup">
        <span data-stu-id="76451-151">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76451-152">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-152">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76451-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-153">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-154">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-154">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="76451-155">Nadrzędny dostawca usługi lub <see langword="null" /> Jeśli jest używany do rozpoznawania usług elementu nadrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-155">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-156">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-156">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-157">Gdy `parentProvide` jest obecny, projektantów zawartych w powierzchni można pobrać usług z aplikacji.</span><span class="sxs-lookup"><span data-stu-id="76451-157">When `parentProvide` is present, designers contained within the surface can retrieve services from the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-158">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-158">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(Type ^ rootComponentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType">
          <span data-ttu-id="76451-159">Typ główny składnika do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-159">The type of root component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-160">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-160">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-161">Jeśli używasz <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> konstruktora, tworzy prosty program ładujący projektanta, który z kolei tworzy składnik danego typu, a następnie kończy proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="76451-161">When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="76451-162">To łatwe tworzenie projektanta, przy założeniu, że wszystkie zapisywania stanu zostanie to zrobione zewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="76451-162">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="76451-163">Wewnętrznie wywołuje <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> i przekazuje typ składnika głównego.</span><span class="sxs-lookup"><span data-stu-id="76451-163">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76451-164"><xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> Przeciążenia nie ma wpływu na <xref:System.Windows.Forms.Design.DesignerOptions>.</span><span class="sxs-lookup"><span data-stu-id="76451-164">The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>.</span></span> <span data-ttu-id="76451-165"><xref:System.Windows.Forms.Design.DesignerOptions> Musi być w kontenerze usługi przed ładuje powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-165">The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads.</span></span> <span data-ttu-id="76451-166">Jeśli potrzebujesz dostępu do <xref:System.Windows.Forms.Design.DesignerOptions>, Wywołaj pustego konstruktora, Dodaj <xref:System.Windows.Forms.Design.DesignerOptions> do <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> i Wywołaj <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> z `rootComponentType`.</span><span class="sxs-lookup"><span data-stu-id="76451-166">If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-167">
            <paramref name="rootComponent" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-167">
              <paramref name="rootComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-168">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-168">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider, class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider, rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider, Type ^ rootComponentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="76451-169">Nadrzędny dostawca usługi lub <see langword="null" /> Jeśli jest używany do rozpoznawania usług elementu nadrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-169">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span>
          </span>
        </param>
        <param name="rootComponentType">
          <span data-ttu-id="76451-170">Typ główny składnika do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-170">The type of root component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-171">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-171">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-172">Przy użyciu <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> Konstruktor tworzy prosty ładujący projektanta, który tworzy składnik danego typu, a następnie kończy proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="76451-172">Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="76451-173">To łatwe tworzenie projektanta, przy założeniu, że wszystkie zapisywania stanu zostanie to zrobione zewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="76451-173">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="76451-174">Wewnętrznie wywołuje <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> i przekazuje typ składnika głównego.</span><span class="sxs-lookup"><span data-stu-id="76451-174">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-175">
            <paramref name="rootComponent" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-175">
              <paramref name="rootComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-176">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-176">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76451-177">Rozpocznie się proces ładowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-177">Begins the loading process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.ComponentModel.Design.Serialization.DesignerLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (loader As DesignerLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(System::ComponentModel::Design::Serialization::DesignerLoader ^ loader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loader" Type="System.ComponentModel.Design.Serialization.DesignerLoader" />
      </Parameters>
      <Docs>
        <param name="loader">
          <span data-ttu-id="76451-178">Program ładujący projektanta do użycia podczas ładowania projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-178">The designer loader to use for loading the designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-179">Rozpocznie się proces ładowania z danym moduł ładowania projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-179">Begins the loading process with the given designer loader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-180">Podczas ładowania projektanta można asynchroniczne, więc obciążenie może w dalszym ciągu postępu po zwrócił to wywołanie.</span><span class="sxs-lookup"><span data-stu-id="76451-180">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="76451-181">Program obsługi zdarzeń, aby dołączyć <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> zdarzenie zgłaszane po zakończeniu ładowania powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-181">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="76451-182">Po <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> jest wywoływana, można natychmiast uzyskać widok tego projektanta, ponieważ ładowarki projektanta musisz podać co najmniej składnik główny podczas ładowania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="76451-182">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-183">
            <paramref name="loader" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-183">
              <paramref name="loader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-184">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-184">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(Type ^ rootComponentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType">
          <span data-ttu-id="76451-185">Typ składnika do utworzenia w trybie projektowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-185">The type of component to create in design mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-186">Rozpocznie się proces ładowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-186">Begins the loading process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-187">Gdy `rootComponentType` jest określony, domyślne ładujący projektanta, która po prostu tworzy wystąpienie `rootComponentType` będą używane.</span><span class="sxs-lookup"><span data-stu-id="76451-187">When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used.</span></span> <span data-ttu-id="76451-188">Podczas ładowania projektanta można asynchroniczne, więc obciążenie może w dalszym ciągu postępu po zwrócił to wywołanie.</span><span class="sxs-lookup"><span data-stu-id="76451-188">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="76451-189">Program obsługi zdarzeń, aby dołączyć <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> zdarzenie zgłaszane po zakończeniu ładowania powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-189">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="76451-190">Po <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> jest wywoływana, można natychmiast uzyskać widok tego projektanta, ponieważ ładowarki projektanta musisz podać co najmniej składnik główny podczas ładowania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="76451-190">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76451-191"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> Metoda tworzy wystąpienie podanego typu składnika i inicjuje projektanta dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="76451-191">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance.</span></span> <span data-ttu-id="76451-192"><xref:System.ComponentModel.Design.DesignSurface.Loaded> Zdarzenie jest wywoływane przed ta metoda zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="76451-192">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-193">
            <paramref name="rootComponentType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-193">
              <paramref name="rootComponentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-194">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-194">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ComponentContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer ComponentContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer ComponentContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComponentContainer As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ ComponentContainer { System::ComponentModel::IContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-195">Pobiera <see cref="T:System.ComponentModel.IContainer" /> implementacji w powierzchnię projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-195">Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76451-196">
            <see cref="T:System.ComponentModel.IContainer" /> Implementacji w powierzchnię projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-196">The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-197"><xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> Właściwość przechowuje wszystkie obiekty, które są obecnie w trybie projektowania.</span><span class="sxs-lookup"><span data-stu-id="76451-197">The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode.</span></span> <span data-ttu-id="76451-198">Gdy składniki są dodawane do <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, ich projektanta, jeśli istnieje, jest załadowany.</span><span class="sxs-lookup"><span data-stu-id="76451-198">When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded.</span></span> <span data-ttu-id="76451-199">Składnik jest ulokowany z lokacją, która zapewnia pełny dostęp do powierzchni projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-199">The component is sited with a site that provides full access to the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-200">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-200">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IComponent CreateComponent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateComponent (componentType As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="76451-201">Typ składnika do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-201">The type of component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-202">Tworzy wystąpienie składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-202">Creates an instance of a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76451-203">Nowo utworzony składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-203">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-204"><xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> Metoda jest wywoływana przez powierzchnię projektu <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> metodę w celu utworzenia wystąpienia składnika.</span><span class="sxs-lookup"><span data-stu-id="76451-204">The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component.</span></span> <span data-ttu-id="76451-205">Składnika należy utworzyć i dodać do publicznego kontenera na powierzchni projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-205">The component should be created and added to the public container on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-206">
            <paramref name="componentType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-206">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-207">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-207">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, bool rootDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDesigner (component As IComponent, rootDesigner As Boolean) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, bool rootDesigner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="rootDesigner" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="76451-208">Składnik, dla którego należy utworzyć designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-208">The component for which the designer should be created.</span>
          </span>
        </param>
        <param name="rootDesigner">
          <span data-ttu-id="76451-209">
            <see langword="true" /> Aby utworzyć designer głównego; <see langword="false" /> utworzyć designer normalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-209">
              <see langword="true" /> to create a root designer; <see langword="false" /> to create a normal designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-210">Tworzy projektanta, gdy składnik zostanie dodany do kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-210">Creates a designer when a component is added to the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76451-211">Wystąpienia żądanego projektanta lub <see langword="null" /> Jeśli nie odnaleziono zgodnego projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-211">An instance of the requested designer, or <see langword="null" /> if no matching designer could be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-212"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> Metoda jest wywoływana przez powierzchnię projektu <xref:System.ComponentModel.IContainer> po dodaniu składnika do kontenera.</span><span class="sxs-lookup"><span data-stu-id="76451-212">The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container.</span></span> <span data-ttu-id="76451-213">Ta metoda tworzy projektanta, ale nie zainicjowany.</span><span class="sxs-lookup"><span data-stu-id="76451-213">This method creates a designer, but does not initialize it.</span></span> <span data-ttu-id="76451-214">Gdy powróci ona projektanta został zainicjowany przez kontener.</span><span class="sxs-lookup"><span data-stu-id="76451-214">When it returns, the designer is initialized by the container.</span></span>  
  
 <span data-ttu-id="76451-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> można utworzyć dwa rodzaje projektantów: główny projektantów i normalnym projektantów.</span><span class="sxs-lookup"><span data-stu-id="76451-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers.</span></span> <span data-ttu-id="76451-216">Projektant główny jest projektanta dla składnika głównego na powierzchni projektu, który zgodnie z definicją jest pierwszym składnikiem dodać do kontenera.</span><span class="sxs-lookup"><span data-stu-id="76451-216">A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</span></span> <span data-ttu-id="76451-217">Projektanci głównego różnią się od normalnego projektantów, ponieważ są właściwe dla interfejsu użytkownika podane dla użytkownika końcowego.</span><span class="sxs-lookup"><span data-stu-id="76451-217">Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</span></span> <span data-ttu-id="76451-218">Projektanci głównego zwykle koordynować z resztą projektantów na powierzchni projektowej zapewnienie tego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="76451-218">Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</span></span>  
  
 <span data-ttu-id="76451-219">Domyślna implementacja tej metody deleguje do <xref:System.ComponentModel.TypeDescriptor>, przekazując <xref:System.ComponentModel.Design.IRootDesigner> jako typ projektanta dla projektantów głównego lub <xref:System.ComponentModel.Design.IDesigner> dla projektantów normalnego.</span><span class="sxs-lookup"><span data-stu-id="76451-219">The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers.</span></span> <span data-ttu-id="76451-220">Można zastąpić tę metodę w celu żądania dla określonego typu projektanta.</span><span class="sxs-lookup"><span data-stu-id="76451-220">You can override this method to request a specific type of designer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-221">
            <paramref name="component" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-221">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-222">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-222">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal virtual object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="76451-223">Typ do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-223">The type to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-224">Tworzy wystąpienie podanego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-224">Creates an instance of the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76451-225">Nowo utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-225">The newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-226">Jeśli `type` jest <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> wyszukuje konstruktora typu <xref:System.ComponentModel.IContainer> po pustego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="76451-226">If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-227">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-227">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-228">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-228">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNestedContainer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76451-229">Tworzy kontener przeznaczony do zagnieżdżenia kontrolek i składników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-229">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owningComponent">
          <span data-ttu-id="76451-230">Składnik, który zarządza zagnieżdżonych kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-230">The component that manages the nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-231">Tworzy kontener przeznaczony do zagnieżdżenia kontrolek i składników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-231">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76451-232">Kontener zagnieżdżonych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-232">The nested container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-233">Dodanie składnika do kontenera zagnieżdżonych tworzy jego projektanta i udostępnia go kwalifikuje się do wszystkich usług z powierzchni projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-233">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="76451-234">Składniki dodane do zagnieżdżone kontenery nie uczestniczą w serializacji.</span><span class="sxs-lookup"><span data-stu-id="76451-234">Components added to nested containers do not participate in serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-235">
            <paramref name="owningComponent" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-235">
              <paramref name="owningComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-236">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-236">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent, containerName As String) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent, System::String ^ containerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owningComponent">
          <span data-ttu-id="76451-237">Składnik, który zarządza zagnieżdżonych kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-237">The component that manages the nested container.</span>
          </span>
        </param>
        <param name="containerName">
          <span data-ttu-id="76451-238">Dodatkowe nazwę kontenera zagnieżdżonych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-238">An additional name for the nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-239">Tworzy kontener przeznaczony do zagnieżdżenia kontrolek i składników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-239">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76451-240">Kontener zagnieżdżonych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-240">The nested container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-241">Dodanie składnika do kontenera zagnieżdżonych tworzy jego projektanta i udostępnia go kwalifikuje się do wszystkich usług z powierzchni projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-241">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="76451-242">Składniki dodane do zagnieżdżone kontenery nie uczestniczą w serializacji.</span><span class="sxs-lookup"><span data-stu-id="76451-242">Components added to nested containers do not participate in serialization.</span></span>  
  
 <span data-ttu-id="76451-243">Zapewniają dodatkową nazwę <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> metody przez przekazanie wartości do `containerName`.</span><span class="sxs-lookup"><span data-stu-id="76451-243">You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76451-244">
            <paramref name="owningComponent" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-244">
              <paramref name="owningComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-245">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-245">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76451-246">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-246">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76451-247">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-247">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-248">Publicznego <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> metoda zgodna standardowego <xref:System.IDisposable> wzorca.</span><span class="sxs-lookup"><span data-stu-id="76451-248">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="76451-249">Wywołanie tej metody niszczy powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-249">Calling this method destroys the design surface.</span></span> <span data-ttu-id="76451-250">Chroniona wersja ta metoda jest `virtual` i jest zgodna z normalnym <xref:System.IDisposable> wzorca.</span><span class="sxs-lookup"><span data-stu-id="76451-250">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76451-251">Ponieważ <xref:System.ComponentModel.Design.DesignSurface> nie ma żadnych kodu natywnego, aby wyczyścić, nie ma finalizator tego wywołania <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="76451-251">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span></span> <span data-ttu-id="76451-252">Jeśli należy wywołać <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, możesz finalizator należy dodać.</span><span class="sxs-lookup"><span data-stu-id="76451-252">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="76451-253">Wywołanie <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> po zakończeniu przy użyciu <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="76451-253">Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="76451-254"><xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> Pozostawia metody <xref:System.ComponentModel.Design.DesignSurface> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="76451-254">The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state.</span></span> <span data-ttu-id="76451-255">Po wywołaniu <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.ComponentModel.Design.DesignSurface> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.ComponentModel.Design.DesignSurface> klasy.</span><span class="sxs-lookup"><span data-stu-id="76451-255">After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying.</span></span> <span data-ttu-id="76451-256">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="76451-256">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76451-257">Wywoływanie zawsze <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="76451-257">Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="76451-258">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.ComponentModel.Design.DesignSurface> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="76451-258">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="76451-259">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-259">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-260">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-260">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-261">Publicznego <xref:System.ComponentModel.Design.DesignSurface.Dispose> metoda zgodna standardowego <xref:System.IDisposable> wzorca.</span><span class="sxs-lookup"><span data-stu-id="76451-261">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="76451-262">Wywołanie tej metody niszczy powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-262">Calling this method destroys the design surface.</span></span> <span data-ttu-id="76451-263">Chroniona wersja ta metoda jest `virtual` i jest zgodna z normalnym <xref:System.IDisposable> wzorca.</span><span class="sxs-lookup"><span data-stu-id="76451-263">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76451-264">Ponieważ <xref:System.ComponentModel.Design.DesignSurface> nie ma żadnych kodu natywnego, aby wyczyścić, nie ma finalizator tego wywołania <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="76451-264">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span></span> <span data-ttu-id="76451-265">Jeśli należy wywołać <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, możesz finalizator należy dodać.</span><span class="sxs-lookup"><span data-stu-id="76451-265">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="76451-266">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="76451-266">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="76451-267">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="76451-267">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="76451-268"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="76451-268"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="76451-269">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.ComponentModel.Design.DesignSurface> odwołania.</span><span class="sxs-lookup"><span data-stu-id="76451-269">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references.</span></span> <span data-ttu-id="76451-270">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="76451-270">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="76451-271">
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty.</span>
            <span class="sxs-lookup">
              <span data-stu-id="76451-271">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="76451-272">W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="76451-272">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="76451-273">Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="76451-273">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="76451-274">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="76451-274">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-275">Występuje po usunięciu powierzchnię projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-275">Occurs when the design surface is disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-276">Obszar jest tylko usunięte, gdy publicznego <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> metoda <xref:System.ComponentModel.Design.DesignSurface> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="76451-276">The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtelLoading">
      <MemberSignature Language="C#" Value="public bool DtelLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtelLoading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property DtelLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtelLoading { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-277">Pobiera wartość wskazującą czy **listy błędów w czasie projektowania** ładowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-277">Gets a value indicating whether the **Design-time Error List** is loading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76451-278">
            <see langword="true" /> Jeśli **listy błędów w czasie projektowania** ładowania, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-278">
              <see langword="true" /> if the **Design-time Error List** is loading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76451-279">Serializuje zmiany na powierzchnię projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-279">Serializes changes to the design surface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-280"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A> Można wywołać metody, aby wypchnąć zmiany wprowadzone na powierzchnię projektu do serializatora.</span><span class="sxs-lookup"><span data-stu-id="76451-280">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer.</span></span> <span data-ttu-id="76451-281">Dzięki temu zsynchronizowane powierzchni projektowej oraz jego Zserializowany stan.</span><span class="sxs-lookup"><span data-stu-id="76451-281">This ensures that the design surface and its serialized state are synchronized.</span></span> <span data-ttu-id="76451-282">Rzeczywista implementacja tej metody jest przekazywany do modułu ładującego projektanta skojarzone z powierzchni projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-282">The actual implementation of this method is forwarded to the designer loader associated with design surface.</span></span> <span data-ttu-id="76451-283">Program ładujący projektanta zrezygnować odroczenie zmiany do <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> jest wywoływana lub może być aktualne dane serializowane z wszystkie zmiany wprowadzane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="76451-283">The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes.</span></span> <span data-ttu-id="76451-284"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A> Metoda gwarantuje, że niezależnie od tego modelu Moduł ładowania projektanta zdecydował się użyć, Zserializowany stan jest zsynchronizowany z rzeczywistego powierzchnię.</span><span class="sxs-lookup"><span data-stu-id="76451-284">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flushed">
      <MemberSignature Language="C#" Value="public event EventHandler Flushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Flushed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Flushed" />
      <MemberSignature Language="VB.NET" Value="Public Event Flushed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Flushed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-285">Występuje, gdy połączenie jest nawiązywane w przypadku <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> metody <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-285">Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-286">Program ładujący projektanta jest opróżniany najpierw, a następnie <xref:System.ComponentModel.Design.DesignSurface.Flushed> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="76451-286">The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="76451-287">Typ usługi do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-287">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-288">Pobiera usługę z kontenera usług.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-288">Gets a service from the service container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76451-289">Obiekt, który implementuje lub jest w klasie pochodnej, <paramref name="serviceType" />, lub <see langword="null" /> Jeśli usługa nie istnieje w kontenerze usług.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-289">An object that implements, or is a derived class of, <paramref name="serviceType" />, or <see langword="null" /> if the service does not exist in the service container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-290"><xref:System.ComponentModel.Design.DesignSurface.GetService%2A> Metoda pobiera usługę kontenera usług powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="76451-290">The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container.</span></span> <span data-ttu-id="76451-291">Ponadto to przesyła do dowolnego dostawcy usług, który podano na powierzchnię projektu podczas konstruowania.</span><span class="sxs-lookup"><span data-stu-id="76451-291">In addition, this will forward to any service provider that was given to the design surface at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-292">Pobiera wartość wskazującą, czy powierzchnię projektu jest aktualnie załadowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-292">Gets a value indicating whether the design surface is currently loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76451-293">
            <see langword="true" /> Jeśli powierzchnię projektu jest aktualnie załadowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-293">
              <see langword="true" /> if the design surface is currently loaded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.LoadedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.LoadedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Loaded As LoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::LoadedEventHandler ^ Loaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.LoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-294">Występuje po zakończeniu ładowania projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-294">Occurs when the designer load has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-295"><xref:System.ComponentModel.Design.DesignSurface.Loaded> Zdarzenie jest wywoływane dla obciążeń powiodło się, jak również nieudanymi.</span><span class="sxs-lookup"><span data-stu-id="76451-295">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones.</span></span> <span data-ttu-id="76451-296">Jeśli kod w tej obsłudze zdarzeń zgłasza wyjątek, Projektant nie jest załadowany.</span><span class="sxs-lookup"><span data-stu-id="76451-296">If code in this event handler throws an exception, the designer is unloaded.</span></span>  
  
 <span data-ttu-id="76451-297"><xref:System.ComponentModel.Design.LoadedEventArgs> Obiekt może służyć do określenia, czy ładowanie zakończyło się pomyślnie, a można też podać listę błędów, które wystąpiły podczas ładowania.</span><span class="sxs-lookup"><span data-stu-id="76451-297">The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76451-298">W przypadku obciążeń powiodło się również, mogą wystąpić błędy, pod warunkiem, że system serializacji może tolerować błędy.</span><span class="sxs-lookup"><span data-stu-id="76451-298">Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection LoadErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection LoadErrors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadErrors As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ LoadErrors { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-299">Zwraca kolekcję ładowania błędy lub void kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-299">Returns a collection of loading errors or a void collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76451-300">A <see cref="T:System.Collections.ICollection" /> błędy ładowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-300">A <see cref="T:System.Collections.ICollection" /> of loading errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public event EventHandler Loading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Loading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Event Loading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Loading;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-301">Występuje, gdy projektant ma być załadowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-301">Occurs when the designer is about to be loaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoaded(class System.ComponentModel.Design.LoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoaded (e As LoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoaded(System::ComponentModel::Design::LoadedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.LoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="76451-302">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-302">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-303">Zgłasza <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-303">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoading">
      <MemberSignature Language="C#" Value="protected virtual void OnLoading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoading(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="76451-304">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-304">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-305">Zgłasza <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-305">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloaded">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloaded (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloaded(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloaded (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloaded(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="76451-306">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-306">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-307">Zgłasza <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-307">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloading">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloading(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="76451-308">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-308">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-309">Zgłasza <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-309">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnViewActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewActivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="76451-310">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-310">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76451-311">Zgłasza <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-311">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-312">Pobiera kontener usług.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-312">Gets the service container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76451-313">Kontener usługi, który zawiera wszystkie usługi konstruktorom zawartych w powierzchnię projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-313">The service container that provides all services to designers contained within the design surface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-314">Podczas konstruowania <xref:System.ComponentModel.Design.DesignSurface> dodaje usług domyślnych w tym kontenerze usług.</span><span class="sxs-lookup"><span data-stu-id="76451-314">At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container.</span></span> <span data-ttu-id="76451-315">Usługi domyślne można pozostawić w jego obecnym stanie lub można je usunąć i je zastąpić własnymi.</span><span class="sxs-lookup"><span data-stu-id="76451-315">You can leave the default services in their present state, or you can remove them and replace them with your own.</span></span> <span data-ttu-id="76451-316">Usługi domyślne są wszystkie żądanie utworzone, więc nie ma żadnego spadku wydajności dodanie ich w chwili tworzenia.</span><span class="sxs-lookup"><span data-stu-id="76451-316">The default services are all demand-created, so there is no loss in performance for adding them at construction time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-317">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-317">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event EventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloaded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-318">Występuje, gdy projektant zakończył zwalnianie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-318">Occurs when a designer has finished unloading.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event EventHandler Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloading;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-319">Występuje, gdy ma zwolnić projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-319">Occurs when a designer is about to unload.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-320">Gdy zwalnia projektanta, zostanie zniszczony całego stanu dla tego projektanta, w tym widoku projektanta.</span><span class="sxs-lookup"><span data-stu-id="76451-320">When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.</span></span> <span data-ttu-id="76451-321">Widok powinien być bez elementów nadrzędnych w tym momencie.</span><span class="sxs-lookup"><span data-stu-id="76451-321">The view should be unparented at this time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public object View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object View" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ View { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-322">Pobiera Widok projektanta głównego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-322">Gets the view for the root designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76451-323">Widok projektanta głównego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-323">The view for the root designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-324"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> Metoda musi zostać wywołana uprzednio, aby rozpocząć proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="76451-324">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process.</span></span> <span data-ttu-id="76451-325">Istnieje możliwość zwrócić widok przed zakończeniem moduł ładowania projektanta podczas ładowania projektanta głównego, który dostarcza widoku, ponieważ pierwszy obiekt utworzony przez program ładujący projektanta.</span><span class="sxs-lookup"><span data-stu-id="76451-325">It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</span></span> <span data-ttu-id="76451-326">Jeśli widok jest niedostępny, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="76451-326">If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="76451-327">Podstawowe pojęcie w zakresie technologii widoku jest przestarzała.</span><span class="sxs-lookup"><span data-stu-id="76451-327">The notion of a view technology is obsolete.</span></span> <span data-ttu-id="76451-328">Jednak pozostaje w interfejsach dla projektantów głównego dla zgodności z poprzednimi wersjami.</span><span class="sxs-lookup"><span data-stu-id="76451-328">But, it remains in the interfaces for root designers for backward compatibility.</span></span> <span data-ttu-id="76451-329">Ich użycie jest niewidoczna dla wszystkich osób korzystających z <xref:System.ComponentModel.Design.DesignSurface> obiektów.</span><span class="sxs-lookup"><span data-stu-id="76451-329">Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="76451-330"><xref:System.ComponentModel.Design.DesignSurface.View%2A> Właściwość ukrywa technologii widoku przez przekazanie obsługiwanych technologiach do projektanta głównego.</span><span class="sxs-lookup"><span data-stu-id="76451-330">The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76451-331">Poniższy kod przedstawia przykład sposobu <xref:System.ComponentModel.Design.DesignSurface.View%2A> ukrywa wyświetlić technologii.</span><span class="sxs-lookup"><span data-stu-id="76451-331">The following code example shows how <xref:System.ComponentModel.Design.DesignSurface.View%2A> hides view technologies.</span></span>  
  
 ```csharp 
 IRootDesigner d;  
  
 ViewTechnology[] supported = d.SupportedTechnologies;  
  
 return d.GetView(supported[0]);
 ``` 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="76451-332">Powierzchni projektu nie jest ładowany, program ładujący projektanta nie utworzył jeszcze projektanta głównego lub obciążenia, ale nie zostało zakończone powierzchnię projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-332">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</span>
          </span>
          <span data-ttu-id="76451-333">Więcej informacji może być dostępna w <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-333">More information may available in the <see cref="P:System.Exception.InnerException" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="76451-334">Załadowano projektanta, ale nie ma w nim widoku zgodnego z tą warstwą projektowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-334">The designer loaded, but it does not offer a view compatible with this design surface.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="76451-335">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączony do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-335">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ViewActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ViewActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewActivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
      <MemberSignature Language="VB.NET" Value="Public Event ViewActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewActivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76451-336">Występuje, gdy <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> wywołano metodę <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76451-336">Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76451-337">Jeśli chcesz obsługiwać <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> metody obsługi zdarzenia należy aktywować okna dla tej warstwy projektowania.</span><span class="sxs-lookup"><span data-stu-id="76451-337">If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>