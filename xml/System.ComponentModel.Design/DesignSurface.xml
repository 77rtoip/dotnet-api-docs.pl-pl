<Type Name="DesignSurface" FullName="System.ComponentModel.Design.DesignSurface">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9ca903bb93ff2aee30155faf382ddc7247980c2" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55423033" /></Metadata><TypeSignature Language="C#" Value="public class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurface extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurface" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurface&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type DesignSurface = class&#xA;    interface IDisposable&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b3a3-101">Przedstawia informacje o projektowanie składników interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-101">Presents a user interface for designing components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-102"><xref:System.ComponentModel.Design.DesignSurface> Klasa implementuje, co użytkownik uświadamia sobie, Projektant.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-102">The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer.</span></span> <span data-ttu-id="2b3a3-103"><xref:System.ComponentModel.Design.DesignSurface> czy interfejs użytkownika, użytkownik manipuluje można zmienić funkcje czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-103"><xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features.</span></span> <span data-ttu-id="2b3a3-104"><xref:System.ComponentModel.Design.DesignSurface> udostępnia powierzchni projektowej całkowicie niezależna.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-104"><xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.</span></span>  
  
 <span data-ttu-id="2b3a3-105"><xref:System.ComponentModel.Design.DesignSurface> Klasy może być używany jako autonomiczny projektanta lub mogą być połączone z <xref:System.ComponentModel.Design.DesignSurfaceManager> Aby klasa zapewniała typową implementację dla aplikacji, która obsługuje wiele <xref:System.ComponentModel.Design.DesignSurface> obiektów.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-105">The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span>  
  
 <span data-ttu-id="2b3a3-106"><xref:System.ComponentModel.Design.DesignSurface> Klasa może być używana samodzielnie, lub użytkownik może dziedziczyć po nim nową klasę i rozszerzać to zachowanie.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-106">The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.</span></span>  
  
 <span data-ttu-id="2b3a3-107"><xref:System.ComponentModel.Design.DesignSurface> Klasa automatycznie udostępnia kilka usług pomocy technicznej czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-107">The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically.</span></span> <span data-ttu-id="2b3a3-108"><xref:System.ComponentModel.Design.DesignSurface> Klasa dodaje wszystkie swoje usługi w jego konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-108">The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor.</span></span> <span data-ttu-id="2b3a3-109">Większość z tych usług może być zastąpiona przez zastąpienie ich w chronionym <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-109">Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="2b3a3-110">Aby zastąpić to usługa, Zastąp konstruktora wywołać podstawowej i wprowadzać żadnych zmian, za pośrednictwem chronionego <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-110">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="2b3a3-111">Wszystkie usługi, które są dodawane do kontenera usługi i implementują <xref:System.IDisposable> są usuwane po usunięciu powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-111">All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed.</span></span> <span data-ttu-id="2b3a3-112">Domyślny zestaw wymienne usługi, których <xref:System.ComponentModel.Design.DesignSurface> udostępnia zostały przedstawione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-112">The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.</span></span>  
  
|<span data-ttu-id="2b3a3-113">Usługa</span><span class="sxs-lookup"><span data-stu-id="2b3a3-113">Service</span></span>|<span data-ttu-id="2b3a3-114">Opis</span><span class="sxs-lookup"><span data-stu-id="2b3a3-114">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IExtenderProviderService>|<span data-ttu-id="2b3a3-115">Umożliwia obiekty, które nie są częścią kolekcji składników kontenera, aby zapewnić ich własnego dostawcy rozszerzeń.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-115">Enables objects that are not part of the container's components collection to provide their own extender providers.</span></span>|  
|<xref:System.ComponentModel.Design.IExtenderListService>|<span data-ttu-id="2b3a3-116">Używane przez <xref:System.ComponentModel.TypeDescriptor> można pobrać listy dostawcy rozszerzeń.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-116">Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers.</span></span> <span data-ttu-id="2b3a3-117">Ta usługa dostawcy rozszerzeń mogą się znajdować poza kontenerem.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-117">With this service, extender providers can live outside of the container.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="2b3a3-118">Udostępnia metadane projektanta punkty zaczepienia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-118">Provides designer metadata hooks.</span></span> <span data-ttu-id="2b3a3-119">Jest to podstawowy interfejs dla filtrowanie metadanych.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-119">This is the primary interface for metadata filtering.</span></span>|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="2b3a3-120">Umożliwia wybór składników w projektancie.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-120">Provides a way to select components in the designer.</span></span>|  
|<xref:System.ComponentModel.Design.IReferenceService>|<span data-ttu-id="2b3a3-121">Zapewnia sposób Pobierz nazwy obiektów, nawet wtedy, gdy te obiekty nie są zlokalizowane.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-121">Provides a way to get a name for objects, even when those objects are not sited.</span></span>|  
|<xref:System.ComponentModel.Design.DesignSurface>|<span data-ttu-id="2b3a3-122">Oferuje powierzchni projektowej jako usługa.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-122">Offers the design surface itself as a service.</span></span>|  
|<xref:System.ComponentModel.Design.DesignerOptionService>|<span data-ttu-id="2b3a3-123">Udostępnia klasę bazową dla pobierania i ustawiania wartości opcji dla projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-123">Provides a base class for getting and setting option values for a designer.</span></span>|  
  
 <span data-ttu-id="2b3a3-124">W poniższej tabeli przedstawiono niewymienne usługi świadczone przez domyślny.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-124">The following table shows the non-replaceable services provided by default.</span></span>  
  
|<span data-ttu-id="2b3a3-125">Usługa</span><span class="sxs-lookup"><span data-stu-id="2b3a3-125">Service</span></span>|<span data-ttu-id="2b3a3-126">Opis</span><span class="sxs-lookup"><span data-stu-id="2b3a3-126">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="2b3a3-127">Wywołuje zdarzenia, zmiany do składników.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-127">Raises events as changes are made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="2b3a3-128">Służy do sterowania dostępem do typów, usług i transakcji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-128">Controls access to types, services, and transactions.</span></span> <span data-ttu-id="2b3a3-129">Główny interfejs dla projektantów.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-129">Master interface for designers.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="2b3a3-130">Jest właścicielem zestaw składników, które zostały również tak zaprojektowane.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-130">Owns the set of components that are being designed.</span></span> <span data-ttu-id="2b3a3-131">Każdy projektancie <xref:System.ComponentModel.IContainer> , który jest właścicielem składników.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-131">Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.</span></span>|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="2b3a3-132">Pochodzi od klasy <xref:System.IServiceProvider> i służy do dodawania i usuwania usług przy użyciu projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-132">Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.</span></span>|  
  
 <span data-ttu-id="2b3a3-133">Oprócz tych usług <xref:System.ComponentModel.Design.DesignSurface> klasa udostępnia także jednej usługi, który jest dostępny za pośrednictwem witryny składnika.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-133">In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component's site.</span></span> <span data-ttu-id="2b3a3-134">Ta usługa jest unikatowy dla każdego składnika.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-134">This service is unique for each component.</span></span> <span data-ttu-id="2b3a3-135">W poniższej tabeli przedstawiono usługi, które nie mogą zostać zastąpione.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-135">The following table shows the services that cannot be replaced.</span></span>  
  
|<span data-ttu-id="2b3a3-136">Usługa</span><span class="sxs-lookup"><span data-stu-id="2b3a3-136">Service</span></span>|<span data-ttu-id="2b3a3-137">Opis</span><span class="sxs-lookup"><span data-stu-id="2b3a3-137">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IDictionaryService>|<span data-ttu-id="2b3a3-138">Generyczny słownik par klucz wartość, które mogą służyć do przechowywania dowolnego danych dotyczących składnika.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-138">A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</span></span>|  
|<xref:System.ComponentModel.INestedContainer>|<span data-ttu-id="2b3a3-139">Kontener, który umożliwia składnikowi dodać składniki dodatkowe podrzędne do projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-139">A container that enables a component to add additional child components to the designer.</span></span> <span data-ttu-id="2b3a3-140">Te składniki będzie częścią powierzchni projektowania, ale nie będzie uczestniczyć w serializacji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-140">These components will be part of the design surface, but will not participate in serialization.</span></span> <span data-ttu-id="2b3a3-141">Jest to przydatne, gdy użytkownik chce zaprojektować formant, który jest w stanie ujawnienia region samego siebie w projektancie, ale nie chcesz, region, aby uczestniczyć w serializacji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-141">This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</span></span>|  
  
 <span data-ttu-id="2b3a3-142">Oprócz <xref:System.ComponentModel.ISite>, witryna implementuje również następujące interfejsy.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-142">In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2b3a3-143">Do sprawdzania istnienia te interfejsy, zamiast używać nieograniczonego rzutowania, ponieważ inne implementacje witryny nie może implementować ich.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-143">Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</span></span>  
  
|<span data-ttu-id="2b3a3-144">Usługa</span><span class="sxs-lookup"><span data-stu-id="2b3a3-144">Service</span></span>|<span data-ttu-id="2b3a3-145">Opis</span><span class="sxs-lookup"><span data-stu-id="2b3a3-145">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="2b3a3-146">Zapewnia sposób uzyskać dostęp do kontenera usługi specyficzne dla lokacji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-146">Provides a way to get to the container of site-specific services.</span></span> <span data-ttu-id="2b3a3-147">Na przykład <xref:System.ComponentModel.Design.IDictionaryService> jest usługą specyficzne dla lokacji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-147">For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service.</span></span> <span data-ttu-id="2b3a3-148">Z tą usługą możesz dodać dodatkowe usługi specyficzne dla lokacji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-148">With this service, you can add additional site-specific services.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="2b3a3-149">Aby uzyskać pełny dostęp do zasobów systemowych.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-149">for full access to system resources.</span></span> <span data-ttu-id="2b3a3-150">Zapotrzebowanie wartości: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-150">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="2b3a3-151">Skojarzony stan:</span><span class="sxs-lookup"><span data-stu-id="2b3a3-151">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b3a3-152">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-152">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b3a3-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-153">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-154"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-154">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="2b3a3-155">Nadrzędny dostawca usługi lub <see langword="null" /> czy brak elementu nadrzędnego, używany do rozpoznawania usług.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-155">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span></span></param>
        <summary><span data-ttu-id="2b3a3-156">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-156">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-157">Gdy `parentProvide` jest obecny, projektantów zawartych w powierzchni można pobrać usług z aplikacji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-157">When `parentProvide` is present, designers contained within the surface can retrieve services from the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-158"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-158">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : Type -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface rootComponentType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType"><span data-ttu-id="2b3a3-159">Typ główny składnika do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-159">The type of root component to create.</span></span></param>
        <summary><span data-ttu-id="2b3a3-160">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-160">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-161">Kiedy używasz <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> konstruktora tworzy prostą ładujący projektanta, który z kolei tworzy składnik danego typu, a następnie kończy proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-161">When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="2b3a3-162">Jest to prosty sposób utworzyć projektanta, przy założeniu, że wszystkie Zapisywanie stanu będzie odbywać się na zewnątrz.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-162">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="2b3a3-163">Wewnętrznie, powoduje to wywołanie <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> i przekazuje typ składnika głównego.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-163">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b3a3-164"><xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> Przeciążenia nie mają wpływu <xref:System.Windows.Forms.Design.DesignerOptions>.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-164">The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>.</span></span> <span data-ttu-id="2b3a3-165"><xref:System.Windows.Forms.Design.DesignerOptions> Musi być w kontenerze usługi przed ładuje powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-165">The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads.</span></span> <span data-ttu-id="2b3a3-166">Jeśli potrzebujesz dostępu do <xref:System.Windows.Forms.Design.DesignerOptions>, Wywołaj pustego konstruktora, dodawanie <xref:System.Windows.Forms.Design.DesignerOptions> do <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> i wywołać <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> z `rootComponentType`.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-166">If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-167"><paramref name="rootComponent" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-167"><paramref name="rootComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-168"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-168">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider, class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider, rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider, Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : IServiceProvider * Type -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface (parentProvider, rootComponentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="2b3a3-169">Nadrzędny dostawca usługi lub <see langword="null" /> czy brak elementu nadrzędnego, używany do rozpoznawania usług.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-169">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span></span></param>
        <param name="rootComponentType"><span data-ttu-id="2b3a3-170">Typ główny składnika do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-170">The type of root component to create.</span></span></param>
        <summary><span data-ttu-id="2b3a3-171">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignSurface" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-171">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-172">Za pomocą <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> Konstruktor tworzy prostą ładujący projektanta, który tworzy składnik danego typu, a następnie kończy proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-172">Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="2b3a3-173">Jest to prosty sposób utworzyć projektanta, przy założeniu, że wszystkie Zapisywanie stanu będzie odbywać się na zewnątrz.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-173">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="2b3a3-174">Wewnętrznie, powoduje to wywołanie <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> i przekazuje typ składnika głównego.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-174">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-175"><paramref name="rootComponent" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-175"><paramref name="rootComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-176"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-176">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b3a3-177">Rozpocznie się proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-177">Begins the loading process.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.ComponentModel.Design.Serialization.DesignerLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (loader As DesignerLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(System::ComponentModel::Design::Serialization::DesignerLoader ^ loader);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.ComponentModel.Design.Serialization.DesignerLoader -&gt; unit" Usage="designSurface.BeginLoad loader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loader" Type="System.ComponentModel.Design.Serialization.DesignerLoader" />
      </Parameters>
      <Docs>
        <param name="loader"><span data-ttu-id="2b3a3-178">Program ładujący projektanta na potrzeby ładowania projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-178">The designer loader to use for loading the designer.</span></span></param>
        <summary><span data-ttu-id="2b3a3-179">Rozpocznie się proces ładowania przy użyciu danego program ładujący projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-179">Begins the loading process with the given designer loader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-180">Trwa ładowanie Projektanta mogą być asynchroniczny, obciążenie może w dalszym ciągu postępu po zwrócił tego wywołania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-180">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="2b3a3-181">Program obsługi zdarzeń, aby dołączyć <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> zdarzeń, aby otrzymywać powiadomienia po zakończeniu ładowania powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-181">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="2b3a3-182">Po <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> jest wywoływana, można natychmiast uzyskać widok projektanta, ponieważ projektanta modułów ładujących należy podać co najmniej składnik główny podczas ładowania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-182">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-183"><paramref name="loader" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-183"><paramref name="loader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-184"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-184">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Type -&gt; unit" Usage="designSurface.BeginLoad rootComponentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType"><span data-ttu-id="2b3a3-185">Typ składnika do utworzenia w trybie projektowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-185">The type of component to create in design mode.</span></span></param>
        <summary><span data-ttu-id="2b3a3-186">Rozpocznie się proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-186">Begins the loading process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-187">Podczas `rootComponentType` jest określony, domyślna ładujący projektanta, który po prostu tworzy wystąpienie `rootComponentType` będą używane.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-187">When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used.</span></span> <span data-ttu-id="2b3a3-188">Trwa ładowanie Projektanta mogą być asynchroniczny, obciążenie może w dalszym ciągu postępu po zwrócił tego wywołania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-188">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="2b3a3-189">Program obsługi zdarzeń, aby dołączyć <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> zdarzeń, aby otrzymywać powiadomienia po zakończeniu ładowania powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-189">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="2b3a3-190">Po <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> jest wywoływana, można natychmiast uzyskać widok projektanta, ponieważ projektanta modułów ładujących należy podać co najmniej składnik główny podczas ładowania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-190">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b3a3-191"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> Metoda tworzy wystąpienie typu składnika i inicjuje projektanta dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-191">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance.</span></span> <span data-ttu-id="2b3a3-192"><xref:System.ComponentModel.Design.DesignSurface.Loaded> Zdarzenie jest zgłaszane, zanim ta metoda zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-192">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-193"><paramref name="rootComponentType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-193"><paramref name="rootComponentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-194"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-194">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComponentContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer ComponentContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer ComponentContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComponentContainer As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ ComponentContainer { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentContainer : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-195">Pobiera <see cref="T:System.ComponentModel.IContainer" /> implementacji w ramach powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-195">Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span></span></summary>
        <value><span data-ttu-id="2b3a3-196"><see cref="T:System.ComponentModel.IContainer" /> Implementacji w ramach powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-196">The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-197"><xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> Właściwość przechowuje wszystkie obiekty, które są obecnie dostępne w trybie projektowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-197">The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode.</span></span> <span data-ttu-id="2b3a3-198">Gdy składniki są dodawane do <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, ich projektanta, jest ładowany.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-198">When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded.</span></span> <span data-ttu-id="2b3a3-199">Składnik jest ulokowany z lokacją, która zapewnia pełny dostęp do powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-199">The component is sited with a site that provides full access to the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-200"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-200">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IComponent CreateComponent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateComponent (componentType As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent&#xA;override this.CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="designSurface.CreateComponent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="2b3a3-201">Typ składnika do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-201">The type of component to create.</span></span></param>
        <summary><span data-ttu-id="2b3a3-202">Tworzy wystąpienie składnika.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-202">Creates an instance of a component.</span></span></summary>
        <returns><span data-ttu-id="2b3a3-203">Nowo utworzony składnik.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-203">The newly created component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-204"><xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> Metoda jest wywoływana przez powierzchnię projektu <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> metodę w celu utworzenia wystąpienia składnika.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-204">The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface's <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component.</span></span> <span data-ttu-id="2b3a3-205">Składnik powinien być utworzony i dodany do publicznego kontenera na powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-205">The component should be created and added to the public container on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-206"><paramref name="componentType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-206"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-207"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-207">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, bool rootDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDesigner (component As IComponent, rootDesigner As Boolean) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, bool rootDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CreateDesigner : System.ComponentModel.IComponent * bool -&gt; System.ComponentModel.Design.IDesigner&#xA;override this.CreateDesigner : System.ComponentModel.IComponent * bool -&gt; System.ComponentModel.Design.IDesigner" Usage="designSurface.CreateDesigner (component, rootDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="rootDesigner" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="2b3a3-208">Składnik, dla którego należy utworzyć projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-208">The component for which the designer should be created.</span></span></param>
        <param name="rootDesigner"><span data-ttu-id="2b3a3-209"><see langword="true" /> Aby utworzyć projektanta głównego; <see langword="false" /> utworzyć normalny projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-209"><see langword="true" /> to create a root designer; <see langword="false" /> to create a normal designer.</span></span></param>
        <summary><span data-ttu-id="2b3a3-210">Tworzy projektanta, gdy składnik zostanie dodany do kontenera.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-210">Creates a designer when a component is added to the container.</span></span></summary>
        <returns><span data-ttu-id="2b3a3-211">Wystąpienie żądanego projektanta lub <see langword="null" /> Jeśli można odnaleźć pasującego projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-211">An instance of the requested designer, or <see langword="null" /> if no matching designer could be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-212"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> Metoda jest wywoływana przez powierzchnię projektu <xref:System.ComponentModel.IContainer> gdy składnik zostanie dodany do kontenera.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-212">The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface's <xref:System.ComponentModel.IContainer> when a component is added to the container.</span></span> <span data-ttu-id="2b3a3-213">Ta metoda tworzy projektanta, ale nie zainicjowany.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-213">This method creates a designer, but does not initialize it.</span></span> <span data-ttu-id="2b3a3-214">Gdy zwraca ono projektanta jest inicjowany przez kontener.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-214">When it returns, the designer is initialized by the container.</span></span>  
  
 <span data-ttu-id="2b3a3-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> można utworzyć dwa różne typy projektantów: główny projektantów i projektanci normalny.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers.</span></span> <span data-ttu-id="2b3a3-216">Projektant główny jest Projektant składnik główny powierzchni projektowej, w którym zgodnie z definicją to pierwszy komponent, dodać do kontenera.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-216">A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</span></span> <span data-ttu-id="2b3a3-217">Projektanci głównego różnią się od normalnej projektantów, ponieważ są one odpowiedzialne za interfejs użytkownika, użytkownik końcowy.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-217">Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</span></span> <span data-ttu-id="2b3a3-218">Projektanci głównego zwykle należy uzgodnić z pozostałej części projektantom na powierzchni projektowej udostępniają ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-218">Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</span></span>  
  
 <span data-ttu-id="2b3a3-219">Domyślna implementacja tej metody deleguje do <xref:System.ComponentModel.TypeDescriptor>, przekazując <xref:System.ComponentModel.Design.IRootDesigner> jako typ projektanta dla projektantów głównego lub <xref:System.ComponentModel.Design.IDesigner> dla projektantów normalny.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-219">The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers.</span></span> <span data-ttu-id="2b3a3-220">Można zastąpić tę metodę, aby zażądać określonego typu projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-220">You can override this method to request a specific type of designer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-221"><paramref name="component" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-221"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-222"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-222">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal virtual object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type -&gt; obj&#xA;override this.CreateInstance : Type -&gt; obj" Usage="designSurface.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2b3a3-223">Typ do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-223">The type to create.</span></span></param>
        <summary><span data-ttu-id="2b3a3-224">Tworzy wystąpienie podanego typu.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-224">Creates an instance of the given type.</span></span></summary>
        <returns><span data-ttu-id="2b3a3-225">Nowo utworzony obiekt.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-225">The newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-226">Jeśli `type` jest <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> wyszukuje konstruktora typu <xref:System.ComponentModel.IContainer> najpierw następuje pustego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-226">If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-227"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-227"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-228"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-228">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNestedContainer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b3a3-229">Tworzy kontener jest przeznaczony do zagnieżdżenia kontrolek i składników.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-229">Creates a container suitable for nesting controls or components.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent);" />
      <MemberSignature Language="F#" Value="member this.CreateNestedContainer : System.ComponentModel.IComponent -&gt; System.ComponentModel.INestedContainer" Usage="designSurface.CreateNestedContainer owningComponent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owningComponent"><span data-ttu-id="2b3a3-230">Składnik, który zarządza zagnieżdżonych kontenerów.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-230">The component that manages the nested container.</span></span></param>
        <summary><span data-ttu-id="2b3a3-231">Tworzy kontener jest przeznaczony do zagnieżdżenia kontrolek i składników.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-231">Creates a container suitable for nesting controls or components.</span></span></summary>
        <returns><span data-ttu-id="2b3a3-232">Kontener zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-232">The nested container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-233">Dodawanie składnika do kontenera zagnieżdżonych tworzy swojego projektanta i udostępnia je kwalifikuje się do wszystkich usług z powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-233">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="2b3a3-234">Składniki dodane do zagnieżdżone kontenery nie uczestniczą w serializacji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-234">Components added to nested containers do not participate in serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-235"><paramref name="owningComponent" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-235"><paramref name="owningComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-236"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-236">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent, containerName As String) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent, System::String ^ containerName);" />
      <MemberSignature Language="F#" Value="member this.CreateNestedContainer : System.ComponentModel.IComponent * string -&gt; System.ComponentModel.INestedContainer" Usage="designSurface.CreateNestedContainer (owningComponent, containerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owningComponent"><span data-ttu-id="2b3a3-237">Składnik, który zarządza zagnieżdżonych kontenerów.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-237">The component that manages the nested container.</span></span></param>
        <param name="containerName"><span data-ttu-id="2b3a3-238">Dodatkowe nazwę kontenera zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-238">An additional name for the nested container.</span></span></param>
        <summary><span data-ttu-id="2b3a3-239">Tworzy kontener jest przeznaczony do zagnieżdżenia kontrolek i składników.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-239">Creates a container suitable for nesting controls or components.</span></span></summary>
        <returns><span data-ttu-id="2b3a3-240">Kontener zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-240">The nested container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-241">Dodawanie składnika do kontenera zagnieżdżonych tworzy swojego projektanta i udostępnia je kwalifikuje się do wszystkich usług z powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-241">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="2b3a3-242">Składniki dodane do zagnieżdżone kontenery nie uczestniczą w serializacji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-242">Components added to nested containers do not participate in serialization.</span></span>  
  
 <span data-ttu-id="2b3a3-243">Można zapewnić dodatkową nazwę <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> metody przez przekazanie wartości do `containerName`.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-243">You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b3a3-244"><paramref name="owningComponent" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-244"><paramref name="owningComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-245"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-245">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b3a3-246">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-246">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designSurface.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b3a3-247">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-247">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-248">Publicznie <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> metoda postępuje zgodnie ze standardowym <xref:System.IDisposable> wzorca.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-248">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="2b3a3-249">Wywołanie tej metody niszczy powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-249">Calling this method destroys the design surface.</span></span> <span data-ttu-id="2b3a3-250">Chroniona wersja ta metoda jest `virtual` i następuje normalną <xref:System.IDisposable> wzorca.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-250">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b3a3-251">Ponieważ <xref:System.ComponentModel.Design.DesignSurface> nie ma żadnych kodu natywnego, aby wyczyścić, nie ma finalizatora, który wywołuje metodę <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-251">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span></span> <span data-ttu-id="2b3a3-252">Jeśli chcesz wywołać <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, możesz finalizator należy dodać.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-252">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="2b3a3-253">Wywołaj <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> po zakończeniu przy użyciu <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-253">Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="2b3a3-254"><xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> Pozostawia metoda <xref:System.ComponentModel.Design.DesignSurface> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-254">The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state.</span></span> <span data-ttu-id="2b3a3-255">Po wywołaniu <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, trzeba zwolnić wszystkie odwołania do <xref:System.ComponentModel.Design.DesignSurface> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.ComponentModel.Design.DesignSurface> zajmowaną przez wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-255">After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying.</span></span> <span data-ttu-id="2b3a3-256">Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2b3a3-256">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b3a3-257">Zawsze wywołuj <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> przed publikacją swoje ostatnie odwołanie do <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-257">Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="2b3a3-258">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.ComponentModel.Design.DesignSurface> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-258">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designSurface.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="2b3a3-259"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-259"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2b3a3-260">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-260">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-261">Publicznie <xref:System.ComponentModel.Design.DesignSurface.Dispose> metoda postępuje zgodnie ze standardowym <xref:System.IDisposable> wzorca.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-261">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="2b3a3-262">Wywołanie tej metody niszczy powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-262">Calling this method destroys the design surface.</span></span> <span data-ttu-id="2b3a3-263">Chroniona wersja ta metoda jest `virtual` i następuje normalną <xref:System.IDisposable> wzorca.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-263">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b3a3-264">Ponieważ <xref:System.ComponentModel.Design.DesignSurface> nie ma żadnych kodu natywnego, aby wyczyścić, nie ma finalizatora, który wywołuje metodę <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-264">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span></span> <span data-ttu-id="2b3a3-265">Jeśli chcesz wywołać <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, możesz finalizator należy dodać.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-265">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="2b3a3-266">Ta metoda jest wywoływana przez publiczną `Dispose()` metody i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-266">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2b3a3-267">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-267">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2b3a3-268"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` równa `false`.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-268"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2b3a3-269">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.ComponentModel.Design.DesignSurface> odwołania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-269">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references.</span></span> <span data-ttu-id="2b3a3-270">Ta metoda wywołuje `Dispose()` metoda każdego obiektu, do którego istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-270">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b3a3-271">
            <see langword="Dispose" /> może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-271">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="2b3a3-272">Podczas zastępowania <see langword="Dispose(Boolean)" /> Uważaj, aby nie odwołują się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-272">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="2b3a3-273">Aby uzyskać więcej informacji o sposobie wdrażania <see langword="Dispose(Boolean)" />, zobacz [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2b3a3-273">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="2b3a3-274">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="2b3a3-274">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-275">Występuje po usunięciu powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-275">Occurs when the design surface is disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-276">Powierzchni jest tylko wtedy, gdy usunięte publicznie <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> metody <xref:System.ComponentModel.Design.DesignSurface> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-276">The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtelLoading">
      <MemberSignature Language="C#" Value="public bool DtelLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtelLoading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property DtelLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtelLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DtelLoading : bool with get, set" Usage="System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-277">Pobiera wartość wskazującą czy **lista błędów w czasie projektowania** ładowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-277">Gets a value indicating whether the **Design-time Error List** is loading.</span></span></summary>
        <value><span data-ttu-id="2b3a3-278"><see langword="true" /> Jeśli **lista błędów w czasie projektowania** jest ładowanie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-278"><see langword="true" /> if the **Design-time Error List** is loading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ad408380-825a-46d8-9a4a-531b130b88ce"><span data-ttu-id="2b3a3-279">Błędy czasu projektowania w narzędziu Projektant dla formularzy systemu Windows</span><span class="sxs-lookup"><span data-stu-id="2b3a3-279">Design-Time Errors in the Windows Forms Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="designSurface.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b3a3-280">Serializuje zmiany do powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-280">Serializes changes to the design surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-281"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A> Można wywołać metody wypychania zmian do powierzchni projektowej w dół do serializatora.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-281">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer.</span></span> <span data-ttu-id="2b3a3-282">Dzięki temu zsynchronizowane na powierzchnię projektową i jego Zserializowany stan.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-282">This ensures that the design surface and its serialized state are synchronized.</span></span> <span data-ttu-id="2b3a3-283">Rzeczywista implementacja tej metody jest przekazywany do modułu ładującego projektanta skojarzone z powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-283">The actual implementation of this method is forwarded to the designer loader associated with design surface.</span></span> <span data-ttu-id="2b3a3-284">Program ładujący projektanta zrezygnować z ustawienia mają być odroczone zmiany do momentu <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> jest wywoływana, lub mają możliwość serializowane dane na bieżąco z wszystkie zmiany wprowadzane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-284">The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes.</span></span> <span data-ttu-id="2b3a3-285"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A> Metoda gwarantuje, że niezależnie od tego, program ładujący projektanta zdecydował się użyć modelu Zserializowany stan jest zsynchronizowany z powierzchni projektowej rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-285">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flushed">
      <MemberSignature Language="C#" Value="public event EventHandler Flushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Flushed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Flushed" />
      <MemberSignature Language="VB.NET" Value="Public Event Flushed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Flushed;" />
      <MemberSignature Language="F#" Value="member this.Flushed : EventHandler " Usage="member this.Flushed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-286">Występuje, gdy połączenie jest nawiązywane w przypadku <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> metody <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-286">Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-287">Program ładujący projektanta jest opróżniany najpierw, a następnie <xref:System.ComponentModel.Design.DesignSurface.Flushed> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-287">The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designSurface.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="2b3a3-288">Typ usługi do pobrania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-288">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="2b3a3-289">Pobiera usługę z kontenera usług.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-289">Gets a service from the service container.</span></span></summary>
        <returns><span data-ttu-id="2b3a3-290">Obiekt, który implementuje lub jest w klasie pochodnej, <paramref name="serviceType" />, lub <see langword="null" /> Jeśli usługa nie istnieje w kontenerze usługi.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-290">An object that implements, or is a derived class of, <paramref name="serviceType" />, or <see langword="null" /> if the service does not exist in the service container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-291"><xref:System.ComponentModel.Design.DesignSurface.GetService%2A> Metoda pobiera usługi w kontenerze usługi powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-291">The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface's service container.</span></span> <span data-ttu-id="2b3a3-292">Ponadto to będzie przesyłać wszystkich dostawców usług, czy podano na powierzchnię projektową podczas konstruowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-292">In addition, this will forward to any service provider that was given to the design surface at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-293">Pobiera wartość wskazującą, czy na powierzchnię projektową jest aktualnie załadowana.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-293">Gets a value indicating whether the design surface is currently loaded.</span></span></summary>
        <value><span data-ttu-id="2b3a3-294"><see langword="true" /> Jeśli na powierzchnię projektową jest aktualnie załadowana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-294"><see langword="true" /> if the design surface is currently loaded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.LoadedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.LoadedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Loaded As LoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::LoadedEventHandler ^ Loaded;" />
      <MemberSignature Language="F#" Value="member this.Loaded : System.ComponentModel.Design.LoadedEventHandler " Usage="member this.Loaded : System.ComponentModel.Design.LoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.LoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-295">Występuje po zakończeniu ładowania projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-295">Occurs when the designer load has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-296"><xref:System.ComponentModel.Design.DesignSurface.Loaded> Zdarzenie jest wywoływane dla obciążeń pomyślnie, a także nieudanymi.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-296">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones.</span></span> <span data-ttu-id="2b3a3-297">Jeśli kod w tej obsługi zdarzeń zgłasza wyjątek, Projektant jest zwalniana.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-297">If code in this event handler throws an exception, the designer is unloaded.</span></span>  
  
 <span data-ttu-id="2b3a3-298"><xref:System.ComponentModel.Design.LoadedEventArgs> Obiekt może służyć do określenia, czy podczas ładowania zakończyło się pomyślnie i oferuje również listę błędów, które wystąpiły podczas ładowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-298">The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b3a3-299">W przypadku pomyślnego obciążeń, mogą wystąpić błędy, pod warunkiem, że system serializacji może tolerować błędy.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-299">Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection LoadErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection LoadErrors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadErrors As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ LoadErrors { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadErrors : System.Collections.ICollection" Usage="System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-300">Zwraca kolekcję ładowania błędów lub void kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-300">Returns a collection of loading errors or a void collection.</span></span></summary>
        <value><span data-ttu-id="2b3a3-301">A <see cref="T:System.Collections.ICollection" /> ładowania błędów.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-301">A <see cref="T:System.Collections.ICollection" /> of loading errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public event EventHandler Loading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Loading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Event Loading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Loading;" />
      <MemberSignature Language="F#" Value="member this.Loading : EventHandler " Usage="member this.Loading : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-302">Występuje, gdy projektant ma być załadowany.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-302">Occurs when the designer is about to be loaded.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoaded(class System.ComponentModel.Design.LoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoaded (e As LoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoaded(System::ComponentModel::Design::LoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoaded : System.ComponentModel.Design.LoadedEventArgs -&gt; unit&#xA;override this.OnLoaded : System.ComponentModel.Design.LoadedEventArgs -&gt; unit" Usage="designSurface.OnLoaded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.LoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2b3a3-303">Element <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-303">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2b3a3-304">Wywołuje <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-304">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoading">
      <MemberSignature Language="C#" Value="protected virtual void OnLoading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoading(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoading : EventArgs -&gt; unit&#xA;override this.OnLoading : EventArgs -&gt; unit" Usage="designSurface.OnLoading e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2b3a3-305"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-305">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2b3a3-306">Wywołuje <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-306">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloaded">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloaded (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloaded(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloaded (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloaded(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnloaded : EventArgs -&gt; unit&#xA;override this.OnUnloaded : EventArgs -&gt; unit" Usage="designSurface.OnUnloaded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2b3a3-307"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-307">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2b3a3-308">Wywołuje <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-308">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloading">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloading(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnloading : EventArgs -&gt; unit&#xA;override this.OnUnloading : EventArgs -&gt; unit" Usage="designSurface.OnUnloading e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2b3a3-309"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-309">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2b3a3-310">Wywołuje <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-310">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnViewActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewActivate : EventArgs -&gt; unit&#xA;override this.OnViewActivate : EventArgs -&gt; unit" Usage="designSurface.OnViewActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2b3a3-311"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-311">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2b3a3-312">Wywołuje <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-312">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContainer : System.ComponentModel.Design.ServiceContainer" Usage="System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-313">Pobiera kontener usług.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-313">Gets the service container.</span></span></summary>
        <value><span data-ttu-id="2b3a3-314">Kontener usługi, który zawiera wszystkie usługi projektantów zawartych w powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-314">The service container that provides all services to designers contained within the design surface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-315">W czasie tworzenia <xref:System.ComponentModel.Design.DesignSurface> ten kontener usługi umożliwia dodanie usług domyślnych.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-315">At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container.</span></span> <span data-ttu-id="2b3a3-316">Możesz pozostawić usług domyślnych w jego obecnym stanie lub można je usunąć i zastąpić je własnymi.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-316">You can leave the default services in their present state, or you can remove them and replace them with your own.</span></span> <span data-ttu-id="2b3a3-317">Usługi domyślne są wszystkie żądanie utworzonej przez więc istnieje bez utraty wydajności dodawane podczas konstruowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-317">The default services are all demand-created, so there is no loss in performance for adding them at construction time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-318"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-318">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event EventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloaded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloaded;" />
      <MemberSignature Language="F#" Value="member this.Unloaded : EventHandler " Usage="member this.Unloaded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-319">Występuje, gdy projektant zakończył zwolnienie.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-319">Occurs when a designer has finished unloading.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event EventHandler Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloading;" />
      <MemberSignature Language="F#" Value="member this.Unloading : EventHandler " Usage="member this.Unloading : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-320">Występuje, gdy ma zwolnienie projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-320">Occurs when a designer is about to unload.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-321">Gdy zwalnia projektanta, cały stan dla tego projektanta jest niszczony, w tym widoku projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-321">When a designer unloads, the entire state for that designer is destroyed, including the designer's view.</span></span> <span data-ttu-id="2b3a3-322">W tym momencie powinna być bez elementów nadrzędnych tego widoku.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-322">The view should be unparented at this time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public object View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object View" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ View { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : obj" Usage="System.ComponentModel.Design.DesignSurface.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-323">Pobiera Widok projektanta głównego.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-323">Gets the view for the root designer.</span></span></summary>
        <value><span data-ttu-id="2b3a3-324">Widok projektanta głównego.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-324">The view for the root designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-325"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> Metoda musi zostać wywołana wyprzedzeniem, aby rozpocząć proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-325">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process.</span></span> <span data-ttu-id="2b3a3-326">Istnieje możliwość zwrócenia widoku, zanim program ładujący projektanta zakończy ładowanie projektanta głównego, który dostarcza widoku, ponieważ pierwszy obiekt utworzony przez program ładujący projektanta.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-326">It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</span></span> <span data-ttu-id="2b3a3-327">Jeśli widok jest niedostępny, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-327">If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="2b3a3-328">Pojęcie to technologia widok jest przestarzały.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-328">The notion of a view technology is obsolete.</span></span> <span data-ttu-id="2b3a3-329">Jednak pozostanie w interfejsach dla projektantów głównego zgodności z poprzednimi wersjami.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-329">But, it remains in the interfaces for root designers for backward compatibility.</span></span> <span data-ttu-id="2b3a3-330">Jego użycie jest ukryty dla wszystkich osób korzystających z <xref:System.ComponentModel.Design.DesignSurface> obiektów.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-330">Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="2b3a3-331"><xref:System.ComponentModel.Design.DesignSurface.View%2A> Właściwość ukrywa technologii widoku, przekazując obsługiwane technologie do projektanta głównego.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-331">The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b3a3-332">Poniższy kod przedstawia przykład sposobu <xref:System.ComponentModel.Design.DesignSurface.View%2A> ukrywa wyświetlić technologii.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-332">The following code example shows how <xref:System.ComponentModel.Design.DesignSurface.View%2A> hides view technologies.</span></span>  
  
 ```csharp 
 IRootDesigner d;  
  
 ViewTechnology[] supported = d.SupportedTechnologies;  
  
 return d.GetView(supported[0]);
 ``` 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b3a3-333">Powierzchni projektowej nie jest ładowany, program ładujący projektanta nie utworzył jeszcze projektanta głównego lub powierzchni projektowej Zakończono obciążenia, ale nie powiodło się.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-333">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</span></span> <span data-ttu-id="2b3a3-334">Więcej informacji może być dostępna w <see cref="P:System.Exception.InnerException" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-334">More information may available in the <see cref="P:System.Exception.InnerException" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2b3a3-335">Załadowano projektanta, ale nie oferuje widok zgodny z tym powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-335">The designer loaded, but it does not offer a view compatible with this design surface.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2b3a3-336"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dołączone do <see cref="T:System.ComponentModel.Design.DesignSurface" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-336">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ViewActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ViewActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewActivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
      <MemberSignature Language="VB.NET" Value="Public Event ViewActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewActivated;" />
      <MemberSignature Language="F#" Value="member this.ViewActivated : EventHandler " Usage="member this.ViewActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b3a3-337">Występuje, gdy <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> metoda została wywołana dla <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-337">Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b3a3-338">Jeśli chcesz obsługiwać <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> metodę obsługi zdarzenia powinna być aktywowana w oknie tę powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="2b3a3-338">If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>