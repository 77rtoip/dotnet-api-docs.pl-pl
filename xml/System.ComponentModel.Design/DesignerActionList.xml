<Type Name="DesignerActionList" FullName="System.ComponentModel.Design.DesignerActionList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="191e69a6446e215416f06a9ccf80131ff00a3624" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69349499" /></Metadata><TypeSignature Language="C#" Value="public class DesignerActionList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionList" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionList" />
  <TypeSignature Language="F#" Value="type DesignerActionList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę bazową dla typów, które definiują listę elementów użytych do utworzenia panelu tagów inteligentnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DesignerAction` Funkcja włącza składniki i kontrolki do wyświetlania informacji kontekstowych i poleceń. Tę `DesignerAction` funkcję można traktować jako zamiennik zleceń projektanta, <xref:System.ComponentModel.Design.DesignerActionItem> ponieważ można ją wyświetlić w panelu tagów inteligentnych, a także w menu skrótów skojarzonym ze składnikiem lub kontrolką. <xref:System.ComponentModel.Design.DesignerActionList> Klasa reprezentuje główny punkt interakcji dla deweloperów, którzy chcą dodać obsługę tagów inteligentnych do ich niestandardowych składników i kontrolek.  
  
 <xref:System.ComponentModel.Design.DesignerActionList>jest klasą bazową, pochodną przez deweloperów składników, aby wypełnić Panel tagów inteligentnych. Panel tagów inteligentnych reprezentuje interfejs użytkownika podobny do menu (UI) dla tagów inteligentnych.  
  
 Ta klasa pochodna może zaimplementować `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metodę w celu zwrócenia kolekcji obiektów pochodnych od <xref:System.ComponentModel.Design.DesignerActionItem>. Te obiekty reprezentują elementy panelu tagów inteligentnych. Każdy element jest wyświetlany w panelu zgodnie z jego typem. Na przykład, <xref:System.ComponentModel.Design.DesignerActionTextItem> jest wyświetlana jako etykieta tekst statyczny. Elementy paneli aktywne, reprezentowane przez <xref:System.ComponentModel.Design.DesignerActionPropertyItem> i <xref:System.ComponentModel.Design.DesignerActionMethodItem> typów, mają odpowiednio publicznie dostępną właściwość lub metodę, która implementuje funkcje dla tego elementu.  
  
 Aby uzyskać więcej informacji na temat dodawania elementów do panelu tagów inteligentnych, zobacz <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metodę.  
  
> [!NOTE]
>  Formularze i okna dialogowe mogą być wyświetlane przez elementy członkowskie klasy pochodzącej od <xref:System.ComponentModel.Design.DesignerActionList>. Domyślnie nadrzędne okna są oknem kontenera dla panelu tagów inteligentnych. Jawne, nadrzędne te okna podrzędne do innej usługi lub okna mogą spowodować nieprawidłowe wyświetlanie tagów inteligentnych.  
>   
>  Panele inteligentne nie obsługują przewijania lub stronicowania, dlatego należy uważać, aby nie wypełnić paneli wieloma elementami tagów inteligentnych. Zbyt wiele elementów może spowodować, że Panel tagów inteligentnych wykracza poza granicę ekranu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób tworzenia kolekcji <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Aby uzyskać pełny opis tego przykładu kodu, zobacz [How to: Dołącz Tagi inteligentne do składnika](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)Windows Forms.  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#2)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Polecenia projektanta i modelu obiektów DesignerAction formularzy systemu Windows</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionList (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionList(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionList : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.DesignerActionList" Usage="new System.ComponentModel.Design.DesignerActionList component" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Składnik związany <see cref="T:System.ComponentModel.Design.DesignerActionList" />z.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionList" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor ustawia właściwość na`false`. <xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A> <xref:System.ComponentModel.Design.DesignerActionList>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób tworzenia kolekcji <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Aby uzyskać pełny opis tego przykładu kodu, zobacz [How to: Dołącz Tagi inteligentne do składnika](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)Windows Forms.  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#4)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShow">
      <MemberSignature Language="C#" Value="public virtual bool AutoShow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoShow" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoShow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoShow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShow : bool with get, set" Usage="System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Panel tagów inteligentnych ma być automatycznie wyświetlany podczas tworzenia.</summary>
        <value><see langword="true" />Jeśli panel powinien być pokazywany podczas tworzenia składnika będącego właścicielem; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość właściwości jest ustawiona na `true`, składnik, z <xref:System.ComponentModel.Design.DesignerActionList> którym jest skojarzona, będzie automatycznie rozszerzał i wyświetlał Panel tagów inteligentnych podczas tworzenia składnika.  
  
 Możesz zrezygnować z tego zachowania, ustawiając <xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=nameWithType> właściwość na. `false`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób tworzenia kolekcji <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Aby uzyskać pełny opis tego przykładu kodu, zobacz [How to: Dołącz Tagi inteligentne do składnika](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)Windows Forms.  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Component : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera składnik powiązany z <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <value>Składnik powiązany z <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="designerActionList.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Usługa udostępniana przez <see cref="T:System.ComponentModel.Component" />.</param>
        <summary>Zwraca obiekt, który reprezentuje usługę dostarczoną przez składnik skojarzony z <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <returns>Reprezentuje usługę zapewnioną <see cref="T:System.ComponentModel.Component" />przez. <see cref="T:System.Object" /> Ta wartość jest <see langword="null" /> , <see cref="T:System.ComponentModel.Component" /> Jeśli nie zapewnia określonej usługi.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortedActionItems">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortedActionItems () As DesignerActionItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionItemCollection ^ GetSortedActionItems();" />
      <MemberSignature Language="F#" Value="abstract member GetSortedActionItems : unit -&gt; System.ComponentModel.Design.DesignerActionItemCollection&#xA;override this.GetSortedActionItems : unit -&gt; System.ComponentModel.Design.DesignerActionItemCollection" Usage="designerActionList.GetSortedActionItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionItemCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> obiektów znajdujących się na liście.</summary>
        <returns><see cref="T:System.ComponentModel.Design.DesignerActionItem" /> Tablica zawierająca elementy na tej liście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest zaimplementowana do zwracania, w oczekiwanej kolejności wyświetlania, kolekcja obiektów pochodnych od <xref:System.ComponentModel.Design.DesignerActionItem> klasy. `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Te elementy mogą być następujących typów określonych.  
  
|Typ|Opis|  
|----------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionHeaderItem>|Etykieta grupy wyświetlana czcionką pogrubioną.|  
|<xref:System.ComponentModel.Design.DesignerActionTextItem>|Etykieta wyświetlana w postaci zwykłej czcionki.|  
|<xref:System.ComponentModel.Design.DesignerActionPropertyItem>|Element panelu skojarzony z właściwością. Może również wyświetlać znacznik wyboru lub Edytor właściwości skojarzony z właściwością podstawową.|  
|<xref:System.ComponentModel.Design.DesignerActionMethodItem>|Element panelu wyświetlany jako hiperłącze i skojarzony z metodą.|  
  
 Dla każdej <xref:System.ComponentModel.Design.DesignerActionMethodItem> i <xref:System.ComponentModel.Design.DesignerActionPropertyItem>należy dodać odpowiadającą metodę lub właściwość do klasy <xref:System.ComponentModel.Design.DesignerActionList> dostarczonej przez programistę, która pochodzi od klasy. Każda metoda i element właściwości są wyświetlane jako aktywne wpisy; Korzystanie z niego za pomocą interfejsu użytkownika (UI) wywołuje odpowiednio odpowiednią metodę lub właściwość.  
  
 Elementy właściwości mają specjalny interfejs elementu panelu, który umożliwia wyświetlanie i manipulowanie odpowiednimi wartościami właściwości. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.Design.DesignerActionPropertyItem> Klasa.  
  
 Kolejność elementów w zwracanej tablicy odzwierciedla kolejność, w której będą one wyświetlane w panelu. Elementy są pogrupowane według <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> właściwości przy użyciu następujących reguł:  
  
-   Napotkano kategorię pierwszego elementu oznacza początek pierwszej grupy. Ta grupa jest kontynuowana, o ile każdy element zakończony powodzeniem jest w tej samej kategorii. Po napotkaniu elementu innej kategorii zostanie utworzona nowa grupa, a element zostanie umieszczony w nim.  
  
-   Jeśli element ma typ inny niż bieżąca, ale ta kategoria została już użyta, element jest umieszczany w pasującej istniejącej kategorii.  
  
-   Jeśli element nie ma kategorii, zostanie umieszczony w grupie różnej na końcu panelu. Ta grupa zawiera również elementy, <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A> których właściwość jest ustawiona `false`na.  
  
 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Metoda jest wywoływana, gdy panel jest tworzony po raz pierwszy. Musisz wywołać <xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A> metodę, aby zaktualizować listę elementów wyświetlanych w panelu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób tworzenia kolekcji <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Aby uzyskać pełny opis tego przykładu kodu, zobacz [How to: Dołącz Tagi inteligentne do składnika](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)Windows Forms.  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>
