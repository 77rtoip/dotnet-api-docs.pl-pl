<Type Name="DesignerActionList" FullName="System.ComponentModel.Design.DesignerActionList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28e511552af1a36996f7a7de37017872a3fba306" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901154" /></Metadata><TypeSignature Language="C#" Value="public class DesignerActionList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionList" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionList" />
  <TypeSignature Language="F#" Value="type DesignerActionList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę bazową dla typów, które definiują listę elementów, które pozwala utworzyć panelu tagi inteligentne.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DesignerAction` Funkcja umożliwia składników i formantów do wyświetlania informacji kontekstowych i poleceń. `DesignerAction` Funkcji można traktować jako zamiennika zlecenia projektanta, ponieważ <xref:System.ComponentModel.Design.DesignerActionItem> mogą być wyświetlane w panelu tagi inteligentne, a także w menu skrótów, skojarzone z składnika lub kontrolki. <xref:System.ComponentModel.Design.DesignerActionList> Klasa reprezentuje głównym punktem interakcji dla deweloperów, którzy chcą dodać tag inteligentny obsługi ich niestandardowych składników i formantów.  
  
 <xref:System.ComponentModel.Design.DesignerActionList> jest klasą bazową, pochodną Deweloperzy składników w celu wypełnienia panelu tagi inteligentne. Panelu tagi inteligentne reprezentuje interfejs przypominającej menu użytkownika (UI) dla tagów inteligentnych.  
  
 Ta klasa pochodna może wdrożyć `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metoda zwraca kolekcję obiektów pochodzących z <xref:System.ComponentModel.Design.DesignerActionItem>. Te obiekty reprezentują elementy panelu tagi inteligentne. Każdy element jest wyświetlany w panelu uwzględnieniu jego typu. Na przykład <xref:System.ComponentModel.Design.DesignerActionTextItem> jest wyświetlana jako etykieta tekst statyczny. Elementy panelu aktywne, reprezentowane przez <xref:System.ComponentModel.Design.DesignerActionPropertyItem> i <xref:System.ComponentModel.Design.DesignerActionMethodItem> typów, mają odpowiednie publicznie dostępnych właściwości lub metody, odpowiednio, które implementuje funkcje dla tego elementu.  
  
 Aby uzyskać więcej informacji o tym, jak dodać elementy do panelu tagi inteligentne, zobacz <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metody.  
  
> [!NOTE]
>  Formularze i okna dialogowe, które mogą być wyświetlane przez członków klasy pochodzącej od <xref:System.ComponentModel.Design.DesignerActionList>. Domyślnie elementem nadrzędnym tych okien będzie w oknie kontenera z panelu tagi inteligentne. Jawnie elementy nadrzędne tych okien podrzędnych do innej usługi lub okna może spowodować tagów inteligentnych do nieprawidłowo.  
>   
>  Panele inteligentne tagu nie obsługują przewijania lub stronicowania, więc należy uważać, aby nie wypełnić paneli z wieloma elementami tagów inteligentnych. Panel tagów inteligentnych przekraczający granic ekranu może spowodować zbyt wiele elementów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć kolekcję <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Aby uzyskać pełne wyjaśnienie ten przykład kodu, zobacz [porady: dołączanie tagów inteligentnych do składnika Windows Forms](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#2)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Polecenia projektanta i modelu obiektów DesignerAction formularzy systemu Windows</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionList (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionList(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionList : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.DesignerActionList" Usage="new System.ComponentModel.Design.DesignerActionList component" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Składnik związane z <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionList" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionList> Zestawy Konstruktor <xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A> właściwość `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć kolekcję <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Aby uzyskać pełne wyjaśnienie ten przykład kodu, zobacz [porady: dołączanie tagów inteligentnych do składnika Windows Forms](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#4)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShow">
      <MemberSignature Language="C#" Value="public virtual bool AutoShow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoShow" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoShow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoShow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShow : bool with get, set" Usage="System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy z panelu tagi inteligentne powinna być wyświetlana automatycznie po jego utworzeniu.</summary>
        <value><see langword="true" /> Jeśli panel mają być pokazywane podczas tworzenia składnika będąca właścicielem; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawiono wartość właściwości `true`, składnika, z którego należy to <xref:System.ComponentModel.Design.DesignerActionList> zostanie skojarzone automatycznie rozwinąć i wyświetlić panel tagu inteligentnego, gdy składnik zostanie utworzony.  
  
 Można zrezygnować z tego zachowania, ustawiając <xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=nameWithType> właściwość `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć kolekcję <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Aby uzyskać pełne wyjaśnienie ten przykład kodu, zobacz [porady: dołączanie tagów inteligentnych do składnika Windows Forms](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Component : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera składników powiązane z <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <value>Składnik związane z <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="designerActionList.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Usługę oferowaną przez <see cref="T:System.ComponentModel.Component" />.</param>
        <summary>Zwraca obiekt, który reprezentuje usługę oferowaną przez składnik skojarzony z <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <returns><see cref="T:System.Object" /> Który reprezentuje usługę oferowaną przez <see cref="T:System.ComponentModel.Component" />. Ta wartość jest <see langword="null" /> Jeśli <see cref="T:System.ComponentModel.Component" /> nie zawiera określonej usługi.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortedActionItems">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortedActionItems () As DesignerActionItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionItemCollection ^ GetSortedActionItems();" />
      <MemberSignature Language="F#" Value="abstract member GetSortedActionItems : unit -&gt; System.ComponentModel.Design.DesignerActionItemCollection&#xA;override this.GetSortedActionItems : unit -&gt; System.ComponentModel.Design.DesignerActionItemCollection" Usage="designerActionList.GetSortedActionItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionItemCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> obiektów znajdujących się na liście.</summary>
        <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> tablicę, która zawiera elementy na tej liście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Metoda jest implementowana do zwrotu, w oczekiwanej kolejność wyświetlania, zbiór obiektów pochodną <xref:System.ComponentModel.Design.DesignerActionItem> klasy. Te elementy mogą być następujące określonych typów.  
  
|Typ|Opis|  
|----------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionHeaderItem>|Etykieta grupy wyświetlane pogrubioną czcionką.|  
|<xref:System.ComponentModel.Design.DesignerActionTextItem>|Etykieta wyświetlana w zwykły czcionki.|  
|<xref:System.ComponentModel.Design.DesignerActionPropertyItem>|Panel, element skojarzony z właściwością. Może również znacznik wyboru lub wyświetlić Edytor właściwości skojarzone z właściwości.|  
|<xref:System.ComponentModel.Design.DesignerActionMethodItem>|Element Panelu wyświetlany jako hiperlink i skojarzonych z tą metodą.|  
  
 Dla każdego <xref:System.ComponentModel.Design.DesignerActionMethodItem> i <xref:System.ComponentModel.Design.DesignerActionPropertyItem>, odpowiadającej metody lub właściwości, które muszą zostać dodane do dostarczone przez programistę klasę pochodną <xref:System.ComponentModel.Design.DesignerActionList> klasy. Każdy element metod i właściwości jest wyświetlany jako aktywny zgłoszenia; wchodzenie w interakcje z nią za pomocą interfejsu użytkownika (UI) wywołuje odpowiadającej metody lub właściwości, odpowiednio.  
  
 Właściwości elementów ma interfejs specjalny element panelu, który umożliwia wyświetlanie i manipulowanie odpowiadające im wartości właściwości. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.Design.DesignerActionPropertyItem> klasy.  
  
 Kolejność elementów w zwróconej tablicy odzwierciedla kolejność, które pojawią się one w panelu. Elementy są pogrupowane według <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> właściwości, używając następujących reguł:  
  
-   Napotkano kategorii pierwszego elementu oznacza początek pierwszą grupę. Tej grupy jest kontynuowane tak długo, jak długo każdy element poniższymi jest w tej samej kategorii. Po napotkaniu elementu kategorii inną, nowe, zostanie utworzona nowa grupa i element znajduje się w nim.  
  
-   Jeśli element ma typ inny niż bieżącą grupę, ale tej kategorii jest już używany, element jest umieszczany w odpowiadającej kategorii istniejących.  
  
-   Jeśli element nie ma kategorii, znajduje się w różne grupy na końcu panelu. Ta grupa zawiera również elementy którego <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A> właściwość jest ustawiona na `false`.  
  
 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Metoda jest wywoływana, gdy tworzona jest najpierw panelu. Należy wywołać <xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A> metodę, aby zaktualizować listę elementów wyświetlanych w panelu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć kolekcję <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Aby uzyskać pełne wyjaśnienie ten przykład kodu, zobacz [porady: dołączanie tagów inteligentnych do składnika Windows Forms](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>