<Type Name="DesignerActionMethodItem" FullName="System.ComponentModel.Design.DesignerActionMethodItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dbaa814c17eea8ec8b787c34fcc27662054c159" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36707403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionMethodItem extends System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionMethodItem" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionMethodItem&#xA;Inherits DesignerActionItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionMethodItem : System::ComponentModel::Design::DesignerActionItem" />
  <TypeSignature Language="F#" Value="type DesignerActionMethodItem = class&#xA;    inherit DesignerActionItem" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.DesignerActionItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje element Panelu tagów inteligentnych, który jest skojarzony z metody w klasie pochodnej z <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem> Klasa reprezentuje poszczególnych elementów w panelu tagów inteligentnych. Element tego typu jest wyświetlany jako element interfejsu aktywnego użytkownika, takie jak hiperłącza, wywołuje metodę w klasie pochodnej z dostarczonych przez programistę <xref:System.ComponentModel.Design.DesignerActionList>. Skojarzenie między elementem i metody jest obsługiwane za pomocą wartości <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A> właściwości. Metodę, która wywołuje ten element musi przyjmować parametrów ani zwracać wartości.  
  
 Elementy panelu poszczególnych są skojarzone ze sobą w celu utworzenia panelu przez wywołanie do <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metody <xref:System.ComponentModel.Design.DesignerActionList> klasy.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć kolekcję <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Na pełny przykład wykonawczych tagi inteligentne, zobacz [porady: dołączanie tagów inteligentnych do składnika formularzy systemu Windows](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
    <altmember cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (actionList As DesignerActionList, memberName As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionMethodItem(System::ComponentModel::Design::DesignerActionList ^ actionList, System::String ^ memberName, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionList * string * string -&gt; System.ComponentModel.Design.DesignerActionMethodItem" Usage="new System.ComponentModel.Design.DesignerActionMethodItem (actionList, memberName, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> Zawierający metody tego elementu jest skojarzony.</param>
        <param name="memberName">Uwzględniana wielkość liter nazwy metody w klasie pochodnej z <see cref="T:System.ComponentModel.Design.DesignerActionList" /> można wywołać za pomocą elementu panelu.</param>
        <param name="displayName">Tekst panelu dla tego elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> klasy z określonej metody i wyświetlić nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Ustawia konstruktora <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> i <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> właściwości `null`i <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> właściwości `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (actionList As DesignerActionList, memberName As String, displayName As String, includeAsDesignerVerb As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionMethodItem(System::ComponentModel::Design::DesignerActionList ^ actionList, System::String ^ memberName, System::String ^ displayName, bool includeAsDesignerVerb);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionList * string * string * bool -&gt; System.ComponentModel.Design.DesignerActionMethodItem" Usage="new System.ComponentModel.Design.DesignerActionMethodItem (actionList, memberName, displayName, includeAsDesignerVerb)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> Zawierający metody tego elementu jest skojarzony.</param>
        <param name="memberName">Uwzględniana wielkość liter nazwy metody w klasie pochodnej z <see cref="T:System.ComponentModel.Design.DesignerActionList" /> można wywołać za pomocą elementu panelu.</param>
        <param name="displayName">Tekst panelu dla tego elementu.</param>
        <param name="includeAsDesignerVerb">Flaga określająca, czy również zaliczenie skojarzona metoda zlecenie projektanta.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> klasy z określonej metody i wyświetlić nazwy i flagę wskazującą, czy element powinien pojawiać się w innych kontekstach interfejsu użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `includeAsDesignerVerb` ustawiono parametr `true`, a następnie tego elementu jest traktowana jako <xref:System.ComponentModel.Design.DesignerVerb>; w związku z tym zostanie ona dodana do elementu menu skrótów czasu projektowania. W programie Visual Studio polecenia zostaną także dodane do **atrybuty** okienku okna właściwości. Lista zleceń projektanta jest możliwy za pośrednictwem projektanta <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> właściwości kolekcji.  
  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Ustawia konstruktora <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> i <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> właściwości `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (actionList As DesignerActionList, memberName As String, displayName As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionMethodItem(System::ComponentModel::Design::DesignerActionList ^ actionList, System::String ^ memberName, System::String ^ displayName, System::String ^ category);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionList * string * string * string -&gt; System.ComponentModel.Design.DesignerActionMethodItem" Usage="new System.ComponentModel.Design.DesignerActionMethodItem (actionList, memberName, displayName, category)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> Zawierający metody tego elementu jest skojarzony.</param>
        <param name="memberName">Uwzględniana wielkość liter nazwy metody w klasie pochodnej z <see cref="T:System.ComponentModel.Design.DesignerActionList" /> można wywołać za pomocą elementu panelu.</param>
        <param name="displayName">Tekst panelu dla tego elementu.</param>
        <param name="category">Uwzględniana wielkość liter <see cref="T:System.String" /> używane do grupowania podobnych elementów na panelu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> klasy z określonej nazwy metody, wyświetlania i kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Ustawia konstruktora <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> właściwości `null` i <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> właściwości `false`.  
  
 Aby uzyskać więcej informacji na temat sposobu `category` parametr jest używany do grupowania elementów na panelu, zobacz <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (actionList As DesignerActionList, memberName As String, displayName As String, category As String, includeAsDesignerVerb As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionMethodItem(System::ComponentModel::Design::DesignerActionList ^ actionList, System::String ^ memberName, System::String ^ displayName, System::String ^ category, bool includeAsDesignerVerb);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionList * string * string * string * bool -&gt; System.ComponentModel.Design.DesignerActionMethodItem" Usage="new System.ComponentModel.Design.DesignerActionMethodItem (actionList, memberName, displayName, category, includeAsDesignerVerb)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> Zawierający metody tego elementu jest skojarzony.</param>
        <param name="memberName">Uwzględniana wielkość liter nazwy metody w klasie pochodnej z <see cref="T:System.ComponentModel.Design.DesignerActionList" /> można wywołać za pomocą elementu panelu.</param>
        <param name="displayName">Tekst panelu dla tego elementu.</param>
        <param name="category">Uwzględniana wielkość liter <see cref="T:System.String" /> używane do grupowania podobnych elementów na panelu.</param>
        <param name="includeAsDesignerVerb">Flaga określająca, czy również zaliczenie skojarzona metoda projektanta zlecenie skojarzone składnika.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> klasy z określonej nazwy metody, wyświetlania i kategorii i flagę wskazującą, czy element powinien pojawiać się w innych kontekstach interfejsu użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `includeAsDesignerVerb` ustawiono parametr `true`, a następnie elementu jest traktowana jako <xref:System.ComponentModel.Design.DesignerVerb>; w związku z tym zostanie ona dodana do elementu menu skrótów czasu projektowania. Lista zleceń projektanta jest możliwy za pośrednictwem projektanta <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> właściwości kolekcji.  
  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Ustawia konstruktora <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> właściwości `null`.  
  
 Aby uzyskać więcej informacji na temat sposobu `category` parametr jest używany do grupowania elementów na panelu, zobacz <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (actionList As DesignerActionList, memberName As String, displayName As String, category As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionMethodItem(System::ComponentModel::Design::DesignerActionList ^ actionList, System::String ^ memberName, System::String ^ displayName, System::String ^ category, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionList * string * string * string * string -&gt; System.ComponentModel.Design.DesignerActionMethodItem" Usage="new System.ComponentModel.Design.DesignerActionMethodItem (actionList, memberName, displayName, category, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> Zawierający metody tego elementu jest skojarzony.</param>
        <param name="memberName">Uwzględniana wielkość liter nazwy metody w klasie pochodnej z <see cref="T:System.ComponentModel.Design.DesignerActionList" /> można wywołać za pomocą elementu panelu.</param>
        <param name="displayName">Tekst panelu dla tego elementu.</param>
        <param name="category">Uwzględniana wielkość liter <see cref="T:System.String" /> używane do grupowania podobnych elementów na panelu.</param>
        <param name="description">Uzupełniające tekst dla tego elementu, używany w etykietkach narzędzi lub paska stanu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> klasy z określonej nazwy metody i kategorii i wyświetlania i tekst opisu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Ustawia konstruktora <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> właściwości `false`.  
  
 Aby uzyskać więcej informacji na temat sposobu `category` parametr jest używany do grupowania elementów na panelu, zobacz <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (actionList As DesignerActionList, memberName As String, displayName As String, category As String, description As String, includeAsDesignerVerb As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionMethodItem(System::ComponentModel::Design::DesignerActionList ^ actionList, System::String ^ memberName, System::String ^ displayName, System::String ^ category, System::String ^ description, bool includeAsDesignerVerb);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionList * string * string * string * string * bool -&gt; System.ComponentModel.Design.DesignerActionMethodItem" Usage="new System.ComponentModel.Design.DesignerActionMethodItem (actionList, memberName, displayName, category, description, includeAsDesignerVerb)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> Zawierający metody tego elementu jest skojarzony.</param>
        <param name="memberName">Uwzględniana wielkość liter nazwy metody w klasie pochodnej z <see cref="T:System.ComponentModel.Design.DesignerActionList" /> można wywołać za pomocą elementu panelu.</param>
        <param name="displayName">Tekst panelu dla tego elementu.</param>
        <param name="category">Uwzględniana wielkość liter <see cref="T:System.String" /> używane do grupowania podobnych elementów na panelu.</param>
        <param name="description">Uzupełniające tekst dla tego elementu, używany w etykietkach narzędzi lub paska stanu.</param>
        <param name="includeAsDesignerVerb">Flaga określająca, czy również zaliczenie skojarzona metoda projektanta zlecenie skojarzone składnika.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> klasy z określonej nazwy metody i kategorii, wyświetlania i tekst opisu i flagę wskazującą, czy element powinien pojawiać się w innych kontekstach interfejsu użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `includeAsDesignerVerb` ustawiono parametr `true`, a następnie tego elementu jest traktowana jako <xref:System.ComponentModel.Design.DesignerVerb>; w związku z tym zostanie ona dodana do elementu menu skrótów czasu projektowania. Lista zleceń projektanta jest możliwy za pośrednictwem projektanta <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> właściwości kolekcji.  
  
 Aby uzyskać więcej informacji na temat sposobu `category` parametr jest używany do grupowania elementów na panelu, zobacz <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć kolekcję <xref:System.ComponentModel.Design.DesignerActionItem> obiektów.  
  
 Na pełny przykład wykonawczych tagi inteligentne, zobacz [porady: dołączanie tagów inteligentnych do składnika formularzy systemu Windows](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName="IncludeAsDesignerVerb">
      <MemberSignature Language="C#" Value="public virtual bool IncludeAsDesignerVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeAsDesignerVerb" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IncludeAsDesignerVerb As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IncludeAsDesignerVerb { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeAsDesignerVerb : bool" Usage="System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> powinna być widoczna w innych kontekstach interfejsu użytkownika.</summary>
        <value>
          <see langword="true" /> Jeśli element ma być używana w menu skrótów; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> właściwość jest ustawiona na `true`, a następnie elementu jest traktowana jako <xref:System.ComponentModel.Design.DesignerVerb>; w związku z tym zostanie ona dodana do elementu menu skrótów czasu projektowania. Lista zleceń projektanta jest możliwy za pośrednictwem projektanta <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> właściwości kolekcji.  
  
 Wartość <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> właściwość jest ustawiona w Konstruktorze tej klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invoke();" />
      <MemberSignature Language="F#" Value="abstract member Invoke : unit -&gt; unit&#xA;override this.Invoke : unit -&gt; unit" Usage="designerActionMethodItem.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Programowo wykonuje metodę skojarzoną z <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> właściwość jest inicjowana na `true`, skojarzona metoda również może być wywoływany przez odpowiednie zdarzenie zlecenie projektanta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Metody o nazwie w <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> nie można odnaleźć.</exception>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public virtual string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string" Usage="System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę metody, która to <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> jest skojarzony.</summary>
        <value>A <see cref="T:System.String" /> zawierający nazwę metody skojarzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A> Właściwość określa, które właściwości w klasie pochodnej z <xref:System.ComponentModel.Design.DesignerActionList> klasy, która powiązany element. Gdy programistę współdziała z elementem panel za pomocą interfejsu użytkownika (UI), będzie można ustawić tej właściwości skojarzone.  
  
 Metoda powiązana powinna przyjmować parametrów ani zwracać wartość.  
  
 Ta właściwość jest ustawiona w konstruktorze. Jest rozróżniana wielkość liter.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName="RelatedComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RelatedComponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RelatedComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent" />
      <MemberSignature Language="VB.NET" Value="Public Property RelatedComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RelatedComponent { System::ComponentModel::IComponent ^ get(); void set(System::ComponentModel::IComponent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelatedComponent : System.ComponentModel.IComponent with get, set" Usage="System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia składnik, która wspiera jego <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> obiekty do bieżącego panelu.</summary>
        <value>Uczestniczących składnik, który powinien mieć skojarzone projektanta, który dostarcza elementy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A> Właściwość umożliwia inny składnik udzielać jego tagów inteligentnych elementy panelu do bieżącej listy. Na przykład kontrolki użytkownika może agregować elementy z jednego z jego składników standardowych kontrolek.  
  
 Ta właściwość działa w połączeniu z <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
      </Docs>
    </Member>
  </Members>
</Type>