<Type Name="ComponentDesigner" FullName="System.ComponentModel.Design.ComponentDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f167a4a6bd3caa5523f9f9dc81c18f3af7cad863" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36707904" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentDesigner : IDisposable, System.ComponentModel.Design.IComponentInitializer, System.ComponentModel.Design.IDesigner, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.ITreeDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentDesigner extends System.Object implements class System.ComponentModel.Design.IComponentInitializer, class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.ITreeDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDesigner&#xA;Implements IComponentInitializer, IDesigner, IDesignerFilter, IDisposable, ITreeDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDesigner : IDisposable, System::ComponentModel::Design::IComponentInitializer, System::ComponentModel::Design::IDesigner, System::ComponentModel::Design::IDesignerFilter, System::ComponentModel::Design::ITreeDesigner" />
  <TypeSignature Language="F#" Value="type ComponentDesigner = class&#xA;    interface ITreeDesigner&#xA;    interface IDesigner&#xA;    interface IDisposable&#xA;    interface IDesignerFilter&#xA;    interface IComponentInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IComponentInitializer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.ITreeDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9e48d-101">Rozszerza zachowanie projektu w trybie składnika.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e48d-101">Extends the design mode behavior of a component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-102"><xref:System.ComponentModel.Design.ComponentDesigner> Klasy podstawowej projektanta udostępnia prosty projektanta, który można rozszerzyć zachowanie składnik skojarzony w trybie projektowania.</span><span class="sxs-lookup"><span data-stu-id="9e48d-102">The <xref:System.ComponentModel.Design.ComponentDesigner> base designer class provides a simple designer that can extend the behavior of an associated component in design mode.</span></span>  
  
 <span data-ttu-id="9e48d-103"><xref:System.ComponentModel.Design.ComponentDesigner> zawiera pustą <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu implementacji, w której metody może zostać zastąpiona w celu dostosować atrybuty, właściwości i zdarzenia składnik skojarzony w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="9e48d-103"><xref:System.ComponentModel.Design.ComponentDesigner> provides an empty <xref:System.ComponentModel.Design.IDesignerFilter> interface implementation, whose methods can be overridden to adjust the attributes, properties and events of the associated component at design time.</span></span>  
  
 <span data-ttu-id="9e48d-104">Projektant można skojarzyć z typem przy użyciu <xref:System.ComponentModel.DesignerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="9e48d-105">Omówienie Dostosowywanie zachowania w czasie projektowania, zobacz [rozszerzenie obsługi w czasie projektowania](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span><span class="sxs-lookup"><span data-stu-id="9e48d-105">For an overview of customizing design-time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
 <span data-ttu-id="9e48d-106"><xref:System.ComponentModel.Design.ComponentDesigner> Klasa implementuje specjalnego zachowania w przypadku deskryptorów właściwości dziedziczone składników.</span><span class="sxs-lookup"><span data-stu-id="9e48d-106">The <xref:System.ComponentModel.Design.ComponentDesigner> class implements a special behavior for the property descriptors of inherited components.</span></span> <span data-ttu-id="9e48d-107">Wewnętrzny typ o nazwie `InheritedPropertyDescriptor` jest używany domyślnie <xref:System.ComponentModel.Design.ComponentDesigner> implementacji do zastąpienia właściwości, które są dziedziczone z klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="9e48d-107">An internal type named `InheritedPropertyDescriptor` is used by the default <xref:System.ComponentModel.Design.ComponentDesigner> implementation to stand in for properties that are inherited from a base class.</span></span> <span data-ttu-id="9e48d-108">Istnieją dwa przypadki, w których zostaną dodane tych deskryptorów właściwości.</span><span class="sxs-lookup"><span data-stu-id="9e48d-108">There are two cases in which these property descriptors are added.</span></span>  
  
1.  <span data-ttu-id="9e48d-109">Główny obiekt, który jest zwracany przez <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> właściwości, ponieważ są dziedziczenia po klasie podstawowej.</span><span class="sxs-lookup"><span data-stu-id="9e48d-109">To the root object itself, which is returned by the <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> property, because you are inheriting from its base class.</span></span>  
  
2.  <span data-ttu-id="9e48d-110">Do pola w klasie podstawowej obiektu głównego.</span><span class="sxs-lookup"><span data-stu-id="9e48d-110">To fields found in the base class of the root object.</span></span> <span data-ttu-id="9e48d-111">Pola publiczne i chronione od klasy podstawowej są dodawane do projektanta, dzięki czemu można manipulować przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9e48d-111">Public and protected fields from the base class are added to the designer so that they can be manipulated by the user.</span></span>  
  
 <span data-ttu-id="9e48d-112">`InheritedPropertyDescriptor` Klasy Modyfikuje wartość domyślna właściwości, dzięki czemu wartością domyślną jest wartość bieżącego wystąpienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-112">The `InheritedPropertyDescriptor` class modifies the default value of a property, so that the default value is the current value at object instantiation.</span></span> <span data-ttu-id="9e48d-113">Jest to spowodowane właściwość jest dziedziczona z innego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="9e48d-113">This is because the property is inherited from another instance.</span></span> <span data-ttu-id="9e48d-114">Projektant definiuje zresetowanie do wartości właściwości, zgodnie z ustawieniem dla niego wartość która została ustawiona przez odziedziczoną klasę.</span><span class="sxs-lookup"><span data-stu-id="9e48d-114">The designer defines resetting the property value as setting it to the value that was set by the inherited class.</span></span> <span data-ttu-id="9e48d-115">Ta wartość może różnić się od wartości domyślnej przechowywanych w metadanych.</span><span class="sxs-lookup"><span data-stu-id="9e48d-115">This value may differ from the default value stored in metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e48d-116">W poniższym przykładzie kodu przedstawiono przykład <xref:System.ComponentModel.Design.ComponentDesigner> implementacji i składnik przykład skojarzony z projektanta.</span><span class="sxs-lookup"><span data-stu-id="9e48d-116">The following code example provides an example <xref:System.ComponentModel.Design.ComponentDesigner> implementation and an example component associated with the designer.</span></span> <span data-ttu-id="9e48d-117">Projektant implementuje zastępująca <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> metodę, która wywołuje podstawowym `Initialize` metoda, zastępująca <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> metodę, która wyświetla <xref:System.Windows.Forms.MessageBox> gdy składnik zostanie dwukrotnie kliknięty oraz zastępowania <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Metoda dostępu do właściwości, który dostarcza niestandardowego <xref:System.ComponentModel.Design.DesignerVerb> menu polecenie menu skrótów dla składnika.</span><span class="sxs-lookup"><span data-stu-id="9e48d-117">The designer implements an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method that calls the base `Initialize` method, an override of the <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> method that displays a <xref:System.Windows.Forms.MessageBox> when the component is double-clicked, and an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property accessor that supplies a custom <xref:System.ComponentModel.Design.DesignerVerb> menu command to the shortcut menu for the component.</span></span>  
  
 [!code-cpp[ComponentDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentDesignerExample/CPP/examplecomponent.cpp#1)]
 [!code-csharp[ComponentDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentDesignerExample/CS/examplecomponent.cs#1)]
 [!code-vb[ComponentDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentDesignerExample/VB/examplecomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-118">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-119">Pobiera listy akcji czasu projektowania obsługiwaną przez składnik skojarzony z projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-119">Gets the design-time action lists supported by the component associated with the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-120">Zawiera listę akcji w czasie projektowania obsługiwaną przez składnik skojarzony z projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-120">The design-time action lists supported by the component associated with the designer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedComponents : System.Collections.ICollection" Usage="System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-121">Pobiera kolekcję skojarzone z danym składnikiem zarządzane przez projektanta składników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-121">Gets the collection of components associated with the component managed by the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-122">Składniki, które są skojarzone z składników zarządzanych przez projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-122">The components that are associated with the component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-123">Ta właściwość wskazuje wszystkie składniki, aby skopiować lub przenieść wraz ze składników zarządzanych przez projektanta podczas kopiowania, przeciągnij lub operacji przenoszenia.</span><span class="sxs-lookup"><span data-stu-id="9e48d-123">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="9e48d-124">Jeśli ta kolekcja zawiera odwołania do innych składników w bieżącym dokumencie trybu projektowania, składniki te zostaną skopiowane wraz ze składników zarządzanych przez projektanta podczas operacji kopiowania.</span><span class="sxs-lookup"><span data-stu-id="9e48d-124">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="9e48d-125">Po wybraniu składnika zarządzane przez projektanta tej kolekcji jest wypełniony wszystkich zagnieżdżonych formantów.</span><span class="sxs-lookup"><span data-stu-id="9e48d-125">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="9e48d-126">Ta kolekcja może również zawierać inne składniki, takie jak przyciski paska narzędzi.</span><span class="sxs-lookup"><span data-stu-id="9e48d-126">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Component : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-127">Pobiera składnik, który jest projektowania tego projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-127">Gets the component this designer is designing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-128">Składnik zarządzany przez projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-128">The component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-129"><xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> Metoda <xref:System.ComponentModel.Design.ComponentDesigner> ustawia tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="9e48d-129">The <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method of <xref:System.ComponentModel.Design.ComponentDesigner> sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e48d-130">W przypadku przesłaniania <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> metody należy wywołać klasy podstawowej <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> metody, aby można było używać tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="9e48d-130">When overriding the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method, be sure to call the base class <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method before using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-131">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-131">Releases the resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="componentDesigner.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-132">Zwalnia wszelkie zasoby używane przez <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-132">Releases all resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-133">Wywołanie <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> po zakończeniu przy użyciu <xref:System.ComponentModel.Design.ComponentDesigner>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-133">Call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="9e48d-134"><xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> Pozostawia metody <xref:System.ComponentModel.Design.ComponentDesigner> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="9e48d-134">The <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ComponentDesigner> in an unusable state.</span></span> <span data-ttu-id="9e48d-135">Po wywołaniu <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.ComponentModel.Design.ComponentDesigner> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.ComponentModel.Design.ComponentDesigner> klasy.</span><span class="sxs-lookup"><span data-stu-id="9e48d-135">After calling <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ComponentDesigner> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ComponentDesigner> was occupying.</span></span> <span data-ttu-id="9e48d-136">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="9e48d-136">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e48d-137">Wywoływanie zawsze <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.ComponentModel.Design.ComponentDesigner>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-137">Always call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="9e48d-138">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.ComponentModel.Design.ComponentDesigner> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-138">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ComponentDesigner> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="componentDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9e48d-139">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-139">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-140">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-140">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-141">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-141">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9e48d-142">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="9e48d-142">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9e48d-143"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="9e48d-143"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9e48d-144">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.ComponentModel.Design.ComponentDesigner> odwołania.</span><span class="sxs-lookup"><span data-stu-id="9e48d-144">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ComponentDesigner> references.</span></span> <span data-ttu-id="9e48d-145">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-145">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e48d-146">
            <para>
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenia Resources](~/docs/standard/garbage-collection/unmanaged.md) niezarządzane i [zastąpienie metody Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-146">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="componentDesigner.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-147">Tworzy podpis metody w pliku kodu źródłowego dla domyślne zdarzenie dla składnika i nawiguje kursora użytkownika do tej lokalizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-147">Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-148">W projektantach formularzy systemu Windows i formularzy sieci Web Ta metoda jest wywoływana, gdy użytkownik kliknie dwukrotnie składnika.</span><span class="sxs-lookup"><span data-stu-id="9e48d-148">In Windows Forms and Web Forms designers, this method is invoked when a user double-clicks a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Design.CheckoutException">
          <span data-ttu-id="9e48d-149">Próba wyewidencjonowania pliku, który jest sprawdzany do zarządzania programu kodu źródłowego nie powiodła się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-149">An attempt to check out a file that is checked into a source code management program failed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ComponentDesigner ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="componentDesigner.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-150">Próbuje zwolnić zasoby przez wywołanie metody <see langword="Dispose(false)" /> przed obiektu jest odzyskana przez wyrzucanie elementów bezużytecznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-150">Attempts to free resources by calling <see langword="Dispose(false)" /> before the object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-151">Ta metoda zastępuje <xref:System.Object.Finalize%2A?displayProperty=nameWithType> i czyści zasoby przez wywołanie metody `Dispose(false)`.</span><span class="sxs-lookup"><span data-stu-id="9e48d-151">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="9e48d-152">Zastąpienie `Dispose(Boolean)` dostosować czyszczenia.</span><span class="sxs-lookup"><span data-stu-id="9e48d-152">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="9e48d-153">Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-153">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9e48d-154">Aby uzyskać więcej informacji, zobacz [metody Finalize i destruktory](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md), i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="9e48d-154">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="componentDesigner.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="9e48d-155">Typ usługi do żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-155">The type of service to request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-156">Próbuje pobrać z witryny tryb projektowania projektanta składnika określonego typu usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-156">Attempts to retrieve the specified type of service from the design mode site of the designer's component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e48d-157">Obiekt zawierający implementację żądanej usługi lub <see langword="null" /> Jeśli usługi nie można rozpoznać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-157">An object implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-158">Domyślna implementacja tej metody żądania usługi z witryny składnika.</span><span class="sxs-lookup"><span data-stu-id="9e48d-158">The default implementation of this method requests the service from the site of the component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e48d-159">Poniższy przykład kodu pokazuje użycie <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> metodę dostępu do usług projektanta.</span><span class="sxs-lookup"><span data-stu-id="9e48d-159">The following code example demonstrates the use of the <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> method to access designer services.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceAttribute : System.ComponentModel.InheritanceAttribute" Usage="System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-160">Pobiera atrybut, który wskazuje typ dziedziczenia składnik skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-160">Gets an attribute that indicates the type of inheritance of the associated component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-161">
            <see cref="T:System.ComponentModel.InheritanceAttribute" /> Skojarzone składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-161">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> for the associated component.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="protected bool Inherited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Inherited { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool" Usage="System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-162">Pobiera wartość wskazującą, czy ten składnik jest dziedziczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-162">Gets a value indicating whether this component is inherited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-163">
            <see langword="true" /> Jeśli składnik jest dziedziczona; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-163">
              <see langword="true" /> if the component is inherited; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.ComponentModel.IComponent -&gt; unit&#xA;override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="componentDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="9e48d-164">Składnik dla tego projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-164">The component for this designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-165">Przygotowuje projektancie do wyświetlania, edytowania i projektowania określony składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-165">Prepares the designer to view, edit, and design the specified component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-166">Host projektanta wywołuje tę metodę, gdy będzie gotowy do korzystania z projektanta.</span><span class="sxs-lookup"><span data-stu-id="9e48d-166">The designer host calls this method when it is ready to use the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="abstract member InitializeExistingComponent : System.Collections.IDictionary -&gt; unit&#xA;override this.InitializeExistingComponent : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.InitializeExistingComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="9e48d-167">Słownik nazw i wartości wartości domyślne, aby zastosować do właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-167">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="9e48d-168">Może być <see langword="null" /> , jeśli nie określono żadnych wartości domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-168">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-169">Ponownie inicjuje istniejący składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-169">Reinitializes an existing component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-170"><xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> Metoda jest wywoływana, gdy istniejący składnik jest są ponownie inicjowane.</span><span class="sxs-lookup"><span data-stu-id="9e48d-170">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> method is called when an existing component is being reinitialized.</span></span> <span data-ttu-id="9e48d-171">Na przykład może to nastąpić po użytkownik przeciąga składnik do innego kontenera.</span><span class="sxs-lookup"><span data-stu-id="9e48d-171">For example, this may occur after the user drags a component to another container.</span></span>  
  
 <span data-ttu-id="9e48d-172">Możesz użyć `defaultValues` słownika do zastosowania zalecane ustawienia domyślne właściwości; jednak nie należy modyfikować właściwości składnika jako uzupełnienie tych przechowywanych w słowniku, ponieważ ten składnik istniejących może już istnieć ustawiono w niej właściwości.</span><span class="sxs-lookup"><span data-stu-id="9e48d-172">You may use the `defaultValues` dictionary to apply recommended defaults to properties; however, you should not modify component properties aside from those stored in the dictionary, because this existing component may already have properties set on it.</span></span>  
  
 <span data-ttu-id="9e48d-173">Domyślna implementacja tej metody nie działają.</span><span class="sxs-lookup"><span data-stu-id="9e48d-173">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewComponent : System.Collections.IDictionary -&gt; unit&#xA;override this.InitializeNewComponent : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.InitializeNewComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="9e48d-174">Słownik nazw i wartości wartości domyślne, aby zastosować do właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-174">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="9e48d-175">Może być <see langword="null" /> , jeśli nie określono żadnych wartości domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-175">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-176">Inicjuje nowo utworzony składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-176">Initializes a newly created component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-177"><xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> Metoda jest wywoływana, gdy składnik najpierw zainicjowano, zwykle po najpierw dodawane do powierzchni projektu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-177">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> method is called when a component is first initialized, typically after being first added to a design surface.</span></span>  
  
 <span data-ttu-id="9e48d-178">Może wykonywać wszystkie niezbędne inicjowania ten składnik i można zignorować `defaultValues` słownika całkowicie.</span><span class="sxs-lookup"><span data-stu-id="9e48d-178">You may perform any necessary initialization of this component, and you may ignore the `defaultValues` dictionary altogether.</span></span>  
  
 <span data-ttu-id="9e48d-179">Domyślna implementacja tej metody nie działają.</span><span class="sxs-lookup"><span data-stu-id="9e48d-179">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public virtual void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNonDefault ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNonDefault();" />
      <MemberSignature Language="F#" Value="abstract member InitializeNonDefault : unit -&gt; unit&#xA;override this.InitializeNonDefault : unit -&gt; unit" Usage="componentDesigner.InitializeNonDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeExistingComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-180">Inicjuje ustawienia importowanych składnika, który jest już zainicjowany ustawienia innych niż domyślne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-180">Initializes the settings for an imported component that is already initialized to settings other than the defaults.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-181">Ta metoda jest wywoływana, gdy projektant jest skojarzony z formantem, który nie jest w stanie domyślnym, takich jak formant, który możesz wkleić lub Przenieś operacji przeciągania i upuszczania, do projektanta.</span><span class="sxs-lookup"><span data-stu-id="9e48d-181">This method is called when the designer is associated with a control that is not in its default state, such as a control that you paste or move with a drag-and-drop operation onto the designer.</span></span> <span data-ttu-id="9e48d-182">Ta metoda zapewnia możliwość implementacji, zmodyfikować lub właściwości składnika w tle, a nie inicjuje właściwości składnika do wartości domyślnych.</span><span class="sxs-lookup"><span data-stu-id="9e48d-182">This method provides an opportunity for implementers to modify or shadow the properties of the component rather than initialize the properties for the component to their defaults.</span></span> <span data-ttu-id="9e48d-183">Ta metoda jest wywoływana po wykonaniu innych funkcji inicjowania.</span><span class="sxs-lookup"><span data-stu-id="9e48d-183">This method is called after the other initialization functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetInheritanceAttribute">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute (System.ComponentModel.Design.ComponentDesigner toInvoke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute(class System.ComponentModel.Design.ComponentDesigner toInvoke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InvokeGetInheritanceAttribute (toInvoke As ComponentDesigner) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::InheritanceAttribute ^ InvokeGetInheritanceAttribute(System::ComponentModel::Design::ComponentDesigner ^ toInvoke);" />
      <MemberSignature Language="F#" Value="member this.InvokeGetInheritanceAttribute : System.ComponentModel.Design.ComponentDesigner -&gt; System.ComponentModel.InheritanceAttribute" Usage="componentDesigner.InvokeGetInheritanceAttribute toInvoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.ComponentModel.Design.ComponentDesigner" />
      </Parameters>
      <Docs>
        <param name="toInvoke">
          <span data-ttu-id="9e48d-184">
            <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> Których atrybut dziedziczenia do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-184">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> whose inheritance attribute to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-185">Pobiera <see cref="T:System.ComponentModel.InheritanceAttribute" /> określonego <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-185">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e48d-186">
            <see cref="T:System.ComponentModel.InheritanceAttribute" /> Określonego projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-186">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified designer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public virtual void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSetComponentDefaults();" />
      <MemberSignature Language="F#" Value="abstract member OnSetComponentDefaults : unit -&gt; unit&#xA;override this.OnSetComponentDefaults : unit -&gt; unit" Usage="componentDesigner.OnSetComponentDefaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-187">Ustawia właściwości domyślnej dla składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-187">Sets the default properties for the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-188"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> jest wywoływane, gdy projektant jest zainicjowany.</span><span class="sxs-lookup"><span data-stu-id="9e48d-188"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> is called when the designer is initialized.</span></span> <span data-ttu-id="9e48d-189">Dzięki temu projektanta, aby podać wartości domyślne dla składnika podstawowej.</span><span class="sxs-lookup"><span data-stu-id="9e48d-189">This allows the designer to provide default values for the base component.</span></span>  
  
 <span data-ttu-id="9e48d-190">Ta metoda jest wywoływana tylko raz: po utworzeniu składnika przeciągając je z przybornika na powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-190">This method is called only once: when you first create the component by dragging it from the Toolbox to the design surface.</span></span> <span data-ttu-id="9e48d-191">Kolejne Inicjowanie projektanta nie wywołuj tej metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-191">Subsequent initializations of the designer do not invoke this method.</span></span>  
  
 <span data-ttu-id="9e48d-192">Domyślna implementacja tej metody ustawia domyślnej właściwości składnika do nazwy składnika, jeśli właściwość domyślną jest ciągiem i nie ustawiono już właściwość.</span><span class="sxs-lookup"><span data-stu-id="9e48d-192">The default implementation of this method sets the default property of the component to the name of the component if the default property is a string and the property is not already set.</span></span> <span data-ttu-id="9e48d-193">Ta metoda może być wdrożonych w klasie pochodnej, aby dostosować inicjowania składnika, który jest projektowania tego projektanta.</span><span class="sxs-lookup"><span data-stu-id="9e48d-193">This method can be implemented in a derived class to customize the initialization of the component that this designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentComponent : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-194">Pobiera składnika nadrzędnego dla tego projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-194">Gets the parent component for this designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-195">Składnik nadrzędny dla tego projektanta, lub <see langword="null" /> Jeśli tego projektanta jest składnik główny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-195">The parent component for this designer, or <see langword="null" /> if this designer is the root component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-196">Ta właściwość zapewnia mechanizm ogólnego wykrywania relacji nadrzędny w projektantach i jest używany przez <xref:System.ComponentModel.Design.ComponentDesigner> obiektu <xref:System.ComponentModel.Design.ITreeDesigner> implementacja interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-196">This property provides a generic mechanism for discovering parent relationships within designers, and is used by the <xref:System.ComponentModel.Design.ComponentDesigner> object's <xref:System.ComponentModel.Design.ITreeDesigner> interface implementation.</span></span> <span data-ttu-id="9e48d-197">Ta właściwość powinna zwracać tylko `null` podczas tego projektanta jest składnik główny.</span><span class="sxs-lookup"><span data-stu-id="9e48d-197">This property should only return `null` when this designer is the root component.</span></span> <span data-ttu-id="9e48d-198">Domyślna implementacja ta właściwość zwraca składnik główny dla wszystkich składników, które nie są składnik główny i zwraca `null` dla składnika głównego.</span><span class="sxs-lookup"><span data-stu-id="9e48d-198">The default implementation of this property returns the root component for all components that are not the root component, and it returns `null` for the root component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="9e48d-199">Atrybuty klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-199">The attributes for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-200">Zezwala na zmianę lub usunięcie elementów z zestawu atrybutów, które udostępnia ona za pomocą projektanta <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-200">Allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-201">Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku atrybutów, które są dostępne za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-201">This method provides a way to change or remove the items within the dictionary of attributes that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="9e48d-202">Klucze w słowniku atrybutów są identyfikatory typów atrybutów, określony przez wartość ich <xref:System.Attribute.TypeId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="9e48d-202">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="9e48d-203">Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-203">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="9e48d-204">Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-204">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e48d-205">
            <para>Słownik, który jest dostępny za pośrednictwem bezpośrednio można filtrować <paramref name="attributes" /> parametr, lub można pozostawić bez zmian. Jeśli przesłonić tę metodę, wywoływać implementację podstawową po wykonaniu własne filtrowania. Ponadto nie należy usunąć elementy <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> metody. Zamiast tego zmiany atrybutów, aby ukryć elementy. Można również usunąć elementy <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-205">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="9e48d-206">Zdarzenia dla klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-206">The events for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-207">Zezwala na zmianę lub usunięcie elementów z zestawu zdarzeń, które udostępnia ona za pomocą projektanta <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-207">Allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-208">Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku zdarzeń, które są dostępne za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-208">This method provides a way to change or remove the items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="9e48d-209">Klucze w słowniku zdarzenia są nazwy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9e48d-209">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="9e48d-210">Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-210">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="9e48d-211">Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-211">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e48d-212">
            <para>Słownik, który jest dostępny za pośrednictwem bezpośrednio można filtrować <paramref name="events" /> parametr, lub można pozostawić bez zmian. Jeśli przesłonić tę metodę, wywoływać implementację podstawową po wykonaniu własne filtrowania. Ponadto nie należy usunąć elementy <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> metody. Zamiast tego zmiany atrybutów, aby ukryć elementy. Można również usunąć elementy <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-212">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="9e48d-213">Właściwości dla klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-213">The properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-214">Zezwala na zmianę lub usunięcie elementów z zbiór właściwości, które udostępnia ona za pomocą projektanta <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-214">Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-215">Ta metoda umożliwia zmienianie lub usuwanie elementów w słowniku właściwości, które są dostępne za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-215">This method provides a way to change or remove the items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="9e48d-216">Klucze ze słownika właściwości są nazwami właściwości.</span><span class="sxs-lookup"><span data-stu-id="9e48d-216">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="9e48d-217">Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-217">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="9e48d-218">Ta metoda jest wywoływana bezpośrednio po <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-218">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e48d-219">
            <para>Słownik, który jest dostępny za pośrednictwem bezpośrednio można filtrować <paramref name="properties" /> parametr, lub można pozostawić bez zmian. Jeśli przesłonić tę metodę, wywoływać implementację podstawową po wykonaniu własne filtrowania. Ponadto nie należy usunąć elementy <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> metody. Zamiast tego zmiany atrybutów, aby ukryć elementy. Można również usunąć elementy <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-219">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="9e48d-220">Atrybuty klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-220">The attributes for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-221">Umożliwia projektanta dodać do zestawu atrybutów, które udostępnia ona za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-221">Allows a designer to add to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-222">Ta metoda umożliwia dodawanie elementów do słownika atrybutów, które udostępnia projektanta za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-222">This method provides a way to add items to the dictionary of attributes that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="9e48d-223">Klucze w słowniku atrybutów są identyfikatory typów atrybutów, określony przez wartość ich <xref:System.Attribute.TypeId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="9e48d-223">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="9e48d-224">Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-224">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="9e48d-225">Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-225">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e48d-226">
            <para>Można bezpośrednio modyfikować słownik, który jest dostępny za pośrednictwem <paramref name="attributes" /> parametr, lub można pozostawić bez zmian. Jeśli przesłonić tę metodę, wywoływać implementację podstawową, przed wykonaniem własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-226">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="9e48d-227">Zdarzenia dla klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-227">The events for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-228">Umożliwia projektanta dodać do zbioru zdarzeń, które udostępnia ona za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-228">Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-229">Ta metoda umożliwia dodawanie elementów do słownika zdarzenia, które udostępnia projektanta za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-229">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="9e48d-230">Klucze w słowniku zdarzenia są nazwy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="9e48d-230">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="9e48d-231">Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-231">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="9e48d-232">Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-232">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e48d-233">
            <para>Można bezpośrednio modyfikować słownik, który jest dostępny za pośrednictwem <paramref name="events" /> parametr, lub można pozostawić bez zmian. Jeśli przesłonić tę metodę, wywoływać implementację podstawową, przed wykonaniem własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-233">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="9e48d-234">Właściwości dla klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-234">The properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-235">Umożliwia projektanta dodać do zbioru właściwości, które udostępnia ona za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-235">Allows a designer to add to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-236">Ta metoda umożliwia dodawanie elementów do słownika właściwości, które udostępnia projektanta za pośrednictwem <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-236">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="9e48d-237">Klucze ze słownika właściwości są nazwami właściwości.</span><span class="sxs-lookup"><span data-stu-id="9e48d-237">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="9e48d-238">Obiekty są typu <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-238">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="9e48d-239">Ta metoda jest wywoływana bezpośrednio przed <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9e48d-239">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e48d-240">
            <para>Można bezpośrednio modyfikować słownik, który jest dostępny za pośrednictwem <paramref name="properties" /> parametr, lub można pozostawić bez zmian. Jeśli przesłonić tę metodę, wywoływać implementację podstawową, przed wykonaniem własne filtrowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-240">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanged">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanged (System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanged(class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanged (member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanged(System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.RaiseComponentChanged : System.ComponentModel.MemberDescriptor * obj * obj -&gt; unit" Usage="componentDesigner.RaiseComponentChanged (member, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="9e48d-241">A <see cref="T:System.ComponentModel.MemberDescriptor" /> wskazuje, że element członkowski, który został zmieniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-241">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that has been changed.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="9e48d-242">Stara wartość elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-242">The old value of the member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="9e48d-243">Nowa wartość elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-243">The new value of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-244">Powiadamia <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> zmieniający tego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-244">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-245">Tę metodę należy wywołać tylko wtedy, gdy bezpośrednio wpływa na właściwości składnika, a nie za pomocą metody dostępu, dostarczone przez <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-245">Call this method only when you affect component properties directly and not through the accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanging">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanging (System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanging(class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanging (member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanging(System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="member this.RaiseComponentChanging : System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentDesigner.RaiseComponentChanging member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="9e48d-246">A <see cref="T:System.ComponentModel.MemberDescriptor" /> wskazuje, że element członkowski, który ma zostać zmieniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-246">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that is about to be changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-247">Powiadamia <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> się ten składnik zostanie zmieniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-247">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component is about to be changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-248">Tę metodę należy wywołać tylko wtedy, gdy mają wpływ na składnik właściwości bezpośrednio, a nie za pomocą metody dostępu udostępniane przez <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9e48d-248">Call this method only when you affect component properties directly and not through accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShadowProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection ShadowProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ComponentDesigner/ShadowPropertyCollection ShadowProperties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ShadowProperties As ComponentDesigner.ShadowPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ ShadowProperties { System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ShadowProperties : System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" Usage="System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-249">Pobiera kolekcję wartości właściwości, które zastąpią ustawienia użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-249">Gets a collection of property values that override user settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-250">A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> wskazujące tle właściwości dokumentu projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-250">A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> that indicates the shadow properties of the design document.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="9e48d-251">
            <see cref="T:System.Attribute" /> Obiektów w klasie składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-251">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="9e48d-252">Klucze w słowniku atrybutów są <see cref="P:System.Attribute.TypeId" /> wartości atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-252">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-253">Opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-253">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-254">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="9e48d-254">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e48d-255">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.ComponentDesigner> wystąpienia jest rzutowane na <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-255">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="9e48d-256">
            <see cref="T:System.ComponentModel.EventDescriptor" /> Obiektów, które reprezentują zdarzenia klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-256">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="9e48d-257">Klucze w słowniku zdarzenia są nazw zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-257">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-258">Opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-258">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-259">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="9e48d-259">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e48d-260">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.ComponentDesigner> wystąpienia jest rzutowane na <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-260">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="9e48d-261">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> Obiektów, które reprezentują właściwości klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-261">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="9e48d-262">Klucze w słowniku właściwości są nazwy właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-262">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-263">Opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-263">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-264">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="9e48d-264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e48d-265">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.ComponentDesigner> wystąpienia jest rzutowane na <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-265">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="9e48d-266">
            <see cref="T:System.Attribute" /> Obiektów w klasie składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-266">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="9e48d-267">Klucze w słowniku atrybutów są <see cref="P:System.Attribute.TypeId" /> wartości atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-267">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-268">Opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-268">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-269">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="9e48d-269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e48d-270">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.ComponentDesigner> wystąpienia jest rzutowane na <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-270">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="9e48d-271">
            <see cref="T:System.ComponentModel.EventDescriptor" /> Obiektów, które reprezentują zdarzenia klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-271">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="9e48d-272">Klucze w słowniku zdarzenia są nazw zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-272">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-273">Opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-273">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-274">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="9e48d-274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e48d-275">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.ComponentDesigner> wystąpienia jest rzutowane na <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-275">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="9e48d-276">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> Obiektów, które reprezentują właściwości klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-276">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="9e48d-277">Klucze w słowniku właściwości są nazwy właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-277">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e48d-278">Opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-278">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-279">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="9e48d-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e48d-280">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.ComponentDesigner> wystąpienia jest rzutowane na <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-280">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Children">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Children As ICollection Implements ITreeDesigner.Children" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.ComponentModel.Design.ITreeDesigner.Children { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.ComponentDesigner.System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-281">Opis tego elementu członkowskiego, zobacz <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-281">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-282">
            <see cref="T:System.Collections.ICollection" /> Zawierający kolekcję <see cref="T:System.ComponentModel.Design.IDesigner" /> projektantów zawarte w Projektancie nadrzędnego bieżącego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-282">An <see cref="T:System.Collections.ICollection" /> that contains the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contained in the current parent designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-283">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="9e48d-283">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e48d-284">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.ComponentDesigner> wystąpienia jest rzutowane na <xref:System.ComponentModel.Design.ITreeDesigner> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-284">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Parent">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parent As IDesigner Implements ITreeDesigner.Parent" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::IDesigner ^ System.ComponentModel.Design.ITreeDesigner.Parent { System::ComponentModel::Design::IDesigner ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.ComponentDesigner.System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-285">Opis tego elementu członkowskiego, zobacz <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-285">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-286">
            <see cref="T:System.ComponentModel.Design.IDesigner" /> Reprezentujący projektanta nadrzędnej lub <see langword="null" /> Jeśli brak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-286">An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or <see langword="null" /> if there is no parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-287">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="9e48d-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e48d-288">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.ComponentDesigner> wystąpienia jest rzutowane na <xref:System.ComponentModel.Design.ITreeDesigner> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="9e48d-288">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e48d-289">Pobiera zleceń czasu projektowania obsługiwaną przez składnik, który jest skojarzony z projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-289">Gets the design-time verbs supported by the component that is associated with the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e48d-290">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> z <see cref="T:System.ComponentModel.Design.DesignerVerb" /> obiektów, lub <see langword="null" /> jeśli są dostępne żadne projektanta zlecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-290">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects, or <see langword="null" /> if no designer verbs are available.</span>
          </span>
          <span data-ttu-id="9e48d-291">Ta domyślna implementacja zawsze zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e48d-291">This default implementation always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e48d-292">Ta metoda zwraca `null` Jeśli składnik nie ma żadnych zleceń czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="9e48d-292">This method returns `null` if the component has no design-time verbs.</span></span>  
  
 <span data-ttu-id="9e48d-293">Środowisko czasu projektowania są zwykle wyświetlane zlecenia zwrócona przez tę metodę w menu skrótów.</span><span class="sxs-lookup"><span data-stu-id="9e48d-293">The design-time environment typically displays verbs returned by this method in a shortcut (right-click) menu.</span></span> <span data-ttu-id="9e48d-294">Gdy użytkownik wybierze jeden z zleceń, <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> metody odpowiadającego <xref:System.ComponentModel.Design.DesignerVerb> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="9e48d-294">When a user selects one of the verbs, the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e48d-295">Środowisko czasu projektowania zwykle zapewnia **właściwości** polecenia menu skrótów składnika.</span><span class="sxs-lookup"><span data-stu-id="9e48d-295">A design-time environment typically provides a **Properties** command on a component's shortcut menu.</span></span> <span data-ttu-id="9e48d-296">W związku z tym nie ma takiego wpisu w kolekcji zleceń określonych przez projektanta.</span><span class="sxs-lookup"><span data-stu-id="9e48d-296">Therefore, do not include such an entry in the collection of designer-specified verbs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
  </Members>
</Type>