<Type Name="ContractArgumentValidatorAttribute" FullName="System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
  <TypeSignature Language="C#" Value="public sealed class ContractArgumentValidatorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContractArgumentValidatorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContractArgumentValidatorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractArgumentValidatorAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Contracts</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.Conditional("CONTRACTS_FULL")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1551f-101">Włącza factoring starszych <see langword="if-then-throw" /> kodu do oddzielnych metod do ponownego użycia i zapewnia pełną kontrolę nad zgłoszenia wyjątku i argumenty.</span><span class="sxs-lookup"><span data-stu-id="1551f-101">Enables the factoring of legacy <see langword="if-then-throw" /> code into separate methods for reuse, and provides full control over thrown exceptions and arguments.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1551f-102">Jeśli używa jawnego Twój kod `if-then-throw` kod, aby sprawdzić poprawność parametrów, użytkownik może być wykorzystujących metody pomocnicze, które sprawdzania instalacji i zgłaszanie wyjątków określonego w przypadku awarii, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="1551f-102">If your code uses explicit `if-then-throw` code to validate parameters, you may be employing helper methods that perform checks and throw particular exceptions on failure, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/cs/ifthenthrow1.cs#1)]
 [!code-vb[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/vb/ifthenthrow1.vb#1)]  
  
 <span data-ttu-id="1551f-103">W tym przykładzie `Execute` ma selektywnego warunek wstępny określenie, że wartość parametru nie może być `null`.</span><span class="sxs-lookup"><span data-stu-id="1551f-103">In this example, `Execute` has an elective precondition specifying that the parameter value should not be `null`.</span></span> <span data-ttu-id="1551f-104">Aby włączyć narzędzia kontraktu uznają, że wywołanie `ValidationHelper.NotNull` reprezentuje kontraktu, można oznaczyć wywołaną metodę z <xref:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="1551f-104">To enable the contract tools to recognize that the call to `ValidationHelper.NotNull` represents a contract, you can mark the called method with the  <xref:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute> attribute.</span></span> <span data-ttu-id="1551f-105"><xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType> Wywołania metody, które mają być używane do włączenia narzędzia wyodrębnić wymagania właściwe dla Generowanie dokumentów i sprawdzanie statycznych w następujący sposób.</span><span class="sxs-lookup"><span data-stu-id="1551f-105">The <xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType> method call should be used to enable the tools to extract the proper specifications for document generation and static checking, as follows.</span></span>  
  
 [!code-csharp[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/cs/ifthenthrow2.cs#2)]
 [!code-vb[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/vb/ifthenthrow2.vb#2)]  
  
 <span data-ttu-id="1551f-106">Oprócz `if-then-throw` instrukcje, kontrakt części kontraktu modułu sprawdzania poprawności metody może zawierać wywołania do innych metod modułu sprawdzania poprawności kontraktu.</span><span class="sxs-lookup"><span data-stu-id="1551f-106">In addition to `if-then-throw` statements, the contract section of contract validator methods may contain calls to other contract validator methods.</span></span> <span data-ttu-id="1551f-107">Jednak nie ma innych umów (takich jak <xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType>, lub <xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType>) są dozwolone.</span><span class="sxs-lookup"><span data-stu-id="1551f-107">However, no other contracts (such as <xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType>, or <xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType>) are allowed.</span></span> <span data-ttu-id="1551f-108">Kod, który następuje <xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType> wywołanie jest ignorowana przez wszystkie narzędzia kontraktu.</span><span class="sxs-lookup"><span data-stu-id="1551f-108">Code that follows the <xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType> call is ignored by all contract tools.</span></span>  
  
 <span data-ttu-id="1551f-109">W poniższym przykładzie przedstawiono moduł weryfikacji zakresu argument zapisany pod względem istniejące `NotNull` metody modułu sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="1551f-109">The following example shows a range argument validator written in terms of an existing `NotNull` validator method.</span></span>  
  
 [!code-csharp[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/cs/ifthenthrow3.cs#3)]
 [!code-vb[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/vb/ifthenthrow3.vb#3)]  
  
 <span data-ttu-id="1551f-110">Z punktu widzenia specyfikacji `Execute` metoda ma następujące trzy kontraktów:</span><span class="sxs-lookup"><span data-stu-id="1551f-110">From a specification point of view, the `Execute` method has the following three contracts:</span></span>  
  
```  
Contract.Requires<ArgumentNullException>(data != null);  
Contract.Requires<ArgumentOutOfRangeException>(position >= 0);  
Contract.Requires<ArgumentOutOfRangeException>(position < data.Length);  
  
```  
  
 <span data-ttu-id="1551f-111">W standardowych metod wywołania do kontraktu modułu sprawdzania poprawności metody mogą być za darmo wymieszane z innych umów takich jak <xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType> lub <xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1551f-111">In standard methods, calls to contract validator methods can be freely mixed with other contracts such as <xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractArgumentValidatorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractArgumentValidatorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Contracts</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1551f-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="1551f-112">Initializes a new instance of the <see cref="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>