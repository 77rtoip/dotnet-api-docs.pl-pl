<Type Name="BitArray" FullName="System.Collections.BitArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="056363895a01ed4f3d85a3d6c19a8aa8cb07f553" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440607" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BitArray : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit BitArray extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.BitArray" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitArray&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitArray sealed : ICloneable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c0375-101">Zarządza tablicę kompaktową wartości bitowe, które są reprezentowane jako wartości logiczne, którym <see langword="true" /> oznacza, że bit na (1) i <see langword="false" /> wskazuje bit jest wyłączone (0).</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0375-101">Manages a compact array of bit values, which are represented as Booleans, where <see langword="true" /> indicates that the bit is on (1) and <see langword="false" /> indicates the bit is off (0).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-102"><xref:System.Collections.BitArray> Klasa jest klasą kolekcji, w którym jest zawsze taka sama jak liczba.</span><span class="sxs-lookup"><span data-stu-id="c0375-102">The <xref:System.Collections.BitArray> class is a collection class in which the capacity is always the same as the count.</span></span> <span data-ttu-id="c0375-103">Elementy są dodawane do <xref:System.Collections.BitArray> zwiększając <xref:System.Collections.BitArray.Length%2A> właściwości; elementy zostaną usunięte przez zmniejszenie <xref:System.Collections.BitArray.Length%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c0375-103">Elements are added to a <xref:System.Collections.BitArray> by increasing the <xref:System.Collections.BitArray.Length%2A> property; elements are deleted by decreasing the <xref:System.Collections.BitArray.Length%2A> property.</span></span> <span data-ttu-id="c0375-104">Rozmiar <xref:System.Collections.BitArray> jest kontrolowane przez klienta, a indeksowania poza koniec <xref:System.Collections.BitArray> zgłasza <xref:System.ArgumentException>. <xref:System.Collections.BitArray> Klasa dostarcza metody, które nie znajdują się w innych kolekcji, łącznie z tymi, które umożliwiają wielu elementów można zmodyfikować jednocześnie przy użyciu filtru, takich jak <xref:System.Collections.BitArray.And%2A>, <xref:System.Collections.BitArray.Or%2A>, <xref:System.Collections.BitArray.Xor%2A> , <xref:System.Collections.BitArray.Not%2A>i <xref:System.Collections.BitArray.SetAll%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-104">The size of a <xref:System.Collections.BitArray> is controlled by the client; indexing past the end of the <xref:System.Collections.BitArray> throws an <xref:System.ArgumentException>.The <xref:System.Collections.BitArray> class provides methods that are not found in other collections, including those that allow multiple elements to be modified at once using a filter, such as <xref:System.Collections.BitArray.And%2A>, <xref:System.Collections.BitArray.Or%2A>, <xref:System.Collections.BitArray.Xor%2A> , <xref:System.Collections.BitArray.Not%2A>, and <xref:System.Collections.BitArray.SetAll%2A>.</span></span>  
  
 <span data-ttu-id="c0375-105"><xref:System.Collections.Specialized.BitVector32> Klasy jest strukturą, która zapewnia te same funkcje co <xref:System.Collections.BitArray>, ale z większą wydajność.</span><span class="sxs-lookup"><span data-stu-id="c0375-105">The <xref:System.Collections.Specialized.BitVector32> class is a structure that provides the same functionality as <xref:System.Collections.BitArray>, but with faster performance.</span></span> <span data-ttu-id="c0375-106"><xref:System.Collections.Specialized.BitVector32> trwa krócej, ponieważ jest to typ wartości i dlatego przydzielony na stosie, podczas gdy <xref:System.Collections.BitArray> jest typem referencyjnym i w związku z tym przydzielony na stosie.</span><span class="sxs-lookup"><span data-stu-id="c0375-106"><xref:System.Collections.Specialized.BitVector32> is faster because it is a value type and therefore allocated on the stack, whereas <xref:System.Collections.BitArray> is a reference type and, therefore, allocated on the heap.</span></span>  
  
 <span data-ttu-id="c0375-107"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> można przechowywać dokładnie 32-bitowy, podczas gdy <xref:System.Collections.BitArray> może przechowywać zmienną liczbę bitów.</span><span class="sxs-lookup"><span data-stu-id="c0375-107"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> can store exactly 32 bits, whereas <xref:System.Collections.BitArray> can store a variable number of bits.</span></span> <span data-ttu-id="c0375-108"><xref:System.Collections.Specialized.BitVector32> przechowuje zarówno flagi bitów i małej liczby całkowite, umożliwiając nadaje się doskonale dla danych, która nie jest widoczna dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c0375-108"><xref:System.Collections.Specialized.BitVector32> stores both bit flags and small integers, thereby making it ideal for data that is not exposed to the user.</span></span> <span data-ttu-id="c0375-109">Jeśli liczba flagi bitów wymagane jest nieznany, to zmienna lub jest większa niż 32, jednak użyć <xref:System.Collections.BitArray> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c0375-109">However, if the number of required bit flags is unknown, is variable, or is greater than 32, use <xref:System.Collections.BitArray> instead.</span></span>  
  
 <span data-ttu-id="c0375-110"><xref:System.Collections.BitArray> Trwa <xref:System.Collections> przestrzeni nazw; <xref:System.Collections.Specialized.BitVector32> w <xref:System.Collections.Specialized> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="c0375-110"><xref:System.Collections.BitArray> is in the <xref:System.Collections> namespace; <xref:System.Collections.Specialized.BitVector32> is in the <xref:System.Collections.Specialized> namespace.</span></span>  
  
 <span data-ttu-id="c0375-111">Elementy w tej kolekcji jest możliwy przy użyciu indeksu liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="c0375-111">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="c0375-112">Indeksy w tej kolekcji jest liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="c0375-112">Indexes in this collection are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-113">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania <xref:System.Collections.BitArray> i jak wydrukować jej wartości.</span><span class="sxs-lookup"><span data-stu-id="c0375-113">The following code example shows how to create and initialize a <xref:System.Collections.BitArray> and how to print out its values.</span></span>  
  
 [!code-cpp[Classic BitArray Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="c0375-114">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0375-114">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="c0375-115">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0375-115">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="c0375-116">Ta implementacja nie zapewnia zsynchronizowany otoki (wielowątkowość) dla <see cref="T:System.Collections.BitArray" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0375-116">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.BitArray" />.</span>
      </span>
      <span data-ttu-id="c0375-117">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0375-117">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="c0375-118">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0375-118">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="c0375-119">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0375-119">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Specialized.BitVector32" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0375-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.BitArray" /> klasy którego pojemności i można określić wartości początkowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-120">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class whose capacity and initial values can be specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (bool[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Boolean[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Boolean())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;bool&gt; ^ values);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="c0375-121">Tablica wartości logiczne do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-121">An array of Booleans to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.BitArray" /> klasę, która zawiera wartości bitowe skopiowane z określonej tablicy wartości logiczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-122">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of Booleans.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-123">Ten konstruktor jest O (`n`) operację, której `n` jest liczba elementów w `values`.</span><span class="sxs-lookup"><span data-stu-id="c0375-123">This constructor is an O(`n`) operation, where `n` is the number of elements in `values`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0375-124">
            <paramref name="values" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-124">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="c0375-125">Tablica bajtów zawierająca wartości do skopiowania, gdzie każdy bajt reprezentuje osiem kolejnych bitów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-125">An array of bytes containing the values to copy, where each byte represents eight consecutive bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.BitArray" /> klasę, która zawiera wartości bitowe skopiowane z określonej tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-126">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-127">Pierwszy bajt w tablicy reprezentuje bitów od 0 do 7, drugi bajt reprezentuje bity 8 do 15 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="c0375-127">The first byte in the array represents bits 0 through 7, the second byte represents bits 8 through 15, and so on.</span></span> <span data-ttu-id="c0375-128">Co najmniej znaczący Bit każdego bajtu reprezentuje najniższą wartość indeksu: " `bytes` [0] & 1" reprezentuje bitowej 0, " `bytes` [0] & 2" bit 1, reprezentuje " `bytes` [0] & 4" reprezentuje bit 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="c0375-128">The Least Significant Bit of each byte represents the lowest index value: " `bytes` [0] & 1" represents bit 0, " `bytes` [0] & 2" represents bit 1, " `bytes` [0] & 4" represents bit 2, and so on.</span></span>  
  
 <span data-ttu-id="c0375-129">Ten konstruktor jest O (`n`) operację, której `n` jest liczba elementów w `bytes`.</span><span class="sxs-lookup"><span data-stu-id="c0375-129">This constructor is an O(`n`) operation, where `n` is the number of elements in `bytes`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0375-130">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-130">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0375-131">Długość <paramref name="bytes" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-131">The length of <paramref name="bytes" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (System.Collections.BitArray bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.BitArray bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As BitArray)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(System::Collections::BitArray ^ bits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="bits">
          <span data-ttu-id="c0375-132">
            <see cref="T:System.Collections.BitArray" /> Do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-132">The <see cref="T:System.Collections.BitArray" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.BitArray" /> klasę, która zawiera wartości bitowe skopiowanych z określonego <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-133">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-134">Ten konstruktor jest O (`n`) operację, której `n` jest liczba elementów w `bits`.</span><span class="sxs-lookup"><span data-stu-id="c0375-134">This constructor is an O(`n`) operation, where `n` is the number of elements in `bits`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0375-135">
            <paramref name="bits" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-135">
              <paramref name="bits" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(int length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="c0375-136">Liczba wartości bitowe w nowym <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-136">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.BitArray" /> klasy, która może zawierać określoną liczbę wartości bitowe, które jest początkowo ustawiona <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-137">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-138">Ten konstruktor jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="c0375-138">This constructor is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0375-139">
            <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-139">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;int&gt; ^ values);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="c0375-140">Tablica liczb całkowitych zawierająca wartości do kopiowania, gdzie każdy liczby całkowitej reprezentuje 32-bitowy kolejne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-140">An array of integers containing the values to copy, where each integer represents 32 consecutive bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-141">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.BitArray" /> klasę, która zawiera wartości bitowe skopiowane z określonej tablicy 32-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-141">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-142">Numer w pierwszym `values` element tablicy reprezentuje bitów od 0 do 31, druga liczba w tablicy reprezentuje 32 63 za pomocą usługi bits i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="c0375-142">The number in the first `values` array element represents bits 0 through 31, the second number in the array represents bits 32 through 63, and so on.</span></span> <span data-ttu-id="c0375-143">Co najmniej znaczący Bit każdej liczby całkowitej reprezentuje najniższą wartość indeksu: " `values` [0] & 1" reprezentuje bitowej 0, " `values` [0] & 2" bit 1, reprezentuje " `values` [0] & 4" reprezentuje bit 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="c0375-143">The Least Significant Bit of each integer represents the lowest index value: " `values` [0] & 1" represents bit 0, " `values` [0] & 2" represents bit 1, " `values` [0] & 4" represents bit 2, and so on.</span></span>  
  
 <span data-ttu-id="c0375-144">Ten konstruktor jest O (`n`) operację, której `n` jest liczba elementów w `values`.</span><span class="sxs-lookup"><span data-stu-id="c0375-144">This constructor is an O(`n`) operation, where `n` is the number of elements in `values`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0375-145">
            <paramref name="values" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-145">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0375-146">Długość <paramref name="values" /> jest większa niż <see cref="F:System.Int32.MaxValue" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-146">The length of <paramref name="values" /> is greater than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int length, bool defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length, bool defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer, defaultValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(int length, bool defaultValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="defaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="c0375-147">Liczba wartości bitowe w nowym <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-147">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="c0375-148">Wartość logiczna, które można przypisać do każdego z bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-148">The Boolean value to assign to each bit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-149">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.BitArray" /> klasy, która może zawierać określoną liczbę wartości bitowe, które wstępnie są ustawione na określoną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-149">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-150">Ten konstruktor jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="c0375-150">This constructor is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0375-151">
            <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-151">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray And (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray And(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.And(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function And (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ And(System::Collections::BitArray ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0375-152">Tablica do przeprowadzenia operacji i.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-152">The array with which to perform the bitwise AND operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-153">Wykonuje operacji i między elementami bieżącego <see cref="T:System.Collections.BitArray" /> obiekt i odpowiednie elementy w określonej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-153">Performs the bitwise AND operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="c0375-154">Bieżący <see cref="T:System.Collections.BitArray" /> obiektu zostaną zmodyfikowane, aby przechowywać wynik operacji i.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-154">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise AND operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0375-155">Tablica zawierająca wynik operacji i, która zawiera odwołanie do bieżącego <see cref="T:System.Collections.BitArray" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-155">An array containing the result of the bitwise AND operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-156">Zwraca operacji i `true` Jeśli obydwa argumenty operacji są `true`i zwraca `false` Jeśli jeden lub oba argumenty operacji są `false`.</span><span class="sxs-lookup"><span data-stu-id="c0375-156">The bitwise AND operation returns `true` if both operands are `true`, and returns `false` if one or both operands are `false`.</span></span>  
  
 <span data-ttu-id="c0375-157">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-157">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-158">Poniższy przykład kodu pokazuje sposób wykonywania operacji i między dwiema <xref:System.Collections.BitArray> obiektów.</span><span class="sxs-lookup"><span data-stu-id="c0375-158">The following code example shows how to perform the bitwise AND operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.And Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.And Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.And Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.And Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.And Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.And Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0375-159">
            <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-159">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0375-160">
            <paramref name="value" /> i obecnie <see cref="T:System.Collections.BitArray" /> nie mają taką samą liczbę elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-160">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0375-161">Tworzy kopię pobieżną <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-161">Creates a shallow copy of the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0375-162">Kopia pobieżna <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-162">A shallow copy of the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-163">Kopię pobieżną kolekcji kopiuje elementy kolekcji, czy znajdują się odwołania typy lub wartości, ale nie kopiuje obiektów, które dotyczą odwołania.</span><span class="sxs-lookup"><span data-stu-id="c0375-163">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="c0375-164">Odwołania do nowej kolekcji wskazują te same obiekty, które wskazują odwołania w oryginalnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c0375-164">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="c0375-165">Z kolei głęboką kopię kolekcji kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="c0375-165">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="c0375-166">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-166">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c0375-167">Jednowymiarowa <see cref="T:System.Array" /> który jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-167">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.BitArray" />.</span>
          </span>
          <span data-ttu-id="c0375-168">
            <see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-168">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c0375-169">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-169">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-170">Kopiuje całą <see cref="T:System.Collections.BitArray" /> do jednowymiarowego zgodnego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-170">Copies the entire <see cref="T:System.Collections.BitArray" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-171">Określona tablica musi być zgodne z typem.</span><span class="sxs-lookup"><span data-stu-id="c0375-171">The specified array must be of a compatible type.</span></span> <span data-ttu-id="c0375-172">Tylko `bool`, `int`, i `byte` typy tablic są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="c0375-172">Only `bool`, `int`, and `byte` types of arrays are supported.</span></span>  
  
 <span data-ttu-id="c0375-173">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> można skopiować elementów.</span><span class="sxs-lookup"><span data-stu-id="c0375-173">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="c0375-174">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-174">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-175">Poniższy przykład kodu pokazuje sposób kopiowania <xref:System.Collections.BitArray> do jednowymiarowego <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="c0375-175">The following code example shows how to copy a <xref:System.Collections.BitArray> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic BitArray.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0375-176">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-176">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0375-177">
            <paramref name="index" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-177">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0375-178">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-178">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="c0375-179">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-179">-or-</span>
          </span>
          <span data-ttu-id="c0375-180">Liczba elementów w źródle <see cref="T:System.Collections.BitArray" /> jest większa niż dostępne miejsce od <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-180">The number of elements in the source <see cref="T:System.Collections.BitArray" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c0375-181">Typ źródła <see cref="T:System.Collections.BitArray" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-181">The type of the source <see cref="T:System.Collections.BitArray" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0375-182">Pobiera liczbę elementów zawartych w <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-182">Gets the number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0375-183">Liczba elementów zawartych w <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-183">The number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-184"><xref:System.Collections.BitArray.Length%2A> i <xref:System.Collections.BitArray.Count%2A> zwracają taką samą wartość.</span><span class="sxs-lookup"><span data-stu-id="c0375-184"><xref:System.Collections.BitArray.Length%2A> and <xref:System.Collections.BitArray.Count%2A> return the same value.</span></span> <span data-ttu-id="c0375-185"><xref:System.Collections.BitArray.Length%2A> można ustawić na określoną wartość, ale <xref:System.Collections.BitArray.Count%2A> jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c0375-185"><xref:System.Collections.BitArray.Length%2A> can be set to a specific value, but <xref:System.Collections.BitArray.Count%2A> is read-only.</span></span>  
  
 <span data-ttu-id="c0375-186">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c0375-186">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public bool Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Get(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c0375-187">Liczony od zera indeks wartości do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-187">The zero-based index of the value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-188">Pobiera wartość bitu na określonej pozycji w <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-188">Gets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0375-189">Wartość bitowa na pozycji <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-189">The value of the bit at position <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-190">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c0375-190">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-191">Poniższy przykładowy kod przedstawia sposób Ustawianie i pobieranie elementów określonych <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="c0375-191">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0375-192">
            <paramref name="index" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-192">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c0375-193">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-193">-or-</span>
          </span>
          <span data-ttu-id="c0375-194">
            <paramref name="index" /> jest większa lub równa liczbie elementów w <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-194">
              <paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0375-195">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-195">Returns an enumerator that iterates through the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0375-196">
            <see cref="T:System.Collections.IEnumerator" /> Dla całego <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-196">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-197">`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c0375-197">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="c0375-198">W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="c0375-198">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c0375-199">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="c0375-199">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c0375-200">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c0375-200">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c0375-201"><xref:System.Collections.IEnumerator.Reset%2A> również wprowadzono moduł wyliczający wróć do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="c0375-201"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="c0375-202">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="c0375-202">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c0375-203">W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-203">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c0375-204"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c0375-204"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c0375-205"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="c0375-205"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c0375-206">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="c0375-206">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c0375-207">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="c0375-207">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c0375-208">Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="c0375-208">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c0375-209">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> aby pierwszym elementem kolekcji ponownie, należy wywołać <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-209">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c0375-210">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="c0375-210">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c0375-211">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="c0375-211">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="c0375-212">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c0375-212">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c0375-213">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="c0375-213">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c0375-214">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="c0375-214">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c0375-215">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c0375-215">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0375-216">Pobiera wartość wskazującą czy <see cref="T:System.Collections.BitArray" /> jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-216">Gets a value indicating whether the <see cref="T:System.Collections.BitArray" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0375-217">Ta właściwość jest zawsze <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-217">This property is always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-218"><xref:System.Collections.BitArray> implementuje <xref:System.Collections.BitArray.IsReadOnly%2A> właściwości, ponieważ jest to wymagane przez <xref:System.Collections.IList?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c0375-218"><xref:System.Collections.BitArray> implements the <xref:System.Collections.BitArray.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="c0375-219">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="c0375-219">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="c0375-220">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="c0375-220">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="c0375-221">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c0375-221">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0375-222">Pobiera wartość wskazującą czy uzyskują dostęp do <see cref="T:System.Collections.BitArray" /> jest synchronizowane (wielowątkowość).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-222">Gets a value indicating whether access to the <see cref="T:System.Collections.BitArray" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0375-223">Ta właściwość jest zawsze <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-223">This property is always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-224"><xref:System.Collections.BitArray> implementuje <xref:System.Collections.BitArray.IsSynchronized%2A> właściwości, ponieważ jest to wymagane przez <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c0375-224"><xref:System.Collections.BitArray> implements the <xref:System.Collections.BitArray.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="c0375-225">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c0375-225">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c0375-226">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="c0375-226">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c0375-227">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="c0375-227">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-228">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.BitArray.SyncRoot%2A> podczas całej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c0375-228">The following code example shows how to lock the collection using the <xref:System.Collections.BitArray.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic BitArray Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic BitArray Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source2.cs#2)]
 [!code-vb[Classic BitArray Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="c0375-229">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c0375-229">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.BitArray.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[int] { bool get(int index); void set(int index, bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c0375-230">Liczony od zera indeks wartości do pobrania lub ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-230">The zero-based index of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-231">Pobiera lub ustawia wartość bitu na określonej pozycji w <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-231">Gets or sets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0375-232">Wartość bitowa na pozycji <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-232">The value of the bit at position <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-233">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="c0375-233">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="c0375-234">Używa języka C# do definiowania indeksatory zamiast implementacja słowa kluczowego <xref:System.Collections.BitArray.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c0375-234">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.BitArray.Item%2A> property.</span></span> <span data-ttu-id="c0375-235">Implementuje Visual Basic <xref:System.Collections.BitArray.Item%2A> jako domyślna właściwość, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="c0375-235">Visual Basic implements <xref:System.Collections.BitArray.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="c0375-236">Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest również O(1) operacji.</span><span class="sxs-lookup"><span data-stu-id="c0375-236">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0375-237">
            <paramref name="index" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-237">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c0375-238">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-238">-or-</span>
          </span>
          <span data-ttu-id="c0375-239">
            <paramref name="index" /> jest równa lub większa niż <see cref="P:System.Collections.BitArray.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-239">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.BitArray.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.BitArray.Count" />
      </Docs>
    </Member>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray LeftShift (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray LeftShift(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.LeftShift(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LeftShift (count As Integer) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ LeftShift(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0375-240">Pobiera lub ustawia liczbę elementów w <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-240">Gets or sets the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0375-241">Liczba elementów w <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-241">The number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-242"><xref:System.Collections.BitArray.Length%2A> i <xref:System.Collections.BitArray.Count%2A> zwracają taką samą wartość.</span><span class="sxs-lookup"><span data-stu-id="c0375-242"><xref:System.Collections.BitArray.Length%2A> and <xref:System.Collections.BitArray.Count%2A> return the same value.</span></span> <span data-ttu-id="c0375-243"><xref:System.Collections.BitArray.Length%2A> można ustawić na określoną wartość, ale <xref:System.Collections.BitArray.Count%2A> jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c0375-243"><xref:System.Collections.BitArray.Length%2A> can be set to a specific value, but <xref:System.Collections.BitArray.Count%2A> is read-only.</span></span>  
  
 <span data-ttu-id="c0375-244">Jeśli <xref:System.Collections.BitArray.Length%2A> ma ustawioną wartość, która jest mniejsza niż <xref:System.Collections.BitArray.Count%2A>, <xref:System.Collections.BitArray> został obcięty i elementy po indeksie `value` -1 są usuwane.</span><span class="sxs-lookup"><span data-stu-id="c0375-244">If <xref:System.Collections.BitArray.Length%2A> is set to a value that is less than <xref:System.Collections.BitArray.Count%2A>, the <xref:System.Collections.BitArray> is truncated and the elements after the index `value` -1 are deleted.</span></span>  
  
 <span data-ttu-id="c0375-245">Jeśli <xref:System.Collections.BitArray.Length%2A> ma ustawioną wartość, która jest większa niż <xref:System.Collections.BitArray.Count%2A>, nowe elementy są ustawione na `false`.</span><span class="sxs-lookup"><span data-stu-id="c0375-245">If <xref:System.Collections.BitArray.Length%2A> is set to a value that is greater than <xref:System.Collections.BitArray.Count%2A>, the new elements are set to `false`.</span></span>  
  
 <span data-ttu-id="c0375-246">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c0375-246">Retrieving the value of this property is an O(1) operation.</span></span> <span data-ttu-id="c0375-247">Ustawienie tej właściwości jest O (`n`) operacji.</span><span class="sxs-lookup"><span data-stu-id="c0375-247">Setting this property is an O(`n`) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0375-248">Właściwość ma ustawioną wartość, która jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-248">The property is set to a value that is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Not ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Not() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Not" />
      <MemberSignature Language="VB.NET" Value="Public Function Not () As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Not();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0375-249">Odwraca wybór wszystkich wartości bitowe w bieżącym <see cref="T:System.Collections.BitArray" />, tak aby elementy ustawioną <see langword="true" /> nie zostaną zmienione na <see langword="false" />, i Ustaw elementy <see langword="false" /> nie zostaną zmienione na <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-249">Inverts all the bit values in the current <see cref="T:System.Collections.BitArray" />, so that elements set to <see langword="true" /> are changed to <see langword="false" />, and elements set to <see langword="false" /> are changed to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0375-250">Bieżące wystąpienie o wartości bitowe odwrócony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-250">The current instance with inverted bit values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-251">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-251">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-252">Poniższy przykład kodu pokazuje sposób stosowania nie <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="c0375-252">The following code example shows how to apply NOT to a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Not Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Not Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Not Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Not Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Not Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Not Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Or (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Or(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Or(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function Or (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Or(System::Collections::BitArray ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0375-253">Tablica do przeprowadzenia operacji OR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-253">The array with which to perform the bitwise OR operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-254">Wykonuje operacji lub między elementami bieżącego <see cref="T:System.Collections.BitArray" /> obiekt i odpowiednie elementy w określonej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-254">Performs the bitwise OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="c0375-255">Bieżący <see cref="T:System.Collections.BitArray" /> obiektu zostaną zmodyfikowane, aby przechowywać wynik operacji bitowej OR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-255">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise OR operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0375-256">Tablica zawierająca wynik operacji lub bitowe, która zawiera odwołanie do bieżącego <see cref="T:System.Collections.BitArray" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-256">An array containing the result of the bitwise OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-257">Operacja bitowa lub zwraca `true` Jeśli jeden lub oba argumenty operacji są `true`i zwraca `false` Jeśli obydwa argumenty operacji są `false`.</span><span class="sxs-lookup"><span data-stu-id="c0375-257">The bitwise OR operation returns `true` if one or both operands are `true`, and returns `false` if both operands are `false`.</span></span>  
  
 <span data-ttu-id="c0375-258">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-259">Poniższy przykładowy kod przedstawia sposób wykonania tej operacji lub między dwoma <xref:System.Collections.BitArray> obiektów.</span><span class="sxs-lookup"><span data-stu-id="c0375-259">The following code example shows how to perform the OR operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.Or Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Or Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Or Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Or Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Or Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Or Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0375-260">
            <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-260">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0375-261">
            <paramref name="value" /> i obecnie <see cref="T:System.Collections.BitArray" /> nie mają taką samą liczbę elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-261">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray RightShift (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray RightShift(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.RightShift(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RightShift (count As Integer) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ RightShift(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (index As Integer, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(int index, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c0375-262">Liczony od zera indeks bit do ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-262">The zero-based index of the bit to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0375-263">Wartość logiczna, aby przypisać do bitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-263">The Boolean value to assign to the bit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-264">Ustawia bit na określonej pozycji w <see cref="T:System.Collections.BitArray" /> z podaną wartością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-264">Sets the bit at a specific position in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-265">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c0375-265">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-266">Poniższy przykładowy kod przedstawia sposób Ustawianie i pobieranie elementów określonych <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="c0375-266">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0375-267">
            <paramref name="index" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-267">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c0375-268">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-268">-or-</span>
          </span>
          <span data-ttu-id="c0375-269">
            <paramref name="index" /> jest większa lub równa liczbie elementów w <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-269">
              <paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAll">
      <MemberSignature Language="C#" Value="public void SetAll (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAll(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.SetAll(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAll (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAll(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0375-270">Wartość logiczna do przypisania do wszystkich bitów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-270">The Boolean value to assign to all bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-271">Ustawia wszystkie bity w <see cref="T:System.Collections.BitArray" /> z podaną wartością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-271">Sets all bits in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-272">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-272">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-273">Poniższy przykładowy kod przedstawia sposób Ustawianie i pobieranie elementów określonych <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="c0375-273">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0375-274">Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-274">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0375-275">Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-275">An object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-276">Klasy pochodne zapewniają własne zsynchronizowanej wersji <xref:System.Collections.BitArray> przy użyciu <xref:System.Collections.BitArray.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c0375-276">Derived classes can provide their own synchronized version of the <xref:System.Collections.BitArray> using the <xref:System.Collections.BitArray.SyncRoot%2A> property.</span></span> <span data-ttu-id="c0375-277">Synchronizowanie kodu musi wykonywać operacje <xref:System.Collections.BitArray.SyncRoot%2A> z <xref:System.Collections.BitArray>, nie są bezpośrednio w <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="c0375-277">The synchronizing code must perform operations on the <xref:System.Collections.BitArray.SyncRoot%2A> of the <xref:System.Collections.BitArray>, not directly on the <xref:System.Collections.BitArray>.</span></span> <span data-ttu-id="c0375-278">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="c0375-278">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="c0375-279">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Collections.BitArray> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c0375-279">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.BitArray> object.</span></span>  
  
 <span data-ttu-id="c0375-280">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c0375-280">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c0375-281">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="c0375-281">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c0375-282">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="c0375-282">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-283">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.BitArray.SyncRoot%2A> podczas całej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c0375-283">The following code example shows how to lock the collection using the <xref:System.Collections.BitArray.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic BitArray Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic BitArray Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source2.cs#2)]
 [!code-vb[Classic BitArray Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="c0375-284">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c0375-284">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.BitArray.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Xor (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Xor(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Xor(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Xor(System::Collections::BitArray ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0375-285">Tablica do przeprowadzenia operacji wyłączny OR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-285">The array with which to perform the bitwise exclusive OR operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0375-286">Wykonuje operację lub wyłączny bitowy między elementami bieżącego <see cref="T:System.Collections.BitArray" /> obiektu do odpowiednich elementów w określonej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-286">Performs the bitwise exclusive OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object against the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="c0375-287">Bieżący <see cref="T:System.Collections.BitArray" /> obiektu zostaną zmodyfikowane, aby przechowywać wynik operacji wyłączny OR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-287">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise exclusive OR operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0375-288">Tablica zawierająca wynik bitowe operacji lub wyłączności, która zawiera odwołanie do bieżącego <see cref="T:System.Collections.BitArray" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-288">An array containing the result of the bitwise exclusive OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0375-289">Operacja bitowa wyłączny OR zwraca `true` Jeśli dokładnie jeden argument operacji jest `true`i zwraca `false` Jeśli oba argumenty mają taką samą wartość logiczną.</span><span class="sxs-lookup"><span data-stu-id="c0375-289">The bitwise exclusive OR operation returns `true` if exactly one operand is `true`, and returns `false` if both operands have the same Boolean value.</span></span>  
  
 <span data-ttu-id="c0375-290">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0375-290">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0375-291">Poniższy przykładowy kod przedstawia sposób wykonania tej operacji XOR między dwiema <xref:System.Collections.BitArray> obiektów.</span><span class="sxs-lookup"><span data-stu-id="c0375-291">The following code example shows how to perform the XOR operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.Xor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Xor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Xor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0375-292">
            <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-292">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0375-293">
            <paramref name="value" /> i obecnie <see cref="T:System.Collections.BitArray" /> nie mają taką samą liczbę elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0375-293">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>