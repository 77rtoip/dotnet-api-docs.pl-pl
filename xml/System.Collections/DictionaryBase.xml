<Type Name="DictionaryBase" FullName="System.Collections.DictionaryBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e92aa8e57636188ad2e45f249f4c13aedf544a00" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37700541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DictionaryBase : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit DictionaryBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.DictionaryBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DictionaryBase&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class DictionaryBase abstract : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type DictionaryBase = class&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="93957-101">Udostępnia <see langword="abstract" /> klasa podstawowa dla silnie typizowanej kolekcji par klucz/wartość.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93957-101">Provides the <see langword="abstract" /> base class for a strongly typed collection of key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-102">Instrukcja foreach języka C# (dla każdego w języku Visual Basic) zwraca obiekt typu elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="93957-102">The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="93957-103">Ponieważ każdy element obiektu <xref:System.Collections.DictionaryBase> to para klucz/wartość typu elementu nie jest typ klucza lub typu wartości.</span><span class="sxs-lookup"><span data-stu-id="93957-103">Since each element of the <xref:System.Collections.DictionaryBase> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="93957-104">Typ elementu to <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="93957-104">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span>  
  
 <span data-ttu-id="93957-105">`foreach` Instrukcja jest otokę modułu wyliczającego, umożliwiający tylko odczyt z bez zapisywania do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="93957-105">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93957-106">Ponieważ klucze mogą być dziedziczone, a następnie zmienić ich zachowania, ich bezwzględnych unikatowości nie może zagwarantować porównania przy użyciu <xref:System.Type.Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="93957-106">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-107">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-107">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="93957-108">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93957-108">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="93957-109">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93957-109">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="93957-110">Ta implementacja nie zapewnia zsynchronizowane otoki (bezpieczna wątkowo) dla <see cref="T:System.Collections.DictionaryBase" />, ale klasach pochodnych można tworzyć własne zsynchronizowane wersje <see cref="T:System.Collections.DictionaryBase" /> przy użyciu <see cref="P:System.Collections.ICollection.SyncRoot" /> właściwości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93957-110">This implementation does not provide a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.DictionaryBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.DictionaryBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="93957-111">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93957-111">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="93957-112">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93957-112">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="93957-113">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93957-113">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="93957-114">
        <para>Ta klasa bazowa znajduje się w celu ułatwienia implementacji utworzyć silnie typizowaną kolekcją niestandardowych. Implementacje są zachęcani do tej klasy bazowej, zamiast tworzyć własne rozszerzenia.  Elementy członkowskie tej klasy bazowej są chronione i są przeznaczone do użycia przez klasę pochodną tylko.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="93957-114">
          <para>This base class is provided to make it easier for implementers to create a strongly typed custom collection. Implementers are encouraged to extend this base class instead of creating their own.  Members of this base class are protected and are intended to be used through a derived class only.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="N:System.Collections.Generic" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DictionaryBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DictionaryBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93957-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.DictionaryBase" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-115">Initializes a new instance of the <see cref="T:System.Collections.DictionaryBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-116">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-116">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="dictionaryBase.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93957-117">Czyści zawartość <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-117">Clears the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-118"><xref:System.Collections.DictionaryBase.Count%2A> jest równa zero i odwołania do innych obiektów z elementów kolekcji są również zwalniane.</span><span class="sxs-lookup"><span data-stu-id="93957-118"><xref:System.Collections.DictionaryBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="93957-119">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.DictionaryBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="93957-119">This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="dictionaryBase.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="93957-120">Jednowymiarowy <see cref="T:System.Array" /> oznacza to miejsce docelowe <see cref="T:System.Collections.DictionaryEntry" /> obiektów kopiowanych ze <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-120">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
          <span data-ttu-id="93957-121">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-121">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="93957-122">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-122">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-123">Kopiuje <see cref="T:System.Collections.DictionaryBase" /> elementów do jednowymiarowego obiektu <see cref="T:System.Array" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-123">Copies the <see cref="T:System.Collections.DictionaryBase" /> elements to a one-dimensional <see cref="T:System.Array" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-124">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający wykonuje iterację przez <xref:System.Collections.DictionaryBase>.</span><span class="sxs-lookup"><span data-stu-id="93957-124">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.DictionaryBase>.</span></span>  
  
 <span data-ttu-id="93957-125">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.DictionaryBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="93957-125">This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93957-126">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-126">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93957-127">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-127">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93957-128">
            <paramref name="array" /> ma charakter wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-128">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="93957-129">- lub - liczba elementów w źródle <see cref="T:System.Collections.DictionaryBase" /> jest większa niż dostępna ilość miejsca od <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-129">-or-  The number of elements in the source <see cref="T:System.Collections.DictionaryBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="93957-130">Typ źródła <see cref="T:System.Collections.DictionaryBase" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-130">The type of the source <see cref="T:System.Collections.DictionaryBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.DictionaryBase.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.DictionaryBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-131">Pobiera liczbę elementów znajdujących się w <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-131">Gets the number of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-132">Liczba elementów zawartych w słowniku <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-132">The number of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-133">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-133">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ Dictionary { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.IDictionary" Usage="System.Collections.DictionaryBase.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-134">Pobiera listę elementów zawartych w słowniku <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-134">Gets the list of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-135">
            <see cref="T:System.Collections.IDictionary" /> Reprezentujący <see cref="T:System.Collections.DictionaryBase" /> samego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-135">An <see cref="T:System.Collections.IDictionary" /> representing the <see cref="T:System.Collections.DictionaryBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-136">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-136">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-137">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-137">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-138">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-138">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="dictionaryBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93957-139">Zwraca <see cref="T:System.Collections.IDictionaryEnumerator" /> iterację, która <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-139">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93957-140">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> Dla <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-140">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-141">`foreach` Instrukcja języka C# (`for each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="93957-141">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="93957-142">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="93957-142">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="93957-143">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="93957-143">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="93957-144">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="93957-144">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="93957-145"><xref:System.Collections.IEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="93957-145"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="93957-146">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="93957-146">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="93957-147">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="93957-147">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="93957-148"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="93957-148"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="93957-149"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="93957-149"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="93957-150">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="93957-150">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="93957-151">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="93957-151">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="93957-152">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="93957-152">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="93957-153">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="93957-153">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="93957-154">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="93957-154">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="93957-155">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="93957-155">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="93957-156">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="93957-156">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="93957-157">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="93957-157">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="93957-158">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="93957-158">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="93957-159">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-159">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-160">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-160">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerHashtable">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable InnerHashtable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable InnerHashtable" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.InnerHashtable" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerHashtable As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ InnerHashtable { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerHashtable : System.Collections.Hashtable" Usage="System.Collections.DictionaryBase.InnerHashtable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-161">Pobiera listę elementów zawartych w słowniku <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-161">Gets the list of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-162">A <see cref="T:System.Collections.Hashtable" /> reprezentujący <see cref="T:System.Collections.DictionaryBase" /> samego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-162">A <see cref="T:System.Collections.Hashtable" /> representing the <see cref="T:System.Collections.DictionaryBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-163">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-163">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-164">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-164">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberSignature Language="F#" Value="abstract member OnClear : unit -&gt; unit&#xA;override this.OnClear : unit -&gt; unit" Usage="dictionaryBase.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93957-165">Wykonuje dodatkowych procesów niestandardowych przed wyczyszczeniem zawartości <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-165">Performs additional custom processes before clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-166">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną do wykonania niektórych akcji, zanim zostanie wyczyszczona kolekcji.</span><span class="sxs-lookup"><span data-stu-id="93957-166">The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</span></span>  
  
 <span data-ttu-id="93957-167">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-167">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-168">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-168">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-169">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które muszą być wykonywane przed usunięciem wszystkich elementów z bazowego <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnClear" /> jest wywoływana przed standardowe zachowanie Wyczyść, natomiast <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> jest wywoływana po standardowe zachowanie Wyczyść.  Na przykład implementacje można wyłączyć niektóre elementy przed usunięciem przez globalnego Wyczyść.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-169">
              <para>This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> is invoked after the standard Clear behavior.  For example, implementers can exempt certain elements from deletion by a global Clear.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnClearComplete" />
        <altmember cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberSignature Language="F#" Value="abstract member OnClearComplete : unit -&gt; unit&#xA;override this.OnClearComplete : unit -&gt; unit" Usage="dictionaryBase.OnClearComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93957-170">Wykonuje dodatkowe niestandardowe procesy po wyczyszczeniu zawartości <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-170">Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-171">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną na wykonanie akcji po kolekcji jest wyczyszczone.</span><span class="sxs-lookup"><span data-stu-id="93957-171">The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</span></span>  
  
 <span data-ttu-id="93957-172">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-172">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-173">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-173">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-174">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które muszą być wykonywane po usunięciu wszystkich elementów z bazowego <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnClear" /> jest wywoływana przed standardowe zachowanie Wyczyść, natomiast <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> jest wywoływana po standardowe zachowanie Wyczyść.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-174">
              <para>This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> is invoked after the standard Clear behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnClear" />
        <altmember cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnGet">
      <MemberSignature Language="C#" Value="protected virtual object OnGet (object key, object currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnGet(object key, object currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGet (key As Object, currentValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnGet(System::Object ^ key, System::Object ^ currentValue);" />
      <MemberSignature Language="F#" Value="abstract member OnGet : obj * obj -&gt; obj&#xA;override this.OnGet : obj * obj -&gt; obj" Usage="dictionaryBase.OnGet (key, currentValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="currentValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-175">Klucz elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-175">The key of the element to get.</span>
          </span>
        </param>
        <param name="currentValue">
          <span data-ttu-id="93957-176">Bieżąca wartość elementu skojarzonego z <c>klucz</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-176">The current value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-177">Pobiera element z określonym kluczem i wartością w <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-177">Gets the element with the specified key and value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93957-178">
            <see cref="T:System.Object" /> Zawierającego element z określonym kluczem i wartością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-178">An <see cref="T:System.Object" /> containing the element with the specified key and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-179">Domyślna implementacja tej metody zwraca `currentValue`.</span><span class="sxs-lookup"><span data-stu-id="93957-179">The default implementation of this method returns `currentValue`.</span></span> <span data-ttu-id="93957-180">Ma być zastąpiona przez klasę pochodną, aby wykonać dodatkowe akcje w przypadku, gdy określony element zostanie pobrana.</span><span class="sxs-lookup"><span data-stu-id="93957-180">It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.</span></span>  
  
 <span data-ttu-id="93957-181">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-181">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-182">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-182">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-183">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które muszą być wykonywane podczas wykonywania standardowe zachowanie Get podstawowych <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /> może służyć do określania procesów do wykonania przed zwróceniem wartości pobierane z bazowego <see cref="T:System.Collections.Hashtable" />. Na przykład implementacje rzutować wartości do innego typu przed zwróceniem.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-183">
              <para>This method allows implementers to define processes that must be performed when executing the standard Get behavior of the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /> can be used to specify processes to perform before returning the value retrieved from the underlying <see cref="T:System.Collections.Hashtable" />. For example, implementers can cast the value into another type before returning it.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsert : obj * obj -&gt; unit&#xA;override this.OnInsert : obj * obj -&gt; unit" Usage="dictionaryBase.OnInsert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-184">Klucz elementu do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-184">The key of the element to insert.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="93957-185">Wartość elementu do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-185">The value of the element to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-186">Wykonuje dodatkowych procesów niestandardowych przed Wstawianie nowego elementu do <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-186">Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-187">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną do wykonania niektórych akcji, przed wstawieniem określony element.</span><span class="sxs-lookup"><span data-stu-id="93957-187">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</span></span>  
  
 <span data-ttu-id="93957-188">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-188">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-189">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-189">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-190">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-190">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-191">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które należy wykonać przed Wstawianie elementu do bazowego <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> jest wywoływana przed standardowego zachowania wstawiania, natomiast <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> jest wywoływana po standardowego zachowania wstawiania.  Na przykład implementacje można ograniczyć, jakie typy obiektów mogą być wstawiane do <see cref="T:System.Collections.Hashtable" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-191">
              <para>This method allows implementers to define processes that must be performed before inserting the element into the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> is invoked after the standard Insert behavior.  For example, implementers can restrict which types of objects can be inserted into the <see cref="T:System.Collections.Hashtable" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsertComplete : obj * obj -&gt; unit&#xA;override this.OnInsertComplete : obj * obj -&gt; unit" Usage="dictionaryBase.OnInsertComplete (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-192">Klucz elementu do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-192">The key of the element to insert.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="93957-193">Wartość elementu do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-193">The value of the element to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-194">Wykonuje dodatkowe niestandardowe procesy po Wstawianie nowego elementu do <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-194">Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-195">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną na wykonanie akcji po wstawieniu określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="93957-195">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</span></span>  
  
 <span data-ttu-id="93957-196">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-196">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-197">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-197">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-198">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które należy wykonać po Wstawianie elementu do bazowego <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> jest wywoływana przed standardowego zachowania wstawiania, natomiast <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> jest wywoływana po standardowego zachowania wstawiania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-198">
              <para>This method allows implementers to define processes that must be performed after inserting the element into the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> is invoked after the standard Insert behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemove : obj * obj -&gt; unit&#xA;override this.OnRemove : obj * obj -&gt; unit" Usage="dictionaryBase.OnRemove (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-199">Klucz elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-199">The key of the element to remove.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="93957-200">Wartość elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-200">The value of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-201">Wykonuje dodatkowych procesów niestandardowych przed usunięciem elementu z <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-201">Performs additional custom processes before removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-202">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną do wykonania niektórych akcji, przed usunięciem określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="93957-202">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</span></span>  
  
 <span data-ttu-id="93957-203">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-203">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-204">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-204">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-205">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-205">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-206">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które muszą być wykonywane przed usunięciem elementu z bazowego <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> jest wywoływana przed standardowe zachowanie Remove, natomiast <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> jest wywoływana po standardowe zachowanie Remove.  Na przykład implementacje uniemożliwi usuwać elementów zawsze zostanie zgłoszony wyjątek <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-206">
              <para>This method allows implementers to define processes that must be performed before removing the element from the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> is invoked after the standard Remove behavior.  For example, implementers can prevent removal of elements by always throwing an exception in <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveComplete : obj * obj -&gt; unit&#xA;override this.OnRemoveComplete : obj * obj -&gt; unit" Usage="dictionaryBase.OnRemoveComplete (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-207">Klucz elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-207">The key of the element to remove.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="93957-208">Wartość elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-208">The value of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-209">Wykonuje dodatkowe niestandardowe procesy po usunięciu elementu z <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-209">Performs additional custom processes after removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-210">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną do wykonania niektórych akcji, po usunięciu określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="93957-210">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</span></span>  
  
 <span data-ttu-id="93957-211">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-211">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-212">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-212">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-213">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które muszą być wykonywane po usunięciu elementu z bazowego <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> jest wywoływana przed standardowe zachowanie Remove, natomiast <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> jest wywoływana po standardowe zachowanie Remove.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-213">
              <para>This method allows implementers to define processes that must be performed after removing the element from the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> is invoked after the standard Remove behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected virtual void OnSet (object key, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSet(object key, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSet (key As Object, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSet(System::Object ^ key, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSet : obj * obj * obj -&gt; unit&#xA;override this.OnSet : obj * obj * obj -&gt; unit" Usage="dictionaryBase.OnSet (key, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-214">Klucz elementu do zlokalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-214">The key of the element to locate.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="93957-215">Stara wartość elementu skojarzonego z <c>klucz</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-215">The old value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="93957-216">Nowa wartość elementu skojarzonego z <c>klucz</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-216">The new value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-217">Wykonuje dodatkowych procesów niestandardowych przed ustawieniem wartość <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-217">Performs additional custom processes before setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-218">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną do wykonania niektórych akcji, przed ustawieniem określony element.</span><span class="sxs-lookup"><span data-stu-id="93957-218">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</span></span>  
  
 <span data-ttu-id="93957-219">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-219">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-220">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-220">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-221">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-221">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-222">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które muszą być wykonywane przed ustawieniem określony element w źródłowym <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> jest wywoływana przed standardowe zachowanie zestawu, natomiast <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> jest wywoływana po standardowe zachowanie zestawu.  Na przykład implementacje ograniczyć wartości, które mogą zostać zastąpione przez sprawdzanie wewnątrz <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-222">
              <para>This method allows implementers to define processes that must be performed before setting the specified element in the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> is invoked after the standard Set behavior.  For example, implementers can restrict which values can be overwritten by performing a check inside <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSetComplete (object key, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetComplete(object key, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetComplete (key As Object, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetComplete(System::Object ^ key, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSetComplete : obj * obj * obj -&gt; unit&#xA;override this.OnSetComplete : obj * obj * obj -&gt; unit" Usage="dictionaryBase.OnSetComplete (key, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-223">Klucz elementu do zlokalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-223">The key of the element to locate.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="93957-224">Stara wartość elementu skojarzonego z <c>klucz</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-224">The old value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="93957-225">Nowa wartość elementu skojarzonego z <c>klucz</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-225">The new value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-226">Wykonuje dodatkowe niestandardowe procesy po ustawieniu wartości w <see cref="T:System.Collections.DictionaryBase" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-226">Performs additional custom processes after setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-227">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną do wykonania niektórych akcji, po ustawieniu określony element.</span><span class="sxs-lookup"><span data-stu-id="93957-227">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</span></span>  
  
 <span data-ttu-id="93957-228">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-228">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-229">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-229">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-230">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które należy wykonać po ustawieniu określony element w źródłowym <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> jest wywoływana przed standardowe zachowanie zestawu, natomiast <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> jest wywoływana po standardowe zachowanie zestawu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-230">
              <para>This method allows implementers to define processes that must be performed after setting the specified element in the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> is invoked after the standard Set behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnValidate : obj * obj -&gt; unit&#xA;override this.OnValidate : obj * obj -&gt; unit" Usage="dictionaryBase.OnValidate (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-231">Klucz elementu do zweryfikowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-231">The key of the element to validate.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="93957-232">Wartość elementu do zweryfikowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-232">The value of the element to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-233">Wykonuje dodatkowych niestandardowych procesów podczas sprawdzania poprawności element z określonym kluczem i wartością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-233">Performs additional custom processes when validating the element with the specified key and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-234">Domyślna implementacja tej metody ma być zastąpiona przez klasę pochodną do wykonania niektórych akcji, gdy określony element jest weryfikowana.</span><span class="sxs-lookup"><span data-stu-id="93957-234">The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.</span></span>  
  
 <span data-ttu-id="93957-235">Metody On \* są wywoływane tylko na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.Dictionary%2A> właściwości, ale nie na wystąpienie zwrócone przez <xref:System.Collections.DictionaryBase.InnerHashtable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-235">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="93957-236">Domyślna implementacja tej metody jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-236">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-237">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-237">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="93957-238">
            <para>Ta metoda umożliwia implementacji do definiowania procesów, które muszą być wykonywane podczas wykonywania standardowe zachowanie elementu bazowego <see cref="T:System.Collections.Hashtable" />. Definiując tej metody, implementacje można dodać funkcje do dziedziczonej metody bez konieczności zastępują wszystkie inne metody.  <see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /> może służyć do nakłada ograniczenia dotyczące typów obiektów, które są akceptowane w kolekcji. Domyślna implementacja zapobiega <see langword="null" /> z jest dodane lub usunięte z bazowego <see cref="T:System.Collections.Hashtable" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-238">
              <para>This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <see cref="T:System.Collections.Hashtable" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /> can be used to impose restrictions on the type of objects that are accepted into the collection. The default implementation prevents <see langword="null" /> from being added to or removed from the underlying <see cref="T:System.Collections.Hashtable" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-239">Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Collections.DictionaryBase" /> obiektu jest synchronizowany (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-239">Gets a value indicating whether access to a <see cref="T:System.Collections.DictionaryBase" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-240">
            <see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.DictionaryBase" /> obiektu jest synchronizowany (wątkowo); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-240">
              <see langword="true" /> if access to the <see cref="T:System.Collections.DictionaryBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="93957-241">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-241">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-242">A <xref:System.Collections.DictionaryBase> obiekt nie jest zsynchronizowany.</span><span class="sxs-lookup"><span data-stu-id="93957-242">A <xref:System.Collections.DictionaryBase> object is not synchronized.</span></span> <span data-ttu-id="93957-243">Klasy pochodne może zapewnić zsynchronizowaną wersję <xref:System.Collections.DictionaryBase> przy użyciu <xref:System.Collections.ICollection.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-243">Derived classes can provide a synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="93957-244">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="93957-244">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="93957-245">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="93957-245">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="93957-246">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="93957-246">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-247">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.ICollection.SyncRoot%2A> właściwości podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="93957-247">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.DictionaryBase#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/source2.cs#3)]
 [!code-vb[System.Collections.DictionaryBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/source2.vb#3)]  
  
 <span data-ttu-id="93957-248">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-248">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-249">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.DictionaryBase" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-249">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-250">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.DictionaryBase" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-250">An object that can be used to synchronize access to the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-251">Klasy pochodne może zapewnić ich własnych zsynchronizowaną wersję <xref:System.Collections.DictionaryBase> przy użyciu <xref:System.Collections.ICollection.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-251">Derived classes can provide their own synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="93957-252">Synchronizowanie kodu należy wykonywać operacje na <xref:System.Collections.ICollection.SyncRoot%2A> właściwość <xref:System.Collections.DictionaryBase> obiektu, nie są bezpośrednio w <xref:System.Collections.DictionaryBase> obiektu.</span><span class="sxs-lookup"><span data-stu-id="93957-252">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.DictionaryBase> object, not directly on the <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="93957-253">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="93957-253">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="93957-254">W szczególności utrzymuje właściwe synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Collections.DictionaryBase> obiektu.</span><span class="sxs-lookup"><span data-stu-id="93957-254">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.DictionaryBase> object.</span></span>  
  
 <span data-ttu-id="93957-255">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="93957-255">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="93957-256">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="93957-256">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="93957-257">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="93957-257">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-258">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.ICollection.SyncRoot%2A> właściwości podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="93957-258">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.DictionaryBase#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/source2.cs#3)]
 [!code-vb[System.Collections.DictionaryBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/source2.vb#3)]  
  
 <span data-ttu-id="93957-259">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-259">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-260">Klucz elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-260">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="93957-261">Wartość elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-261">The value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-262">Dodaje element z określonym kluczem i określoną wartością do <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-262">Adds an element with the specified key and value into the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-263">Zazwyczaj obiekt, który ma korelacja stanu i jego wartość Kod skrótu nie jest używany jako klucz.</span><span class="sxs-lookup"><span data-stu-id="93957-263">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="93957-264">Na przykład <xref:System.String> obiekty są lepsze niż <xref:System.Text.StringBuilder> obiekty do użycia jako klucze.</span><span class="sxs-lookup"><span data-stu-id="93957-264">For example, <xref:System.String> objects are better than <xref:System.Text.StringBuilder> objects for use as keys.</span></span>  
  
 <span data-ttu-id="93957-265">Można również użyć <xref:System.Collections.IDictionary.Item%2A> właściwości, aby dodać nowe elementy, ustawiając wartość klucza, który nie istnieje w <xref:System.Collections.DictionaryBase>, na przykład `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="93957-265">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="93957-266">Jednakże jeśli określony klucz już istnieje w <xref:System.Collections.DictionaryBase>, ustawiając <xref:System.Collections.IDictionary.Item%2A> właściwość zastępuje starą wartość.</span><span class="sxs-lookup"><span data-stu-id="93957-266">However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="93957-267">Z kolei <xref:System.Collections.IDictionary.Add%2A> metoda nie modyfikować istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="93957-267">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="93957-268">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-268">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-269">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-269">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93957-270">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-270">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93957-271">Element o takim samym kluczem już istnieje w <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-271">An element with the same key already exists in the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="93957-272">
            <see cref="T:System.Collections.DictionaryBase" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-272">The <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="93957-273">- lub - <see cref="T:System.Collections.DictionaryBase" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-273">-or-  The <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-274">Klucz do zlokalizowania w <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-274">The key to locate in the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-275">Określa, czy <see cref="T:System.Collections.DictionaryBase" /> zawiera określony klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-275">Determines whether the <see cref="T:System.Collections.DictionaryBase" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93957-276">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.DictionaryBase" /> zawiera element z określonym kluczem, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-276">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-277">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-277">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="93957-278">Począwszy od programu .NET Framework 2.0, Metoda ta wykorzystuje obiekty kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `key` ustalenie, czy `item` istnieje.</span><span class="sxs-lookup"><span data-stu-id="93957-278">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists.</span></span> <span data-ttu-id="93957-279">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `key` parametru na obiektach w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="93957-279">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `key` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-280">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-280">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93957-281">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-281">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-282">Pobiera wartość wskazującą czy <see cref="T:System.Collections.DictionaryBase" /> obiekt ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-282">Gets a value indicating whether a <see cref="T:System.Collections.DictionaryBase" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-283">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.DictionaryBase" /> obiekt ma stały rozmiar; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-283">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="93957-284">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-284">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-285">Kolekcja o stałym rozmiarze nie zezwala na dodawanie i usuwanie elementów po kolekcji jest tworzona, ale zezwalaj na modyfikowanie istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="93957-285">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="93957-286">Kolekcja o stałym rozmiarze jest po prostu zbiorem z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym jeśli zmiany zostały wprowadzone do podstawowej kolekcji, w tym dodawania lub usuwania elementów kolekcji o stałym rozmiarze uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="93957-286">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="93957-287">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-287">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-288">Pobiera wartość wskazującą czy <see cref="T:System.Collections.DictionaryBase" /> obiekt jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-288">Gets a value indicating whether a <see cref="T:System.Collections.DictionaryBase" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-289">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.DictionaryBase" /> obiekt jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-289">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="93957-290">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-290">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-291">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="93957-291">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="93957-292">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="93957-292">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="93957-293">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-293">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.DictionaryBase.System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-294">Klucz o wartości do pobrania lub ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-294">The key whose value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-295">Pobiera lub ustawia wartość skojarzoną z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-295">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-296">Wartość skojarzona z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-296">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="93957-297">Jeśli określony klucz nie zostanie znaleziony, próby pobrania jej zwraca <see langword="null" />, a próba skonfigurowania jej tworzy nowy element przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-297">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-298">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="93957-298">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="93957-299">Można również użyć <xref:System.Collections.IDictionary.Item%2A> właściwości, aby dodać nowe elementy, ustawiając wartość klucza, który nie istnieje w <xref:System.Collections.DictionaryBase>, na przykład `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="93957-299">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="93957-300">Jednakże jeśli określony klucz już istnieje w <xref:System.Collections.DictionaryBase>, ustawiając <xref:System.Collections.IDictionary.Item%2A> właściwość zastępuje starą wartość.</span><span class="sxs-lookup"><span data-stu-id="93957-300">However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="93957-301">Z kolei <xref:System.Collections.IDictionary.Add%2A> metoda nie modyfikować istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="93957-301">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="93957-302">Pobieranie wartości tej właściwości jest operacją O(1); Ustawianie właściwości również jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-302">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-303">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-303">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93957-304">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-304">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="93957-305">Właściwość została ustawiona i <see cref="T:System.Collections.DictionaryBase" /> jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-305">The property is set and the <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="93957-306">- lub - właściwość jest ustawiona, <paramref name="key" /> nie istnieje w kolekcji, a <see cref="T:System.Collections.DictionaryBase" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-306">-or-  The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.DictionaryBase.System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-307">Pobiera <see cref="T:System.Collections.ICollection" /> obiekt zawierający klucze z <see cref="T:System.Collections.DictionaryBase" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-307">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-308">
            <see cref="T:System.Collections.ICollection" /> Obiekt zawierający klucze z <see cref="T:System.Collections.DictionaryBase" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-308">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-309">Kolejność kluczy w <xref:System.Collections.ICollection> obiektu jest nieokreślony, ale takiej samej kolejności jak skojarzone wartości w <xref:System.Collections.ICollection> obiektu zwróconego przez <xref:System.Collections.IDictionary.Values%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-309">The order of the keys in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated values in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="93957-310">Zwrócony <xref:System.Collections.ICollection> nie jest statyczne kopia; zamiast tego <xref:System.Collections.ICollection> odwołuje się do kluczy w oryginalnym <xref:System.Collections.DictionaryBase> obiektu.</span><span class="sxs-lookup"><span data-stu-id="93957-310">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="93957-311">W związku z tym, zmienia się na <xref:System.Collections.DictionaryBase> nadal zostaną odzwierciedlone w zwracanym <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="93957-311">Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="93957-312">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-312">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-313">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> właściwość 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-313">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.IDictionary.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="93957-314">Klucz elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-314">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93957-315">Usuwa element z określonym kluczem z <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-315">Removes the element with the specified key from the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-316">Jeśli <xref:System.Collections.DictionaryBase> nie zawiera element z określonym kluczem <xref:System.Collections.DictionaryBase> pozostaje bez zmian.</span><span class="sxs-lookup"><span data-stu-id="93957-316">If the <xref:System.Collections.DictionaryBase> does not contain an element with the specified key, the <xref:System.Collections.DictionaryBase> remains unchanged.</span></span> <span data-ttu-id="93957-317">Jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="93957-317">No exception is thrown.</span></span>  
  
 <span data-ttu-id="93957-318">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-318">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-319">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-319">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93957-320">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-320">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="93957-321">
            <see cref="T:System.Collections.DictionaryBase" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-321">The <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="93957-322">- lub - <see cref="T:System.Collections.DictionaryBase" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-322">-or-  The <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.DictionaryBase.System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93957-323">Pobiera <see cref="T:System.Collections.ICollection" /> obiekt zawierający wartości w <see cref="T:System.Collections.DictionaryBase" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-323">Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93957-324">
            <see cref="T:System.Collections.ICollection" /> Obiekt zawierający wartości w <see cref="T:System.Collections.DictionaryBase" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-324">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-325">Kolejność wartości na liście <xref:System.Collections.ICollection> obiektu jest nieokreślony, ale takiej samej kolejności jak klucze skojarzone z <xref:System.Collections.ICollection> obiektu zwróconego przez <xref:System.Collections.IDictionary.Keys%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="93957-325">The order of the values in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated keys in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="93957-326">Zwrócony <xref:System.Collections.ICollection> nie jest statyczne kopia; zamiast tego <xref:System.Collections.ICollection> odwołuje się do wartości w oryginalnym <xref:System.Collections.DictionaryBase> obiektu.</span><span class="sxs-lookup"><span data-stu-id="93957-326">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="93957-327">W związku z tym, zmienia się na <xref:System.Collections.DictionaryBase> nadal zostaną odzwierciedlone w zwracanym <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="93957-327">Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="93957-328">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-328">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93957-329">Poniższy kod implementuje przykład <xref:System.Collections.DictionaryBase> klasy i używa tę implementację, aby utworzyć słownik <xref:System.String> kluczy i wartości, które mają <xref:System.String.Length%2A> właściwość 5 znaków lub mniej.</span><span class="sxs-lookup"><span data-stu-id="93957-329">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.IDictionary.Keys" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93957-330">Zwraca <see cref="T:System.Collections.IEnumerator" /> iterację, która <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-330">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93957-331">
            <see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93957-331">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93957-332">`foreach` Instrukcja języka C# (`for each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="93957-332">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="93957-333">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="93957-333">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="93957-334">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="93957-334">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="93957-335">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="93957-335">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="93957-336"><xref:System.Collections.IEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="93957-336"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="93957-337">Co to położenie, wywołanie <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="93957-337">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="93957-338">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="93957-338">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="93957-339"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="93957-339"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="93957-340"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="93957-340"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="93957-341">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="93957-341">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="93957-342">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="93957-342">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="93957-343">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, wywoływania <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="93957-343">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="93957-344">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="93957-344">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="93957-345">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="93957-345">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="93957-346">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie unieważnione, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="93957-346">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="93957-347">W przypadku modyfikowania kolekcji między <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> zwraca element, który jest ustawiony, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</span><span class="sxs-lookup"><span data-stu-id="93957-347">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="93957-348">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="93957-348">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="93957-349">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="93957-349">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="93957-350">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="93957-350">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="93957-351">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="93957-351">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>