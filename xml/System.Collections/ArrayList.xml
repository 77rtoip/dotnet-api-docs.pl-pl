<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="783dfe191b215e44bf05183f2e48c16e8165667a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69351922" /></Metadata><TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IList&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="22e6f-101"><see cref="T:System.Collections.IList" /> Implementuje interfejs przy użyciu tablicy, której rozmiar jest dynamicznie zwiększany w miarę potrzeb.</span><span class="sxs-lookup"><span data-stu-id="22e6f-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="22e6f-102">Nie zalecamy używania `ArrayList` klasy do nowych celów programistycznych.</span><span class="sxs-lookup"><span data-stu-id="22e6f-102">We don't recommend that you use the `ArrayList` class for new development.</span></span> <span data-ttu-id="22e6f-103">Zamiast tego zaleca się użycie klasy generycznej <xref:System.Collections.Generic.List%601> .</span><span class="sxs-lookup"><span data-stu-id="22e6f-103">Instead, we recommend that you use the generic <xref:System.Collections.Generic.List%601> class.</span></span>
> <span data-ttu-id="22e6f-104"><xref:System.Collections.ArrayList> Klasa jest przeznaczona do przechowywania heterogenicznych kolekcji obiektów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-104">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="22e6f-105">Jednak nie zawsze oferuje najlepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="22e6f-105">However, it does not always offer the best performance.</span></span> <span data-ttu-id="22e6f-106">Zamiast tego zalecamy następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="22e6f-106">Instead, we recommend the following:</span></span>  
> - <span data-ttu-id="22e6f-107">W przypadku heterogenicznej kolekcji obiektów należy użyć `List<Object>` typu (in C#) lub `List(Of Object)` (w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="22e6f-107">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
> - <span data-ttu-id="22e6f-108">W przypadku jednorodnej kolekcji obiektów należy użyć <xref:System.Collections.Generic.List%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-108">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
> <span data-ttu-id="22e6f-109">Zapoznaj się z zagadnieniami dotyczącymi [wydajności](xref:System.Collections.Generic.List%601#performance-considerations) w <xref:System.Collections.Generic.List%601> temacie referencyjnym w celu omówienia względnej wydajności tych klas.</span><span class="sxs-lookup"><span data-stu-id="22e6f-109">See [Performance Considerations](xref:System.Collections.Generic.List%601#performance-considerations) in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  <span data-ttu-id="22e6f-110">Aby uzyskać ogólne informacje na temat użycia generycznego, a nie ogólnego typu kolekcji, w usłudze GitHub [należy zapoznać się](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) z nieogólnymi kolekcjami.</span><span class="sxs-lookup"><span data-stu-id="22e6f-110">See [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub for general information on the use of generic instead of non-generic collection types.</span></span> 
  
 <span data-ttu-id="22e6f-111">Sortowanie <xref:System.Collections.ArrayList> nie jest gwarantowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-111">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="22e6f-112">Należy posortować, <xref:System.Collections.ArrayList> <xref:System.Collections.ArrayList.Sort%2A> wywołując metodę przed wykonaniem operacji (takich <xref:System.Collections.ArrayList> jak <xref:System.Collections.ArrayList.BinarySearch%2A>), które wymagają posortowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-112">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="22e6f-113">Aby zachować kolekcję, która jest automatycznie sortowana w miarę dodawania nowych elementów, można użyć <xref:System.Collections.Generic.SortedSet%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-113">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="22e6f-114">Pojemność jest liczbą elementów <xref:System.Collections.ArrayList> , które <xref:System.Collections.ArrayList> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-114">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="22e6f-115">Gdy elementy są dodawane do <xref:System.Collections.ArrayList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami ponownej alokacji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-115">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="22e6f-116">Wydajność można zmniejszyć przez wywołanie <xref:System.Collections.ArrayList.TrimToSize%2A> lub przez <xref:System.Collections.ArrayList.Capacity%2A> ustawienie właściwości jawnie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-116">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="22e6f-117">**Tylko .NET Framework:** W przypadku bardzo <xref:System.Collections.ArrayList> dużych obiektów można zwiększyć maksymalną pojemność do 2 000 000 000 elementów w systemie 64-bitowym, `enabled` ustawiając atrybut [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) elementu konfiguracji na `true` w środowisku wykonawczym.</span><span class="sxs-lookup"><span data-stu-id="22e6f-117">**.NET Framework only:** For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="22e6f-118">Dostęp do elementów w tej kolekcji można uzyskać przy użyciu indeksu liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="22e6f-118">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="22e6f-119">Indeksy w tej kolekcji są oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="22e6f-119">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="22e6f-120"><xref:System.Collections.ArrayList> Kolekcja akceptuje`null` jako prawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-120">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="22e6f-121">Umożliwia również duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-121">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="22e6f-122">Używanie tablic wielowymiarowych jako elementów w <xref:System.Collections.ArrayList> kolekcji nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-122">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-123">Poniższy przykład pokazuje, jak utworzyć i zainicjować <xref:System.Collections.ArrayList> i jak wyświetlić jego wartości.</span><span class="sxs-lookup"><span data-stu-id="22e6f-123">The following example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="22e6f-124">Publiczne statyczne (<see langword="Shared" /> w Visual Basic) członkowie tego typu są bezpieczne wątkowo.</span><span class="sxs-lookup"><span data-stu-id="22e6f-124">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="22e6f-125">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="22e6f-125">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="22e6f-126"><see cref="T:System.Collections.ArrayList" /> Może obsługiwać wielu czytników współbieżnie, o ile kolekcja nie jest modyfikowana.</span><span class="sxs-lookup"><span data-stu-id="22e6f-126">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="22e6f-127">Aby zagwarantować bezpieczeństwo <see cref="T:System.Collections.ArrayList" />wątku, wszystkie operacje muszą być wykonywane przez otokę zwracaną <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="22e6f-127">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span></span>  
  
<span data-ttu-id="22e6f-128">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-128">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="22e6f-129">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="22e6f-129">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="22e6f-130">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="22e6f-130">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-131">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-131">Performing Culture-Insensitive String Operations in Collections</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ArrayList" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-132">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22e6f-133">Inicjuje nowe wystąpienie <see cref="T:System.Collections.ArrayList" /> klasy, która jest pusta i ma domyślną pojemność początkową.</span><span class="sxs-lookup"><span data-stu-id="22e6f-133">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-134">Pojemność jest liczbą elementów <xref:System.Collections.ArrayList> <xref:System.Collections.ArrayList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-134">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="22e6f-135">Gdy elementy są dodawane do <xref:System.Collections.ArrayList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-135">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="22e6f-136">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-136">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-137">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-137">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : System.Collections.ICollection -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList c" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="22e6f-138">Elementy <see cref="T:System.Collections.ICollection" /> , które są kopiowane do nowej listy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-138">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span></span></param>
        <summary><span data-ttu-id="22e6f-139">Inicjuje nowe wystąpienie <see cref="T:System.Collections.ArrayList" /> klasy, która zawiera elementy skopiowane z określonej kolekcji, które mają taką samą pojemność początkową jak liczba skopiowanych elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-139">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-140">Pojemność jest liczbą elementów <xref:System.Collections.ArrayList> <xref:System.Collections.ArrayList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-140">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="22e6f-141">Gdy elementy są dodawane do <xref:System.Collections.ArrayList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-141">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="22e6f-142">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-142">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-143">Elementy są kopiowane <xref:System.Collections.ArrayList> do tabeli w tej samej kolejności, w jakiej są odczytywane <xref:System.Collections.IEnumerator> przez. <xref:System.Collections.ICollection></span><span class="sxs-lookup"><span data-stu-id="22e6f-143">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="22e6f-144">Ten konstruktor jest operacją o`n`(), gdzie `n` jest liczbą elementów w `c`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-144">This constructor is an O(`n`) operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-145"><paramref name="c" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-145"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : int -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="22e6f-146">Liczba elementów, które mogą być początkowo przechowywane przez nową listę.</span><span class="sxs-lookup"><span data-stu-id="22e6f-146">The number of elements that the new list can initially store.</span></span></param>
        <summary><span data-ttu-id="22e6f-147">Inicjuje nowe wystąpienie <see cref="T:System.Collections.ArrayList" /> klasy, która jest pusta i ma określoną pojemność początkową.</span><span class="sxs-lookup"><span data-stu-id="22e6f-147">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-148">Pojemność jest liczbą elementów <xref:System.Collections.ArrayList> <xref:System.Collections.ArrayList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-148">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="22e6f-149">Gdy elementy są dodawane do <xref:System.Collections.ArrayList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-149">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="22e6f-150">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-150">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-151">Ten konstruktor jest operacją o`n`(), gdzie `n` is `capacity`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-151">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-152"><paramref name="capacity" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-152"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Adapter : System.Collections.IList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Adapter list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="22e6f-153"><see cref="T:System.Collections.IList" /> Do zawijania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-153">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="22e6f-154">Tworzy otokę dla określonego <see cref="T:System.Collections.IList" />elementu. <see cref="T:System.Collections.ArrayList" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-154">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-155">Otoka<see cref="T:System.Collections.IList" />wokół. <see cref="T:System.Collections.ArrayList" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-155">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-156"><xref:System.Collections.ArrayList.Adapter%2A>nie kopiuje zawartości <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-156"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="22e6f-157"><xref:System.Collections.ArrayList> Zamiast tego tylko tworzy <xref:System.Collections.IList>otokę. w <xref:System.Collections.IList> związku z tym zmiany <xref:System.Collections.ArrayList>mają wpływ na.</span><span class="sxs-lookup"><span data-stu-id="22e6f-157">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-158">Klasa zawiera metody <xref:System.Collections.ArrayList.Reverse%2A> Ogólne<xref:System.Collections.ArrayList.BinarySearch%2A> i <xref:System.Collections.ArrayList.Sort%2A> . <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-158">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="22e6f-159">Ta otoka może być metodą, aby można było używać <xref:System.Collections.IList>tych metod, jednak wykonywanie tych operacji ogólnych za pośrednictwem otoki może być mniej wydajne niż operacje zastosowane <xref:System.Collections.IList>bezpośrednio w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-159">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="22e6f-160">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-160">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="22e6f-161">Zgodność wersji</span><span class="sxs-lookup"><span data-stu-id="22e6f-161">Version Compatibility</span></span>  
 <span data-ttu-id="22e6f-162">W .NET Framework w wersji 1,0 i 1,1 wywołanie <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> przeciążenia metody <xref:System.Collections.ArrayList> dla otoki zwróciło moduł wyliczający, który przetraktuje drugi argument jako górną granicę, a nie jako liczbę.</span><span class="sxs-lookup"><span data-stu-id="22e6f-162">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="22e6f-163">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] W drugim argumencie jest prawidłowo traktowany jako liczba.</span><span class="sxs-lookup"><span data-stu-id="22e6f-163">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-164"><paramref name="list" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-164"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="arrayList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-165">Wartość <see cref="T:System.Object" /> do dodania na końcu <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-165">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-166">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-166">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-167">Dodaje obiekt na końcu <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-167">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-168">Indeks, w <paramref name="value" /> którym został dodany. <see cref="T:System.Collections.ArrayList" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-168">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-169"><xref:System.Collections.ArrayList>akceptuje `null` jako prawidłową wartość i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-169"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="22e6f-170">Jeśli <xref:System.Collections.ArrayList.Count%2A> już jest <xref:System.Collections.ArrayList.Capacity%2A>równa <xref:System.Collections.ArrayList> , Pojemność programu jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-170">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="22e6f-171">Jeśli <xref:System.Collections.ArrayList.Count%2A> jest mniejsza niż <xref:System.Collections.ArrayList.Capacity%2A>, ta metoda jest operacją o (1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-171">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="22e6f-172">Jeśli pojemność musi zostać zwiększona w celu uwzględnienia nowego elementu, ta metoda będzie operacją o (`n`), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-172">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-173">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList>jak dodać elementy do.</span><span class="sxs-lookup"><span data-stu-id="22e6f-173">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-174">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-174">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-175">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-175">-or-</span></span> 
<span data-ttu-id="22e6f-176"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-176">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Collections.ICollection -&gt; unit&#xA;override this.AddRange : System.Collections.ICollection -&gt; unit" Usage="arrayList.AddRange c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="22e6f-177">Których elementów należy dodać na końcu <see cref="T:System.Collections.ArrayList" />. <see cref="T:System.Collections.ICollection" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-177">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-178">Sama kolekcja nie może być <see langword="null" />, ale może zawierać elementy, które są <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-178">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-179">Dodaje elementy <see cref="T:System.Collections.ICollection" /> do końca <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-179">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-180"><xref:System.Collections.ArrayList>akceptuje `null` jako prawidłową wartość i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-180"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="22e6f-181">Kolejność elementów w <xref:System.Collections.ICollection> elemencie jest zachowywana <xref:System.Collections.ArrayList>w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-181">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-182">Jeśli nowy <xref:System.Collections.ArrayList.Count%2A> (bieżący <xref:System.Collections.ArrayList.Count%2A> i rozmiar kolekcji) będzie większy niż <xref:System.Collections.ArrayList.Capacity%2A>, pojemność <xref:System.Collections.ArrayList> jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej w celu uwzględnienia nowych elementów, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-182">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="22e6f-183">Jeśli może obsłużyć nowe elementy bez <xref:System.Collections.ArrayList.Capacity%2A>zwiększania, ta metoda jest operacją o`n`(), gdzie `n` jest liczbą elementów do dodania. <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-183">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="22e6f-184">Jeśli pojemność musi zostać zwiększona w celu uwzględnienia nowych elementów, ta metoda jest operacją o (`n` <xref:System.Collections.ArrayList.Count%2A> + `m`), gdzie `n` jest liczbą elementów do dodania `m` .</span><span class="sxs-lookup"><span data-stu-id="22e6f-184">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-185">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList>jak dodać elementy do.</span><span class="sxs-lookup"><span data-stu-id="22e6f-185">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-186"><paramref name="c" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-186"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-187">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-187">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-188">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-188">-or-</span></span> 
<span data-ttu-id="22e6f-189"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-189">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-190">Używa algorytmu wyszukiwania binarnego do lokalizowania określonego elementu w posortowanym <see cref="T:System.Collections.ArrayList" /> lub części.</span><span class="sxs-lookup"><span data-stu-id="22e6f-190">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj -&gt; int&#xA;override this.BinarySearch : obj -&gt; int" Usage="arrayList.BinarySearch value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-191"><see cref="T:System.Object" /> Aby zlokalizować.</span><span class="sxs-lookup"><span data-stu-id="22e6f-191">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="22e6f-192">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-192">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-193">Przeszukuje całe posortowane <see cref="T:System.Collections.ArrayList" /> dla elementu przy użyciu domyślnej funkcji porównującej i zwraca indeks (liczony od zera) elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-193">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="22e6f-194">Indeks <paramref name="value" /> (liczony od zera) w posortowanej <see cref="T:System.Collections.ArrayList" />, <paramref name="value" /> jeśli został znaleziony; w przeciwnym razie, wartość ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma większego elementu, to uzupełnienie <see cref="P:System.Collections.ArrayList.Count" />bitowe.</span><span class="sxs-lookup"><span data-stu-id="22e6f-194">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-195">Parametr i każdy element <xref:System.Collections.ArrayList> musi implementować <xref:System.IComparable> interfejs, który jest używany do porównywania. `value`</span><span class="sxs-lookup"><span data-stu-id="22e6f-195">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="22e6f-196">Elementy elementu <xref:System.Collections.ArrayList> muszą być już posortowane w rosnącej wartości zgodnie z porządkiem sortowania zdefiniowanym <xref:System.IComparable> przez implementację; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-196">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="22e6f-197">Porównywanie `null` z dowolnym typem jest dozwolone i nie generuje wyjątku podczas korzystania z <xref:System.IComparable>programu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-197">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="22e6f-198">Podczas sortowania `null` jest uznawana za mniej niż każdy inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="22e6f-198">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="22e6f-199"><xref:System.Collections.ArrayList> Jeśli zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jeden z wystąpień i może zwrócić dowolne wystąpienie, niekoniecznie pierwsze.</span><span class="sxs-lookup"><span data-stu-id="22e6f-199">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="22e6f-200"><xref:System.Collections.ArrayList> Jeśli nie zawiera określonej wartości, metoda zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="22e6f-200">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="22e6f-201">Można zastosować operację dopełnienia bitowego (~) do tej ujemnej liczby całkowitej, aby uzyskać indeks pierwszego elementu, który jest większy niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-201">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="22e6f-202">Podczas wstawiania wartości do <xref:System.Collections.ArrayList>, ten indeks powinien być używany jako punkt wstawiania, aby zachować porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-202">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="22e6f-203">Ta metoda jest operacją o ( `n`log), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-203">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-204">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList.BinarySearch%2A> <xref:System.Collections.ArrayList>jak używać do lokalizowania określonego obiektu w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-204">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-205">Ani elementów implementujących <see cref="T:System.IComparable" />interfejs. <see cref="T:System.Collections.ArrayList" /> <paramref name="value" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-205">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22e6f-206"><paramref name="value" />nie jest tego samego typu co elementy elementu <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-206"><paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-207">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-207">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-208"><see cref="T:System.Object" /> Aby zlokalizować.</span><span class="sxs-lookup"><span data-stu-id="22e6f-208">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="22e6f-209">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-209">The value can be <see langword="null" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="22e6f-210"><see cref="T:System.Collections.IComparer" /> Implementacja do użycia podczas porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-210">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="22e6f-211">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-211">-or-</span></span> 
 <span data-ttu-id="22e6f-212"><see langword="null" />Aby użyć domyślnej wartości porównującej, która <see cref="T:System.IComparable" /> jest implementacją każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-212"><see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="22e6f-213">Przeszukuje całe posortowane <see cref="T:System.Collections.ArrayList" /> dla elementu przy użyciu określonej funkcji porównującej i zwraca indeks (liczony od zera) elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-213">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="22e6f-214">Indeks <paramref name="value" /> (liczony od zera) w posortowanej <see cref="T:System.Collections.ArrayList" />, <paramref name="value" /> jeśli został znaleziony; w przeciwnym razie, wartość ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma większego elementu, to uzupełnienie <see cref="P:System.Collections.ArrayList.Count" />bitowe.</span><span class="sxs-lookup"><span data-stu-id="22e6f-214">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-215">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-215">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="22e6f-216">Można na przykład użyć <xref:System.Collections.CaseInsensitiveComparer> wystąpienia jako modułu porównującego do wykonywania wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="22e6f-216">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="22e6f-217">Jeśli `comparer` jest podany, elementy <xref:System.Collections.ArrayList> są porównywane z określoną wartością przy użyciu określonej <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-217">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="22e6f-218">Elementy elementu <xref:System.Collections.ArrayList> muszą być już posortowane w rosnącej wartości zgodnie z porządkiem sortowania zdefiniowanym `comparer`przez; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-218">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="22e6f-219">Jeśli `comparer` jest `null` ,<xref:System.IComparable> porównywanie odbywa się przy użyciu implementacji dostarczonej przez sam element lub przez określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-219">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="22e6f-220">Elementy elementu <xref:System.Collections.ArrayList> muszą być już posortowane w rosnącej wartości zgodnie z porządkiem sortowania zdefiniowanym <xref:System.IComparable> przez implementację; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-220">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="22e6f-221">Porównywanie `null` z dowolnym typem jest dozwolone i nie generuje wyjątku podczas korzystania z <xref:System.IComparable>programu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-221">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="22e6f-222">Podczas sortowania `null` jest uznawana za mniej niż każdy inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="22e6f-222">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="22e6f-223"><xref:System.Collections.ArrayList> Jeśli zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jeden z wystąpień i może zwrócić dowolne wystąpienie, niekoniecznie pierwsze.</span><span class="sxs-lookup"><span data-stu-id="22e6f-223">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="22e6f-224"><xref:System.Collections.ArrayList> Jeśli nie zawiera określonej wartości, metoda zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="22e6f-224">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="22e6f-225">Można zastosować operację dopełnienia bitowego (~) do tej ujemnej liczby całkowitej, aby uzyskać indeks pierwszego elementu, który jest większy niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-225">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="22e6f-226">Podczas wstawiania wartości do <xref:System.Collections.ArrayList>, ten indeks powinien być używany jako punkt wstawiania, aby zachować porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-226">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="22e6f-227">Ta metoda jest operacją o ( `n`log), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-227">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-228">Poniższy przykład tworzy <xref:System.Collections.ArrayList> kolor zwierząt.</span><span class="sxs-lookup"><span data-stu-id="22e6f-228">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="22e6f-229">Podane dane <xref:System.Collections.IComparer> wykonuje porównanie ciągów dla wyszukiwania binarnego.</span><span class="sxs-lookup"><span data-stu-id="22e6f-229">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="22e6f-230">Wyświetlane są wyniki zarówno wyszukiwania iteracyjnego, jak i wyszukiwania binarnego.</span><span class="sxs-lookup"><span data-stu-id="22e6f-230">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-231"><paramref name="comparer" />nie jest <see langword="null" /> ani elementami<see cref="T:System.Collections.ArrayList" /> implementującymi<see cref="T:System.IComparable" />interfejs. <paramref name="value" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-231"><paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22e6f-232"><paramref name="comparer" />is <see langword="null" /> <see cref="T:System.Collections.ArrayList" />i <paramref name="value" /> nie jest tego samego typu co elementy elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-232"><paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-233">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-233">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (index, count, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-234">Początkowy indeks (liczony od zera) zakresu do przeszukania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-234">The zero-based starting index of the range to search.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-235">Długość zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-235">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="22e6f-236"><see cref="T:System.Object" /> Aby zlokalizować.</span><span class="sxs-lookup"><span data-stu-id="22e6f-236">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="22e6f-237">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-237">The value can be <see langword="null" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="22e6f-238"><see cref="T:System.Collections.IComparer" /> Implementacja do użycia podczas porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-238">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="22e6f-239">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-239">-or-</span></span> 
 <span data-ttu-id="22e6f-240"><see langword="null" />Aby użyć domyślnej wartości porównującej, która <see cref="T:System.IComparable" /> jest implementacją każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-240"><see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="22e6f-241">Przeszukuje zakres elementów w posortowaniu <see cref="T:System.Collections.ArrayList" /> dla elementu przy użyciu określonej funkcji porównującej i zwraca indeks (liczony od zera) elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-241">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="22e6f-242">Indeks <paramref name="value" /> (liczony od zera) w posortowanej <see cref="T:System.Collections.ArrayList" />, <paramref name="value" /> jeśli został znaleziony; w przeciwnym razie, wartość ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma większego elementu, to uzupełnienie <see cref="P:System.Collections.ArrayList.Count" />bitowe.</span><span class="sxs-lookup"><span data-stu-id="22e6f-242">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-243">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-243">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="22e6f-244">Można na przykład użyć <xref:System.Collections.CaseInsensitiveComparer> wystąpienia jako modułu porównującego do wykonywania wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="22e6f-244">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="22e6f-245">Jeśli `comparer` jest podany, elementy <xref:System.Collections.ArrayList> są porównywane z określoną wartością przy użyciu określonej <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-245">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="22e6f-246">Elementy elementu <xref:System.Collections.ArrayList> muszą być już posortowane w rosnącej wartości zgodnie z porządkiem sortowania zdefiniowanym `comparer`przez; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-246">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="22e6f-247">Jeśli `comparer` jest `null` ,<xref:System.IComparable> porównywanie odbywa się przy użyciu implementacji dostarczonej przez sam element lub przez określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-247">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="22e6f-248">Elementy elementu <xref:System.Collections.ArrayList> muszą być już posortowane w rosnącej wartości zgodnie z porządkiem sortowania zdefiniowanym <xref:System.IComparable> przez implementację; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-248">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="22e6f-249">Porównywanie `null` z dowolnym typem jest dozwolone i nie generuje wyjątku podczas korzystania z <xref:System.IComparable>programu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-249">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="22e6f-250">Podczas sortowania `null` jest uznawana za mniej niż każdy inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="22e6f-250">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="22e6f-251"><xref:System.Collections.ArrayList> Jeśli zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jeden z wystąpień i może zwrócić dowolne wystąpienie, niekoniecznie pierwsze.</span><span class="sxs-lookup"><span data-stu-id="22e6f-251">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="22e6f-252"><xref:System.Collections.ArrayList> Jeśli nie zawiera określonej wartości, metoda zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="22e6f-252">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="22e6f-253">Można zastosować operację dopełnienia bitowego (~) do tej ujemnej liczby całkowitej, aby uzyskać indeks pierwszego elementu, który jest większy niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-253">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="22e6f-254">Podczas wstawiania wartości do <xref:System.Collections.ArrayList>, ten indeks powinien być używany jako punkt wstawiania, aby zachować porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-254">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="22e6f-255">Ta metoda jest operacją o ( `n`log), gdzie `n` is `count`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-255">This method is an O(log `n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-256"><paramref name="index" />i <paramref name="count" /> nie należy zauważyć prawidłowego zakresu <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-256"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="22e6f-257">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-257">-or-</span></span> 
 <span data-ttu-id="22e6f-258"><paramref name="comparer" />nie jest <see langword="null" /> ani elementami<see cref="T:System.Collections.ArrayList" /> implementującymi<see cref="T:System.IComparable" />interfejs. <paramref name="value" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-258"><paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22e6f-259"><paramref name="comparer" />is <see langword="null" /> <see cref="T:System.Collections.ArrayList" />i <paramref name="value" /> nie jest tego samego typu co elementy elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-259"><paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-260"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-260"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-261">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-261">-or-</span></span> 
 <span data-ttu-id="22e6f-262"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-262"><paramref name="count" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-263">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-263">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.ArrayList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22e6f-264">Pobiera lub ustawia liczbę elementów, które <see cref="T:System.Collections.ArrayList" /> może zawierać.</span><span class="sxs-lookup"><span data-stu-id="22e6f-264">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span></span></summary>
        <value><span data-ttu-id="22e6f-265">Liczba elementów, które <see cref="T:System.Collections.ArrayList" /> może zawierać.</span><span class="sxs-lookup"><span data-stu-id="22e6f-265">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-266"><xref:System.Collections.ArrayList.Capacity%2A>to liczba elementów, które <xref:System.Collections.ArrayList> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-266"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="22e6f-267"><xref:System.Collections.ArrayList.Count%2A>to liczba elementów, które faktycznie znajdują się w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-267"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-268"><xref:System.Collections.ArrayList.Capacity%2A>jest zawsze większa lub równa <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-268"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="22e6f-269">Jeśli <xref:System.Collections.ArrayList.Count%2A> przekracza<xref:System.Collections.ArrayList.Capacity%2A> podczas dodawania elementów, pojemność jest automatycznie zwiększana przez ponowne alokowanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-269">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="22e6f-270">Wydajność można zmniejszyć przez wywołanie <xref:System.Collections.ArrayList.TrimToSize%2A> lub przez <xref:System.Collections.ArrayList.Capacity%2A> ustawienie właściwości jawnie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-270">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="22e6f-271">Gdy wartość <xref:System.Collections.ArrayList.Capacity%2A> jest ustawiona jawnie, tablica wewnętrzna również jest przyalokowana ponownie w celu uwzględnienia określonej pojemności.</span><span class="sxs-lookup"><span data-stu-id="22e6f-271">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="22e6f-272">Pobieranie wartości tej właściwości jest operacją O (1); ustawienie właściwości jest operacją o (`n`), gdzie `n` jest nowa pojemność.</span><span class="sxs-lookup"><span data-stu-id="22e6f-272">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-273"><see cref="P:System.Collections.ArrayList.Capacity" />jest ustawiona na wartość, która jest mniejsza niż <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-273"><see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="22e6f-274">Za mało dostępnej pamięci w systemie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-274">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="arrayList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22e6f-275">Usuwa wszystkie elementy z <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-275">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-276"><xref:System.Collections.ArrayList.Count%2A>jest ustawiona na zero, a odwołania do innych obiektów z elementów kolekcji również są wydane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-276"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="22e6f-277"><xref:System.Collections.ArrayList.Capacity%2A>pozostaje niezmieniony.</span><span class="sxs-lookup"><span data-stu-id="22e6f-277"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="22e6f-278">Aby zresetować pojemność <xref:System.Collections.ArrayList>, wywołaj <xref:System.Collections.ArrayList.TrimToSize%2A> lub ustaw <xref:System.Collections.ArrayList.Capacity%2A> właściwość bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="22e6f-278">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="22e6f-279">Przycinanie pustego <xref:System.Collections.ArrayList> zestawu ustawia pojemność <xref:System.Collections.ArrayList> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-279">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="22e6f-280">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-280">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-281">Poniższy przykład kodu pokazuje, jak przyciąć nieużywane fragmenty <xref:System.Collections.ArrayList> i jak wyczyścić wartości. <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-281">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-282">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-282">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-283">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-283">-or-</span></span> 
<span data-ttu-id="22e6f-284"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-284">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="arrayList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22e6f-285">Tworzy skróconą kopię <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-285">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-286">Skrócona kopia <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-286">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-287">Skrócona kopia kolekcji kopiuje tylko elementy kolekcji, niezależnie od tego, czy są to typy odwołań czy typy wartości, ale nie kopiuje obiektów, do których odwołują się odwołania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-287">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="22e6f-288">Odwołania w nowej kolekcji wskazują te same obiekty, do których odwołują się odwołania w pierwotnym punkcie kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-288">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="22e6f-289">Z kolei Szczegółowa kopia kolekcji Kopiuje elementy i wszystko bezpośrednio lub pośrednio odwołujące się do elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-289">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="22e6f-290">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-290">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="arrayList.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="22e6f-291"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-291">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-292">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-292">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-293">Określa, <see cref="T:System.Collections.ArrayList" />czy element znajduje się w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-293">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-294"><see langword="true" />Jeśli <paramref name="item" /> znajduje się <see cref="T:System.Collections.ArrayList" />w; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="22e6f-294"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-295">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (`n`), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-295">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="22e6f-296">Ta metoda określa równość przez wywoływanie <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-296">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22e6f-297">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="22e6f-297">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="22e6f-298">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-298">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-299">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-299">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-300"><see cref="T:System.Collections.ArrayList" /> Kopiuje lub część tego elementu do tablicy jednowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-300">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array -&gt; unit&#xA;override this.CopyTo : Array -&gt; unit" Usage="arrayList.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="22e6f-301">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-301">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-302"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="22e6f-302">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <summary><span data-ttu-id="22e6f-303">Kopiuje cały <see cref="T:System.Collections.ArrayList" /> do zgodnego jednowymiarowego <see cref="T:System.Array" />, rozpoczynając od początku tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-303">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-304">Określona tablica musi być typu zgodnego.</span><span class="sxs-lookup"><span data-stu-id="22e6f-304">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="22e6f-305">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> do kopiowania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-305">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="22e6f-306">Elementy są kopiowane do <xref:System.Array> tabeli w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.ArrayList>przez.</span><span class="sxs-lookup"><span data-stu-id="22e6f-306">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-307">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-307">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-308">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList> jak skopiować do jednowymiarowej. <xref:System.Array?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="22e6f-308">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-309"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-309"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-310"><paramref name="array" />jest wielowymiarowych.</span><span class="sxs-lookup"><span data-stu-id="22e6f-310"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="22e6f-311">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-311">-or-</span></span> 
<span data-ttu-id="22e6f-312">Liczba elementów w źródle <see cref="T:System.Collections.ArrayList" /> jest większa niż liczba elementów, które może zawierać lokalizacja docelowa. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-312">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="22e6f-313">Nie można automatycznie rzutować <see cref="T:System.Collections.ArrayList" /> typu źródła na typ docelowy. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-313">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrayList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="22e6f-314">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-314">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-315"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="22e6f-315">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="22e6f-316">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-316">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="22e6f-317">Kopiuje cały <see cref="T:System.Collections.ArrayList" /> do zgodnego jednowymiarowego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-317">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-318">Określona tablica musi być typu zgodnego.</span><span class="sxs-lookup"><span data-stu-id="22e6f-318">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="22e6f-319">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> do kopiowania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-319">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="22e6f-320">Elementy są kopiowane do <xref:System.Array> tabeli w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.ArrayList>przez.</span><span class="sxs-lookup"><span data-stu-id="22e6f-320">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-321">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-321">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-322">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList> jak skopiować do jednowymiarowej. <xref:System.Array?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="22e6f-322">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-323"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-323"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-324"><paramref name="arrayIndex" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-324"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-325"><paramref name="array" />jest wielowymiarowych.</span><span class="sxs-lookup"><span data-stu-id="22e6f-325"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="22e6f-326">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-326">-or-</span></span> 
<span data-ttu-id="22e6f-327">Liczba elementów w źródle <see cref="T:System.Collections.ArrayList" /> jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca miejsca docelowego <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-327">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="22e6f-328">Nie można automatycznie rzutować <see cref="T:System.Collections.ArrayList" /> typu źródła na typ docelowy. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-328">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int * Array * int * int -&gt; unit&#xA;override this.CopyTo : int * Array * int * int -&gt; unit" Usage="arrayList.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-329">Indeks (liczony od zera) w źródle <see cref="T:System.Collections.ArrayList" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-329">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span></span></param>
        <param name="array"><span data-ttu-id="22e6f-330">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-330">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-331"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="22e6f-331">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="22e6f-332">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-332">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-333">Liczba elementów do skopiowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-333">The number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="22e6f-334">Kopiuje zakres elementów z <see cref="T:System.Collections.ArrayList" /> do zgodnego jednowymiarowego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-334">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-335">Określona tablica musi być typu zgodnego.</span><span class="sxs-lookup"><span data-stu-id="22e6f-335">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="22e6f-336">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> do kopiowania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-336">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="22e6f-337">Elementy są kopiowane do <xref:System.Array> tabeli w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.ArrayList>przez.</span><span class="sxs-lookup"><span data-stu-id="22e6f-337">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-338">Ta metoda jest operacją o`n`(), gdzie `n` is `count`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-338">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-339">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList> jak skopiować do jednowymiarowej. <xref:System.Array?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="22e6f-339">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-340"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-340"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-341"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-341"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-342">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-342">-or-</span></span> 
 <span data-ttu-id="22e6f-343"><paramref name="arrayIndex" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-343"><paramref name="arrayIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-344">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-344">-or-</span></span> 
 <span data-ttu-id="22e6f-345"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-345"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-346"><paramref name="array" />jest wielowymiarowych.</span><span class="sxs-lookup"><span data-stu-id="22e6f-346"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="22e6f-347">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-347">-or-</span></span> 
 <span data-ttu-id="22e6f-348"><paramref name="index" />jest równa lub większa <see cref="P:System.Collections.ArrayList.Count" /> od wartości źródłowej. <see cref="T:System.Collections.ArrayList" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-348"><paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="22e6f-349">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-349">-or-</span></span> 
<span data-ttu-id="22e6f-350">Liczba elementów od <paramref name="index" /> do końca źródła <see cref="T:System.Collections.ArrayList" /> jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca lokalizacji docelowej <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-350">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="22e6f-351">Nie można automatycznie rzutować <see cref="T:System.Collections.ArrayList" /> typu źródła na typ docelowy. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-351">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ArrayList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22e6f-352">Pobiera liczbę elementów faktycznie zawartych w <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-352">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <value><span data-ttu-id="22e6f-353">Liczba elementów rzeczywiście zawartych w <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-353">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-354"><xref:System.Collections.ArrayList.Capacity%2A>to liczba elementów, które <xref:System.Collections.ArrayList> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-354"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="22e6f-355"><xref:System.Collections.ArrayList.Count%2A>to liczba elementów, które faktycznie znajdują się w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-355"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-356"><xref:System.Collections.ArrayList.Capacity%2A>jest zawsze większa lub równa <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-356"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="22e6f-357">Jeśli <xref:System.Collections.ArrayList.Count%2A> przekracza<xref:System.Collections.ArrayList.Capacity%2A> podczas dodawania elementów, pojemność jest automatycznie zwiększana przez ponowne alokowanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-357">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="22e6f-358">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-358">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-359">Zwraca otokę listy o stałym rozmiarze, gdzie elementy mogą być modyfikowane, ale nie można ich dodawać ani usuwać.</span><span class="sxs-lookup"><span data-stu-id="22e6f-359">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="22e6f-360"><see cref="T:System.Collections.ArrayList" /> Do zawijania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-360">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="22e6f-361"><see cref="T:System.Collections.ArrayList" /> Zwraca otokę o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="22e6f-361">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span></span></summary>
        <returns><span data-ttu-id="22e6f-362"><see cref="T:System.Collections.ArrayList" /> Otoka o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="22e6f-362">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-363">Tego otoki można użyć, aby zapobiec dodawaniu i usuwaniu z oryginału <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-363">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="22e6f-364">Elementy mogą być nadal modyfikowane lub zastępowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-364">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="22e6f-365">Kolekcja o stałym rozmiarze jest po prostu kolekcją z otoką, która zapobiega dodawaniu i usuwaniu elementów; w związku z tym, jeśli wprowadzono zmiany do źródłowej kolekcji, w tym dodawanie lub usuwanie elementów, kolekcja o stałym rozmiarze odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-365">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="22e6f-366">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-366">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-367">Poniższy przykład kodu pokazuje, jak utworzyć otokę o stałym rozmiarze wokół <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-367">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-368"><paramref name="list" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-368"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="22e6f-369"><see cref="T:System.Collections.IList" /> Do zawijania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-369">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="22e6f-370"><see cref="T:System.Collections.IList" /> Zwraca otokę o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="22e6f-370">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span></span></summary>
        <returns><span data-ttu-id="22e6f-371"><see cref="T:System.Collections.IList" /> Otoka o stałym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="22e6f-371">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-372">Tego otoki można użyć, aby zapobiec dodawaniu i usuwaniu z oryginału <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-372">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="22e6f-373">Elementy mogą być nadal modyfikowane lub zastępowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-373">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="22e6f-374">Kolekcja o stałym rozmiarze jest po prostu kolekcją z otoką, która zapobiega dodawaniu i usuwaniu elementów; w związku z tym, jeśli wprowadzono zmiany do źródłowej kolekcji, w tym dodawanie lub usuwanie elementów, kolekcja o stałym rozmiarze odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-374">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="22e6f-375">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-375">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-376"><paramref name="list" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-376"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-377">Zwraca moduł wyliczający, który wykonuje iterację przez <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-377">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22e6f-378">Zwraca moduł wyliczający dla całego <see cref="T:System.Collections.ArrayList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-378">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-379"><see cref="T:System.Collections.IEnumerator" /> Dla całego<see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-379">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-380">Instrukcja języka(`for each` w Visual Basic) ukrywa złożoność modułów wyliczających. C# `foreach`</span><span class="sxs-lookup"><span data-stu-id="22e6f-380">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="22e6f-381">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="22e6f-381">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="22e6f-382">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-382">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="22e6f-383">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-383">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="22e6f-384"><xref:System.Collections.IEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="22e6f-384"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="22e6f-385">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-385">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="22e6f-386">W związku z tym przed <xref:System.Collections.IEnumerator.MoveNext%2A> przeczytaniem <xref:System.Collections.IEnumerator.Current%2A>wartości parametru należy wywołać metodę wyliczającą do pierwszego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-386">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="22e6f-387"><xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu <xref:System.Collections.IEnumerator.Reset%2A> wywołania metody lub.</span><span class="sxs-lookup"><span data-stu-id="22e6f-387"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="22e6f-388"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-388"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="22e6f-389">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-389">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="22e6f-390">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="22e6f-390">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="22e6f-391">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-391">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="22e6f-392">Aby ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-392">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="22e6f-393">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="22e6f-393">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="22e6f-394">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-394">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="22e6f-395">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-395">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="22e6f-396">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-396">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="22e6f-397">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-397">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="22e6f-398">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-398">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-399">Poniższy przykład Pobiera moduł wyliczający dla <xref:System.Collections.ArrayList>i moduł wyliczający dla zakresu elementów <xref:System.Collections.ArrayList>w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-399">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : int * int -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : int * int -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-400">Początkowy indeks <see cref="T:System.Collections.ArrayList" /> (liczony od zera) sekcji, do której powinien się odwoływać moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="22e6f-400">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-401">Liczba elementów w <see cref="T:System.Collections.ArrayList" /> sekcji, do których powinien odnosić się moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="22e6f-401">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span></span></param>
        <summary><span data-ttu-id="22e6f-402">Zwraca moduł wyliczający dla zakresu elementów w <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-402">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-403">Dla określonego zakresu elementów <see cref="T:System.Collections.ArrayList" />w. <see cref="T:System.Collections.IEnumerator" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-403">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-404">C# Instrukcjajęzyka`for each`(w języku Visual C++ VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each` `foreach`</span><span class="sxs-lookup"><span data-stu-id="22e6f-404">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="22e6f-405">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="22e6f-405">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="22e6f-406">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-406">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="22e6f-407">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-407">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="22e6f-408"><xref:System.Collections.IEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="22e6f-408"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="22e6f-409">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-409">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="22e6f-410">W związku z tym przed <xref:System.Collections.IEnumerator.MoveNext%2A> przeczytaniem <xref:System.Collections.IEnumerator.Current%2A>wartości parametru należy wywołać metodę wyliczającą do pierwszego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-410">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="22e6f-411"><xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu <xref:System.Collections.IEnumerator.Reset%2A> wywołania metody lub.</span><span class="sxs-lookup"><span data-stu-id="22e6f-411"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="22e6f-412"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-412"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="22e6f-413">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-413">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="22e6f-414">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="22e6f-414">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="22e6f-415">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-415">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="22e6f-416">Aby ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-416">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="22e6f-417">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="22e6f-417">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="22e6f-418">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-418">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="22e6f-419">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-419">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="22e6f-420">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-420">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="22e6f-421">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-421">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="22e6f-422">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-422">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="22e6f-423">Zgodność wersji</span><span class="sxs-lookup"><span data-stu-id="22e6f-423">Version Compatibility</span></span>  
 <span data-ttu-id="22e6f-424">W .NET Framework wersje 1,0 i 1,1 moduł wyliczający dla <xref:System.Collections.ArrayList> otoki zwróconej <xref:System.Collections.ArrayList.Adapter%2A> przez metodę traktuje drugi argument jako górną granicę, a nie jako liczbę.</span><span class="sxs-lookup"><span data-stu-id="22e6f-424">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="22e6f-425">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] W drugim argumencie jest prawidłowo traktowany jako liczba.</span><span class="sxs-lookup"><span data-stu-id="22e6f-425">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-426">Poniższy przykład Pobiera moduł wyliczający dla <xref:System.Collections.ArrayList>i moduł wyliczający dla zakresu elementów <xref:System.Collections.ArrayList>w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-426">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-427"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-427"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-428">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-428">-or-</span></span> 
 <span data-ttu-id="22e6f-429"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-429"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-430"><paramref name="index" />i <paramref name="count" /> nie określaj prawidłowego zakresu <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-430"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetRange : int * int -&gt; System.Collections.ArrayList&#xA;override this.GetRange : int * int -&gt; System.Collections.ArrayList" Usage="arrayList.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-431">Indeks (liczony od <see cref="T:System.Collections.ArrayList" /> zera), w którym zaczyna się zakres.</span><span class="sxs-lookup"><span data-stu-id="22e6f-431">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-432">Liczba elementów w zakresie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-432">The number of elements in the range.</span></span></param>
        <summary><span data-ttu-id="22e6f-433">Zwraca element <see cref="T:System.Collections.ArrayList" /> reprezentujący podzestaw elementów w źródle <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-433">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-434">Reprezentuje podzestaw elementów w źródle <see cref="T:System.Collections.ArrayList" />. <see cref="T:System.Collections.ArrayList" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-434">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-435">Ta metoda nie tworzy kopii elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-435">This method does not create copies of the elements.</span></span> <span data-ttu-id="22e6f-436">Nowy <xref:System.Collections.ArrayList> jest tylko oknem widoku do źródła <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-436">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="22e6f-437">Jednak wszystkie kolejne zmiany w źródle <xref:System.Collections.ArrayList> muszą zostać wykonane za pomocą tego okna <xref:System.Collections.ArrayList>widoku.</span><span class="sxs-lookup"><span data-stu-id="22e6f-437">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="22e6f-438">Jeśli zmiany są wprowadzane bezpośrednio do źródła <xref:System.Collections.ArrayList>, okno <xref:System.Collections.ArrayList> widok jest unieważnione i wszelkie operacje <xref:System.InvalidOperationException>na nim zostaną zwrócone.</span><span class="sxs-lookup"><span data-stu-id="22e6f-438">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="22e6f-439">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-439">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-440">Poniższy przykład kodu pokazuje, jak ustawić i pobrać zakres elementów w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-440">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-441"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-441"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-442">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-442">-or-</span></span> 
 <span data-ttu-id="22e6f-443"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-443"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-444"><paramref name="index" />i <paramref name="count" /> nie należy wskazywać prawidłowego zakresu elementów <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-444"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-445">Zwraca indeks (liczony od zera) pierwszego wystąpienia wartości w <see cref="T:System.Collections.ArrayList" /> lub w części.</span><span class="sxs-lookup"><span data-stu-id="22e6f-445">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="arrayList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-446"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-446">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-447">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-447">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-448">Wyszukuje określony <see cref="T:System.Object" /> i zwraca indeks (liczony od zera) pierwszego wystąpienia w całości <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-448">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-449">Indeks (liczony od zera) pierwszego wystąpienia <paramref name="value" /> w całości <see cref="T:System.Collections.ArrayList" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="22e6f-449">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-450"><xref:System.Collections.ArrayList> Jest przeszukiwany do przodu, zaczynając od pierwszego elementu i kończąc na ostatnim elemencie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-450">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="22e6f-451">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (`n`), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-451">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="22e6f-452">Ta metoda określa równość przez wywoływanie <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-452">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22e6f-453">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="22e6f-453">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="22e6f-454">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-454">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-455">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-455">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-456">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-456">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int -&gt; int&#xA;override this.IndexOf : obj * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-457"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-457">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-458">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-458">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="22e6f-459">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-459">The zero-based starting index of the search.</span></span> <span data-ttu-id="22e6f-460">wartość 0 (zero) jest prawidłowa na pustej liście.</span><span class="sxs-lookup"><span data-stu-id="22e6f-460">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="22e6f-461">Wyszukuje określony <see cref="T:System.Object" /> i zwraca indeks (liczony od zera) pierwszego wystąpienia w zakresie elementów <see cref="T:System.Collections.ArrayList" /> w programie, który rozciąga się od określonego indeksu do ostatniego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-461">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="22e6f-462">Indeks (liczony od zera) pierwszego wystąpienia <paramref name="value" /> w zakresie elementów <see cref="T:System.Collections.ArrayList" /> w programie, który rozciąga się od <paramref name="startIndex" /> do ostatniego elementu, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="22e6f-462">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-463">Jest przeszukiwany do przodu `startIndex` i kończący się na ostatnim elemencie. <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-463">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="22e6f-464">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest`n`operacją o (), gdzie `n` jest liczbą elementów od `startIndex` do końca. <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-464">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-465">Ta metoda określa równość przez wywoływanie <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-465">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22e6f-466">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="22e6f-466">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="22e6f-467">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-467">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-468">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-468">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-469"><paramref name="startIndex" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-469"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-470">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-470">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int * int -&gt; int&#xA;override this.IndexOf : obj * int * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-471"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-471">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-472">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-472">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="22e6f-473">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-473">The zero-based starting index of the search.</span></span> <span data-ttu-id="22e6f-474">wartość 0 (zero) jest prawidłowa na pustej liście.</span><span class="sxs-lookup"><span data-stu-id="22e6f-474">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-475">Liczba elementów w sekcji do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-475">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="22e6f-476">Wyszukuje określony <see cref="T:System.Object" /> i zwraca indeks (liczony od zera) pierwszego wystąpienia w zakresie elementów <see cref="T:System.Collections.ArrayList" /> w, który zaczyna się od określonego indeksu i zawiera określoną liczbę elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-476">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="22e6f-477">Indeks (liczony od zera) pierwszego <paramref name="value" /> wystąpienia elementu <see cref="T:System.Collections.ArrayList" /> w zakresie, który zaczyna się <paramref name="startIndex" /> od i zawiera <paramref name="count" /> liczbę elementów, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="22e6f-477">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-478">`count` `count` `startIndex` `startIndex` Program jest przeszukiwany do przodu, rozpoczynając od i kończąc o minus 1, jeśli jest większy niż 0. <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-478">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="22e6f-479">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (`n`), gdzie `n` is `count`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-479">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="22e6f-480">Ta metoda określa równość przez wywoływanie <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-480">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22e6f-481">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="22e6f-481">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="22e6f-482">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-482">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-483">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-483">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-484"><paramref name="startIndex" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-484"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="22e6f-485">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-485">-or-</span></span> 
 <span data-ttu-id="22e6f-486"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-486"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-487">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-487">-or-</span></span> 
 <span data-ttu-id="22e6f-488"><paramref name="startIndex" />i <paramref name="count" /> nie określaj prawidłowej sekcji <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-488"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-489">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-489">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="arrayList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-490">Indeks (liczony od zera), <paramref name="value" /> który powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="22e6f-490">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="22e6f-491"><see cref="T:System.Object" /> Do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="22e6f-491">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="22e6f-492">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-492">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-493">Wstawia element do <see cref="T:System.Collections.ArrayList" /> obiektu o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-493">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-494"><xref:System.Collections.ArrayList>akceptuje `null` jako prawidłową wartość i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-494"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="22e6f-495">Jeśli <xref:System.Collections.ArrayList.Count%2A> już jest <xref:System.Collections.ArrayList.Capacity%2A>równa <xref:System.Collections.ArrayList> , Pojemność programu jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-495">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="22e6f-496">Jeśli `index` jest `value` <xref:System.Collections.ArrayList>równa, jest dodawany do końca. <xref:System.Collections.ArrayList.Count%2A></span><span class="sxs-lookup"><span data-stu-id="22e6f-496">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-497">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="22e6f-497">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="22e6f-498">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-498">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="22e6f-499">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-499">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="22e6f-500">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-500">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-501">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList>jak wstawiać elementy do.</span><span class="sxs-lookup"><span data-stu-id="22e6f-501">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-502"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-502"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-503">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-503">-or-</span></span> 
 <span data-ttu-id="22e6f-504"><paramref name="index" />jest większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-504"><paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-505">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-505">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-506">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-506">-or-</span></span> 
<span data-ttu-id="22e6f-507"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-507">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member InsertRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.InsertRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.InsertRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-508">Indeks (liczony od zera), w którym należy wstawić nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-508">The zero-based index at which the new elements should be inserted.</span></span></param>
        <param name="c"><span data-ttu-id="22e6f-509">Których elementów należy wstawić <see cref="T:System.Collections.ArrayList" />do. <see cref="T:System.Collections.ICollection" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-509">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-510">Sama kolekcja nie może być <see langword="null" />, ale może zawierać elementy, które są <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-510">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-511">Wstawia elementy kolekcji do <see cref="T:System.Collections.ArrayList" /> określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-511">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-512"><xref:System.Collections.ArrayList>akceptuje `null` jako prawidłową wartość i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-512"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="22e6f-513">Jeśli nowy <xref:System.Collections.ArrayList.Count%2A> (bieżący <xref:System.Collections.ArrayList.Count%2A> i rozmiar kolekcji) będzie większy niż <xref:System.Collections.ArrayList.Capacity%2A>, pojemność <xref:System.Collections.ArrayList> jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej w celu uwzględnienia nowych elementów, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-513">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="22e6f-514">Jeśli `index` jest <xref:System.Collections.ArrayList>równa, elementy są dodawane na końcu. <xref:System.Collections.ArrayList.Count%2A></span><span class="sxs-lookup"><span data-stu-id="22e6f-514">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-515">Kolejność elementów w <xref:System.Collections.ICollection> elemencie jest zachowywana <xref:System.Collections.ArrayList>w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-515">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-516">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="22e6f-516">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="22e6f-517">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-517">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="22e6f-518">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-518">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="22e6f-519">Ta metoda jest operacją o`n`( `m` `n`  + ), gdzie jest liczbą elementów do dodania <xref:System.Collections.ArrayList.Count%2A>.`m`</span><span class="sxs-lookup"><span data-stu-id="22e6f-519">This method is an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-520">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList>jak wstawiać elementy do.</span><span class="sxs-lookup"><span data-stu-id="22e6f-520">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-521"><paramref name="c" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-521"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-522"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-522"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-523">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-523">-or-</span></span> 
 <span data-ttu-id="22e6f-524"><paramref name="index" />jest większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-524"><paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-525">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-525">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-526">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-526">-or-</span></span> 
<span data-ttu-id="22e6f-527"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-527">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.ArrayList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22e6f-528">Pobiera wartość wskazującą, <see cref="T:System.Collections.ArrayList" /> czy ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-528">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="22e6f-529"><see langword="true" />Jeśli ma stały rozmiar; <see langword="false" />w przeciwnym razie. <see cref="T:System.Collections.ArrayList" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-529"><see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="22e6f-530">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-530">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-531">W kolekcji o stałym rozmiarze po jej utworzeniu nie można dodawać ani usuwać elementów, jednak można modyfikować istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-531">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="22e6f-532">Kolekcja o stałym rozmiarze jest po prostu kolekcją z otoką, która zapobiega dodawaniu i usuwaniu elementów; w związku z tym, jeśli wprowadzono zmiany do źródłowej kolekcji, w tym dodawanie lub usuwanie elementów, kolekcja o stałym rozmiarze odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-532">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="22e6f-533">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-533">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-534">Poniższy przykład kodu pokazuje, jak utworzyć otokę o stałym rozmiarze wokół <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-534">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.ArrayList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22e6f-535">Pobiera wartość wskazującą, czy jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-535">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="22e6f-536"><see langword="true" />Jeśli jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-536"><see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="22e6f-537">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-537">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-538">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-538">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="22e6f-539">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-539">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="22e6f-540">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-540">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-541">Poniższy przykład kodu pokazuje, jak utworzyć otokę tylko do odczytu wokół <xref:System.Collections.ArrayList> i jak ustalić, czy jest tylko do <xref:System.Collections.ArrayList> odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-541">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.ArrayList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22e6f-542">Pobiera wartość wskazującą, <see cref="T:System.Collections.ArrayList" /> czy dostęp do elementu jest synchronizowany (bezpieczny wątkowo).</span><span class="sxs-lookup"><span data-stu-id="22e6f-542">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="22e6f-543"><see langword="true" />Jeśli dostęp do programu <see cref="T:System.Collections.ArrayList" /> jest synchronizowany (wątek bezpieczny); <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-543"><see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="22e6f-544">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-544">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-545">Aby zagwarantować bezpieczeństwo <xref:System.Collections.ArrayList>wątku, wszystkie operacje muszą być wykonywane przez otokę zwracaną <xref:System.Collections.ArrayList.Synchronized%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="22e6f-545">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="22e6f-546">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-546">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="22e6f-547">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="22e6f-547">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="22e6f-548">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="22e6f-548">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-549">Poniższy przykład kodu pokazuje, jak zablokować kolekcję przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-549">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="22e6f-550">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-550">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="22e6f-551">Poniższy przykład kodu pokazuje <xref:System.Collections.ArrayList>, jak synchronizować, określić, <xref:System.Collections.ArrayList> czy jest synchronizowana, i używać zsynchronizowanych <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-551">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.ArrayList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-552">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-552">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="22e6f-553">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="22e6f-553">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="22e6f-554">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="22e6f-554">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-555">Zwraca wartość <xref:System.Collections.ArrayList.Item%2A> a ,więcmożebyćkoniecznerzutowaniezwracanejwartościnaoryginalnytypwcelumanipulowanianim.<xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="22e6f-555">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="22e6f-556">Należy pamiętać, że <xref:System.Collections.ArrayList> nie jest to kolekcja o jednoznacznie określonym typie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-556">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="22e6f-557">Aby zapoznać się z silnie wpisaną alternatywą, zobacz <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-557">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="22e6f-558"><xref:System.Collections.ArrayList>akceptuje `null` jako prawidłową wartość i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-558"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="22e6f-559">Ta właściwość zapewnia możliwość dostępu do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-559">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="22e6f-560">C# Język używa [`this`](~/docs/csharp/language-reference/keywords/this.md) słowa kluczowego do definiowania indeksatorów <xref:System.Collections.ArrayList.Item%2A> zamiast implementowania właściwości.</span><span class="sxs-lookup"><span data-stu-id="22e6f-560">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="22e6f-561">Visual Basic implementuje <xref:System.Collections.ArrayList.Item%2A> jako właściwość domyślną, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-561">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="22e6f-562">Pobieranie wartości tej właściwości jest operacją O (1); ustawienie właściwości jest również operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-562">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-563">Poniższy przykład kodu tworzy <xref:System.Collections.ArrayList> i dodaje kilka elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-563">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="22e6f-564">W przykładzie pokazano, jak uzyskać dostęp <xref:System.Collections.ArrayList.Item%2A> do elementów z właściwością ( C#indeksator w języku) i zmienić element, przypisując <xref:System.Collections.ArrayList.Item%2A> nową wartość do właściwości określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-564">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="22e6f-565">W przykładzie pokazano również, że <xref:System.Collections.ArrayList.Item%2A> właściwość nie może być używana do uzyskiwania dostępu do elementów poza bieżącym rozmiarem listy ani do nich dodawać.</span><span class="sxs-lookup"><span data-stu-id="22e6f-565">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="22e6f-566">Poniższy przykład używa <xref:System.Collections.ArrayList.Item%2A> właściwości jawnie do przypisywania wartości do elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="22e6f-566">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="22e6f-567">W przykładzie zdefiniowano klasę, która dziedziczy <xref:System.Collections.ArrayList> i dodaje metodę w celu zamieszania elementów listy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-567">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-568"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-568"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-569">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-569">-or-</span></span> 
 <span data-ttu-id="22e6f-570"><paramref name="index" />jest równa lub większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-570"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-571">Zwraca indeks (liczony od zera) ostatniego wystąpienia wartości w <see cref="T:System.Collections.ArrayList" /> lub w części.</span><span class="sxs-lookup"><span data-stu-id="22e6f-571">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj -&gt; int&#xA;override this.LastIndexOf : obj -&gt; int" Usage="arrayList.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-572"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-572">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-573">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-573">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-574">Wyszukuje określony <see cref="T:System.Object" /> i zwraca indeks (liczony od zera) ostatniego wystąpienia w całości <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-574">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="22e6f-575">Indeks (liczony od zera) ostatniego wystąpienia <paramref name="value" /> w <see cref="T:System.Collections.ArrayList" />całości, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="22e6f-575">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-576"><xref:System.Collections.ArrayList> Jest przeszukiwany wstecz od ostatniego elementu i kończący się na pierwszym elemencie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-576">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="22e6f-577">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (`n`), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-577">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="22e6f-578">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="22e6f-578">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="22e6f-579">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-579">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-580">Poniższy przykład kodu pokazuje, jak określić indeks ostatniego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-580">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-581">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-581">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int -&gt; int&#xA;override this.LastIndexOf : obj * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-582"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-582">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-583">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-583">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="22e6f-584">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span><span class="sxs-lookup"><span data-stu-id="22e6f-584">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="22e6f-585">Wyszukuje określony <see cref="T:System.Object" /> i zwraca indeks (liczony od zera) ostatniego wystąpienia w zakresie elementów <see cref="T:System.Collections.ArrayList" /> w elemencie, który rozciąga się od pierwszego elementu do określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-585">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="22e6f-586">Indeks (liczony od zera) ostatniego wystąpienia <paramref name="value" /> w zakresie elementów <see cref="T:System.Collections.ArrayList" /> w programie, który rozciąga się od pierwszego elementu do <paramref name="startIndex" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="22e6f-586">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-587">Jest przeszukiwany wstecz od początku `startIndex` i kończąc na pierwszym elemencie. <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-587">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="22e6f-588">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest`n`operacją o (), gdzie `n` jest liczbą elementów <xref:System.Collections.ArrayList> od początku do `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-588">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="22e6f-589">Ta metoda określa równość przez wywoływanie <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-589">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22e6f-590">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="22e6f-590">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="22e6f-591">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-591">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-592">Poniższy przykład kodu pokazuje, jak określić indeks ostatniego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-592">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-593"><paramref name="startIndex" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-593"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-594">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-594">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int * int -&gt; int&#xA;override this.LastIndexOf : obj * int * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-595"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-595">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-596">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-596">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="22e6f-597">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span><span class="sxs-lookup"><span data-stu-id="22e6f-597">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-598">Liczba elementów w sekcji do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-598">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="22e6f-599">Wyszukuje określony <see cref="T:System.Object" /> i zwraca indeks (liczony od zera) ostatniego wystąpienia w zakresie elementów <see cref="T:System.Collections.ArrayList" /> w elemencie, który zawiera określoną liczbę elementów i kończą się o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-599">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="22e6f-600">Indeks (liczony od zera) ostatniego <paramref name="value" /> wystąpienia elementu <see cref="T:System.Collections.ArrayList" /> w zakresie, który zawiera <paramref name="count" /> liczbę elementów i kończą się o <paramref name="startIndex" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="22e6f-600">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-601">`count` `count` `startIndex` `startIndex` Program jest przeszukiwany wstecz od i kończąc od minusa plus 1, jeśli jest większy niż 0. <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-601">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="22e6f-602">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (`n`), gdzie `n` is `count`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-602">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="22e6f-603">Ta metoda określa równość przez wywoływanie <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-603">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22e6f-604">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="22e6f-604">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="22e6f-605">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-605">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-606">Poniższy przykład kodu pokazuje, jak określić indeks ostatniego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-606">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="22e6f-607">Zwróć uwagę `LastIndexOf` , że jest to wyszukiwanie wsteczne `count` ; w związku z tym musi być `startIndex` mniejsze lub równe + 1.</span><span class="sxs-lookup"><span data-stu-id="22e6f-607">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-608"><paramref name="startIndex" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-608"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="22e6f-609">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-609">-or-</span></span> 
 <span data-ttu-id="22e6f-610"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-610"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-611">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-611">-or-</span></span> 
 <span data-ttu-id="22e6f-612"><paramref name="startIndex" />i <paramref name="count" /> nie określaj prawidłowej sekcji <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-612"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-613">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-613">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-614">Zwraca otokę listy, która jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-614">Returns a list wrapper that is read-only.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="22e6f-615"><see cref="T:System.Collections.ArrayList" /> Do zawijania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-615">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="22e6f-616">Zwraca otokę tylko <see cref="T:System.Collections.ArrayList" /> do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-616">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="22e6f-617">Otoka w trybie <see cref="T:System.Collections.ArrayList" /> tylko do odczytu. <paramref name="list" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-617">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-618">Aby zapobiec dowolnym `list`modyfikacjom `list` , uwidaczniaj tylko za poorednictwem tego otoki.</span><span class="sxs-lookup"><span data-stu-id="22e6f-618">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="22e6f-619">Kolekcja, która jest tylko do odczytu, to po prostu kolekcja z otoką, która uniemożliwia modyfikowanie kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-619">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="22e6f-620">Jeśli zmiany są wprowadzane do kolekcji źródłowej, Kolekcja tylko do odczytu odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-620">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="22e6f-621">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-621">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-622">Poniższy przykład kodu pokazuje, jak utworzyć otokę tylko do odczytu wokół <xref:System.Collections.ArrayList> i jak ustalić, czy jest tylko do <xref:System.Collections.ArrayList> odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-622">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-623"><paramref name="list" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-623"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="22e6f-624"><see cref="T:System.Collections.IList" /> Do zawijania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-624">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="22e6f-625">Zwraca otokę tylko <see cref="T:System.Collections.IList" /> do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-625">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="22e6f-626">Otoka w trybie <see cref="T:System.Collections.IList" /> tylko do odczytu. <paramref name="list" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-626">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-627">Aby zapobiec dowolnym `list`modyfikacjom `list` , uwidaczniaj tylko za poorednictwem tego otoki.</span><span class="sxs-lookup"><span data-stu-id="22e6f-627">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="22e6f-628">Kolekcja, która jest tylko do odczytu, to po prostu kolekcja z otoką, która uniemożliwia modyfikowanie kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-628">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="22e6f-629">Jeśli zmiany są wprowadzane do kolekcji źródłowej, Kolekcja tylko do odczytu odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-629">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="22e6f-630">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-630">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-631"><paramref name="list" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-631"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="arrayList.Remove obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="22e6f-632"><see cref="T:System.Object" /> Do usunięcia <see cref="T:System.Collections.ArrayList" />z.</span><span class="sxs-lookup"><span data-stu-id="22e6f-632">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-633">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-633">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-634">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-634">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-635"><xref:System.Collections.ArrayList> Jeśli obiekt <xref:System.Collections.ArrayList> nie zawiera określonego obiektu, pozostaje niezmieniony.</span><span class="sxs-lookup"><span data-stu-id="22e6f-635">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="22e6f-636">Nie zgłoszono żadnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="22e6f-636">No exception is thrown.</span></span>  
  
 <span data-ttu-id="22e6f-637">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (`n`), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-637">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="22e6f-638">Ta metoda określa równość przez wywoływanie <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-638">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22e6f-639">W kolekcjach elementów sąsiadujących, takich jak listy, elementy znajdujące się po usuniętym elemencie są przenoszone do opuszczone.</span><span class="sxs-lookup"><span data-stu-id="22e6f-639">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="22e6f-640">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-640">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="22e6f-641">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-641">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-642">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList>jak usunąć elementy z.</span><span class="sxs-lookup"><span data-stu-id="22e6f-642">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-643">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-643">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-644">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-644">-or-</span></span> 
<span data-ttu-id="22e6f-645"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-645">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-646">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-646">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="arrayList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-647">Indeks (liczony od zera) elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="22e6f-647">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="22e6f-648">Usuwa element w określonym indeksie <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-648">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-649">Po usunięciu elementu rozmiar kolekcji jest dostosowywany, a wartość <xref:System.Collections.ArrayList.Count%2A> właściwości zostanie zmniejszona o jeden.</span><span class="sxs-lookup"><span data-stu-id="22e6f-649">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="22e6f-650">W kolekcjach elementów sąsiadujących, takich jak listy, elementy znajdujące się po usuniętym elemencie są przenoszone do opuszczone.</span><span class="sxs-lookup"><span data-stu-id="22e6f-650">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="22e6f-651">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-651">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="22e6f-652">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-652">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="22e6f-653">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-653">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-654">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList>jak usunąć elementy z.</span><span class="sxs-lookup"><span data-stu-id="22e6f-654">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-655"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-655"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-656">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-656">-or-</span></span> 
 <span data-ttu-id="22e6f-657"><paramref name="index" />jest równa lub większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-657"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-658">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-658">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-659">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-659">-or-</span></span> 
<span data-ttu-id="22e6f-660"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-660">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRange : int * int -&gt; unit&#xA;override this.RemoveRange : int * int -&gt; unit" Usage="arrayList.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-661">Początkowy indeks (liczony od zera) zakresu elementów do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="22e6f-661">The zero-based starting index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-662">Liczba elementów do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="22e6f-662">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="22e6f-663">Usuwa zakres elementów z <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-663">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-664">W kolekcjach elementów sąsiadujących, takich jak listy, elementy znajdujące się po usuniętym elemencie są przenoszone do opuszczone.</span><span class="sxs-lookup"><span data-stu-id="22e6f-664">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="22e6f-665">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-665">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="22e6f-666">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-666">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="22e6f-667">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-667">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-668">Poniższy przykład kodu pokazuje, <xref:System.Collections.ArrayList>jak usunąć elementy z.</span><span class="sxs-lookup"><span data-stu-id="22e6f-668">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-669"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-669"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-670">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-670">-or-</span></span> 
 <span data-ttu-id="22e6f-671"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-671"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-672"><paramref name="index" />i <paramref name="count" /> nie należy wskazywać prawidłowego zakresu elementów <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-672"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-673">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-673">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-674">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-674">-or-</span></span> 
<span data-ttu-id="22e6f-675"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-675">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : obj * int -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Repeat (value, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22e6f-676">Aby skopiować wiele razy w nowym <see cref="T:System.Collections.ArrayList" />. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-676">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-677">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="22e6f-677">The value can be <see langword="null" />.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-678">Liczba przypadków <paramref name="value" /> , gdy należy skopiować.</span><span class="sxs-lookup"><span data-stu-id="22e6f-678">The number of times <paramref name="value" /> should be copied.</span></span></param>
        <summary><span data-ttu-id="22e6f-679">Zwraca element <see cref="T:System.Collections.ArrayList" /> , którego elementy są kopiami określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="22e6f-679">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span></span></summary>
        <returns><span data-ttu-id="22e6f-680">Z liczbą elementów, z których wszystkie są kopiami <paramref name="value" />. <see cref="T:System.Collections.ArrayList" /> <paramref name="count" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-680">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-681"><xref:System.Collections.ArrayList>akceptuje `null` jako prawidłową wartość i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-681"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="22e6f-682">Ta metoda jest operacją o`n`(), gdzie `n` is `count`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-682">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-683">Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować nową <xref:System.Collections.ArrayList> o tej samej wartości.</span><span class="sxs-lookup"><span data-stu-id="22e6f-683">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-684"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-684"><paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-685">Odwraca kolejność elementów w <see cref="T:System.Collections.ArrayList" /> lub jej części.</span><span class="sxs-lookup"><span data-stu-id="22e6f-685">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberSignature Language="F#" Value="abstract member Reverse : unit -&gt; unit&#xA;override this.Reverse : unit -&gt; unit" Usage="arrayList.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22e6f-686">Odwraca kolejność elementów w całości <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-686">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-687">Ta metoda używa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> do odwrócenia kolejności elementów, w taki sposób, aby element w <xref:System.Collections.ArrayList> [i], gdzie jestem indeksem w zakresie, przenosi do <xref:System.Collections.ArrayList> [j], gdzie j równa `index`się  +  `index`  + -i-1. `count`</span><span class="sxs-lookup"><span data-stu-id="22e6f-687">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="22e6f-688">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-688">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-689">Poniższy przykład kodu pokazuje, jak odwrócić kolejność sortowania wartości w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-689">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-690">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-690">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Reverse : int * int -&gt; unit&#xA;override this.Reverse : int * int -&gt; unit" Usage="arrayList.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-691">Początkowy indeks (liczony od zera) zakresu do odwrócenia.</span><span class="sxs-lookup"><span data-stu-id="22e6f-691">The zero-based starting index of the range to reverse.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-692">Liczba elementów w zakresie do odwrócenia.</span><span class="sxs-lookup"><span data-stu-id="22e6f-692">The number of elements in the range to reverse.</span></span></param>
        <summary><span data-ttu-id="22e6f-693">Odwraca kolejność elementów w określonym zakresie.</span><span class="sxs-lookup"><span data-stu-id="22e6f-693">Reverses the order of the elements in the specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-694">Ta metoda używa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> do odwrócenia kolejności elementów, w taki sposób, aby element w <xref:System.Collections.ArrayList> [i], gdzie jestem indeksem w zakresie, przenosi do <xref:System.Collections.ArrayList> [j], gdzie j równa `index`się  +  `index`  + -i-1. `count`</span><span class="sxs-lookup"><span data-stu-id="22e6f-694">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="22e6f-695">Ta metoda jest operacją o`n`(), gdzie `n` is `count`.</span><span class="sxs-lookup"><span data-stu-id="22e6f-695">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-696">Poniższy przykład kodu pokazuje, jak odwrócić kolejność sortowania wartości w zakresie elementów w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-696">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-697"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-697"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-698">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-698">-or-</span></span> 
 <span data-ttu-id="22e6f-699"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-699"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-700"><paramref name="index" />i <paramref name="count" /> nie należy wskazywać prawidłowego zakresu elementów <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-700"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-701">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-701">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member SetRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.SetRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.SetRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-702">Indeks (liczony od <see cref="T:System.Collections.ArrayList" /> zera), od którego należy rozpocząć kopiowanie <paramref name="c" />elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-702">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <paramref name="c" />.</span></span></param>
        <param name="c"><span data-ttu-id="22e6f-703">Elementy <see cref="T:System.Collections.ICollection" /> , które mają być skopiowane <see cref="T:System.Collections.ArrayList" />do.</span><span class="sxs-lookup"><span data-stu-id="22e6f-703">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="22e6f-704">Sama kolekcja nie może być <see langword="null" />, ale może zawierać elementy, które są <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-704">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="22e6f-705">Kopiuje elementy kolekcji na zakres elementów w <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-705">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-706"><xref:System.Collections.ArrayList>akceptuje `null` jako prawidłową wartość i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-706"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="22e6f-707">Kolejność elementów w <xref:System.Collections.ICollection> elemencie jest zachowywana <xref:System.Collections.ArrayList>w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-707">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="22e6f-708">Ta metoda jest operacją o`n` (+ 1), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-708">This method is an O(`n` + 1) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-709">Poniższy przykład kodu pokazuje, jak ustawić i pobrać zakres elementów w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-709">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-710"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-710"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-711">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-711">-or-</span></span> 
 <span data-ttu-id="22e6f-712"><paramref name="index" />plus liczba elementów w <paramref name="c" /> jest większa niż. <see cref="P:System.Collections.ArrayList.Count" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-712"><paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-713"><paramref name="c" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-713"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-714">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-714">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-715">Sortuje elementy w <see cref="T:System.Collections.ArrayList" /> lub części tego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-715">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberSignature Language="F#" Value="abstract member Sort : unit -&gt; unit&#xA;override this.Sort : unit -&gt; unit" Usage="arrayList.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22e6f-716">Sortuje elementy w całości <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-716">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-717">Ta metoda używa <xref:System.Array.Sort%2A?displayProperty=nameWithType>metody, która używa algorytmu sortowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-717">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="22e6f-718">Algorytm sortowania to sortowanie porównania (nazywane również niestabilnym sortowaniem), co oznacza, że operacja porównania "mniejsze niż lub równe" określa, które z dwóch elementów powinny być wykonywane najpierw na końcowej liście sortowanej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-718">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="22e6f-719">Jeśli jednak dwa elementy są równe, ich oryginalne zamówienie może nie zostać zachowane.</span><span class="sxs-lookup"><span data-stu-id="22e6f-719">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="22e6f-720">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="22e6f-720">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="22e6f-721">Aby przeprowadzić stałe sortowanie, należy zaimplementować niestandardowy <xref:System.Collections.IComparer> interfejs do użycia z innymi przeciążeniami tej metody.</span><span class="sxs-lookup"><span data-stu-id="22e6f-721">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="22e6f-722">Średnio ta metoda jest`n` operacją o (log `n`), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>; w najgorszym przypadku jest to operacja o (`n`^ 2).</span><span class="sxs-lookup"><span data-stu-id="22e6f-722">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-723">Poniższy przykład kodu pokazuje, jak sortować wartości w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-723">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-724">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-724">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-725">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-725">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="22e6f-726"><see cref="T:System.Collections.IComparer" /> Implementacja do użycia podczas porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-726">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="22e6f-727">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-727">-or-</span></span> 
<span data-ttu-id="22e6f-728">Odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic), <see cref="T:System.IComparable" /> aby użyć implementacji każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-728">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="22e6f-729">Sortuje elementy w całości <see cref="T:System.Collections.ArrayList" /> przy użyciu określonej funkcji porównującej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-729">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-730">Użyj metody, aby posortować listę obiektów z niestandardowym modułem porównującym <xref:System.Collections.IComparer> , który implementuje interfejs. <xref:System.Collections.ArrayList.Sort%2A></span><span class="sxs-lookup"><span data-stu-id="22e6f-730">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="22e6f-731">Jeśli zostanie przekazany `null` do `comparer`,taMetoda korzysta z implementacjikażdegoelementu.<xref:System.IComparable></span><span class="sxs-lookup"><span data-stu-id="22e6f-731">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="22e6f-732">W takim przypadku należy upewnić się, że obiekty zawarte na liście implementują <xref:System.Collections.IComparer> interfejs lub wyjątek.</span><span class="sxs-lookup"><span data-stu-id="22e6f-732">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="22e6f-733">Ponadto przy użyciu <xref:System.IComparable> implementacji oznacza to, że lista wykonuje sortowanie porównania (nazywane również niestabilnym sortowaniem); oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="22e6f-733">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="22e6f-734">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="22e6f-734">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="22e6f-735">Aby przeprowadzić stałe sortowanie, należy zaimplementować niestandardowy <xref:System.Collections.IComparer> interfejs.</span><span class="sxs-lookup"><span data-stu-id="22e6f-735">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="22e6f-736">Średnio ta metoda jest`n` operacją o (log `n`), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>; w najgorszym przypadku jest to operacja o (`n`^ 2).</span><span class="sxs-lookup"><span data-stu-id="22e6f-736">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-737">Poniższy przykład kodu pokazuje, jak sortować wartości <xref:System.Collections.ArrayList> przy użyciu domyślnej funkcji porównującej i niestandardowego modułu porównującego, która odwraca porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-737">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-738">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-738">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22e6f-739">Wystąpił błąd podczas porównywania dwóch elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-739">An error occurred while comparing two elements.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-740"><see langword="null" />jest przesyłany <paramref name="comparer" />do i nie implementuje <see cref="T:System.IComparable" />elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="22e6f-740"><see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-741">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-741">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : int * int * System.Collections.IComparer -&gt; unit&#xA;override this.Sort : int * int * System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22e6f-742">Początkowy indeks (liczony od zera) zakresu, który ma zostać posortowany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-742">The zero-based starting index of the range to sort.</span></span></param>
        <param name="count"><span data-ttu-id="22e6f-743">Długość zakresu, który ma zostać posortowany.</span><span class="sxs-lookup"><span data-stu-id="22e6f-743">The length of the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="22e6f-744"><see cref="T:System.Collections.IComparer" /> Implementacja do użycia podczas porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-744">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="22e6f-745">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-745">-or-</span></span> 
<span data-ttu-id="22e6f-746">Odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic), <see cref="T:System.IComparable" /> aby użyć implementacji każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-746">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="22e6f-747">Sortuje elementy w zakresie elementów <see cref="T:System.Collections.ArrayList" /> przy użyciu określonej funkcji porównującej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-747">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-748">Jeśli `comparer` jest ustawiona na `null`, ta metoda wykonuje sortowanie porównania (nazywane również niestabilnym sortowaniem); oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="22e6f-748">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="22e6f-749">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="22e6f-749">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="22e6f-750">Aby przeprowadzić stałe sortowanie, należy zaimplementować niestandardowy <xref:System.Collections.IComparer> interfejs.</span><span class="sxs-lookup"><span data-stu-id="22e6f-750">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="22e6f-751">Średnio, ta metoda jest operacją o (`n` log `n`), gdzie `n` is `count`; w najgorszym przypadku jest to operacja o (n ^ 2).</span><span class="sxs-lookup"><span data-stu-id="22e6f-751">On average, this method is an O(`n` log `n`) operation, where `n` is `count`; in the worst case it is an O(n^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-752">Poniższy przykład kodu pokazuje, jak sortować wartości w zakresie elementów <xref:System.Collections.ArrayList> przy użyciu domyślnej funkcji porównującej i niestandardowego modułu porównującego, która odwraca porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-752">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22e6f-753"><paramref name="index" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-753"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="22e6f-754">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-754">-or-</span></span> 
 <span data-ttu-id="22e6f-755"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="22e6f-755"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22e6f-756"><paramref name="index" />i <paramref name="count" /> nie określaj prawidłowego zakresu <see cref="T:System.Collections.ArrayList" />w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-756"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-757">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-757">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22e6f-758">Wystąpił błąd podczas porównywania dwóch elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-758">An error occurred while comparing two elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="22e6f-759">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="22e6f-759">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-760">Zwraca otokę listy, która jest synchronizowana (bezpieczne wątki).</span><span class="sxs-lookup"><span data-stu-id="22e6f-760">Returns a list wrapper that is synchronized (thread safe).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="22e6f-761"><see cref="T:System.Collections.ArrayList" /> Do synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-761">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="22e6f-762"><see cref="T:System.Collections.ArrayList" /> Zwraca otokę, która jest synchronizowana (bezpieczne wątki).</span><span class="sxs-lookup"><span data-stu-id="22e6f-762">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span></span></summary>
        <returns><span data-ttu-id="22e6f-763"><see cref="T:System.Collections.ArrayList" /> Otoka, która jest synchronizowana (bezpieczna wątkowo).</span><span class="sxs-lookup"><span data-stu-id="22e6f-763">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-764">Aby zagwarantować bezpieczeństwo <xref:System.Collections.ArrayList>wątku, wszystkie operacje muszą zostać wykonane za pomocą tej otoki.</span><span class="sxs-lookup"><span data-stu-id="22e6f-764">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="22e6f-765">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-765">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="22e6f-766">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="22e6f-766">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="22e6f-767">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="22e6f-767">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-768">Poniższy przykład kodu pokazuje, jak zablokować kolekcję przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-768">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="22e6f-769">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-769">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="22e6f-770">Poniższy przykład kodu pokazuje <xref:System.Collections.ArrayList>, jak synchronizować, określić, <xref:System.Collections.ArrayList> czy jest synchronizowana, i używać zsynchronizowanych <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-770">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-771"><paramref name="list" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-771"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="22e6f-772"><see cref="T:System.Collections.IList" /> Do synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="22e6f-772">The <see cref="T:System.Collections.IList" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="22e6f-773"><see cref="T:System.Collections.IList" /> Zwraca otokę, która jest synchronizowana (bezpieczne wątki).</span><span class="sxs-lookup"><span data-stu-id="22e6f-773">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span></span></summary>
        <returns><span data-ttu-id="22e6f-774"><see cref="T:System.Collections.IList" /> Otoka, która jest synchronizowana (bezpieczna wątkowo).</span><span class="sxs-lookup"><span data-stu-id="22e6f-774">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-775">Aby zagwarantować bezpieczeństwo <xref:System.Collections.ArrayList>wątku, wszystkie operacje muszą zostać wykonane za pomocą tej otoki.</span><span class="sxs-lookup"><span data-stu-id="22e6f-775">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="22e6f-776">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-776">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="22e6f-777">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="22e6f-777">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="22e6f-778">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="22e6f-778">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-779">Poniższy przykład kodu pokazuje, jak zablokować kolekcję przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-779">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="22e6f-780">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-780">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-781"><paramref name="list" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-781"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.ArrayList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22e6f-782">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-782">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <value><span data-ttu-id="22e6f-783">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-783">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-784">Aby utworzyć zsynchronizowaną wersję <xref:System.Collections.ArrayList>programu, <xref:System.Collections.ArrayList.Synchronized%2A> należy użyć metody.</span><span class="sxs-lookup"><span data-stu-id="22e6f-784">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="22e6f-785">Jednak klasy pochodne mogą zapewnić własną, <xref:System.Collections.ArrayList> <xref:System.Collections.ArrayList.SyncRoot%2A> zsynchronizowaną wersję właściwości.</span><span class="sxs-lookup"><span data-stu-id="22e6f-785">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="22e6f-786">Kod synchronizacji musi wykonywać operacje na <xref:System.Collections.ArrayList.SyncRoot%2A> <xref:System.Collections.ArrayList> <xref:System.Collections.ArrayList>, nie bezpośrednio w.</span><span class="sxs-lookup"><span data-stu-id="22e6f-786">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="22e6f-787">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-787">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="22e6f-788">W celu zapewnienia odpowiedniej synchronizacji z innymi wątkami, które mogą jednocześnie modyfikować <xref:System.Collections.ArrayList> obiekt.</span><span class="sxs-lookup"><span data-stu-id="22e6f-788">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="22e6f-789">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="22e6f-789">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="22e6f-790">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="22e6f-790">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="22e6f-791">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="22e6f-791">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-792">Poniższy przykład kodu pokazuje, jak zablokować kolekcję przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="22e6f-792">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="22e6f-793">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="22e6f-793">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22e6f-794">Kopiuje elementy <see cref="T:System.Collections.ArrayList" /> do nowej tablicy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-794">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; obj[]&#xA;override this.ToArray : unit -&gt; obj[]" Usage="arrayList.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22e6f-795">Kopiuje elementy <see cref="T:System.Collections.ArrayList" /> do nowej <see cref="T:System.Object" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-795">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span></span></summary>
        <returns><span data-ttu-id="22e6f-796">Tablica zawierająca kopie elementów <see cref="T:System.Collections.ArrayList" />. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="22e6f-796">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-797">Elementy są kopiowane przy użyciu <xref:System.Array.Copy%2A?displayProperty=nameWithType>, która jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-797">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ToArray : Type -&gt; Array&#xA;override this.ToArray : Type -&gt; Array" Usage="arrayList.ToArray type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="22e6f-798">Element <see cref="T:System.Type" /> tablicy docelowej do tworzenia i kopiowania elementów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-798">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span></span></param>
        <summary><span data-ttu-id="22e6f-799">Kopiuje elementy <see cref="T:System.Collections.ArrayList" /> do nowej tablicy określonego typu elementu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-799">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span></span></summary>
        <returns><span data-ttu-id="22e6f-800">Tablica określonego typu elementu zawierającego kopie elementów <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-800">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-801">Wszystkie obiekty w <xref:System.Collections.ArrayList> obiekcie będą rzutowane <xref:System.Type> na określone w `type` parametrze.</span><span class="sxs-lookup"><span data-stu-id="22e6f-801">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="22e6f-802">Elementy są kopiowane przy użyciu <xref:System.Array.Copy%2A?displayProperty=nameWithType>, która jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-802">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-803">Poniższy przykład kopiowania pokazuje, jak skopiować elementy <xref:System.Collections.ArrayList> do tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="22e6f-803">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22e6f-804"><paramref name="type" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-804"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="22e6f-805">Nie można automatycznie rzutować <see cref="T:System.Collections.ArrayList" /> typu źródła na określony typ.</span><span class="sxs-lookup"><span data-stu-id="22e6f-805">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span></span></exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="arrayList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22e6f-806">Ustawia pojemność na rzeczywistą liczbę elementów w <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="22e6f-806">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22e6f-807">Tej metody można użyć do zminimalizowania obciążenia pamięci kolekcji, jeśli do kolekcji nie zostaną dodane żadne nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="22e6f-807">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="22e6f-808">Aby zresetować <xref:System.Collections.ArrayList> do stanu początkowego, należy <xref:System.Collections.ArrayList.Clear%2A> wywołać metodę przed wywołaniem <xref:System.Collections.ArrayList.TrimToSize%2A>metody.</span><span class="sxs-lookup"><span data-stu-id="22e6f-808">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="22e6f-809">Przycinanie pustego <xref:System.Collections.ArrayList> zestawu ustawia pojemność <xref:System.Collections.ArrayList> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="22e6f-809">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="22e6f-810">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="22e6f-810">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22e6f-811">Poniższy przykład kodu pokazuje, jak przyciąć nieużywane fragmenty <xref:System.Collections.ArrayList> i jak wyczyścić wartości. <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="22e6f-811">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22e6f-812">Jest <see cref="T:System.Collections.ArrayList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="22e6f-812">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="22e6f-813">—lub—</span><span class="sxs-lookup"><span data-stu-id="22e6f-813">-or-</span></span> 
<span data-ttu-id="22e6f-814"><see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="22e6f-814">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>
