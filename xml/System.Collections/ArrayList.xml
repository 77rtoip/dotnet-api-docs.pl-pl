<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0c57e07cb5bf2dfb3efba923e40300576325147" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42978488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IList&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eeb10-101">Implementuje <see cref="T:System.Collections.IList" /> interfejs, za pomocą tablicy, której rozmiar jest dynamicznie zwiększany stosownie do potrzeb.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeb10-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-102"><xref:System.Collections.ArrayList> Klasa jest przeznaczona do przechowywania kolekcji heterogenicznych obiektów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-102">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="eeb10-103">Jednak go nie zawsze oferuje najlepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="eeb10-103">However, it does not always offer the best performance.</span></span> <span data-ttu-id="eeb10-104">Zamiast tego zalecamy wykonanie poniższych czynności:</span><span class="sxs-lookup"><span data-stu-id="eeb10-104">Instead, we recommend the following:</span></span>  
  
-   <span data-ttu-id="eeb10-105">W przypadku heterogenicznych kolekcji obiektów, użyj `List<Object>` (w języku C#) lub `List(Of Object)` (w języku Visual Basic) wpisz.</span><span class="sxs-lookup"><span data-stu-id="eeb10-105">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
  
-   <span data-ttu-id="eeb10-106">Jednolite kolekcji obiektów, można użyć <xref:System.Collections.Generic.List%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-106">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
  
 <span data-ttu-id="eeb10-107">W sekcji "Zagadnienia związane z wydajnością" <xref:System.Collections.Generic.List%601> temat referencyjny dotyczący dyskusję względnej wydajności w ramach tych zajęć.</span><span class="sxs-lookup"><span data-stu-id="eeb10-107">See the "Performance Considerations" section in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  
  
 <span data-ttu-id="eeb10-108"><xref:System.Collections.ArrayList> Nie jest gwarantowana ma zostać posortowana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-108">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="eeb10-109">Należy sortować <xref:System.Collections.ArrayList> przez wywołanie jego <xref:System.Collections.ArrayList.Sort%2A> metoda przed wykonaniem operacji (takich jak <xref:System.Collections.ArrayList.BinarySearch%2A>), które wymagają <xref:System.Collections.ArrayList> ma zostać posortowana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-109">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="eeb10-110">Aby zachować kolekcję, która jest automatycznie posortowana w miarę dodawania nowych elementów, można użyć <xref:System.Collections.Generic.SortedSet%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-110">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="eeb10-111">Pojemność <xref:System.Collections.ArrayList> jest liczba elementów, które <xref:System.Collections.ArrayList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="eeb10-111">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="eeb10-112">Gdy elementy są dodawane do <xref:System.Collections.ArrayList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami za pośrednictwem ponownej alokacji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-112">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="eeb10-113">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.ArrayList.TrimToSize%2A> lub poprzez skonfigurowanie <xref:System.Collections.ArrayList.Capacity%2A> właściwość jawnie.</span><span class="sxs-lookup"><span data-stu-id="eeb10-113">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="eeb10-114">Dla bardzo dużych <xref:System.Collections.ArrayList> obiektów, zwiększenia maksymalnej pojemności do 2 miliardów elementów w systemie 64-bitowych, ustawiając `enabled` atrybutu tego elementu konfiguracji `true` w środowisku uruchomieniowym.</span><span class="sxs-lookup"><span data-stu-id="eeb10-114">For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="eeb10-115">Elementy w tej kolekcji są dostępne przy użyciu indeksu liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="eeb10-115">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="eeb10-116">Indeksy w tej kolekcji są oparte na zerze.</span><span class="sxs-lookup"><span data-stu-id="eeb10-116">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="eeb10-117"><xref:System.Collections.ArrayList> Kolekcja akceptuje `null` jako prawidłowa wartość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-117">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="eeb10-118">Umożliwia także zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-118">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eeb10-119">Używanie tablic wielowymiarowych jako elementy <xref:System.Collections.ArrayList> kolekcji nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-119">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-120">Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować <xref:System.Collections.ArrayList> i sposób wyświetlania wartości.</span><span class="sxs-lookup"><span data-stu-id="eeb10-120">The following code example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="eeb10-121">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeb10-121">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="eeb10-122">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeb10-122">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="eeb10-123">
        <see cref="T:System.Collections.ArrayList" /> Może obsługiwać wielu elementów odczytujących współbieżnie, tak długo, jak długo Kolekcja nie jest modyfikowany.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeb10-123">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="eeb10-124">Aby zagwarantować bezpieczeństwo wątków z <see cref="T:System.Collections.ArrayList" />, wszystkie operacje musi odbywać się przy użyciu otoki zwrócony przez <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> metody.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeb10-124">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span>
      </span>
      <span data-ttu-id="eeb10-125">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeb10-125">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="eeb10-126">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeb10-126">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="eeb10-127">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeb10-127">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ArrayList" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-128">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ArrayList" /> klasę, która jest pusta i ma pojemność domyślna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-129">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-130">Pojemność <xref:System.Collections.ArrayList> jest liczba elementów, <xref:System.Collections.ArrayList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="eeb10-130">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="eeb10-131">Gdy elementy są dodawane do <xref:System.Collections.ArrayList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-131">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="eeb10-132">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-132">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-133">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-133">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : System.Collections.ICollection -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList c" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="eeb10-134">
            <see cref="T:System.Collections.ICollection" /> Której elementy są kopiowane do nowej listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-134">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ArrayList" /> klasy zawierającej elementów kopiowanych z określonej kolekcji, która ma ten sam pojemność jako liczba elementów kopiowanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-135">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-136">Pojemność <xref:System.Collections.ArrayList> jest liczba elementów, <xref:System.Collections.ArrayList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="eeb10-136">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="eeb10-137">Gdy elementy są dodawane do <xref:System.Collections.ArrayList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-137">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="eeb10-138">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-138">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-139">Elementy są kopiowane na <xref:System.Collections.ArrayList> w tej samej kolejności, które są odczytywane przez <xref:System.Collections.IEnumerator> z <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-139">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="eeb10-140">Ten konstruktor jest O (`n`) operacji, gdzie `n` jest liczba elementów w `c`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-140">This constructor is an O(`n`) operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-141">
            <paramref name="c" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-141">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : int -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="eeb10-142">Liczba elementów, które początkowo przechowywać nową listę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-142">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ArrayList" /> klasę, która jest pusta i ma określony pojemność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-143">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-144">Pojemność <xref:System.Collections.ArrayList> jest liczba elementów, <xref:System.Collections.ArrayList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="eeb10-144">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="eeb10-145">Gdy elementy są dodawane do <xref:System.Collections.ArrayList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-145">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="eeb10-146">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-146">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-147">Ten konstruktor jest O (`n`) operacji, gdzie `n` jest `capacity`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-147">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-148">
            <paramref name="capacity" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-148">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Adapter : System.Collections.IList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Adapter list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="eeb10-149">
            <see cref="T:System.Collections.IList" /> Do opakowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-149">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-150">Tworzy <see cref="T:System.Collections.ArrayList" /> otoki dla określonego <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-150">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-151">
            <see cref="T:System.Collections.ArrayList" /> Otokę <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-151">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-152"><xref:System.Collections.ArrayList.Adapter%2A> kopiuje zawartość <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-152"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="eeb10-153">Zamiast tego tworzy jedynie <xref:System.Collections.ArrayList> otokę <xref:System.Collections.IList>; w związku z tym, zmienia się na <xref:System.Collections.IList> również wpływać na <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-153">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-154"><xref:System.Collections.ArrayList> Klasa udostępnia ogólne <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> i <xref:System.Collections.ArrayList.Sort%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eeb10-154">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="eeb10-155">Tę otokę może być środki na korzystanie z tych metod <xref:System.Collections.IList>; jednak wykonywania tych operacji ogólnego przy użyciu otoki może być mniej wydajne niż operacje stosowane bezpośrednio na <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-155">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="eeb10-156">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-156">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="eeb10-157">Zgodność wersji</span><span class="sxs-lookup"><span data-stu-id="eeb10-157">Version Compatibility</span></span>  
 <span data-ttu-id="eeb10-158">W .NET Framework w wersji 1.0 i 1.1 wywołanie <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> przeciążenie metody na <xref:System.Collections.ArrayList> otoki zwrócił moduł wyliczający, który jest traktowany jako drugi argument górną granicę, a nie liczbą.</span><span class="sxs-lookup"><span data-stu-id="eeb10-158">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="eeb10-159">W [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] drugi argument poprawnie jest traktowana jako liczba.</span><span class="sxs-lookup"><span data-stu-id="eeb10-159">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-160">
            <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-160">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="arrayList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-161">
            <see cref="T:System.Object" /> Do dodania na koniec <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-161">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-162">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-162">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-163">Dodaje obiekt na koniec <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-163">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-164">
            <see cref="T:System.Collections.ArrayList" /> Indeks, w którym <paramref name="value" /> został dodany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-164">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-165"><xref:System.Collections.ArrayList> akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-165"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eeb10-166">Jeśli <xref:System.Collections.ArrayList.Count%2A> jest już równa <xref:System.Collections.ArrayList.Capacity%2A>, pojemność <xref:System.Collections.ArrayList> jest zwiększana o automatyczne ponowne przydzielanie wewnętrznego tablicy, a istniejące elementy są kopiowane do nowej tablicy, przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-166">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="eeb10-167">Jeśli <xref:System.Collections.ArrayList.Count%2A> jest mniejsza niż <xref:System.Collections.ArrayList.Capacity%2A>, ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-167">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="eeb10-168">Jeśli pojemność musi zostać zwiększona, aby pomieścić nowy element, ta metoda staje się O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-168">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-169">W poniższym przykładzie kodu przedstawiono sposób dodawania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-169">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-170">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-170">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-171">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-171">-or-</span>
          </span>
          <span data-ttu-id="eeb10-172">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-172">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Collections.ICollection -&gt; unit&#xA;override this.AddRange : System.Collections.ICollection -&gt; unit" Usage="arrayList.AddRange c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="eeb10-173">
            <see cref="T:System.Collections.ICollection" /> Której elementy powinny zostać dodane do końca <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-173">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-174">Sama kolekcja nie może być <see langword="null" />, ale może zawierać elementy, które są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-174">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-175">Dodaje elementy <see cref="T:System.Collections.ICollection" /> na końcu <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-175">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-176"><xref:System.Collections.ArrayList> akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-176"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eeb10-177">Kolejność elementów w <xref:System.Collections.ICollection> jest zachowywana w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-177">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-178">Jeśli nowy <xref:System.Collections.ArrayList.Count%2A> (bieżący <xref:System.Collections.ArrayList.Count%2A> plus rozmiar kolekcji) będą większe niż <xref:System.Collections.ArrayList.Capacity%2A>, pojemność <xref:System.Collections.ArrayList> jest zwiększana o automatyczne ponowne przydzielanie wewnętrznego tablicy, aby uwzględnić nowe elementy i istniejące elementy są kopiowane do nowej tablicy, zanim nowe elementy są dodawane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-178">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="eeb10-179">Jeśli <xref:System.Collections.ArrayList> może obsłużyć nowych elementów bez zwiększania <xref:System.Collections.ArrayList.Capacity%2A>, ta metoda jest O (`n`) operacji, gdzie `n` jest liczba elementów do dodania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-179">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="eeb10-180">Jeśli pojemność musi zostać zwiększona w celu uwzględnienia nowych elementów, ta metoda staje się O (`n` + `m`) operacji, gdzie `n` jest liczba elementów do dodania i `m` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-180">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-181">W poniższym przykładzie kodu przedstawiono sposób dodawania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-181">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-182">
            <paramref name="c" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-182">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-183">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-183">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-184">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-184">-or-</span>
          </span>
          <span data-ttu-id="eeb10-185">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-185">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-186">Używa algorytmu wyszukiwania binarnego do zlokalizowania określonego elementu w sortowany <see cref="T:System.Collections.ArrayList" /> lub jego część.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-186">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj -&gt; int&#xA;override this.BinarySearch : obj -&gt; int" Usage="arrayList.BinarySearch value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-187">
            <see cref="T:System.Object" /> Do zlokalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-187">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="eeb10-188">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-188">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-189">Przeszukuje cały sortowane <see cref="T:System.Collections.ArrayList" /> elementu przy użyciu domyślny moduł porównujący i zwraca liczony od zera indeks elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-189">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-190">Liczony od zera indeks <paramref name="value" /> w sortowany <see cref="T:System.Collections.ArrayList" />, jeśli <paramref name="value" /> jest; w przeciwnym razie ujemnych numer, czyli uzupełnienie bitowe indeks elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnych większych elementu uzupełnienie bitowe <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-190">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-191">`value` Parametr i każdy element obiektu <xref:System.Collections.ArrayList> musi implementować <xref:System.IComparable> interfejs, który jest używany do porównania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-191">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="eeb10-192">Elementy <xref:System.Collections.ArrayList> muszą być już posortowane rosnąco, zgodnie z porządkiem sortowania zdefiniowanym przez <xref:System.IComparable> wdrażania; w przeciwnym razie wynik może być niepoprawny.</span><span class="sxs-lookup"><span data-stu-id="eeb10-192">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="eeb10-193">Porównywanie `null` jest dozwolona w przypadku każdego typu i nie generuje wyjątek, korzystając z <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-193">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="eeb10-194">Podczas sortowania `null` jest uważany za mniej niż jakikolwiek inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="eeb10-194">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="eeb10-195">Jeśli <xref:System.Collections.ArrayList> zawiera więcej niż jeden element o tej samej wartości, Metoda ta zwraca tylko jedno z wystąpień, a może zwrócić dowolną wystąpień, niekoniecznie pierwszy z nich.</span><span class="sxs-lookup"><span data-stu-id="eeb10-195">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="eeb10-196">Jeśli <xref:System.Collections.ArrayList> nie zawiera określonej wartości, Metoda ta zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="eeb10-196">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="eeb10-197">Operacja dopełnienia bitowego (~) można zastosować do tego ujemną liczbę całkowitą, aby uzyskać indeks pierwszego elementu, który jest większa niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-197">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="eeb10-198">Podczas wstawiania wartości do <xref:System.Collections.ArrayList>, ten indeks powinny służyć jako punkt wstawiania do utrzymania porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-198">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="eeb10-199">Ta metoda jest O (log `n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-199">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-200">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Collections.ArrayList.BinarySearch%2A> zlokalizować konkretny obiekt <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-200">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-201">Ani <paramref name="value" /> ani elementów <see cref="T:System.Collections.ArrayList" /> zaimplementować <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-201">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eeb10-202">
            <paramref name="value" /> nie ma tego samego typu co elementy <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-202">
              <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-203">
            <see cref="T:System.Object" /> Do zlokalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-203">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="eeb10-204">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-204">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="eeb10-205">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-205">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="eeb10-206">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-206">-or-</span>
          </span>
          <span data-ttu-id="eeb10-207">
            <see langword="null" /> Aby użyć domyślny moduł porównujący, który jest <see cref="T:System.IComparable" /> wykonania każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-207">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-208">Przeszukuje cały sortowane <see cref="T:System.Collections.ArrayList" /> elementu przy użyciu określona funkcja porównująca i zwraca liczony od zera indeks elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-208">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-209">Liczony od zera indeks <paramref name="value" /> w sortowany <see cref="T:System.Collections.ArrayList" />, jeśli <paramref name="value" /> jest; w przeciwnym razie ujemnych numer, czyli uzupełnienie bitowe indeks elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnych większych elementu uzupełnienie bitowe <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-209">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-210">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-210">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="eeb10-211">Na przykład, można użyć <xref:System.Collections.CaseInsensitiveComparer> wystąpienia jako modułu porównującego do wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="eeb10-211">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="eeb10-212">Jeśli `comparer` zostanie podany, elementy <xref:System.Collections.ArrayList> są porównywane z określoną wartość, przy użyciu określonego <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-212">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="eeb10-213">Elementy <xref:System.Collections.ArrayList> muszą być już posortowane rosnąco, zgodnie z porządkiem sortowania zdefiniowanym przez `comparer`; w przeciwnym razie wynik może być niepoprawny.</span><span class="sxs-lookup"><span data-stu-id="eeb10-213">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="eeb10-214">Jeśli `comparer` jest `null`, porównanie odbywa się przy użyciu <xref:System.IComparable> implementacji zapewnionej przez sam ten element lub przez określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-214">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="eeb10-215">Elementy <xref:System.Collections.ArrayList> muszą być już posortowane rosnąco, zgodnie z porządkiem sortowania zdefiniowanym przez <xref:System.IComparable> wdrażania; w przeciwnym razie wynik może być niepoprawny.</span><span class="sxs-lookup"><span data-stu-id="eeb10-215">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="eeb10-216">Porównywanie `null` jest dozwolona w przypadku każdego typu i nie generuje wyjątek, korzystając z <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-216">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="eeb10-217">Podczas sortowania `null` jest uważany za mniej niż jakikolwiek inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="eeb10-217">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="eeb10-218">Jeśli <xref:System.Collections.ArrayList> zawiera więcej niż jeden element o tej samej wartości, Metoda ta zwraca tylko jedno z wystąpień, a może zwrócić dowolną wystąpień, niekoniecznie pierwszy z nich.</span><span class="sxs-lookup"><span data-stu-id="eeb10-218">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="eeb10-219">Jeśli <xref:System.Collections.ArrayList> nie zawiera określonej wartości, Metoda ta zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="eeb10-219">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="eeb10-220">Operacja dopełnienia bitowego (~) można zastosować do tego ujemną liczbę całkowitą, aby uzyskać indeks pierwszego elementu, który jest większa niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-220">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="eeb10-221">Podczas wstawiania wartości do <xref:System.Collections.ArrayList>, ten indeks powinny służyć jako punkt wstawiania do utrzymania porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-221">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="eeb10-222">Ta metoda jest O (log `n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-222">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-223">Poniższy przykład tworzy <xref:System.Collections.ArrayList> kolorowe zwierząt.</span><span class="sxs-lookup"><span data-stu-id="eeb10-223">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="eeb10-224">Podany <xref:System.Collections.IComparer> wykonuje porównanie ciągu binarnego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-224">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="eeb10-225">Wyniki wyszukiwania iteracyjny i binarnego wyszukiwania są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-225">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-226">
            <paramref name="comparer" /> jest <see langword="null" /> a <paramref name="value" /> ani elementów <see cref="T:System.Collections.ArrayList" /> zaimplementować <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-226">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eeb10-227">
            <paramref name="comparer" /> jest <see langword="null" /> i <paramref name="value" /> nie jest taki sam jak elementy <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-227">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (index, count, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-228">Liczony od zera indeks początkowy zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-228">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-229">Długość zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-229">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eeb10-230">
            <see cref="T:System.Object" /> Do zlokalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-230">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="eeb10-231">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-231">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="eeb10-232">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-232">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="eeb10-233">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-233">-or-</span>
          </span>
          <span data-ttu-id="eeb10-234">
            <see langword="null" /> Aby użyć domyślny moduł porównujący, który jest <see cref="T:System.IComparable" /> wykonania każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-234">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-235">Wyszukuje zakres elementów w sortowany <see cref="T:System.Collections.ArrayList" /> elementu przy użyciu określona funkcja porównująca i zwraca liczony od zera indeks elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-235">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-236">Liczony od zera indeks <paramref name="value" /> w sortowany <see cref="T:System.Collections.ArrayList" />, jeśli <paramref name="value" /> jest; w przeciwnym razie ujemnych numer, czyli uzupełnienie bitowe indeks elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnych większych elementu uzupełnienie bitowe <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-236">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-237">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-237">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="eeb10-238">Na przykład, można użyć <xref:System.Collections.CaseInsensitiveComparer> wystąpienia jako modułu porównującego do wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="eeb10-238">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="eeb10-239">Jeśli `comparer` zostanie podany, elementy <xref:System.Collections.ArrayList> są porównywane z określoną wartość, przy użyciu określonego <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-239">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="eeb10-240">Elementy <xref:System.Collections.ArrayList> muszą być już posortowane rosnąco, zgodnie z porządkiem sortowania zdefiniowanym przez `comparer`; w przeciwnym razie wynik może być niepoprawny.</span><span class="sxs-lookup"><span data-stu-id="eeb10-240">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="eeb10-241">Jeśli `comparer` jest `null`, porównanie odbywa się przy użyciu <xref:System.IComparable> implementacji zapewnionej przez sam ten element lub przez określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-241">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="eeb10-242">Elementy <xref:System.Collections.ArrayList> muszą być już posortowane rosnąco, zgodnie z porządkiem sortowania zdefiniowanym przez <xref:System.IComparable> wdrażania; w przeciwnym razie wynik może być niepoprawny.</span><span class="sxs-lookup"><span data-stu-id="eeb10-242">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="eeb10-243">Porównywanie `null` jest dozwolona w przypadku każdego typu i nie generuje wyjątek, korzystając z <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-243">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="eeb10-244">Podczas sortowania `null` jest uważany za mniej niż jakikolwiek inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="eeb10-244">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="eeb10-245">Jeśli <xref:System.Collections.ArrayList> zawiera więcej niż jeden element o tej samej wartości, Metoda ta zwraca tylko jedno z wystąpień, a może zwrócić dowolną wystąpień, niekoniecznie pierwszy z nich.</span><span class="sxs-lookup"><span data-stu-id="eeb10-245">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="eeb10-246">Jeśli <xref:System.Collections.ArrayList> nie zawiera określonej wartości, Metoda ta zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="eeb10-246">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="eeb10-247">Operacja dopełnienia bitowego (~) można zastosować do tego ujemną liczbę całkowitą, aby uzyskać indeks pierwszego elementu, który jest większa niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-247">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="eeb10-248">Podczas wstawiania wartości do <xref:System.Collections.ArrayList>, ten indeks powinny służyć jako punkt wstawiania do utrzymania porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-248">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="eeb10-249">Ta metoda jest O (log `n`) operacji, gdzie `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-249">This method is an O(log `n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-250">
            <paramref name="index" /> i <paramref name="count" /> nie określa prawidłowego zakresu <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-250">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-251">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-251">-or-</span>
          </span>
          <span data-ttu-id="eeb10-252">
            <paramref name="comparer" /> jest <see langword="null" /> a <paramref name="value" /> ani elementów <see cref="T:System.Collections.ArrayList" /> zaimplementować <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-252">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eeb10-253">
            <paramref name="comparer" /> jest <see langword="null" /> i <paramref name="value" /> nie jest taki sam jak elementy <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-253">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-254">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-254">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-255">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-255">-or-</span>
          </span>
          <span data-ttu-id="eeb10-256">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-256">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.ArrayList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-257">Pobiera lub ustawia liczbę elementów, które <see cref="T:System.Collections.ArrayList" /> może zawierać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-257">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeb10-258">Liczba elementów, <see cref="T:System.Collections.ArrayList" /> może zawierać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-258">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-259"><xref:System.Collections.ArrayList.Capacity%2A> jest to liczba elementów, które <xref:System.Collections.ArrayList> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-259"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="eeb10-260"><xref:System.Collections.ArrayList.Count%2A> jest to liczba elementów, które są rzeczywiście w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-260"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-261"><xref:System.Collections.ArrayList.Capacity%2A> zawsze jest większa niż lub równa <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-261"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="eeb10-262">Jeśli <xref:System.Collections.ArrayList.Count%2A> przekracza <xref:System.Collections.ArrayList.Capacity%2A> podczas dodawania elementów, pojemność jest automatycznie zwiększana przez ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starymi elementami i dodawanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-262">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="eeb10-263">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.ArrayList.TrimToSize%2A> lub poprzez skonfigurowanie <xref:System.Collections.ArrayList.Capacity%2A> właściwość jawnie.</span><span class="sxs-lookup"><span data-stu-id="eeb10-263">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="eeb10-264">Gdy wartość <xref:System.Collections.ArrayList.Capacity%2A> jest ustawione jawnie, tablicy wewnętrznej alokowaniu również uwzględnić określonej pojemności.</span><span class="sxs-lookup"><span data-stu-id="eeb10-264">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="eeb10-265">Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest O (`n`) operacji, gdzie `n` jest nową pojemność.</span><span class="sxs-lookup"><span data-stu-id="eeb10-265">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-266">
            <see cref="P:System.Collections.ArrayList.Capacity" /> jest ustawiona na wartość, która jest mniejsza niż <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-266">
              <see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="eeb10-267">Brak dostępnej wystarczającej ilości pamięci w systemie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-267">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="arrayList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-268">Usuwa wszystkie elementy z <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-268">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-269"><xref:System.Collections.ArrayList.Count%2A> jest równa zero i odwołania do innych obiektów z elementów kolekcji są również zwalniane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-269"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="eeb10-270"><xref:System.Collections.ArrayList.Capacity%2A> pozostaje bez zmian.</span><span class="sxs-lookup"><span data-stu-id="eeb10-270"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="eeb10-271">Aby zresetować pojemność <xref:System.Collections.ArrayList>, wywołania <xref:System.Collections.ArrayList.TrimToSize%2A> lub ustaw <xref:System.Collections.ArrayList.Capacity%2A> właściwość bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="eeb10-271">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="eeb10-272">Przycinanie pustą <xref:System.Collections.ArrayList> ustawia pojemność <xref:System.Collections.ArrayList> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="eeb10-272">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="eeb10-273">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-273">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-274">Poniższy przykład kodu pokazuje, jak usunąć nieużywane części <xref:System.Collections.ArrayList> oraz sposób wyczyścić wartości <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-274">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-275">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-275">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-276">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-276">-or-</span>
          </span>
          <span data-ttu-id="eeb10-277">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-277">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="arrayList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-278">Tworzy kopię pobieżną <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-278">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-279">Kopia pobieżna <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-279">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-280">Płytka kopia elementu kolekcji kopiuje elementy kolekcji, czy typy odwołań i typy wartości, ale nie są kopiowane obiektów, które dotyczą odwołania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-280">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="eeb10-281">Odwołania do nowej kolekcji wskazują na te same obiekty, które wskazują odwołania w oryginalnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-281">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="eeb10-282">Z kolei kopię głęboką kolekcji kopiuje elementy i wszystko bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-282">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="eeb10-283">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-283">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="arrayList.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="eeb10-284">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-284">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-285">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-285">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-286">Określa, czy element jest <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-286">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-287">
            <see langword="true" /> Jeśli <paramref name="item" /> znajduje się w <see cref="T:System.Collections.ArrayList" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-287">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-288">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-288">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="eeb10-289">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-289">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eeb10-290">Począwszy od programu .NET Framework 2.0, Metoda ta wykorzystuje obiekty kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` do określenia, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="eeb10-290">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="eeb10-291">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametru na obiektach w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-291">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-292">Kopiuje <see cref="T:System.Collections.ArrayList" /> lub ich część jednowymiarową tablicę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-292">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array -&gt; unit&#xA;override this.CopyTo : Array -&gt; unit" Usage="arrayList.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="eeb10-293">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-293">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-294">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-294">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-295">Kopiuje cały <see cref="T:System.Collections.ArrayList" /> do zgodnego z jednowymiarowa <see cref="T:System.Array" />, począwszy od początku tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-295">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-296">Określona tablica musi być zgodne z typem.</span><span class="sxs-lookup"><span data-stu-id="eeb10-296">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="eeb10-297">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> można skopiować elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-297">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="eeb10-298">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający wykonuje iterację przez <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-298">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-299">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-300">Poniższy przykład kodu pokazuje sposób kopiowania <xref:System.Collections.ArrayList> do jednowymiarowego obiektu <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-300">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-301">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-301">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-302">
            <paramref name="array" /> ma charakter wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-302">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="eeb10-303">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-303">-or-</span>
          </span>
          <span data-ttu-id="eeb10-304">Liczba elementów w źródle <see cref="T:System.Collections.ArrayList" /> jest większa niż liczba elementów, miejsce docelowe <paramref name="array" /> może zawierać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-304">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eeb10-305">Typ źródła <see cref="T:System.Collections.ArrayList" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-305">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrayList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="eeb10-306">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-306">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-307">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-307">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="eeb10-308">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-308">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-309">Kopiuje cały <see cref="T:System.Collections.ArrayList" /> do zgodnego z jednowymiarowa <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-309">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-310">Określona tablica musi być zgodne z typem.</span><span class="sxs-lookup"><span data-stu-id="eeb10-310">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="eeb10-311">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> można skopiować elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-311">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="eeb10-312">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający wykonuje iterację przez <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-312">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-313">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-313">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-314">Poniższy przykład kodu pokazuje sposób kopiowania <xref:System.Collections.ArrayList> do jednowymiarowego obiektu <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-314">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-315">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-315">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-316">
            <paramref name="arrayIndex" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-316">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-317">
            <paramref name="array" /> ma charakter wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-317">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="eeb10-318">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-318">-or-</span>
          </span>
          <span data-ttu-id="eeb10-319">Liczba elementów w źródle <see cref="T:System.Collections.ArrayList" /> jest większa niż dostępna ilość miejsca od <paramref name="arrayIndex" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-319">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eeb10-320">Typ źródła <see cref="T:System.Collections.ArrayList" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-320">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int * Array * int * int -&gt; unit&#xA;override this.CopyTo : int * Array * int * int -&gt; unit" Usage="arrayList.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-321">Liczony od zera indeks w źródle <see cref="T:System.Collections.ArrayList" /> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-321">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="eeb10-322">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-322">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-323">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-323">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="eeb10-324">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-324">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-325">Liczba elementów do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-325">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-326">Kopiuje szereg elementów z <see cref="T:System.Collections.ArrayList" /> do zgodnego z jednowymiarowa <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-326">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-327">Określona tablica musi być zgodne z typem.</span><span class="sxs-lookup"><span data-stu-id="eeb10-327">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="eeb10-328">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> można skopiować elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-328">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="eeb10-329">Elementy są kopiowane do <xref:System.Array> w tej samej kolejności, w której moduł wyliczający wykonuje iterację przez <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-329">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-330">Ta metoda jest O (`n`) operacji, gdzie `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-330">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-331">Poniższy przykład kodu pokazuje sposób kopiowania <xref:System.Collections.ArrayList> do jednowymiarowego obiektu <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-331">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-332">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-332">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-333">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-333">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-334">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-334">-or-</span>
          </span>
          <span data-ttu-id="eeb10-335">
            <paramref name="arrayIndex" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-335">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-336">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-336">-or-</span>
          </span>
          <span data-ttu-id="eeb10-337">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-337">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-338">
            <paramref name="array" /> ma charakter wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-338">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="eeb10-339">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-339">-or-</span>
          </span>
          <span data-ttu-id="eeb10-340">
            <paramref name="index" /> jest równa lub większa niż <see cref="P:System.Collections.ArrayList.Count" /> źródła <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-340">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-341">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-341">-or-</span>
          </span>
          <span data-ttu-id="eeb10-342">Liczba elementów od <paramref name="index" /> -to-end źródła <see cref="T:System.Collections.ArrayList" /> jest większa niż dostępna ilość miejsca od <paramref name="arrayIndex" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-342">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eeb10-343">Typ źródła <see cref="T:System.Collections.ArrayList" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-343">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ArrayList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-344">Pobiera liczbę elementów znajdujących się w rzeczywistości <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-344">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeb10-345">Liczba elementów znajdujących się w rzeczywistości <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-345">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-346"><xref:System.Collections.ArrayList.Capacity%2A> jest to liczba elementów, które <xref:System.Collections.ArrayList> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-346"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="eeb10-347"><xref:System.Collections.ArrayList.Count%2A> jest to liczba elementów, które są rzeczywiście w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-347"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-348"><xref:System.Collections.ArrayList.Capacity%2A> zawsze jest większa niż lub równa <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-348"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="eeb10-349">Jeśli <xref:System.Collections.ArrayList.Count%2A> przekracza <xref:System.Collections.ArrayList.Capacity%2A> podczas dodawania elementów, pojemność jest automatycznie zwiększana przez ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starymi elementami i dodawanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-349">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="eeb10-350">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-350">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-351">Zwraca otokę listy o stałym rozmiarze, gdzie przywołanych elementów zmodyfikowana, ale nie dodane lub usunięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-351">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="eeb10-352">
            <see cref="T:System.Collections.ArrayList" /> Do opakowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-352">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-353">Zwraca <see cref="T:System.Collections.ArrayList" /> otoki o stałym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-353">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-354">
            <see cref="T:System.Collections.ArrayList" /> Otoki o stałym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-354">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-355">Tę otokę może służyć do uniemożliwić uzupełnienia i usunięcia z oryginalnym <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-355">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="eeb10-356">Elementy można nadal zmodyfikowane lub zastąpione.</span><span class="sxs-lookup"><span data-stu-id="eeb10-356">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="eeb10-357">Kolekcja o stałym rozmiarze jest po prostu zbiorem z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym jeśli zmiany zostały wprowadzone do podstawowej kolekcji, w tym dodawania lub usuwania elementów kolekcji o stałym rozmiarze uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="eeb10-357">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="eeb10-358">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-358">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-359">Poniższy przykład kodu pokazuje sposób tworzenia stałym rozmiarze otokę <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-359">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-360">
            <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-360">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="eeb10-361">
            <see cref="T:System.Collections.IList" /> Do opakowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-361">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-362">Zwraca <see cref="T:System.Collections.IList" /> otoki o stałym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-362">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-363">
            <see cref="T:System.Collections.IList" /> Otoki o stałym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-363">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-364">Tę otokę może służyć do uniemożliwić uzupełnienia i usunięcia z oryginalnym <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-364">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="eeb10-365">Elementy można nadal zmodyfikowane lub zastąpione.</span><span class="sxs-lookup"><span data-stu-id="eeb10-365">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="eeb10-366">Kolekcja o stałym rozmiarze jest po prostu zbiorem z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym jeśli zmiany zostały wprowadzone do podstawowej kolekcji, w tym dodawania lub usuwania elementów kolekcji o stałym rozmiarze uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="eeb10-366">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="eeb10-367">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-367">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-368">
            <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-368">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-369">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-369">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-370">Zwraca moduł wyliczający dla całego <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-370">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-371">
            <see cref="T:System.Collections.IEnumerator" /> Dla całego <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-371">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-372">`foreach` Instrukcja języka C# (`for each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="eeb10-372">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="eeb10-373">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="eeb10-373">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="eeb10-374">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="eeb10-374">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="eeb10-375">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-375">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="eeb10-376"><xref:System.Collections.IEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-376"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="eeb10-377">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-377">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="eeb10-378">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-378">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="eeb10-379"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-379"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="eeb10-380"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-380"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="eeb10-381">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-381">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="eeb10-382">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-382">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="eeb10-383">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-383">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="eeb10-384">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-384">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="eeb10-385">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="eeb10-385">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="eeb10-386">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-386">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="eeb10-387">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-387">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="eeb10-388">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-388">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="eeb10-389">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-389">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="eeb10-390">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-390">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-391">Poniższy przykład pobiera program wyliczający dla <xref:System.Collections.ArrayList>, a moduł wyliczający dla szeregu elementów w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-391">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : int * int -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : int * int -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-392">Liczony od zera indeks początkowy <see cref="T:System.Collections.ArrayList" /> modułu wyliczającego powinni zapoznać się z sekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-392">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-393">Liczba elementów w <see cref="T:System.Collections.ArrayList" /> modułu wyliczającego powinni zapoznać się z sekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-393">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-394">Zwraca moduł wyliczający dla szeregu elementów w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-394">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-395">
            <see cref="T:System.Collections.IEnumerator" /> Dla określonego zakresu elementów w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-395">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-396">`foreach` Instrukcja języka C# (`for each` w programie Visual C++ `For Each` języka Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="eeb10-396">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="eeb10-397">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="eeb10-397">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="eeb10-398">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="eeb10-398">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="eeb10-399">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-399">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="eeb10-400"><xref:System.Collections.IEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-400"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="eeb10-401">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-401">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="eeb10-402">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-402">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="eeb10-403"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-403"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="eeb10-404"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-404"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="eeb10-405">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-405">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="eeb10-406">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-406">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="eeb10-407">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="eeb10-407">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="eeb10-408">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-408">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="eeb10-409">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="eeb10-409">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="eeb10-410">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-410">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="eeb10-411">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-411">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="eeb10-412">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-412">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="eeb10-413">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-413">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="eeb10-414">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-414">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="eeb10-415">Zgodność wersji</span><span class="sxs-lookup"><span data-stu-id="eeb10-415">Version Compatibility</span></span>  
 <span data-ttu-id="eeb10-416">W .NET Framework w wersji 1.0 i 1.1, moduł wyliczający dla <xref:System.Collections.ArrayList> otoki zwrócony przez <xref:System.Collections.ArrayList.Adapter%2A> metoda traktowane drugi argument górną granicę, a nie liczbą.</span><span class="sxs-lookup"><span data-stu-id="eeb10-416">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="eeb10-417">W [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] drugi argument poprawnie jest traktowana jako liczba.</span><span class="sxs-lookup"><span data-stu-id="eeb10-417">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-418">Poniższy przykład pobiera program wyliczający dla <xref:System.Collections.ArrayList>, a moduł wyliczający dla szeregu elementów w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-418">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-419">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-419">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-420">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-420">-or-</span>
          </span>
          <span data-ttu-id="eeb10-421">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-421">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-422">
            <paramref name="index" /> i <paramref name="count" /> nie określono prawidłowego zakresu <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-422">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetRange : int * int -&gt; System.Collections.ArrayList&#xA;override this.GetRange : int * int -&gt; System.Collections.ArrayList" Usage="arrayList.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-423">Liczony od zera <see cref="T:System.Collections.ArrayList" /> indeksu, który rozpoczyna się zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-423">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-424">Liczba elementów w zakresie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-424">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-425">Zwraca <see cref="T:System.Collections.ArrayList" /> reprezentuje podzbiór elementów w źródle <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-425">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-426">
            <see cref="T:System.Collections.ArrayList" /> Reprezentuje podzbiór elementów w źródle <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-426">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-427">Ta metoda nie tworzy kopii elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-427">This method does not create copies of the elements.</span></span> <span data-ttu-id="eeb10-428">Nowy <xref:System.Collections.ArrayList> jest tylko okno Widok do źródła skrzynki <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-428">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="eeb10-429">Jednak wszystkie kolejne zmiany w źródle <xref:System.Collections.ArrayList> musi odbywać się za pośrednictwem tego okna widoku <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-429">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="eeb10-430">Jeśli zmiany zostaną wprowadzone bezpośrednio ze źródłem <xref:System.Collections.ArrayList>, okno Widok <xref:System.Collections.ArrayList> zostaje unieważniony, i zwraca wszystkie operacje na nim <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-430">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="eeb10-431">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-431">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-432">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać zakres elementów w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-432">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-433">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-433">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-434">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-434">-or-</span>
          </span>
          <span data-ttu-id="eeb10-435">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-435">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-436">
            <paramref name="index" /> i <paramref name="count" /> określa prawidłowy zakres elementów w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-436">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-437">Zwraca liczony od zera indeks pierwszego wystąpienia wartości w <see cref="T:System.Collections.ArrayList" /> lub w jego części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-437">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="arrayList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-438">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-438">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-439">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-439">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-440">Wyszukuje określony <see cref="T:System.Object" /> i zwraca liczony od zera indeks pierwszego wystąpienia w ramach całego <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-440">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-441">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w obrębie całego <see cref="T:System.Collections.ArrayList" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-441">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-442"><xref:System.Collections.ArrayList> Przeszukiwany jest do przodu zaczynając od pierwszego elementu, a kończąc na ostatnim elemencie.</span><span class="sxs-lookup"><span data-stu-id="eeb10-442">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="eeb10-443">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-443">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="eeb10-444">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-444">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eeb10-445">Począwszy od programu .NET Framework 2.0, Metoda ta wykorzystuje obiekty kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` do określenia, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="eeb10-445">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="eeb10-446">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametru na obiektach w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-446">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-447">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-447">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int -&gt; int&#xA;override this.IndexOf : obj * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-448">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-448">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-449">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-449">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="eeb10-450">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-450">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="eeb10-451">0 (zero) jest prawidłowa w pustej listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-451">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-452">Wyszukuje określony <see cref="T:System.Object" /> i zwraca liczony od zera indeks pierwszego wystąpienia w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> który rozciąga się od określonego indeksu do ostatniego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-452">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-453">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> rozciąga się od <paramref name="startIndex" /> do ostatniego elementu, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-453">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-454"><xref:System.Collections.ArrayList> Jest przeszukiwany w przód od `startIndex` a kończąc na do ostatniego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-454">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="eeb10-455">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest liczba elementów od `startIndex` na końcu <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-455">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-456">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-456">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eeb10-457">Począwszy od programu .NET Framework 2.0, Metoda ta wykorzystuje obiekty kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` do określenia, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="eeb10-457">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="eeb10-458">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametru na obiektach w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-458">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-459">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-459">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-460">
            <paramref name="startIndex" /> znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-460">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int * int -&gt; int&#xA;override this.IndexOf : obj * int * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-461">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-461">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-462">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-462">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="eeb10-463">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-463">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="eeb10-464">0 (zero) jest prawidłowa w pustej listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-464">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-465">Liczba elementów w sekcji do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-465">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-466">Wyszukuje określony <see cref="T:System.Object" /> i zwraca liczony od zera indeks pierwszego wystąpienia w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> , rozpoczyna się od określonego indeksu i zawiera określonej liczby elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-466">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-467">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> rozpoczynająca się w <paramref name="startIndex" /> i zawiera <paramref name="count" /> liczby elementów, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-467">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-468"><xref:System.Collections.ArrayList> Jest przeszukiwany w przód od `startIndex` i kończące się wierszem `startIndex` oraz `count` minus 1, jeśli `count` jest większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="eeb10-468">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="eeb10-469">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-469">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="eeb10-470">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-470">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eeb10-471">Począwszy od programu .NET Framework 2.0, Metoda ta wykorzystuje obiekty kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` do określenia, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="eeb10-471">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="eeb10-472">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametru na obiektach w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-472">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-473">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-473">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-474">
            <paramref name="startIndex" /> znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-474">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-475">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-475">-or-</span>
          </span>
          <span data-ttu-id="eeb10-476">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-476">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-477">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-477">-or-</span>
          </span>
          <span data-ttu-id="eeb10-478">
            <paramref name="startIndex" /> i <paramref name="count" /> nie określają prawidłowej sekcji w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-478">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="arrayList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-479">Liczony od zera indeks, w którym <c>wartość</c> powinien zostać wstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-479">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eeb10-480">
            <see cref="T:System.Object" /> Do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-480">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="eeb10-481">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-481">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-482">Wstawia element do <see cref="T:System.Collections.ArrayList" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-482">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-483"><xref:System.Collections.ArrayList> akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-483"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eeb10-484">Jeśli <xref:System.Collections.ArrayList.Count%2A> jest już równa <xref:System.Collections.ArrayList.Capacity%2A>, pojemność <xref:System.Collections.ArrayList> jest zwiększana o automatyczne ponowne przydzielanie wewnętrznego tablicy, a istniejące elementy są kopiowane do nowej tablicy, przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-484">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="eeb10-485">Jeśli `index` jest równa <xref:System.Collections.ArrayList.Count%2A>, `value` zostanie dodany na końcu <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-485">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-486">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="eeb10-486">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="eeb10-487">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-487">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="eeb10-488">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-488">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="eeb10-489">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-489">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-490">Poniższy przykład kodu pokazuje sposób wstawiania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-490">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-491">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-491">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-492">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-492">-or-</span>
          </span>
          <span data-ttu-id="eeb10-493">
            <paramref name="index" /> jest większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-493">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-494">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-494">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-495">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-495">-or-</span>
          </span>
          <span data-ttu-id="eeb10-496">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-496">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member InsertRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.InsertRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.InsertRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-497">Liczony od zera indeks, w którym należy dodać nowe elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-497">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="eeb10-498">
            <see cref="T:System.Collections.ICollection" /> Której elementy powinien zostać wstawiony do <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-498">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-499">Sama kolekcja nie może być <see langword="null" />, ale może zawierać elementy, które są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-499">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-500">Wstawia elementy kolekcji do <see cref="T:System.Collections.ArrayList" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-500">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-501"><xref:System.Collections.ArrayList> akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-501"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eeb10-502">Jeśli nowy <xref:System.Collections.ArrayList.Count%2A> (bieżący <xref:System.Collections.ArrayList.Count%2A> plus rozmiar kolekcji) będą większe niż <xref:System.Collections.ArrayList.Capacity%2A>, pojemność <xref:System.Collections.ArrayList> jest zwiększana o automatyczne ponowne przydzielanie wewnętrznego tablicy, aby uwzględnić nowe elementy i istniejące elementy są kopiowane do nowej tablicy, zanim nowe elementy są dodawane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-502">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="eeb10-503">Jeśli `index` jest równa <xref:System.Collections.ArrayList.Count%2A>, elementy są dodawane na końcu <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-503">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-504">Kolejność elementów w <xref:System.Collections.ICollection> jest zachowywana w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-504">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-505">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="eeb10-505">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="eeb10-506">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-506">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="eeb10-507">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-507">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="eeb10-508">Ta metoda jest O (`n` + `m`) operacji, gdzie `n` jest liczba elementów do dodania i `m` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-508">This method is an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-509">Poniższy przykład kodu pokazuje sposób wstawiania elementów do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-509">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-510">
            <paramref name="c" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-510">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-511">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-511">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-512">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-512">-or-</span>
          </span>
          <span data-ttu-id="eeb10-513">
            <paramref name="index" /> jest większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-513">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-514">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-514">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-515">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-515">-or-</span>
          </span>
          <span data-ttu-id="eeb10-516">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-516">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.ArrayList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-517">Pobiera wartość wskazującą czy <see cref="T:System.Collections.ArrayList" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-517">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeb10-518">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.ArrayList" /> ma stały rozmiar; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-518">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eeb10-519">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-519">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-520">W kolekcji o stałym rozmiarze po jej utworzeniu nie można dodawać ani usuwać elementów, jednak można modyfikować istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-520">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="eeb10-521">Kolekcja o stałym rozmiarze jest po prostu zbiorem z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym jeśli zmiany zostały wprowadzone do podstawowej kolekcji, w tym dodawania lub usuwania elementów kolekcji o stałym rozmiarze uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="eeb10-521">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="eeb10-522">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-522">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-523">Poniższy przykład kodu pokazuje sposób tworzenia stałym rozmiarze otokę <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-523">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.ArrayList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-524">Pobiera wartość wskazującą czy <see cref="T:System.Collections.ArrayList" /> jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-524">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeb10-525">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.ArrayList" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-525">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eeb10-526">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-526">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-527">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-527">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="eeb10-528">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="eeb10-528">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="eeb10-529">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-529">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-530">Poniższy przykład kodu pokazuje sposób tworzenia tylko do odczytu otokę <xref:System.Collections.ArrayList> i jak określić, czy <xref:System.Collections.ArrayList> jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-530">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.ArrayList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-531">Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Collections.ArrayList" /> jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-531">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeb10-532">
            <see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.ArrayList" /> jest synchronizowane (wątkowo); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-532">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eeb10-533">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-533">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-534">Aby zagwarantować bezpieczeństwo wątków z <xref:System.Collections.ArrayList>, wszystkie operacje musi odbywać się przy użyciu otoki zwrócony przez <xref:System.Collections.ArrayList.Synchronized%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eeb10-534">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="eeb10-535">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-535">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="eeb10-536">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="eeb10-536">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="eeb10-537">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="eeb10-537">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-538">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-538">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="eeb10-539">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-539">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="eeb10-540">Poniższy przykład kodu pokazuje, jak synchronizować <xref:System.Collections.ArrayList>, ustal, czy <xref:System.Collections.ArrayList> jest synchronizowane i użyj zsynchronizowany <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-540">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.ArrayList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-541">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-541">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-542">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-542">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeb10-543">Element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-543">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-544"><xref:System.Collections.ArrayList.Item%2A> Zwraca <xref:System.Object>, więc konieczne może być rzutowania zwrócona wartość do oryginalnego typu w celu modyfikowania go.</span><span class="sxs-lookup"><span data-stu-id="eeb10-544">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="eeb10-545">Ważne jest, aby pamiętać, że <xref:System.Collections.ArrayList> nie jest silnie typizowaną kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eeb10-545">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="eeb10-546">Aby zamiast silnie typizowane, zobacz <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-546">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="eeb10-547"><xref:System.Collections.ArrayList> akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-547"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eeb10-548">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-548">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="eeb10-549">W języku C# używa słowa kluczowego w celu zdefiniowania indeksatorów, a nie Implementowanie <xref:System.Collections.ArrayList.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="eeb10-549">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="eeb10-550">Implementuje języka Visual Basic <xref:System.Collections.ArrayList.Item%2A> jako właściwość domyślną, która zapewnia taką samą funkcjonalność indeksowania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-550">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="eeb10-551">Pobieranie wartości tej właściwości jest operacją O(1); Ustawianie właściwości również jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-551">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-552">Poniższy przykład kodu tworzy <xref:System.Collections.ArrayList> i dodaje kilka elementów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-552">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="eeb10-553">W przykładzie pokazano uzyskiwanie dostępu do elementów o <xref:System.Collections.ArrayList.Item%2A> właściwości (indeksatora w języku C#), a zmiany elementu, przypisując nową wartość do <xref:System.Collections.ArrayList.Item%2A> właściwości dla określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-553">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="eeb10-554">W przykładzie pokazano również, <xref:System.Collections.ArrayList.Item%2A> właściwości nie można uzyskać dostęp do lub dodać elementy poza bieżący rozmiar listy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-554">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="eeb10-555">W poniższym przykładzie użyto <xref:System.Collections.ArrayList.Item%2A> właściwość jawnie, aby przypisać wartości do elementów listy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-555">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="eeb10-556">W przykładzie zdefiniowano klasę, która dziedziczy <xref:System.Collections.ArrayList> i dodaje metodę szyfrują elementów listy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-556">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-557">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-557">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-558">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-558">-or-</span>
          </span>
          <span data-ttu-id="eeb10-559">
            <paramref name="index" /> jest równa lub większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-559">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-560">Zwraca liczony od zera indeks ostatniego wystąpienia wartości w <see cref="T:System.Collections.ArrayList" /> lub w jego części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-560">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj -&gt; int&#xA;override this.LastIndexOf : obj -&gt; int" Usage="arrayList.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-561">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-561">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-562">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-562">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-563">Wyszukuje określony <see cref="T:System.Object" /> i zwraca liczony od zera indeks ostatniego wystąpienia w ramach całego <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-563">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-564">Liczony od zera indeks ostatniego wystąpienia <paramref name="value" /> w obrębie całego <see cref="T:System.Collections.ArrayList" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-564">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-565"><xref:System.Collections.ArrayList> Jest przeszukiwany w tył od ostatniego elementu, a kończąc na pierwszy element.</span><span class="sxs-lookup"><span data-stu-id="eeb10-565">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="eeb10-566">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-566">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="eeb10-567">Począwszy od programu .NET Framework 2.0, Metoda ta wykorzystuje obiekty kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` do określenia, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="eeb10-567">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="eeb10-568">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametru na obiektach w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-568">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-569">Poniższy przykład kodu pokazuje, jak określić indeks ostatniego wystąpienia określony element.</span><span class="sxs-lookup"><span data-stu-id="eeb10-569">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int -&gt; int&#xA;override this.LastIndexOf : obj * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-570">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-570">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-571">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-571">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="eeb10-572">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-572">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-573">Wyszukuje określony <see cref="T:System.Object" /> i zwraca liczony od zera indeks ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> który rozciąga się od pierwszego elementu zgodnie z określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-573">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-574">Liczony od zera indeks ostatniego wystąpienia <paramref name="value" /> w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> rozciąga się od pierwszego elementu na <paramref name="startIndex" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-574">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-575"><xref:System.Collections.ArrayList> Jest wyszukiwanych ze starszymi wersjami zaczynając od `startIndex` a kończąc na pierwszy element.</span><span class="sxs-lookup"><span data-stu-id="eeb10-575">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="eeb10-576">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest liczba elementów od początku <xref:System.Collections.ArrayList> do `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-576">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="eeb10-577">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-577">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eeb10-578">Począwszy od programu .NET Framework 2.0, Metoda ta wykorzystuje obiekty kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` do określenia, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="eeb10-578">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="eeb10-579">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametru na obiektach w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-579">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-580">Poniższy przykład kodu pokazuje, jak określić indeks ostatniego wystąpienia określony element.</span><span class="sxs-lookup"><span data-stu-id="eeb10-580">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-581">
            <paramref name="startIndex" /> znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-581">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int * int -&gt; int&#xA;override this.LastIndexOf : obj * int * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-582">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-582">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-583">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-583">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="eeb10-584">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-584">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-585">Liczba elementów w sekcji do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-585">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-586">Wyszukuje określony <see cref="T:System.Object" /> i zwraca liczony od zera indeks ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> zawierający określoną liczbę elementów i kończy się pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-586">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-587">Liczony od zera indeks ostatniego wystąpienia <paramref name="value" /> w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> zawierający <paramref name="count" /> liczby elementów i kończy o godzinie <paramref name="startIndex" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-587">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-588"><xref:System.Collections.ArrayList> Jest wyszukiwanych ze starszymi wersjami zaczynając od `startIndex` i kończące się wierszem `startIndex` minus `count` plus 1, jeśli `count` jest większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="eeb10-588">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="eeb10-589">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-589">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="eeb10-590">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-590">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eeb10-591">Począwszy od programu .NET Framework 2.0, Metoda ta wykorzystuje obiekty kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` do określenia, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="eeb10-591">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="eeb10-592">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametru na obiektach w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-592">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-593">Poniższy przykład kodu pokazuje, jak określić indeks ostatniego wystąpienia określony element.</span><span class="sxs-lookup"><span data-stu-id="eeb10-593">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="eeb10-594">Należy pamiętać, że `LastIndexOf` jest wyszukiwania do tyłu; dlatego `count` musi być mniejsza lub równa `startIndex` + 1.</span><span class="sxs-lookup"><span data-stu-id="eeb10-594">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-595">
            <paramref name="startIndex" /> znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-595">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-596">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-596">-or-</span>
          </span>
          <span data-ttu-id="eeb10-597">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-597">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-598">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-598">-or-</span>
          </span>
          <span data-ttu-id="eeb10-599">
            <paramref name="startIndex" /> i <paramref name="count" /> nie określają prawidłowej sekcji w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-599">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-600">Zwraca otoki listy, który jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-600">Returns a list wrapper that is read-only.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="eeb10-601">
            <see cref="T:System.Collections.ArrayList" /> Do opakowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-601">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-602">Zwraca tylko do odczytu <see cref="T:System.Collections.ArrayList" /> otoki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-602">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-603">Tylko do odczytu <see cref="T:System.Collections.ArrayList" /> otokę <paramref name="list" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-603">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-604">Aby zapobiec wszelkie modyfikacje `list`, udostępnianie `list` tylko przez tę otokę.</span><span class="sxs-lookup"><span data-stu-id="eeb10-604">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="eeb10-605">Kolekcja, która jest tylko do odczytu jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-605">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="eeb10-606">Jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, Kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="eeb10-606">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="eeb10-607">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-607">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-608">Poniższy przykład kodu pokazuje sposób tworzenia tylko do odczytu otokę <xref:System.Collections.ArrayList> i jak określić, czy <xref:System.Collections.ArrayList> jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-608">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-609">
            <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-609">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="eeb10-610">
            <see cref="T:System.Collections.IList" /> Do opakowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-610">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-611">Zwraca tylko do odczytu <see cref="T:System.Collections.IList" /> otoki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-611">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-612">Tylko do odczytu <see cref="T:System.Collections.IList" /> otokę <paramref name="list" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-612">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-613">Aby zapobiec wszelkie modyfikacje `list`, udostępnianie `list` tylko przez tę otokę.</span><span class="sxs-lookup"><span data-stu-id="eeb10-613">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="eeb10-614">Kolekcja, która jest tylko do odczytu jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-614">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="eeb10-615">Jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, Kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="eeb10-615">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="eeb10-616">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-616">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-617">
            <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-617">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="arrayList.Remove obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="eeb10-618">
            <see cref="T:System.Object" /> Do usunięcia z <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-618">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-619">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-619">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-620">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-620">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-621">Jeśli <xref:System.Collections.ArrayList> nie zawiera określonego obiektu <xref:System.Collections.ArrayList> pozostaje bez zmian.</span><span class="sxs-lookup"><span data-stu-id="eeb10-621">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="eeb10-622">Jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="eeb10-622">No exception is thrown.</span></span>  
  
 <span data-ttu-id="eeb10-623">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-623">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="eeb10-624">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-624">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eeb10-625">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="eeb10-625">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="eeb10-626">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-626">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="eeb10-627">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-627">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-628">Poniższy przykład kodu pokazuje, jak usunąć elementy z <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-628">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-629">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-629">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-630">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-630">-or-</span>
          </span>
          <span data-ttu-id="eeb10-631">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-631">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="arrayList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-632">Liczony od zera indeks elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-632">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-633">Usuwa element o określonym indeksie <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-633">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-634">Po usunięciu elementu rozmiar kolekcji jest dostosowana i wartość <xref:System.Collections.ArrayList.Count%2A> właściwość zmniejszyła się o jeden.</span><span class="sxs-lookup"><span data-stu-id="eeb10-634">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="eeb10-635">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="eeb10-635">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="eeb10-636">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-636">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="eeb10-637">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-637">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="eeb10-638">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-638">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-639">Poniższy przykład kodu pokazuje, jak usunąć elementy z <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-639">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-640">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-640">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-641">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-641">-or-</span>
          </span>
          <span data-ttu-id="eeb10-642">
            <paramref name="index" /> jest równa lub większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-642">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-643">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-643">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-644">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-644">-or-</span>
          </span>
          <span data-ttu-id="eeb10-645">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-645">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRange : int * int -&gt; unit&#xA;override this.RemoveRange : int * int -&gt; unit" Usage="arrayList.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-646">Liczony od zera indeks początkowy zakresu elementów do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-646">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-647">Liczba elementów do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-647">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-648">Usuwa zakres elementów z <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-648">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-649">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="eeb10-649">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="eeb10-650">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-650">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="eeb10-651">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-651">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="eeb10-652">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-652">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-653">Poniższy przykład kodu pokazuje, jak usunąć elementy z <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-653">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-654">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-654">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-655">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-655">-or-</span>
          </span>
          <span data-ttu-id="eeb10-656">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-656">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-657">
            <paramref name="index" /> i <paramref name="count" /> określa prawidłowy zakres elementów w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-657">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-658">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-658">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-659">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-659">-or-</span>
          </span>
          <span data-ttu-id="eeb10-660">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-660">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : obj * int -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Repeat (value, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eeb10-661">
            <see cref="T:System.Object" /> Do skopiowania wielokrotnie w nowym <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-661">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-662">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-662">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-663">Ile razy <c>wartość</c> powinny zostać skopiowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-663">The number of times <c>value</c> should be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-664">Zwraca <see cref="T:System.Collections.ArrayList" /> której elementy są kopiami określoną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-664">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-665">
            <see cref="T:System.Collections.ArrayList" /> z <paramref name="count" /> liczby elementów, które są kopiami <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-665">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-666"><xref:System.Collections.ArrayList> akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-666"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eeb10-667">Ta metoda jest O (`n`) operacji, gdzie `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-667">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-668">Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować nowy <xref:System.Collections.ArrayList> z taką samą wartość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-668">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-669">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-669">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-670">Odwraca kolejność elementów w <see cref="T:System.Collections.ArrayList" /> lub jego część.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-670">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberSignature Language="F#" Value="abstract member Reverse : unit -&gt; unit&#xA;override this.Reverse : unit -&gt; unit" Usage="arrayList.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-671">Odwraca kolejność elementów w całej <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-671">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-672">Ta metoda używa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> odwrócić kolejność elementów, tak, aby element przy <xref:System.Collections.ArrayList> [i], gdzie mogę jest dowolnego indeksu w zakresie, przechodzi do <xref:System.Collections.ArrayList> [j], gdzie jest równe "j" `index`  +  `index`  +  `count` - i - 1.</span><span class="sxs-lookup"><span data-stu-id="eeb10-672">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="eeb10-673">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-673">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-674">Poniższy przykład kodu pokazuje sposób odwrócić porządek sortowania wartości w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-674">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-675">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-675">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Reverse : int * int -&gt; unit&#xA;override this.Reverse : int * int -&gt; unit" Usage="arrayList.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-676">Liczony od zera indeks początkowy zakresu, aby odwrócić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-676">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-677">Liczba elementów w zakresie, aby odwrócić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-677">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-678">Odwraca kolejność elementów w określonym zakresie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-678">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-679">Ta metoda używa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> odwrócić kolejność elementów, tak, aby element przy <xref:System.Collections.ArrayList> [i], gdzie mogę jest dowolnego indeksu w zakresie, przechodzi do <xref:System.Collections.ArrayList> [j], gdzie jest równe "j" `index`  +  `index`  +  `count` - i - 1.</span><span class="sxs-lookup"><span data-stu-id="eeb10-679">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="eeb10-680">Ta metoda jest O (`n`) operacji, gdzie `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="eeb10-680">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-681">Poniższy przykład kodu pokazuje sposób odwrócić porządek sortowania wartości w szeregu elementów w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-681">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-682">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-682">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-683">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-683">-or-</span>
          </span>
          <span data-ttu-id="eeb10-684">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-684">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-685">
            <paramref name="index" /> i <paramref name="count" /> określa prawidłowy zakres elementów w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-685">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-686">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-686">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member SetRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.SetRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.SetRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-687">Liczony od zera <see cref="T:System.Collections.ArrayList" /> indeks, od której należy rozpocząć kopiowanie elementów <c>c</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-687">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <c>c</c>.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="eeb10-688">
            <see cref="T:System.Collections.ICollection" /> Której elementy należy skopiować do <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-688">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="eeb10-689">Sama kolekcja nie może być <see langword="null" />, ale może zawierać elementy, które są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-689">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-690">Kopiuje elementy kolekcji przy użyciu różnych elementów w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-690">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-691"><xref:System.Collections.ArrayList> akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-691"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eeb10-692">Kolejność elementów w <xref:System.Collections.ICollection> jest zachowywana w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-692">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="eeb10-693">Ta metoda jest O (`n` + 1) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-693">This method is an O(`n` + 1) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-694">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać zakres elementów w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-694">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-695">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-695">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-696">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-696">-or-</span>
          </span>
          <span data-ttu-id="eeb10-697">
            <paramref name="index" /> plus liczba elementów w <paramref name="c" /> jest większa niż <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-697">
              <paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-698">
            <paramref name="c" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-698">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-699">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-699">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-700">Sortuje elementów w <see cref="T:System.Collections.ArrayList" /> lub jego część.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-700">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberSignature Language="F#" Value="abstract member Sort : unit -&gt; unit&#xA;override this.Sort : unit -&gt; unit" Usage="arrayList.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-701">Sortuje elementów w całej <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-701">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-702">Ta metoda używa <xref:System.Array.Sort%2A?displayProperty=nameWithType>, który używa algorytmu sortowania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-702">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="eeb10-703">Algorytm szybkiego sortowania jest porównanie sortowania (nazywane również niestabilne sortowanie), co oznacza, że "większe niż lub równe" operacji porównania określa, które dwa elementy powinny zostać wykonane najpierw w ostatnim posortowanej listy.</span><span class="sxs-lookup"><span data-stu-id="eeb10-703">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="eeb10-704">Jednakże jeśli dwa elementy są równe, ich kolejność oryginalnej mogą nie zostać zachowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-704">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="eeb10-705">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="eeb10-705">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="eeb10-706">Aby wykonać stabilne sortowanie, należy zaimplementować niestandardowy <xref:System.Collections.IComparer> interfejs, za pomocą przeciążenia tej metody.</span><span class="sxs-lookup"><span data-stu-id="eeb10-706">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="eeb10-707">Średnio, ta metoda jest O (`n` dziennika `n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>; w najgorszym przypadku jest O (`n`^ 2) operacji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-707">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-708">Poniższy przykład kodu pokazuje sposób sortowania wartości w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-708">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-709">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-709">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="eeb10-710">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-710">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="eeb10-711">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-711">-or-</span>
          </span>
          <span data-ttu-id="eeb10-712">Odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) do użycia <see cref="T:System.IComparable" /> wykonania każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-712">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-713">Sortuje elementów w całej <see cref="T:System.Collections.ArrayList" /> przy użyciu określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-713">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-714">Użyj <xref:System.Collections.ArrayList.Sort%2A> metodę, aby posortować listę obiektów za pomocą niestandardowego modułu porównującego, który implementuje <xref:System.Collections.IComparer> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-714">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="eeb10-715">W przypadku przekazania `null` dla `comparer`, Metoda ta wykorzystuje <xref:System.IComparable> wykonania każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-715">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="eeb10-716">W takim przypadku użytkownik powinien upewnić się, że obiektów znajdujących się na liście wdrożyć <xref:System.Collections.IComparer> interfejsu lub wyjątek wystąpi.</span><span class="sxs-lookup"><span data-stu-id="eeb10-716">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="eeb10-717">Ponadto, za pomocą <xref:System.IComparable> implementacji oznacza, że lista sortuje porównania (nazywane również niestabilne sortowanie); oznacza to, jeśli dwa elementy są równe, ich kolejność może nie zostać zachowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-717">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="eeb10-718">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="eeb10-718">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="eeb10-719">Aby wykonać stabilne sortowanie, należy zaimplementować niestandardowy <xref:System.Collections.IComparer> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-719">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="eeb10-720">Średnio, ta metoda jest O (`n` dziennika `n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>; w najgorszym przypadku jest O (`n`^ 2) operacji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-720">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-721">Poniższy przykład kodu pokazuje sposób sortowania wartości w <xref:System.Collections.ArrayList> przy użyciu domyślnego modułu porównującego i niestandardowego modułu porównującego, który odwraca porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-721">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-722">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-722">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eeb10-723">Wystąpił błąd podczas porównywania dwóch elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-723">An error occurred while comparing two elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-724">
            <see langword="null" /> jest przekazywany <paramref name="comparer" />, a elementy na liście nie należy implementować <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-724">
              <see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : int * int * System.Collections.IComparer -&gt; unit&#xA;override this.Sort : int * int * System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="eeb10-725">Liczony od zera indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-725">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eeb10-726">Długość zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-726">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="eeb10-727">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-727">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="eeb10-728">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-728">-or-</span>
          </span>
          <span data-ttu-id="eeb10-729">Odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) do użycia <see cref="T:System.IComparable" /> wykonania każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-729">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-730">Sortuje elementy w zakresie elementów w <see cref="T:System.Collections.ArrayList" /> przy użyciu określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-730">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-731">Jeśli `comparer` ustawiono `null`, ta metoda przeprowadza porównanie sortowania (nazywane również niestabilne sortowanie); oznacza to, jeśli dwa elementy są równe, ich kolejność może nie zostać zachowane.</span><span class="sxs-lookup"><span data-stu-id="eeb10-731">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="eeb10-732">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="eeb10-732">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="eeb10-733">Aby wykonać stabilne sortowanie, należy zaimplementować niestandardowy <xref:System.Collections.IComparer> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-733">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="eeb10-734">Średnio, ta metoda jest O (`n` dziennika `n`) operacji, gdzie `n` jest `count`; w najgorszym przypadku jest to operacja O(n^2).</span><span class="sxs-lookup"><span data-stu-id="eeb10-734">On average, this method is an O(`n` log `n`) operation, where `n` is `count`; in the worst case it is an O(n^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-735">Poniższy przykład kodu pokazuje sposób sortowania wartości w szeregu elementów w <xref:System.Collections.ArrayList> przy użyciu domyślnego modułu porównującego i niestandardowego modułu porównującego, który odwraca porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-735">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eeb10-736">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-736">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eeb10-737">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-737">-or-</span>
          </span>
          <span data-ttu-id="eeb10-738">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-738">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeb10-739">
            <paramref name="index" /> i <paramref name="count" /> nie określono prawidłowego zakresu <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-739">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-740">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-740">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eeb10-741">Wystąpił błąd podczas porównywania dwóch elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-741">An error occurred while comparing two elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-742">Zwraca otoki listy, który jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-742">Returns a list wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="eeb10-743">
            <see cref="T:System.Collections.ArrayList" /> Do synchronizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-743">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-744">Zwraca <see cref="T:System.Collections.ArrayList" /> otoki, która jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-744">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-745">
            <see cref="T:System.Collections.ArrayList" /> Otoki, która jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-745">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-746">Aby zagwarantować bezpieczeństwo wątków z <xref:System.Collections.ArrayList>, wszystkie operacje muszą być wykonywane przez tę otokę.</span><span class="sxs-lookup"><span data-stu-id="eeb10-746">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="eeb10-747">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-747">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="eeb10-748">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="eeb10-748">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="eeb10-749">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="eeb10-749">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-750">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-750">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="eeb10-751">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-751">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="eeb10-752">Poniższy przykład kodu pokazuje, jak synchronizować <xref:System.Collections.ArrayList>, ustal, czy <xref:System.Collections.ArrayList> jest synchronizowane i użyj zsynchronizowany <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-752">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-753">
            <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-753">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="eeb10-754">
            <see cref="T:System.Collections.IList" /> Do synchronizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-754">The <see cref="T:System.Collections.IList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-755">Zwraca <see cref="T:System.Collections.IList" /> otoki, która jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-755">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-756">
            <see cref="T:System.Collections.IList" /> Otoki, która jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-756">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-757">Aby zagwarantować bezpieczeństwo wątków z <xref:System.Collections.ArrayList>, wszystkie operacje muszą być wykonywane przez tę otokę.</span><span class="sxs-lookup"><span data-stu-id="eeb10-757">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="eeb10-758">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-758">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="eeb10-759">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="eeb10-759">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="eeb10-760">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="eeb10-760">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-761">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-761">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="eeb10-762">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-762">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-763">
            <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-763">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.ArrayList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-764">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-764">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeb10-765">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-765">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-766">Aby utworzyć zsynchronizowaną wersję <xref:System.Collections.ArrayList>, użyj <xref:System.Collections.ArrayList.Synchronized%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eeb10-766">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="eeb10-767">Klasy pochodne może jednak zapewniać własne zsynchronizowaną wersję <xref:System.Collections.ArrayList> przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="eeb10-767">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="eeb10-768">Synchronizowanie kodu należy wykonywać operacje na <xref:System.Collections.ArrayList.SyncRoot%2A> z <xref:System.Collections.ArrayList>, nie są bezpośrednio w <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-768">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="eeb10-769">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-769">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="eeb10-770">W szczególności utrzymuje właściwe synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Collections.ArrayList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="eeb10-770">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="eeb10-771">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="eeb10-771">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="eeb10-772">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="eeb10-772">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="eeb10-773">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="eeb10-773">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-774">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.ArrayList.SyncRoot%2A> podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="eeb10-774">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="eeb10-775">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="eeb10-775">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-776">Kopiuje elementy ze <see cref="T:System.Collections.ArrayList" /> do nowej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-776">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; obj[]&#xA;override this.ToArray : unit -&gt; obj[]" Usage="arrayList.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-777">Kopiuje elementy ze <see cref="T:System.Collections.ArrayList" /> na nową <see cref="T:System.Object" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-777">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-778">
            <see cref="T:System.Object" /> Tablica zawierająca kopie elementów <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-778">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-779">Elementy są kopiowane, za pomocą <xref:System.Array.Copy%2A?displayProperty=nameWithType>, czyli O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-779">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ToArray : Type -&gt; Array&#xA;override this.ToArray : Type -&gt; Array" Usage="arrayList.ToArray type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="eeb10-780">Element <see cref="T:System.Type" /> tablicy docelowej, aby utworzyć i kopiowanie elementów do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-780">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeb10-781">Kopiuje elementy ze <see cref="T:System.Collections.ArrayList" /> do nowej tablicy typu określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-781">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeb10-782">Tablica typu określonego elementu zawierającego kopie elementów <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-782">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-783">Wszystkie obiekty w <xref:System.Collections.ArrayList> będzie można rzutować obiektu <xref:System.Type> określonych w `type` parametru.</span><span class="sxs-lookup"><span data-stu-id="eeb10-783">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="eeb10-784">Elementy są kopiowane, za pomocą <xref:System.Array.Copy%2A?displayProperty=nameWithType>, czyli O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-784">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-785">W poniższym przykładzie kopia pokazuje, jak skopiować elementy <xref:System.Collections.ArrayList> na tablicę ciągów.</span><span class="sxs-lookup"><span data-stu-id="eeb10-785">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeb10-786">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-786">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eeb10-787">Typ źródła <see cref="T:System.Collections.ArrayList" /> nie może być automatycznie rzutowany określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-787">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="arrayList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeb10-788">Ustawia pojemność do rzeczywistej liczby elementów w <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-788">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb10-789">Ta metoda może być używana aby zminimalizować obciążenie pamięci kolekcji, jeśli żadne nowe elementy, które zostaną dodane do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eeb10-789">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="eeb10-790">Aby zresetować <xref:System.Collections.ArrayList> do stanu początkowego wywołania <xref:System.Collections.ArrayList.Clear%2A> metoda przed wywołaniem <xref:System.Collections.ArrayList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-790">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="eeb10-791">Przycinanie pustą <xref:System.Collections.ArrayList> ustawia pojemność <xref:System.Collections.ArrayList> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="eeb10-791">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="eeb10-792">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-792">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb10-793">Poniższy przykład kodu pokazuje, jak usunąć nieużywane części <xref:System.Collections.ArrayList> oraz sposób wyczyścić wartości <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="eeb10-793">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eeb10-794">
            <see cref="T:System.Collections.ArrayList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-794">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="eeb10-795">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-795">-or-</span>
          </span>
          <span data-ttu-id="eeb10-796">
            <see cref="T:System.Collections.ArrayList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeb10-796">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>