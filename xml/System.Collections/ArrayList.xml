<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArrayList.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59a105732aa94698f5ea781b6eed29feca20656b5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a105732aa94698f5ea781b6eed29feca20656b5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interface using an array whose size is dynamically increased as required.</source>
          <target state="translated">Implementuje <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interfejsu za pomocą tablicy dynamicznie zwiększeniu rozmiaru, którego zgodnie z wymaganiami.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> class is designed to hold heterogeneous collections of objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Klasy jest przeznaczony do przechowywania heterogenicznych kolekcje obiektów.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>However, it does not always offer the best performance.</source>
          <target state="translated">Jednak nie zawsze zapewnia najlepszą wydajność.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>Instead, we recommend the following:</source>
          <target state="translated">Zamiast tego zaleca się następujące czynności:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>For a heterogeneous collection of objects, use the <ph id="ph1">`List&lt;Object&gt;`</ph> (in C#) or <ph id="ph2">`List(Of Object)`</ph> (in Visual Basic) type.</source>
          <target state="translated">Heterogenicznych kolekcji obiektów, użyj <ph id="ph1">`List&lt;Object&gt;`</ph> (w języku C#) lub <ph id="ph2">`List(Of Object)`</ph> (w języku Visual Basic) wpisz.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>For a homogeneous collection of objects, use the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated">Jednolite kolekcji obiektów, użyj <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>See the "Performance Considerations" section in the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> reference topic for a discussion of the relative performance of these classes.</source>
          <target state="translated">W sekcji "Zagadnienia dotyczące wydajności" <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> temat referencyjny omówienie względną wydajność tych klas.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is not guaranteed to be sorted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Nie jest gwarantowana ma zostać posortowana.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>You must sort the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> by calling its <ph id="ph2">&lt;xref:System.Collections.ArrayList.Sort%2A&gt;</ph> method prior to performing operations (such as <ph id="ph3">&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;</ph>) that require the <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph> to be sorted.</source>
          <target state="translated">Należy sortować <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> przez wywołanie jego <ph id="ph2">&lt;xref:System.Collections.ArrayList.Sort%2A&gt;</ph> metoda przed wykonaniem operacji (takich jak <ph id="ph3">&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;</ph>), które wymagają <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph> ma zostać posortowana.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>To maintain a collection that is automatically sorted as new elements are added, you can use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Aby zachować kolekcji, które mają być automatycznie sortowane miarę dodawania nowych elementów, można użyć <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>The capacity of an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> jest liczba elementów <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>As elements are added to an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, automatycznie zostaje zwiększona wydajność co jest wymagane przez; Ponowna alokacja.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">Można zmniejszyć pojemność przez wywołanie metody <ph id="ph1">&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;</ph> lub przez ustawienie <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> właściwości jawnie.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Dla bardzo dużych <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> obiekty, można zwiększyć maksymalną pojemność do 2 miliardów elementów w 64-bitowym systemie ustawiając <ph id="ph2">`enabled`</ph> atrybutu elementu konfiguracji, aby <ph id="ph3">`true`</ph> w środowisku czasu wykonywania.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Elementy w tej kolekcji jest możliwy przy użyciu indeksu liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">Indeksy w tej kolekcji jest liczony od zera.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> collection accepts <ph id="ph2">`null`</ph> as a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Kolekcja akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>It also allows duplicate elements.</source>
          <target state="translated">Umożliwia także zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>Using multidimensional arrays as elements in an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> collection is not supported.</source>
          <target state="translated">Używanie tablic wielowymiarowych jako elementy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> kolekcji nie jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>The following code example shows how to create and initialize an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> and how to display its values.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> i sposób wyświetlania wartości.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Publiczne statyczne (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Może obsługiwać wielu czytników jednocześnie, jak długo kolekcji nie jest modyfikowany.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /&gt;</ph> method.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, wszystkie operacje muszą być wykonywane przez otoki zwrócony przez <ph id="ph2">&lt;see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ArrayList">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> class that is empty and has the default initial capacity.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> klasy, która jest pusty i ma początkowej wydajności domyślnej.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor">
          <source>The capacity of an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor">
          <source>As elements are added to an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ten konstruktor jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> whose elements are copied to the new list.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Której elementy są kopiowane do nowej listy.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> klasy zawierającej elementów kopiowanych z określonej kolekcji, który ma tego samego początkowej pojemności niż liczba elementów kopiowanych.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
          <source>The capacity of an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
          <source>As elements are added to an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> in the same order they are read by the <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> of the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Elementy są kopiowane na <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> w tej samej kolejności odczytywania ich przez <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> z <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`c`</ph>.</source>
          <target state="translated">Ten konstruktor jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest liczba elementów w <ph id="ph3">`c`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="c" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="c" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.#ctor(System.Int32)">
          <source>The number of elements that the new list can initially store.</source>
          <target state="translated">Liczba elementów, które początkowo mogą przechowywać nową listę.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> class that is empty and has the specified initial capacity.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> klasy, która jest pusty i ma określony początkowej pojemności.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Int32)">
          <source>The capacity of an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Int32)">
          <source>As elements are added to an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Ten konstruktor jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> to wrap.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Do zakodowania.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> wrapper for a specific <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> otoki dla określonego <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> wrapper around the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Otokę <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Adapter%2A&gt;</ph> does not copy the contents of <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Adapter%2A&gt;</ph> Kopiuj zawartość <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>Instead, it only creates an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> wrapper around <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>; therefore, changes to the <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> also affect the <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Zamiast tego, jedynie tworzy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> otokę <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>; w związku z tym zmienia się na <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> wpłynąć na <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> class provides generic <ph id="ph2">&lt;xref:System.Collections.ArrayList.Reverse%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.ArrayList.Sort%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Udostępnia ogólne klasy <ph id="ph2">&lt;xref:System.Collections.ArrayList.Reverse%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.Collections.ArrayList.Sort%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>This wrapper can be a means to use those methods on <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">Tej otoki mogą być sposób użycia tych metod w <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>; jednak przeprowadzania tych operacji ogólnego za pośrednictwem otoka może być mniej wydajne niż operacje stosowane bezpośrednio na <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>Version Compatibility</source>
          <target state="translated">Zgodność wersji</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>In the .NET Framework version 1.0 and 1.1, calling the <ph id="ph1">&lt;xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt;</ph> method overload on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</source>
          <target state="translated">W programie .NET Framework w wersji 1.0, 1.1 wywoływania <ph id="ph1">&lt;xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt;</ph> przeciążenie metody na <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> otoki zwrócił moduł wyliczający, który jest traktowany jako drugi argument jako górnej granicy, a nie jako liczba.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> the second argument is correctly treated as a count.</source>
          <target state="translated">W <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> drugi argument poprawnie jest traktowana jako liczba.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to be added to the end of the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do dodania na koniec <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Dodaje obiekt na koniec <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> index at which the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has been added.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Indeks, w którym <ph id="ph2">&lt;paramref name="value" /&gt;</ph> został dodany.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość i umożliwia zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> jest już równa <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, pojemność <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, this method is an O(1) operation.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>The following code example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie przedstawiono sposób dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> whose elements should be added to the end of the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Której elementy powinny zostać dodane do końca <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Sama kolekcja nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>, ale może zawierać elementy, które są <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>Adds the elements of an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to the end of the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Dodaje elementy <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> na końcu <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość i umożliwia zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>The order of the elements in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is preserved in the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Kolejność elementów w <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> jest zachowywana w <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>If the new <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> (the current <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> plus the size of the collection) will be greater than <ph id="ph3">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">Jeśli nowy <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> (bieżące <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> plus rozmiar kolekcji) będą większe niż <ph id="ph3">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, pojemność <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph> zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej w celu uwzględnienia nowych elementów i istniejące elementy są kopiowane do nowej tablicy przed są dodawane nowe elementy.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> can accommodate the new elements without increasing the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, this method is an O(<ph id="ph3">`n`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> może obsłużyć nowych elementów bez zwiększania <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, ta metoda jest O (<ph id="ph3">`n`</ph>) operację, której <ph id="ph4">`n`</ph> jest liczba elementów do dodania.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>If the capacity needs to be increased to accommodate the new elements, this method becomes an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is <ph id="ph6">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowych elementów, ta metoda staje się O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operację, której <ph id="ph4">`n`</ph> jest liczba elementów do dodania i <ph id="ph5">`m`</ph> jest <ph id="ph6">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>The following code example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie przedstawiono sposób dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="c" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="c" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Uses a binary search algorithm to locate a specific element in the sorted <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> or a portion of it.</source>
          <target state="translated">Używa algorytmu wyszukiwanie binarne można znaleźć określonego elementu w sortowanych <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> lub jego część.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>Searches the entire sorted <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">Wyszukuje całą sortowane <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> dla elementu przy użyciu domyślna funkcja porównująca i zwraca liczony od zera indeks elementu.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>The zero-based index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in the sorted <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <ph id="ph4">&lt;paramref name="value" /&gt;</ph> or, if there is no larger element, the bitwise complement of <ph id="ph5">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated">Liczony od zera indeks <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w sortowanych <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, jeśli <ph id="ph3">&lt;paramref name="value" /&gt;</ph> zostanie odnaleziony; w przeciwnym razie ujemny numer, który jest dopełnienia bitowego indeksu elementu, który jest większy niż <ph id="ph4">&lt;paramref name="value" /&gt;</ph> lub, jeśli jest nie większy element dopełnienia bitowego z <ph id="ph5">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter and each element of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> must implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface, which is used for comparisons.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr, a każdy element <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> musi implementować <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interfejs, który jest używany do porównania.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must already be sorted in increasing value according to the sort order defined by the <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</source>
          <target state="translated">Porównywanie <ph id="ph1">`null`</ph> jest dozwolona w przypadku każdego typu i nie generuje wyjątku, korzystając z <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Podczas sortowania, <ph id="ph1">`null`</ph> jest uznawane za mniej niż jakiegokolwiek innego obiektu.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jedno z wystąpień, a może zwrócić jeden wystąpień, niekoniecznie pierwsza z nich.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Operacja dopełnienia bitowego (~) można zastosować do tego ujemnej liczby całkowitej. Aby uzyskać wartość indeksu pierwszego elementu, który jest większy niż wartość wyszukiwania.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Podczas wstawiania wartości do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, ten indeks powinien być używany jako punkt wstawiania do obsługi porządek sortowania.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (dziennika <ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;</ph> to locate a specific object in the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób użycia <ph id="ph1">&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;</ph> można znaleźć określonego obiektu w <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source>Neither <ph id="ph1">&lt;paramref name="value" /&gt;</ph> nor the elements of <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> implement the <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated">Ani <ph id="ph1">&lt;paramref name="value" /&gt;</ph> ani elementów <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> zaimplementować <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not of the same type as the elements of the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> nie jest taki sam typ jak elementy <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing elements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> Wdrożenia do użycia podczas porównywania elementów.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer that is the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> Aby użyć modułu porównującego domyślne, który jest <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> stosowania dla każdego elementu.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>Searches the entire sorted <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Wyszukuje całą sortowane <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> dla elementu przy użyciu określona funkcja porównująca i zwraca liczony od zera indeks elementu.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The zero-based index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in the sorted <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <ph id="ph4">&lt;paramref name="value" /&gt;</ph> or, if there is no larger element, the bitwise complement of <ph id="ph5">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated">Liczony od zera indeks <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w sortowanych <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, jeśli <ph id="ph3">&lt;paramref name="value" /&gt;</ph> zostanie odnaleziony; w przeciwnym razie ujemny numer, który jest dopełnienia bitowego indeksu elementu, który jest większy niż <ph id="ph4">&lt;paramref name="value" /&gt;</ph> lub, jeśli jest nie większy element dopełnienia bitowego z <ph id="ph5">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">Moduł porównujący dostosowuje sposób porównywania elementów.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>For example, you can use a <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">Na przykład można użyć <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> wystąpienia jako modułu porównującego do wyszukiwania ciągów bez uwzględniania wielkości liter.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> are compared to the specified value using the specified <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Jeśli <ph id="ph1">`comparer`</ph> podano elementy <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> są porównywane z podaną wartością przy użyciu określonego <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must already be sorted in increasing value according to the sort order defined by <ph id="ph2">`comparer`</ph>; otherwise, the result might be incorrect.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <ph id="ph2">`comparer`</ph>; w przeciwnym razie wynik może być nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the comparison is done using the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation provided by the element itself or by the specified value.</source>
          <target state="translated">Jeśli <ph id="ph1">`comparer`</ph> jest <ph id="ph2">`null`</ph>, porównanie wykonuje się za pomocą <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementacja elementu lub określonej wartości.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must already be sorted in increasing value according to the sort order defined by the <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</source>
          <target state="translated">Porównywanie <ph id="ph1">`null`</ph> jest dozwolona w przypadku każdego typu i nie generuje wyjątku, korzystając z <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Podczas sortowania, <ph id="ph1">`null`</ph> jest uznawane za mniej niż jakiegokolwiek innego obiektu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jedno z wystąpień, a może zwrócić jeden wystąpień, niekoniecznie pierwsza z nich.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Operacja dopełnienia bitowego (~) można zastosować do tego ujemnej liczby całkowitej. Aby uzyskać wartość indeksu pierwszego elementu, który jest większy niż wartość wyszukiwania.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Podczas wstawiania wartości do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, ten indeks powinien być używany jako punkt wstawiania do obsługi porządek sortowania.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (dziennika <ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> of colored animals.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> kolorowe zwierząt.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The provided <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> performs the string comparison for the binary search.</source>
          <target state="translated">Podana <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> przeprowadza wyszukiwanie binarne porównania ciągów.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source>The results of both an iterative search and a binary search are displayed.</source>
          <target state="translated">Wyniki wyszukiwania iteracji i wyszukiwanie binarne są wyświetlane.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and neither <ph id="ph3">&lt;paramref name="value" /&gt;</ph> nor the elements of <ph id="ph4">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> implement the <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph> i ani <ph id="ph3">&lt;paramref name="value" /&gt;</ph> ani elementów <ph id="ph4">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> zaimplementować <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is not of the same type as the elements of the <ph id="ph4">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph> i <ph id="ph3">&lt;paramref name="value" /&gt;</ph> nie jest taki sam typ jak elementy <ph id="ph4">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">Liczony od zera indeks początkowy zakresu wyszukiwania.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The length of the range to search.</source>
          <target state="translated">Długość zakresu wyszukiwania.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing elements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> Wdrożenia do użycia podczas porównywania elementów.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer that is the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> Aby użyć modułu porównującego domyślne, który jest <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> stosowania dla każdego elementu.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>Searches a range of elements in the sorted <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Przeszukuje zakresu elementów sortowanych <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> dla elementu przy użyciu określona funkcja porównująca i zwraca liczony od zera indeks elementu.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The zero-based index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in the sorted <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <ph id="ph4">&lt;paramref name="value" /&gt;</ph> or, if there is no larger element, the bitwise complement of <ph id="ph5">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated">Liczony od zera indeks <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w sortowanych <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, jeśli <ph id="ph3">&lt;paramref name="value" /&gt;</ph> zostanie odnaleziony; w przeciwnym razie ujemny numer, który jest dopełnienia bitowego indeksu elementu, który jest większy niż <ph id="ph4">&lt;paramref name="value" /&gt;</ph> lub, jeśli jest nie większy element dopełnienia bitowego z <ph id="ph5">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">Moduł porównujący dostosowuje sposób porównywania elementów.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>For example, you can use a <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">Na przykład można użyć <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> wystąpienia jako modułu porównującego do wyszukiwania ciągów bez uwzględniania wielkości liter.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> are compared to the specified value using the specified <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Jeśli <ph id="ph1">`comparer`</ph> podano elementy <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> są porównywane z podaną wartością przy użyciu określonego <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must already be sorted in increasing value according to the sort order defined by <ph id="ph2">`comparer`</ph>; otherwise, the result might be incorrect.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <ph id="ph2">`comparer`</ph>; w przeciwnym razie wynik może być nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the comparison is done using the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation provided by the element itself or by the specified value.</source>
          <target state="translated">Jeśli <ph id="ph1">`comparer`</ph> jest <ph id="ph2">`null`</ph>, porównanie wykonuje się za pomocą <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementacja elementu lub określonej wartości.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must already be sorted in increasing value according to the sort order defined by the <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</source>
          <target state="translated">Porównywanie <ph id="ph1">`null`</ph> jest dozwolona w przypadku każdego typu i nie generuje wyjątku, korzystając z <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Podczas sortowania, <ph id="ph1">`null`</ph> jest uznawane za mniej niż jakiegokolwiek innego obiektu.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jedno z wystąpień, a może zwrócić jeden wystąpień, niekoniecznie pierwsza z nich.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Operacja dopełnienia bitowego (~) można zastosować do tego ujemnej liczby całkowitej. Aby uzyskać wartość indeksu pierwszego elementu, który jest większy niż wartość wyszukiwania.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Podczas wstawiania wartości do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, ten indeks powinien być używany jako punkt wstawiania do obsługi porządek sortowania.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Ta metoda jest O (dziennika <ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> określa nieprawidłowy zakres w <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and neither <ph id="ph3">&lt;paramref name="value" /&gt;</ph> nor the elements of <ph id="ph4">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> implement the <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph> i ani <ph id="ph3">&lt;paramref name="value" /&gt;</ph> ani elementów <ph id="ph4">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> zaimplementować <ph id="ph5">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is not of the same type as the elements of the <ph id="ph4">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph> i <ph id="ph3">&lt;paramref name="value" /&gt;</ph> nie jest taki sam typ jak elementy <ph id="ph4">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Capacity">
          <source>Gets or sets the number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> can contain.</source>
          <target state="translated">Pobiera lub ustawia liczbę elementów, które <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> może zawierać.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> can contain.</source>
          <target state="translated">Liczba elementów który <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> może zawierać.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> Liczba elementów jest który <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> jest to liczba elementów, które są rzeczywiście w <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> zawsze jest większa niż lub równa <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> przekracza <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> podczas dodawania elementów, pojemność jest automatycznie zwiększany o ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Capacity">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">Można zmniejszyć pojemność przez wywołanie metody <ph id="ph1">&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;</ph> lub przez ustawienie <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> właściwości jawnie.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">Jeśli wartość <ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> jest ustawiony jawnie, aby zmieścił się w określonej pojemności także alokowaniu tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest nowego miejsca.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Capacity">
          <source><ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Capacity" /&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Capacity" /&gt;</ph> ma ustawioną wartość, która jest mniejsza niż <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">Nie istnieje wystarczająca ilość pamięci dostępna w systemie.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Usuwa wszystkie elementy z <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> jest ustawiany na zero, a ponadto są również zwalniane odwołania do innych obiektów z elementów kolekcji.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, call <ph id="ph2">&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;</ph> or set the <ph id="ph3">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> property directly.</source>
          <target state="translated">Aby zresetować pojemność <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, wywołaj <ph id="ph2">&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;</ph> lub ustaw <ph id="ph3">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> właściwości bezpośrednio.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> to the default capacity.</source>
          <target state="translated">Przycinanie pustą <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> ustawia pojemność <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> do wydajności domyślnej.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clear">
          <source>The following code example shows how to trim the unused portions of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> and how to clear the values of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób przycięcia nieużywane części <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> i czyszczenie wartości <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Clear">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Clone">
          <source>Creates a shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Tworzy kopię pobieżną <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Kopia pobieżna <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">Kopię pobieżną kolekcji kopiuje elementy kolekcji, czy znajdują się odwołania typy lub wartości, ale nie kopiuje obiektów, które dotyczą odwołania.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Odwołania do nowej kolekcji wskazują te same obiekty, które wskazują odwołania w oryginalnej kolekcji.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Z kolei głęboką kopię kolekcji kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Contains(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Contains(System.Object)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Określa, czy element jest <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="item" /&gt;</ph> znajduje się w <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Contains(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> or a portion of it to a one-dimensional array.</source>
          <target state="translated">Kopie <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> lub części z tablicą jednowymiarową.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Jednowymiarowa <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> który jest miejscem docelowym elementów kopiowanych z <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> Musi mieć indeksowania liczony od zera.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the beginning of the target array.</source>
          <target state="translated">Kopiuje całą <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> do jednowymiarowego zgodnego <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, rozpoczynając od początku tablicy docelowej.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">Określona tablica musi być zgodne z typem.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Ta metoda używa <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> można skopiować elementów.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Elementy są kopiowane do <ph id="ph1">&lt;xref:System.Array&gt;</ph> w tej samej kolejności, w której moduł wyliczający iteruje <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>The following code example shows how to copy an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> into a one-dimensional <ph id="ph2">&lt;xref:System.Array?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób kopiowania <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> do jednowymiarowego <ph id="ph2">&lt;xref:System.Array?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest wielowymiarowy.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is greater than the number of elements that the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph> can contain.</source>
          <target state="translated">Liczba elementów w źródle <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> jest większa niż liczba elementów który docelowego <ph id="ph2">&lt;paramref name="array" /&gt;</ph> może zawierać.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Typ źródła <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> nie można automatycznie rzutować na typ docelowy <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Jednowymiarowa <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> który jest miejscem docelowym elementów kopiowanych z <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> Musi mieć indeksowania liczony od zera.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Liczony od zera indeks w <bpt id="p1">&lt;c&gt;</bpt>tablicy<ept id="p1">&lt;/c&gt;</ept> od rozpoczyna się kopiowanie które.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Kopiuje całą <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> do jednowymiarowego zgodnego <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, rozpoczynając od określonego indeksu tablicy docelowej.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">Określona tablica musi być zgodne z typem.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Ta metoda używa <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> można skopiować elementów.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Elementy są kopiowane do <ph id="ph1">&lt;xref:System.Array&gt;</ph> w tej samej kolejności, w której moduł wyliczający iteruje <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>The following code example shows how to copy an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> into a one-dimensional <ph id="ph2">&lt;xref:System.Array?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób kopiowania <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> do jednowymiarowego <ph id="ph2">&lt;xref:System.Array?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest wielowymiarowy.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Liczba elementów w źródle <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> jest większa niż dostępne miejsce od <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> do końca tablicy docelowej <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Typ źródła <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> nie można automatycznie rzutować na typ docelowy <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The zero-based index in the source <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> at which copying begins.</source>
          <target state="translated">Liczony od zera indeks w źródle <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> od rozpoczyna się kopiowanie które.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Jednowymiarowa <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> który jest miejscem docelowym elementów kopiowanych z <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> Musi mieć indeksowania liczony od zera.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Liczony od zera indeks w <bpt id="p1">&lt;c&gt;</bpt>tablicy<ept id="p1">&lt;/c&gt;</ept> od rozpoczyna się kopiowanie które.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">Liczba elementów do skopiowania.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>Copies a range of elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Kopiuje elementy z zakresu <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> do jednowymiarowego zgodnego <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, rozpoczynając od określonego indeksu tablicy docelowej.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">Określona tablica musi być zgodne z typem.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Ta metoda używa <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> można skopiować elementów.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Elementy są kopiowane do <ph id="ph1">&lt;xref:System.Array&gt;</ph> w tej samej kolejności, w której moduł wyliczający iteruje <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The following code example shows how to copy an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> into a one-dimensional <ph id="ph2">&lt;xref:System.Array?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób kopiowania <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> do jednowymiarowego <ph id="ph2">&lt;xref:System.Array?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest wielowymiarowy.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> of the source <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest równa lub większa niż <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> źródła <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The number of elements from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the source <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is greater than the available space from <ph id="ph3">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph4">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Liczba elementów od <ph id="ph1">&lt;paramref name="index" /&gt;</ph> koniec źródło <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> jest większa niż dostępne miejsce od <ph id="ph3">&lt;paramref name="arrayIndex" /&gt;</ph> do końca tablicy docelowej <ph id="ph4">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Typ źródła <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> nie można automatycznie rzutować na typ docelowy <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Count">
          <source>Gets the number of elements actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Pobiera liczbę elementów zawartych w rzeczywistości w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Count">
          <source>The number of elements actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Liczba elementów zawartych w rzeczywistości w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> Liczba elementów jest który <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> jest to liczba elementów, które są rzeczywiście w <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> zawsze jest większa niż lub równa <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> przekracza <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph> podczas dodawania elementów, pojemność jest automatycznie zwiększany o ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</source>
          <target state="translated">Zwraca otoka listy o ustalonym rozmiarze, której elementy będą mogli zmodyfikowany, ale nie dodać lub usunąć.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to wrap.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Do zakodowania.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> wrapper with a fixed size.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> otoki o stałym rozmiarze.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> wrapper with a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Otoki o stałym rozmiarze.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source>This wrapper can be used to prevent additions to and deletions from the original <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Tej otoki można zapobiec uzupełnienia i usunięcia z oryginalnego <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source>The elements can still be modified or replaced.</source>
          <target state="translated">Elementy nadal można zmodyfikować lub wymiany.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Kolekcja o stałym rozmiarze jest po prostu kolekcji z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym zmian w źródłowej kolekcji, włączając Dodawanie lub usuwanie elementów z kolekcji o stałym rozmiarze odzwierciedla te zmiany.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source>The following code example shows how to create a fixed-size wrapper around an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie przedstawiono sposób tworzenia stałym rozmiarze otokę <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> to wrap.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Do zakodowania.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> wrapper with a fixed size.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> otoki o stałym rozmiarze.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> wrapper with a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Otoki o stałym rozmiarze.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
          <source>This wrapper can be used to prevent additions to and deletions from the original <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">Tej otoki można zapobiec uzupełnienia i usunięcia z oryginalnego <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
          <source>The elements can still be modified or replaced.</source>
          <target state="translated">Elementy nadal można zmodyfikować lub wymiany.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Kolekcja o stałym rozmiarze jest po prostu kolekcji z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym zmian w źródłowej kolekcji, włączając Dodawanie lub usuwanie elementów z kolekcji o stałym rozmiarze odzwierciedla te zmiany.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Zwraca moduł wyliczający, który iteruje po <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>Returns an enumerator for the entire <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Zwraca moduł wyliczający dla całego <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the entire <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> Dla całego <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w języku Visual Basic) ukrywa złożoność wyliczenia.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">W związku z tym przy użyciu <ph id="ph1">`foreach`</ph> jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> również wprowadzono moduł wyliczający wróć do tej pozycji.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">W tym miejscu <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">W związku z tym należy wywołać <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca ten sam obiekt do momentu <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> do następnego elementu.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwraca <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwracają również <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Jeśli przez ostatnie wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Aby ustawić <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> aby pierwszym elementem kolekcji ponownie, należy wywołać <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> następuje <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator">
          <source>The following example gets the enumerator for an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, and the enumerator for a range of elements in the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład pobiera moduł wyliczający dla <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>i modułu wyliczającego dla zakresu elementów <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>The zero-based starting index of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> section that the enumerator should refer to.</source>
          <target state="translated">Liczony od zera indeks początkowy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> modułu wyliczającego, przejrzyj sekcję.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>The number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> section that the enumerator should refer to.</source>
          <target state="translated">Liczba elementów w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> modułu wyliczającego, przejrzyj sekcję.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>Returns an enumerator for a range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Zwraca moduł wyliczający dla zakresu elementów <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the specified range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> Dla określonego zakresu elementów <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual C++, <ph id="ph3">`For Each`</ph> Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w programie Visual C++ <ph id="ph3">`For Each`</ph> Visual Basic) ukrywa złożoność wyliczenia.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">W związku z tym przy użyciu <ph id="ph1">`foreach`</ph> jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> również wprowadzono moduł wyliczający wróć do tej pozycji.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">W tym miejscu <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">W związku z tym należy wywołać <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca ten sam obiekt do momentu <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> do następnego elementu.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwraca <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwracają również <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Jeśli przez ostatnie wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Aby ustawić <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> aby pierwszym elementem kolekcji ponownie, należy wywołać <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> następuje <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>Version Compatibility</source>
          <target state="translated">Zgodność wersji</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>In the .NET Framework versions 1.0 and 1.1, the enumerator for an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Adapter%2A&gt;</ph> method treated the second argument as an upper bound rather than as a count.</source>
          <target state="translated">W wersji systemu .NET Framework 1.0 i 1.1, moduł wyliczający dla <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> otoki zwracanej przez <ph id="ph2">&lt;xref:System.Collections.ArrayList.Adapter%2A&gt;</ph> — metoda traktowane jako drugi argument jako górnej granicy, a nie jako liczba.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> the second argument is correctly treated as a count.</source>
          <target state="translated">W <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> drugi argument poprawnie jest traktowana jako liczba.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>The following example gets the enumerator for an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, and the enumerator for a range of elements in the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład pobiera moduł wyliczający dla <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>i modułu wyliczającego dla zakresu elementów <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid range in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> nie zostanie określony prawidłowy zakres w <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>The zero-based <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> index at which the range starts.</source>
          <target state="translated">Liczony od zera <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> indeksu, w którym rozpoczyna się zakres.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">Liczba elementów w zakresie.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> which represents a subset of the elements in the source <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> reprezentuje podzbiór elementów w źródłowej <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> which represents a subset of the elements in the source <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Reprezentuje podzbiór elementów w źródłowej <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>This method does not create copies of the elements.</source>
          <target state="translated">Ta metoda nie tworzy kopie elementów.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is only a view window into the source <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> jest tylko okno widoku w źródle <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>However, all subsequent changes to the source <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must be done through this view window <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Jednak wszystkie kolejne zmiany w źródle <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> muszą być wykonywane przez to okno widoku <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>If changes are made directly to the source <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, the view window <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> is invalidated and any operations on it will return an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Jeśli zmiany zostaną wprowadzone bezpośrednio w źródle <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, okno widoku <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> zostało unieważnione, a na nim żadnych operacji, którą będzie zwracać <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>The following code example shows how to set and get a range of elements in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób Ustawianie i pobieranie zakresu elementów <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> nie określa prawidłowego zakresu elementów w <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Returns the zero-based index of the first occurrence of a value in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> or in a portion of it.</source>
          <target state="translated">Zwraca liczony od zera indeks pierwszego wystąpienia wartości w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> lub w części.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the first occurrence within the entire <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Wyszukuje określony <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> i zwraca liczony od zera indeks pierwszego wystąpienia w obrębie całej <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">Liczony od zera indeks pierwszego wystąpienia <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w obrębie całej <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, jeśli je znaleziono; w przeciwnym razie wartość -1.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Przeszukiwany jest do przodu zaczynając od pierwszego elementu i końcowy z ostatniego elementu.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <source>The following code example shows how to determine the index of the first occurrence of a specified element.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) jest prawidłowa w pustej listy.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that extends from the specified index to the last element.</source>
          <target state="translated">Wyszukuje określony <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> i zwraca liczony od zera indeks pierwszego wystąpienia w zakresie elementów w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> który rozciąga się od określonego indeksu do ostatniego elementu.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that extends from <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> to the last element, if found; otherwise, -1.</source>
          <target state="translated">Liczony od zera indeks pierwszego wystąpienia <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w zakresie elementów w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> rozciąga się od <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> do ostatniego elementu, jeśli je znaleziono; w przeciwnym razie wartość -1.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is searched forward starting at <ph id="ph2">`startIndex`</ph> and ending at the last element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Przeszukiwany jest do przodu zaczynając od <ph id="ph2">`startIndex`</ph> i kończąc na ostatnim elemencie.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements from <ph id="ph3">`startIndex`</ph> to the end of the <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest liczba elementów od <ph id="ph3">`startIndex`</ph> na końcu <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source>The following code example shows how to determine the index of the first occurrence of a specified element.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> znajduje się poza zakresem indeksów prawidłowy dla <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) jest prawidłowa w pustej listy.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Liczba elementów w sekcji do wyszukania.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Wyszukuje określony <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> i zwraca liczony od zera indeks pierwszego wystąpienia w zakresie elementów w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> rozpoczyna się od określonego indeksu i zawiera określoną liczbę elementów.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that starts at <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and contains <ph id="ph4">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, -1.</source>
          <target state="translated">Liczony od zera indeks pierwszego wystąpienia <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w zakresie elementów w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> który rozpoczyna się od <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> i zawiera <ph id="ph4">&lt;paramref name="count" /&gt;</ph> liczba elementów, jeśli je znaleziono; w przeciwnym razie wartość -1.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is searched forward starting at <ph id="ph2">`startIndex`</ph> and ending at <ph id="ph3">`startIndex`</ph> plus <ph id="ph4">`count`</ph> minus 1, if <ph id="ph5">`count`</ph> is greater than 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Przeszukiwany jest do przodu zaczynając od <ph id="ph2">`startIndex`</ph> i kończący się na <ph id="ph3">`startIndex`</ph> plus <ph id="ph4">`count`</ph> pomniejszonej o 1, jeśli <ph id="ph5">`count`</ph> jest większa niż 0.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>The following code example shows how to determine the index of the first occurrence of a specified element.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak określić indeks pierwszego wystąpienia określonego elementu.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> znajduje się poza zakresem indeksów prawidłowy dla <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid section in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> nie zostanie określony prawidłowy części <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Liczony od zera indeks, w którym <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> powinien zostać wstawiony.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to insert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do wstawienia.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> at the specified index.</source>
          <target state="translated">Wstawia element do <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> pod określonym indeksem.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość i umożliwia zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> jest już równa <ph id="ph2">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, pojemność <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`index`</ph> jest równa <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> zostanie dodany na końcu <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>The following code example shows how to insert elements into the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak wstawianie elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">Liczony od zera indeks, pod którym powinny zostać wstawione nowe elementy.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> whose elements should be inserted into the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Której elementy powinny zostać wstawione do <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Sama kolekcja nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>, ale może zawierać elementy, które są <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>Inserts the elements of a collection into the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> at the specified index.</source>
          <target state="translated">Wstawia elementy kolekcji do <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> pod określonym indeksem.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość i umożliwia zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>If the new <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> (the current <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> plus the size of the collection) will be greater than <ph id="ph3">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">Jeśli nowy <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> (bieżące <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> plus rozmiar kolekcji) będą większe niż <ph id="ph3">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;</ph>, pojemność <ph id="ph4">&lt;xref:System.Collections.ArrayList&gt;</ph> zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej w celu uwzględnienia nowych elementów i istniejące elementy są kopiowane do nowej tablicy przed są dodawane nowe elementy.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>, the elements are added to the end of <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`index`</ph> jest równa <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>, elementy są dodawane na końcu <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>The order of the elements in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is preserved in the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Kolejność elementów w <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> jest zachowywana w <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>This method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is <ph id="ph6">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operację, której <ph id="ph4">`n`</ph> jest liczba elementów do dodania i <ph id="ph5">`m`</ph> jest <ph id="ph6">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>The following code example shows how to insert elements into the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak wstawianie elementów do <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="c" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="c" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Pobiera wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> ma ustalony rozmiar; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">W kolekcji o stałym rozmiarze po jej utworzeniu nie można dodawać ani usuwać elementów, jednak można modyfikować istniejące elementy.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Kolekcja o stałym rozmiarze jest po prostu kolekcji z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym zmian w źródłowej kolekcji, włączając Dodawanie lub usuwanie elementów z kolekcji o stałym rozmiarze odzwierciedla te zmiany.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsFixedSize">
          <source>The following code example shows how to create a fixed-size wrapper around an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie przedstawiono sposób tworzenia stałym rozmiarze otokę <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated">Pobiera wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> jest tylko do odczytu; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsReadOnly">
          <source>The following code example shows how to create a read-only wrapper around an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> and how to determine if an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> is read-only.</source>
          <target state="translated">W poniższym przykładzie przedstawiono sposób tworzenia tylko do odczytu otokę <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> i jak ustalić, czy <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Pobiera wartość wskazującą czy uzyskują dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dostęp do <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> jest synchronizowane (wielowątkowość); w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, wszystkie operacje muszą być wykonywane przez otoki zwrócony przez <ph id="ph2">&lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.IsSynchronized">
          <source>The following code example shows how to synchronize an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, determine if an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> is synchronized and use a synchronized <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób synchronizacji <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, ustal, czy <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> jest synchronizowane i użyj zsynchronizowany <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Element pod określonym indeksem.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> returns an <ph id="ph2">&lt;xref:System.Object&gt;</ph>, so you may need to cast the returned value to the original type in order to manipulate it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> Zwraca <ph id="ph2">&lt;xref:System.Object&gt;</ph>, więc konieczne może być Rzutowanie na pierwotny typ zwracanej wartości, aby zmian.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>It is important to note that <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is not a strongly-typed collection.</source>
          <target state="translated">Należy zauważyć, że <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> nie jest silnie typizowaną kolekcją.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>For a strongly-typed alternative, see <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Aby zamiast jednoznacznie, zobacz <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość i umożliwia zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> property.</source>
          <target state="translated">Używa języka C# do definiowania indeksatory zamiast implementacja słowa kluczowego <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Implementuje Visual Basic <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> jako domyślna właściwość, która zapewnia te same funkcje indeksowania.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest również O(1) operacji.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> and adds several items.</source>
          <target state="translated">Poniższy przykład kodu tworzy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> i dodaje kilka elementów.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The example demonstrates accessing elements with the <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> property (the indexer in C#), and changing an element by assigning a new value to the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> property for a specified index.</source>
          <target state="translated">W przykładzie pokazano podczas uzyskiwania dostępu do elementów z <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> właściwości (indeksator w języku C#) i zmienianie przypisując nową wartość do elementu <ph id="ph2">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> właściwości dla określonego indeksu.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The example also shows that the <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> property cannot be used to access or add elements outside the current size of the list.</source>
          <target state="translated">W przykładzie przedstawiono również który <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> właściwości nie można użyć do dostępu lub dodawania elementów poza bieżący rozmiar listy.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> property explicitly to assign values to items in the list.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Collections.ArrayList.Item%2A&gt;</ph> właściwości jawnie przypisać wartości do elementów na liście.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>The example defines a class that inherits an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> and adds a method to scramble the list items.</source>
          <target state="translated">W przykładzie zdefiniowano klasę, która dziedziczy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> i dodaje metodę szyfrują elementów listy.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest równa lub większa niż <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Returns the zero-based index of the last occurrence of a value in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> or in a portion of it.</source>
          <target state="translated">Zwraca liczony od zera indeks ostatniego wystąpienia wartości w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> lub w części.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the last occurrence within the entire <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Wyszukuje określony <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> i zwraca liczony od zera indeks ostatniego wystąpienia w obrębie całej <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the entire the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">Liczony od zera indeks ostatniego wystąpienia <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w obrębie całej <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, jeśli je znaleziono; w przeciwnym razie wartość -1.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is searched backward starting at the last element and ending at the first element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Przeszukiwany jest wstecz od ostatniego elementu i kończącego się na pierwszym elementem.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <source>The following code example shows how to determine the index of the last occurrence of a specified element.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak można określić indeksu ostatniego wystąpienia określony element.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that extends from the first element to the specified index.</source>
          <target state="translated">Wyszukuje określony <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> i zwraca liczony od zera indeks ostatniego wystąpienia w zakresie elementów w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> który rozciąga się od pierwszego elementu zgodnie z określonym indeksem.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that extends from the first element to <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">Liczony od zera indeks ostatniego wystąpienia <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w zakresie elementów w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> który rozciąga się od pierwszego elementu <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, jeśli je znaleziono; w przeciwnym razie wartość -1.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is searched backward starting at <ph id="ph2">`startIndex`</ph> and ending at the first element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Jest przeszukane z poprzednimi wersjami zaczynając od <ph id="ph2">`startIndex`</ph> i kończącego się na pierwszym elementem.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements from the beginning of the <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> to <ph id="ph4">`startIndex`</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest liczba elementów od początku <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> do <ph id="ph4">`startIndex`</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source>The following code example shows how to determine the index of the last occurrence of a specified element.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak można określić indeksu ostatniego wystąpienia określony element.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> znajduje się poza zakresem indeksów prawidłowy dla <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do zlokalizowania w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Liczba elementów w sekcji do wyszukania.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Wyszukuje określony <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> i zwraca liczony od zera indeks ostatniego wystąpienia w zakresie elementów w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> zawierający określoną liczbę elementów i kończy się w określonym indeksie.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that contains <ph id="ph3">&lt;paramref name="count" /&gt;</ph> number of elements and ends at <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">Liczony od zera indeks ostatniego wystąpienia <ph id="ph1">&lt;paramref name="value" /&gt;</ph> w zakresie elementów w <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> zawierający <ph id="ph3">&lt;paramref name="count" /&gt;</ph> liczba elementów i kończy się <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph>, jeśli je znaleziono; w przeciwnym razie wartość -1.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is searched backward starting at <ph id="ph2">`startIndex`</ph> and ending at <ph id="ph3">`startIndex`</ph> minus <ph id="ph4">`count`</ph> plus 1, if <ph id="ph5">`count`</ph> is greater than 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> Jest przeszukane z poprzednimi wersjami zaczynając od <ph id="ph2">`startIndex`</ph> i kończący się na <ph id="ph3">`startIndex`</ph> minus <ph id="ph4">`count`</ph> plus 1, jeśli <ph id="ph5">`count`</ph> jest większa niż 0.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>The following code example shows how to determine the index of the last occurrence of a specified element.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak można określić indeksu ostatniego wystąpienia określony element.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>Note that <ph id="ph1">`LastIndexOf`</ph> is a backward search; therefore, <ph id="ph2">`count`</ph> must be less than or equal to <ph id="ph3">`startIndex`</ph> + 1.</source>
          <target state="translated">Należy pamiętać, że <ph id="ph1">`LastIndexOf`</ph> jest wyszukiwania do tyłu; w związku z tym <ph id="ph2">`count`</ph> musi być mniejsza lub równa <ph id="ph3">`startIndex`</ph> + 1.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> znajduje się poza zakresem indeksów prawidłowy dla <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid section in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> nie zostanie określony prawidłowy części <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Returns a list wrapper that is read-only.</source>
          <target state="translated">Zwraca otoki listy, która jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to wrap.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Do zakodowania.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source>Returns a read-only <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> wrapper.</source>
          <target state="translated">Zwraca tylko do odczytu <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> otoki.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source>A read-only <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> wrapper around <ph id="ph2">&lt;paramref name="list" /&gt;</ph>.</source>
          <target state="translated">Tylko do odczytu <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> otokę <ph id="ph2">&lt;paramref name="list" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">Aby zapobiec wszelkie modyfikacje <ph id="ph1">`list`</ph>, ujawnia <ph id="ph2">`list`</ph> tylko za pośrednictwem tej otoki.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</source>
          <target state="translated">Kolekcja, która jest tylko do odczytu jest po prostu kolekcji z otoką, co uniemożliwia ich modyfikowania kolekcji.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source>If changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Jeśli wprowadzono zmiany w źródłowej kolekcji, kolekcji tylko do odczytu odzwierciedla te zmiany.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source>The following code example shows how to create a read-only wrapper around an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> and how to determine if an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> is read-only.</source>
          <target state="translated">W poniższym przykładzie przedstawiono sposób tworzenia tylko do odczytu otokę <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> i jak ustalić, czy <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> to wrap.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Do zakodowania.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
          <source>Returns a read-only <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> wrapper.</source>
          <target state="translated">Zwraca tylko do odczytu <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> otoki.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
          <source>A read-only <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> wrapper around <ph id="ph2">&lt;paramref name="list" /&gt;</ph>.</source>
          <target state="translated">Tylko do odczytu <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> otokę <ph id="ph2">&lt;paramref name="list" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">Aby zapobiec wszelkie modyfikacje <ph id="ph1">`list`</ph>, ujawnia <ph id="ph2">`list`</ph> tylko za pośrednictwem tej otoki.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</source>
          <target state="translated">Kolekcja, która jest tylko do odczytu jest po prostu kolekcji z otoką, co uniemożliwia ich modyfikowania kolekcji.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
          <source>If changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Jeśli wprowadzono zmiany w źródłowej kolekcji, kolekcji tylko do odczytu odzwierciedla te zmiany.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do usunięcia z <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Usuwa pierwsze wystąpienie określonego obiektu z <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> does not contain the specified object, the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> remains unchanged.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> nie zawiera określonego obiektu <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">Nie wyjątek.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>The following code example shows how to remove elements from the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób usuwania elementów z <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Liczony od zera indeks elementu do usunięcia.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Usuwa element o określonym indeksie <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>After the element is removed, the size of the collection is adjusted and the value of the <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> property is decreased by one.</source>
          <target state="translated">Po usunięciu elementu rozmiar kolekcji jest dostosowana i wartość <ph id="ph1">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph> właściwości zostaje zmniejszona o jeden.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>The following code example shows how to remove elements from the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób usuwania elementów z <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest równa lub większa niż <ph id="ph2">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range of elements to remove.</source>
          <target state="translated">Liczony od zera indeks początkowy zakresu elementów do usunięcia.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>The number of elements to remove.</source>
          <target state="translated">Liczba elementów do usunięcia.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>Removes a range of elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Usuwa zakres elementów z <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>The following code example shows how to remove elements from the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób usuwania elementów z <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> nie określa prawidłowego zakresu elementów w <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to copy multiple times in the new <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do skopiowania wiele razy w nowym <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source>The number of times <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be copied.</source>
          <target state="translated">Ile razy <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> powinien zostać skopiowany.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> whose elements are copies of the specified value.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> której elementy są kopie określonej wartości.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> with <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, all of which are copies of <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> z <ph id="ph2">&lt;paramref name="count" /&gt;</ph> liczba elementów, które są kopie <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość i umożliwia zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source>The following code example shows how to create and initialize a new <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> with the same value.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób tworzenia i zainicjować nowe <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> o tej samej wartości.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Reverses the order of the elements in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> or a portion of it.</source>
          <target state="translated">Odwraca kolejność elementów w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> lub jego część.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse">
          <source>Reverses the order of the elements in the entire <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Odwraca kolejność elementów w całej <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Reverse">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> to reverse the order of the elements, such that the element at <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> [i], where i is any index within the range, moves to <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> [j], where j equals <ph id="ph4">`index`</ph><ph id="ph5"> + </ph><ph id="ph6">`index`</ph><ph id="ph7"> + </ph><ph id="ph8">`count`</ph> - i - 1.</source>
          <target state="translated">Ta metoda używa <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> odwrócić kolejność elementów, aby tak, aby element pod <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> [i], gdzie mogę jest indeksu w zakresie, przenosi do <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> [j], gdzie jest równe j <ph id="ph4">`index`</ph> <ph id="ph5"> + </ph> <ph id="ph6">`index`</ph> <ph id="ph7"> + </ph> <ph id="ph8">`count`</ph> - i - 1.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Reverse">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Reverse">
          <source>The following code example shows how to reverse the sort order of the values in an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób odwrócić porządek sortowania wartości w <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">Liczony od zera indeks początkowy zakresu, aby odwrócić.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">Liczba elementów w zakresie, aby odwrócić.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source>Reverses the order of the elements in the specified range.</source>
          <target state="translated">Odwraca kolejność elementów w określonym zakresie.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> to reverse the order of the elements, such that the element at <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> [i], where i is any index within the range, moves to <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> [j], where j equals <ph id="ph4">`index`</ph><ph id="ph5"> + </ph><ph id="ph6">`index`</ph><ph id="ph7"> + </ph><ph id="ph8">`count`</ph> - i - 1.</source>
          <target state="translated">Ta metoda używa <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> odwrócić kolejność elementów, aby tak, aby element pod <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> [i], gdzie mogę jest indeksu w zakresie, przenosi do <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> [j], gdzie jest równe j <ph id="ph4">`index`</ph> <ph id="ph5"> + </ph> <ph id="ph6">`index`</ph> <ph id="ph7"> + </ph> <ph id="ph8">`count`</ph> - i - 1.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source>The following code example shows how to reverse the sort order of the values in a range of elements in an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób odwrócić porządek sortowania wartości zakresu elementów <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> nie określa prawidłowego zakresu elementów w <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>The zero-based <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> index at which to start copying the elements of <bpt id="p1">&lt;c&gt;</bpt>c<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Liczony od zera <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> indeks, w którym należy rozpocząć kopiowanie elementów <bpt id="p1">&lt;c&gt;</bpt>c<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> whose elements to copy to the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Elementów, których można skopiować do <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Sama kolekcja nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>, ale może zawierać elementy, które są <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>Copies the elements of a collection over a range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Kopiuje elementy kolekcji w zakresie elementów w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość i umożliwia zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>The order of the elements in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is preserved in the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Kolejność elementów w <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> jest zachowywana w <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>This method is an O(<ph id="ph1">`n`</ph> + 1) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph> + 1) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>The following code example shows how to set and get a range of elements in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób Ustawianie i pobieranie zakresu elementów <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus the number of elements in <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is greater than <ph id="ph3">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> wraz z liczbą elementów w <ph id="ph2">&lt;paramref name="c" /&gt;</ph> jest większa niż <ph id="ph3">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="c" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="c" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Sorts the elements in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> or a portion of it.</source>
          <target state="translated">Sortuje elementów w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> lub jego część.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort">
          <source>Sorts the elements in the entire <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Sortuje elementów w całej <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, which uses the QuickSort algorithm.</source>
          <target state="translated">Ta metoda używa <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, który używa algorytmu QuickSort.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort">
          <source>The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</source>
          <target state="translated">Algorytm QuickSort znajduje się porównanie sortowania (nazywanych również niestabilny sortowania), co oznacza, że "większe niż lub równe" operacja porównania określa, które dwa elementy w przypadku wystąpienia najpierw w ostatnim posortowaną listę.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort">
          <source>However, if two elements are equal, their original order might not be preserved.</source>
          <target state="translated">Jednak jeśli dwa elementy są takie same, ich kolejność oryginalnego mogą nie zostać zachowane.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort">
          <source>To perform a stable sort, you must implement a custom <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface to use with the other overloads of this method.</source>
          <target state="translated">Aby wykonać sortowania stabilny, musisz zaimplementować niestandardowego <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interfejsu do użycia z przeciążenie tej metody.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>; in the worst case it is an O(<ph id="ph5">`n`</ph>^2) operation.</source>
          <target state="translated">Średnia, ta metoda jest O (<ph id="ph1">`n`</ph> dziennika <ph id="ph2">`n`</ph>) operację, której <ph id="ph3">`n`</ph> jest <ph id="ph4">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>; w najgorszym przypadku jest O (<ph id="ph5">`n`</ph>^ 2) operacji.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort">
          <source>The following code example shows how to sort the values in an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób posortować wartości w <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing elements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> Wdrożenia do użycia podczas porównywania elementów.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each element.</source>
          <target state="translated">Odwołanie o wartości null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic) do użycia <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> stosowania dla każdego elementu.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>Sorts the elements in the entire <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> using the specified comparer.</source>
          <target state="translated">Sortuje elementów w całej <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> przy użyciu określona funkcja porównująca.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.ArrayList.Sort%2A&gt;</ph> method to  sort a list of objects with a custom comparer that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Collections.ArrayList.Sort%2A&gt;</ph> metody, aby posortować listę obiektów z niestandardowej funkcji porównującej, który implementuje <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`comparer`</ph>, this method uses the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each element.</source>
          <target state="translated">W przypadku przekazania <ph id="ph1">`null`</ph> dla <ph id="ph2">`comparer`</ph>, ta metoda używa <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> stosowania dla każdego elementu.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>In this case, you must make sure that the objects contained in the list implement the <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface or an exception will occur.</source>
          <target state="translated">W takim przypadku należy się upewnić, że obiekty należące do listy wdrożyć <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> nastąpi interfejsu lub wystąpił wyjątek.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>In addition, using the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">Ponadto przy użyciu <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementacji oznacza listy sortuje porównania (nazywanych również niestabilny sortowania); oznacza to, czy dwa elementy są takie same, ich kolejność mogą nie zostać zachowane.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>To perform a stable sort, you must implement a custom <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface.</source>
          <target state="translated">Aby wykonać sortowania stabilny, musisz zaimplementować niestandardowego <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>; in the worst case it is an O(<ph id="ph5">`n`</ph>^2) operation.</source>
          <target state="translated">Średnia, ta metoda jest O (<ph id="ph1">`n`</ph> dziennika <ph id="ph2">`n`</ph>) operację, której <ph id="ph3">`n`</ph> jest <ph id="ph4">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>; w najgorszym przypadku jest O (<ph id="ph5">`n`</ph>^ 2) operacji.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>The following code example shows how to sort the values in an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> using the default comparer and a custom comparer that reverses the sort order.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób posortować wartości w <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source>An error occurred while comparing two elements.</source>
          <target state="translated">Wystąpił błąd podczas porównywania dwóch elementów.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> is passed for <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph>, and the elements in the list do not implement <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> przekazany jako <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph>, a elementy na liście nie implementują <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">Liczony od zera indeks początkowy zakresu do sortowania.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>The length of the range to sort.</source>
          <target state="translated">Długość zakresu do sortowania.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing elements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> Wdrożenia do użycia podczas porównywania elementów.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each element.</source>
          <target state="translated">Odwołanie o wartości null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic) do użycia <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> stosowania dla każdego elementu.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>Sorts the elements in a range of elements in <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> using the specified comparer.</source>
          <target state="translated">Sortuje elementy w zakresie elementów w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> przy użyciu określona funkcja porównująca.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>If <ph id="ph1">`comparer`</ph> is set to <ph id="ph2">`null`</ph>, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">Jeśli <ph id="ph1">`comparer`</ph> ma ustawioną wartość <ph id="ph2">`null`</ph>, ta metoda sortuje porównania (nazywanych również niestabilny sortowania); oznacza to, czy dwa elementy są takie same, ich kolejność mogą nie zostać zachowane.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>To perform a stable sort, you must implement a custom <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface.</source>
          <target state="translated">Aby wykonać sortowania stabilny, musisz zaimplementować niestandardowego <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">`count`</ph>; in the worst case it is an O(n^2) operation.</source>
          <target state="translated">Średnia, ta metoda jest O (<ph id="ph1">`n`</ph> dziennika <ph id="ph2">`n`</ph>) operację, której <ph id="ph3">`n`</ph> jest <ph id="ph4">`count`</ph>; w najgorszym przypadku jest operacja O(n^2).</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>The following code example shows how to sort the values in a range of elements in an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> using the default comparer and a custom comparer that reverses the sort order.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób posortować wartości w zakresie elementów w <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid range in the <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> nie zostanie określony prawidłowy zakres w <ph id="ph3">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <source>An error occurred while comparing two elements.</source>
          <target state="translated">Wystąpił błąd podczas porównywania dwóch elementów.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Returns a list wrapper that is synchronized (thread safe).</source>
          <target state="translated">Zwraca otoki listy, który jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to synchronize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Do synchronizacji.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> wrapper that is synchronized (thread safe).</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> otoki, który jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> wrapper that is synchronized (thread safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Otoki, który jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, all operations must be done through this wrapper.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, wszystkie operacje muszą być wykonywane przez tę otokę.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source>The following code example shows how to synchronize an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, determine if an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> is synchronized and use a synchronized <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób synchronizacji <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, ustal, czy <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> jest synchronizowane i użyj zsynchronizowany <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> to synchronize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Do synchronizacji.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> wrapper that is synchronized (thread safe).</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> otoki, który jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> wrapper that is synchronized (thread safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Otoki, który jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, all operations must be done through this wrapper.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, wszystkie operacje muszą być wykonywane przez tę otokę.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Pobiera obiekt, który może służyć do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Obiekt, który może służyć do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Aby utworzyć zsynchronizowaną wersję <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, użyj <ph id="ph2">&lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Jednak klasy pochodne zapewniają własne zsynchronizowanej wersji <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> przy użyciu <ph id="ph2">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Synchronizowanie kodu musi wykonywać operacje <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> z <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, nie są bezpośrednio w <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> object.</source>
          <target state="translated">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.ArrayList.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ArrayList.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="T:System.Collections.ArrayList">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to a new array.</source>
          <target state="translated">Kopiuje elementy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> do nowej tablicy.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ToArray">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to a new <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> array.</source>
          <target state="translated">Kopiuje elementy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> na nowy <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> tablicy.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ToArray">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> array containing copies of the elements of the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Tablica zawierająca kopie elementów <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ToArray">
          <source>The elements are copied using <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>, which is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Skopiowane elementy przy użyciu <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>, czyli O (<ph id="ph2">`n`</ph>) operację, której <ph id="ph3">`n`</ph> jest <ph id="ph4">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ToArray(System.Type)">
          <source>The element <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the destination array to create and copy elements to.</source>
          <target state="translated">Element <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do tworzenia i kopiowanie elementów do tablicy docelowej.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ToArray(System.Type)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to a new array of the specified element type.</source>
          <target state="translated">Kopiuje elementy <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> do nowej tablicy typu określonego elementu.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ToArray(System.Type)">
          <source>An array of the specified element type containing copies of the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Tablica typu określonego elementu zawierającego kopie elementów <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ToArray(System.Type)">
          <source>All of the objects in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> object will be cast to the <ph id="ph2">&lt;xref:System.Type&gt;</ph> specified in the <ph id="ph3">`type`</ph> parameter.</source>
          <target state="translated">Wszystkie obiekty w <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> można rzutować obiektu na <ph id="ph2">&lt;xref:System.Type&gt;</ph> określony w <ph id="ph3">`type`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ToArray(System.Type)">
          <source>The elements are copied using <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>, which is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Skopiowane elementy przy użyciu <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>, czyli O (<ph id="ph2">`n`</ph>) operację, której <ph id="ph3">`n`</ph> jest <ph id="ph4">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.ToArray(System.Type)">
          <source>The following copy example shows how to copy the elements of an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> to a string array.</source>
          <target state="translated">W poniższym przykładzie kopia pokazano, jak skopiować elementy <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> na tablicę ciągów.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ToArray(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.ToArray(System.Type)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> cannot be cast automatically to the specified type.</source>
          <target state="translated">Typ źródła <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> nie można automatycznie rzutować określonego typu.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>Sets the capacity to the actual number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Ustawia pojemność na rzeczywistą liczbę elementów w <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">Ta metoda może służyć do narzut zminimalizować pamięci kolekcji, jeśli żadne nowe elementy, które zostaną dodane do kolekcji.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">Aby zresetować <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> do stanu początkowego wywołać <ph id="ph2">&lt;xref:System.Collections.ArrayList.Clear%2A&gt;</ph> metoda przed wywołaniem <ph id="ph3">&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> to the default capacity.</source>
          <target state="translated">Przycinanie pustą <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> ustawia pojemność <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> do wydajności domyślnej.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>The following code example shows how to trim the unused portions of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> and how to clear the values of the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób przycięcia nieużywane części <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> i czyszczenie wartości <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Collections.ArrayList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>