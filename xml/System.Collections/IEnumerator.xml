<Type Name="IEnumerator" FullName="System.Collections.IEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="655088f36c3067166e0713ecb39df2830a03420a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/13/2018" />
    <Meta Name="ms.locfileid" Value="35417189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("496B0ABF-CDEE-11d3-88E8-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="22a1a-101">Obsługuje prosty iteracji przez kolekcja nierodzajową.</span>
      <span class="sxs-lookup">
        <span data-stu-id="22a1a-101">Supports a simple iteration over a non-generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a1a-102"><xref:System.Collections.IEnumerator> jest podstawowy interfejs dla wszystkich nierodzajową moduły wyliczające.</span><span class="sxs-lookup"><span data-stu-id="22a1a-102"><xref:System.Collections.IEnumerator> is the base interface for all non-generic enumerators.</span></span>  
  
 <span data-ttu-id="22a1a-103">Ogólny wersja tego interfejsu dla <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="22a1a-103">For the generic version of this interface see <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 <span data-ttu-id="22a1a-104">`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="22a1a-104">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="22a1a-105">W związku z tym przy użyciu `foreach` zaleca się zamiast bezpośrednie manipulowanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="22a1a-105">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="22a1a-106">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="22a1a-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="22a1a-107"><xref:System.Collections.IEnumerator.Reset%2A> Metody na współdziałanie z COM i nie musi być w pełni wdrożone; zamiast tego można zgłosić implementujący <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="22a1a-107">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability and does not need to be fully implemented; instead, the implementer can throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="22a1a-108">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22a1a-108">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="22a1a-109">Należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> metodę modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>; w przeciwnym razie <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="22a1a-109">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>; otherwise, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="22a1a-110"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="22a1a-110"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="22a1a-111"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="22a1a-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="22a1a-112">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="22a1a-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="22a1a-113">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="22a1a-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="22a1a-114">Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="22a1a-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="22a1a-115">Można ustawić <xref:System.Collections.IEnumerator.Current%2A> aby pierwszym elementem kolekcji ponownie, należy wywołać <xref:System.Collections.IEnumerator.Reset%2A>, jeśli jest stosowana, a następnie <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="22a1a-115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A>, if it’s implemented, followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="22a1a-116">Jeśli <xref:System.Collections.IEnumerator.Reset%2A> jest nie jest zaimplementowana, należy utworzyć nowe wystąpienie modułu wyliczającego, aby powrócić do pierwszego elementu z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22a1a-116">If <xref:System.Collections.IEnumerator.Reset%2A> is not implemented, you must create a new enumerator instance to return to the first element of the collection.</span></span>  
  
 <span data-ttu-id="22a1a-117">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów modułu wyliczającego jest niezdefiniowany.</span><span class="sxs-lookup"><span data-stu-id="22a1a-117">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="22a1a-118">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="22a1a-118">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="22a1a-119">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="22a1a-119">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="22a1a-120">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="22a1a-120">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a1a-121">Poniższy przykładowy kod przedstawia implementację <xref:System.Collections.IEnumerable> i <xref:System.Collections.IEnumerator> interfejsy do kolekcji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="22a1a-121">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="22a1a-122">W tym przykładzie członkami te interfejsy nie są jawnie wywołać, ale są one wykonywane na obsługują `foreach` (`for each` w języku Visual Basic) do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22a1a-122">In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of `foreach` (`for each` in Visual Basic) to iterate through the collection.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22a1a-123">Pobiera element w kolekcji w bieżącym położeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22a1a-123">Gets the element in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22a1a-124">Element w kolekcji w bieżącym położeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22a1a-124">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a1a-125"><xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana we wszystkich następujących warunków:</span><span class="sxs-lookup"><span data-stu-id="22a1a-125"><xref:System.Collections.IEnumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="22a1a-126">Moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji, natychmiast po utworzeniu modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="22a1a-126">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="22a1a-127"><xref:System.Collections.IEnumerator.MoveNext%2A> musi zostać wywołana można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="22a1a-127"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="22a1a-128">Ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, co oznacza koniec kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22a1a-128">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="22a1a-129">Moduł wyliczający jest unieważnione z powodu zmian wprowadzonych w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów.</span><span class="sxs-lookup"><span data-stu-id="22a1a-129">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="22a1a-130"><xref:System.Collections.IEnumerator.Current%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.Collections.IEnumerator.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="22a1a-130"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="22a1a-131"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="22a1a-131"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a1a-132">Poniższy przykładowy kod przedstawia implementację <xref:System.Collections.IEnumerator> interfejsy do kolekcji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="22a1a-132">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="22a1a-133">W tym przykładzie <xref:System.Collections.IEnumerator.Current%2A> nie została jawnie wywołana, ale jest stosowana do korzystania z `foreach` (`for each` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="22a1a-133">In this example, <xref:System.Collections.IEnumerator.Current%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="22a1a-134">Ten przykładowy kod jest częścią większego przykładu dla <xref:System.Collections.IEnumerator> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="22a1a-134">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22a1a-135">Moduł wyliczający należy przechodzi do następnego elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22a1a-135">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="22a1a-136">
            <see langword="true" /> Jeśli moduł wyliczający został pomyślnie poprawionym do następnego elementu; <see langword="false" /> po zakończeniu zbierania moduł wyliczający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22a1a-136">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a1a-137">Po utworzeniu modułu wyliczającego lub po <xref:System.Collections.IEnumerator.Reset%2A> metoda jest wywoływana, moduł wyliczający jest umieszczony przed pierwszym elementem kolekcji i w pierwszym wywołaniu <xref:System.Collections.IEnumerator.MoveNext%2A> metody moduł wyliczający jest przemieszczane nad pierwszym elementem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="22a1a-137">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, an enumerator is positioned before the first element of the collection, and the first call to the <xref:System.Collections.IEnumerator.MoveNext%2A> method moves the enumerator over the first element of the collection.</span></span>  
  
 <span data-ttu-id="22a1a-138">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="22a1a-138">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="22a1a-139">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A> zwracają również `false` do momentu <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="22a1a-139">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false` until <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="22a1a-140">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, zachowanie <xref:System.Collections.IEnumerator.MoveNext%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="22a1a-140">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of <xref:System.Collections.IEnumerator.MoveNext%2A> is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a1a-141">Poniższy przykładowy kod przedstawia implementację <xref:System.Collections.IEnumerator> interfejsy do kolekcji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="22a1a-141">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="22a1a-142">W tym przykładzie <xref:System.Collections.IEnumerator.MoveNext%2A> nie została jawnie wywołana, ale jest stosowana do korzystania z `foreach` (`for each` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="22a1a-142">In this example, <xref:System.Collections.IEnumerator.MoveNext%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="22a1a-143">Ten przykładowy kod jest częścią większego przykładu dla <xref:System.Collections.IEnumerator> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="22a1a-143">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22a1a-144">Ustawia modułu wyliczającego pozycji początkowej, czyli przed pierwszym elementem w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22a1a-144">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a1a-145">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, zachowanie <xref:System.Collections.IEnumerator.Reset%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="22a1a-145">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of <xref:System.Collections.IEnumerator.Reset%2A> is undefined.</span></span>  
  
 <span data-ttu-id="22a1a-146"><xref:System.Collections.IEnumerator.Reset%2A> Współdziałanie COM jest dostępne metody.</span><span class="sxs-lookup"><span data-stu-id="22a1a-146">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="22a1a-147">Nie zawsze musi zostać wykonane; Zamiast tego można po prostu throw implementujący <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="22a1a-147">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a1a-148">Poniższy przykładowy kod przedstawia implementację <xref:System.Collections.IEnumerator> interfejsy do kolekcji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="22a1a-148">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="22a1a-149">W tym przykładzie <xref:System.Collections.IEnumerator.Reset%2A> nie została jawnie wywołana, ale jest stosowana do korzystania z `foreach` (`for each` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="22a1a-149">In this example, <xref:System.Collections.IEnumerator.Reset%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="22a1a-150">Ten przykładowy kod jest częścią większego przykładu dla <xref:System.Collections.IEnumerator> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="22a1a-150">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="22a1a-151">
            <para>Wszystkie wywołania <see cref="M:System.Collections.IEnumerator.Reset" /> muszą dawać w wyniku tego samego stanu dla modułu wyliczającego. Implementacja preferowany jest można przenieść na początku kolekcji przed pierwszym elementem modułu wyliczającego. Unieważnia modułu wyliczającego, jeśli kolekcja została zmodyfikowana od czasu utworzenia moduł wyliczający, który jest zgodny z <see cref="M:System.Collections.IEnumerator.MoveNext" /> i <see cref="P:System.Collections.IEnumerator.Current" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22a1a-151">
              <para>All calls to <see cref="M:System.Collections.IEnumerator.Reset" /> must result in the same state for the enumerator. The preferred implementation is to move the enumerator to the beginning of the collection, before the first element. This invalidates the enumerator if the collection has been modified since the enumerator was created, which is consistent with <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="P:System.Collections.IEnumerator.Current" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>