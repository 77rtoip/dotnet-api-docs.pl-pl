<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46e9881e5a687f951730fba30e320133ed7f95be" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69333688" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody do obsługi porównania obiektów pod kątem równości strukturalnej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Równość strukturalna oznacza, że dwa obiekty są równe, ponieważ mają równe wartości. Różni się od równości odwołań, co oznacza, że dwa odwołania do obiektów są równe, ponieważ odwołują się do tego samego obiektu fizycznego. <xref:System.Collections.IStructuralEquatable> Interfejs pozwala zaimplementować dostosowane porównania, aby sprawdzić, czy strukturalne równość obiektów kolekcji. Oznacza to, że można utworzyć własną definicję równości strukturalnej i określić, że ta definicja będzie używana z typem kolekcji akceptującym <xref:System.Collections.IStructuralEquatable> interfejs. Interfejs ma dwa elementy członkowskie: <xref:System.Collections.IStructuralEquatable.Equals%2A>, które sprawdzają równość przy użyciu określonej <xref:System.Collections.IEqualityComparer> implementacji, i <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, która zwraca identyczne kody skrótów dla obiektów, które są równe.  
  
> [!NOTE]
>  <xref:System.Collections.IStructuralEquatable> Interfejs obsługuje tylko niestandardowe porównania dla równości strukturalnej. <xref:System.Collections.IStructuralComparable> Interfejs obsługuje niestandardowe porównania strukturalne na potrzeby sortowania i porządkowania.  
  
 .NET Framework udostępnia również domyślne funkcje porównujące równość, które są zwracane przez <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> właściwości i. <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> Aby uzyskać więcej informacji, zobacz przykład.  
  
 Klasy uniwersalnej kolekcji (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, itd.) <xref:System.Collections.IStructuralEquatable> i <xref:System.Array> Klasa zapewniają jawne implementacje interfejsu. Poprzez rzutowanie ( C#w) lub konwertowanie (w Visual Basic) bieżące wystąpienie tablicy lub krotki do <xref:System.Collections.IStructuralEquatable> <xref:System.Collections.IEqualityComparer> wartości interfejsu i dostarczenie implementacji jako argumentu do <xref:System.Collections.IStructuralEquatable.Equals%2A> metody, można zdefiniować niestandardową równość Porównanie dla tablicy lub kolekcji.  
  
   
  
## Examples  
 Domyślna funkcja porównująca równość `EqualityComparer<Object>.Default.Equals`,, traktuje dwie `NaN` wartości jako równe. Jednak w niektórych przypadkach można chcieć porównać `NaN` wartości zwracające `false`równość, co oznacza, że wartości nie mogą być porównywane. W poniższym przykładzie zdefiniowano `NanComparer` klasę, która <xref:System.Collections.IStructuralEquatable> implementuje interfejs. Porównuje dwie <xref:System.Double> lub dwie <xref:System.Single> wartości przy użyciu operatora równości. Przekazuje ona wartości dowolnego innego typu do domyślnej opcji porównującej równość.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 Poniższy przykład tworzy dwa identyczne obiekty typu krotka, których składniki składają się z <xref:System.Double> trzech wartości. Wartość drugiego składnika to <xref:System.Double.NaN?displayProperty=nameWithType>. Przykład następnie wywołuje <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> metodę i <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> wywołuje metodę trzykrotnie. Po raz pierwszy przekazuje domyślną funkcję porównującą równość zwracaną przez <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> właściwość. Drugi raz przekazuje domyślną funkcję porównującą równość zwracaną przez <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> właściwość. Trzeci czas przekazuje obiekt niestandardowy `NanComparer` . Jak pokazano na przykładzie, pierwsze trzy wywołania metody zwracają `true`, podczas gdy czwarte wywołanie zwraca wartość. `false`  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">Obiekt do porównania z bieżącym wystąpieniem.</param>
        <param name="comparer">Obiekt, który określa, czy bieżące wystąpienie i <paramref name="other" /> jest równe.</param>
        <summary>Określa, czy obiekt jest strukturalnie równy bieżącemu wystąpieniu.</summary>
        <returns><see langword="true" />Jeśli dwa obiekty są równe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralEquatable.Equals%2A> Metoda obsługuje niestandardowe porównanie strukturalne obiektów array i krotek. Ta metoda z kolei wywołuje `comparer` <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> metodę obiektu, aby porównać poszczególne elementy tablicy lub składniki krotek, rozpoczynając od pierwszego elementu lub składnika. Poszczególne wywołania do <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> końca <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> i Metoda zwracają wartość, gdy wywołanie metody zwraca `false` lub po porównaniu wszystkich elementów tablicy lub składników krotki.  
  
   
  
## Examples  
 Domyślna funkcja porównująca równość `EqualityComparer<Object>.Default.Equals`,, traktuje dwie `NaN` wartości jako równe. Jednak w niektórych przypadkach można chcieć porównać `NaN` wartości zwracające `false`równość, co oznacza, że wartości nie mogą być porównywane. W poniższym przykładzie zdefiniowano `NanComparer` klasę, która <xref:System.Collections.IStructuralEquatable> implementuje interfejs. Porównuje dwie <xref:System.Double> lub dwie <xref:System.Single> wartości przy użyciu operatora równości. Przekazuje ona wartości dowolnego innego typu do domyślnej opcji porównującej równość.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 Poniższy przykład tworzy dwa identyczne obiekty typu krotka, których składniki składają się z <xref:System.Double> trzech wartości. Wartość drugiego składnika to <xref:System.Double.NaN?displayProperty=nameWithType>. Przykład następnie wywołuje <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> metodę i <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> wywołuje metodę trzykrotnie. Po raz pierwszy przekazuje domyślną funkcję porównującą równość zwracaną przez <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> właściwość. Drugi raz przekazuje domyślną funkcję porównującą równość zwracaną przez <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> właściwość. Trzeci czas przekazuje obiekt niestandardowy `NanComparer` . Jak pokazano na przykładzie, pierwsze trzy wywołania metody zwracają `true`, podczas gdy czwarte wywołanie zwraca wartość. `false`  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Obiekt, który oblicza wartość skrótu bieżącego obiektu.</param>
        <summary>Zwraca kod skrótu dla bieżącego wystąpienia.</summary>
        <returns>Kod skrótu dla bieżącego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj tę metodę w celu zwrócenia niestandardowych kodów skrótów dla obiektów kolekcji, które są zgodne z dostosowanym porównaniem równości <xref:System.Collections.IStructuralEquatable.Equals%2A> strukturalnej zapewnionej przez metodę.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jeśli metoda zwraca <see langword="true" /> dla dwóch obiektów, wartości zwracane przez <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> metodę dla dwóch obiektów muszą być również równe. <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
