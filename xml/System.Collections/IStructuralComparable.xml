<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b076be1b16d28e1970639f6c9d747547a754fdba" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36712629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <TypeSignature Language="F#" Value="type IStructuralComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Obsługuje strukturalnych porównanie kolekcji obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralComparable> Interfejs umożliwia Implementowanie niestandardowych porównania dla członków kolekcji. Oznacza to należy zdefiniować dokładnie znaczenie dla jednego obiektu kolekcji poprzedzać, wykonaj lub występuje w tym samym miejscu drugi obiekt kolekcji w kolejności sortowania. Następnie określ, czy ta definicja można używać z typem kolekcji, który akceptuje <xref:System.Collections.IStructuralComparable> interfejsu.  
  
 Interfejs ma jeden element członkowski <xref:System.Collections.IStructuralComparable.CompareTo%2A>, która określa, czy bieżący obiekt kolekcji jest mniejszy, równy lub większy niż drugi obiekt w kolejności sortowania. Rzeczywiste porównanie elementów członkowskich lub elementów w bieżącym wystąpieniu z aliasami w drugi obiekt jest wykonywane przez <xref:System.Collections.IComparer> implementacji interfejsu zawiera definicję niestandardowych porównania.  
  
> [!NOTE]
>  <xref:System.Collections.IStructuralComparable> Interfejs obsługuje tylko strukturalnych porównania do sortowania lub kolejności. <xref:System.Collections.IStructuralEquatable> Interfejs obsługuje niestandardowe porównania równości strukturalnej.  
  
 .NET Framework udostępnia dwa domyślne comparers. Zwracany przez jeden <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> właściwości; druga, jest zwracany przez <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> właściwości.  
  
 Klasy ogólne spójnej kolekcji (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>i tak dalej) i <xref:System.Array> klasy podać jawne implementacje <xref:System.Collections.IStructuralComparable> interfejsu. Rzutowanie (w języku C#) lub konwertowanie (w języku Visual Basic) bieżącego wystąpienia lub spójnej kolekcji do tablicy <xref:System.Collections.IStructuralComparable> interfejsu wartość i z <xref:System.Collections.IComparer> implementacji jako argument <xref:System.Collections.IStructuralComparable.CompareTo%2A> metody, można zdefiniować niestandardową kolejność sortowania dla tablica lub kolekcji. Jednak nie zostanie wywołana <xref:System.Collections.IStructuralComparable.CompareTo%2A> metody bezpośrednio w większości przypadków. Zamiast tego <xref:System.Collections.IStructuralComparable.CompareTo%2A> metoda jest wywoływana przez sortowanie metod, takich jak <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>. W takim przypadku należy zdefiniować Twojej <xref:System.Collections.IComparer> implementacji i przekaż go jako argument do konstruktora klasy sortowania metody lub kolekcji obiektu. <xref:System.Collections.IStructuralComparable.CompareTo%2A> Metody z Twojej niestandardowej funkcji porównującej następnie jest wywoływana automatycznie, gdy kolekcja jest sortowana.  
  
   
  
## Examples  
 Poniższy przykład tworzy tablicę <xref:System.Tuple%606> obiektów, które zawiera dane populacji dla trzech miejscowości USA z 1960 do 2000. Pierwszy składnik sextuple jest nazwą miasta. Pozostałe składniki pięć reprezentują populacji co 10 lat. z 1960 do 2000.  
  
 `PopulationComparer` Klasa udostępnia <xref:System.Collections.IComparer> implementację, która umożliwia tablicy sextuples sortowania za pomocą jednej z jego składników. Dwie wartości są dostarczane do `PopulationComparer` klasy w swoich konstruktorach: położenie składnika, który definiuje kolejność sortowania i wartość logiczną wskazującą, czy obiekty krotki mają być sortowane w kolejności rosnącej lub malejącej.  
  
 Przykładzie następnie wyświetla elementy w tablicy w kolejności nieposortowane, sortowane według trzecim składnikiem (populacji 1970) i wyświetla je, sortowane według składnika szóstego (populacji 2000) i wyświetla je. Należy pamiętać, że przykładzie nie mogą bezpośrednio wywoływać <xref:System.Collections.IStructuralComparable.CompareTo%2A> metody. Metoda jest wywoływana niejawnie przez <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> metody dla każdego obiektu spójnej kolekcji w tablicy.  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="iStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">Obiekt do porównania z bieżącym wystąpieniem.</param>
        <param name="comparer">Obiekt, który porównuje członków bieżącego obiektu kolekcji z odpowiednich członków <c>innych</c>.</param>
        <summary>Określa, czy bieżący obiekt kolekcji poprzedza, odbywa się w tym samym miejscu czy następuje z innym obiektem w kolejności sortowania.</summary>
        <returns>Liczba całkowita, która wskazuje relację bieżący obiekt kolekcji do <paramref name="other" />, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość zwracana </term><description> opis </description></listheader><item><term> -1 </term><description> poprzedza bieżącego wystąpienia <paramref name="other" />.  </description></item><item><term> 0 </term><description> bieżącego wystąpienia i <paramref name="other" /> są takie same.  </description></item><item><term> 1 </term><description> zgodny z bieżącym wystąpieniem <paramref name="other" />.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralComparable.CompareTo%2A> Metoda obsługuje niestandardowe strukturalnych porównywanie i sortowanie tablicy i spójnej kolekcji obiektów. <xref:System.Collections.IStructuralComparable.CompareTo%2A> Wywołania metody `comparer` obiektu <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodę porównywania elementów tablicy poszczególnych lub składników spójnej kolekcji, rozpoczynając od pierwszego elementu lub składnik. Poszczególne wywołań <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> zakończenia i <xref:System.Collections.IStructuralComparable.CompareTo%2A> metoda zwraca wartość, gdy jeden z następujących warunków jest spełniony:  
  
-   <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> Metoda zwraca wartość -1.  
  
-   <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> Metoda zwraca wartość 1.  
  
-   <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> Metoda jest wywoływana dla ostatniego elementu lub składnika w obiekcie kolekcji.  
  
   
  
## Examples  
 Poniższy przykład tworzy tablicę <xref:System.Tuple%606> obiektów, które zawiera dane populacji dla trzech miejscowości USA z 1960 do 2000. Pierwszy składnik sextuple jest nazwą miasta. Pozostałe składniki pięć reprezentują populacji co 10 lat. z 1960 do 2000.  
  
 `PopulationComparer` Klasa udostępnia <xref:System.Collections.IComparer> implementację, która umożliwia tablicy sextuples sortowania za pomocą jednej z jego składników. Dwie wartości są dostarczane do `PopulationComparer` klasy w swoich konstruktorach: położenie składnika, który definiuje kolejność sortowania i <xref:System.Boolean> wartość, która wskazuje, czy obiekty krotki mają być sortowane w kolejności rosnącej lub malejącej.  
  
 Przykładzie następnie wyświetla elementy w tablicy w kolejności nieposortowane, sortowane według trzecim składnikiem (populacji 1970) i wyświetla je, sortowane według składnika szóstego (populacji 2000) i wyświetla je. Należy pamiętać, że przykładzie nie mogą bezpośrednio wywoływać <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> implementacji. Metoda jest wywoływana niejawnie przez <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> metody dla każdego obiektu spójnej kolekcji w tablicy.  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">To wystąpienie i <paramref name="other" /> nie są tego samego typu.</exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>