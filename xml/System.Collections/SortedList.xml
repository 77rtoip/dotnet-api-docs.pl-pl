<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedList.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d3124b7bda8739a20a75d51b771ab675fd3a27c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3124b7bda8739a20a75d51b771ab675fd3a27c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.SortedList">
          <source>Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</source>
          <target state="translated">Reprezentuje kolekcję par klucz/wartość, są sortowane według kluczy, które są dostępne za pomocą klucza i indeksu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For the generic version of this collection, see <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ogólny wersję tej kolekcji, zobacz <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> element can be accessed by its key, like an element in any <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation, or by its index, like an element in any <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> implementation.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> element jest możliwy za pomocą klucza, takich jak element w dowolnym <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementacji lub jej indeks, takich jak element w dowolnym <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu wewnętrznie obsługuje dwie tablice do przechowywania elementów listy; oznacza to, co tablica kluczy i innej tablicy dla skojarzone wartości.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Each element is a key/value pair that can be accessed as a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">Każdy element jest para klucza i wartości, które są dostępne <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Klucz nie może być <ph id="ph1">`null`</ph>, ale może być wartością.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt jest liczba elementów <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, automatycznie zostaje zwiększona wydajność co jest wymagane przez; Ponowna alokacja.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">Można zmniejszyć pojemność przez wywołanie metody <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> lub przez ustawienie <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> właściwości jawnie.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Dla bardzo dużych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekty, można zwiększyć maksymalną pojemność do 2 miliardów elementów w 64-bitowym systemie ustawiając <ph id="ph2">`enabled`</ph> atrybutu elementu konfiguracji, aby <ph id="ph3">`true`</ph> w środowisku czasu wykonywania.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu są sortowane według kluczy albo zgodnie z określonym <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji określić, kiedy <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> został utworzony lub zgodnie z do <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementacji pochodzącymi z samych kluczy.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>In either case, a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> does not allow duplicate keys.</source>
          <target state="translated">W obu przypadkach <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> nie zezwala na zduplikowane klucze.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Sekwencja indeks jest oparty na kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Po dodaniu elementu wstawieniu do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Operations on a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object tend to be slower than operations on a <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> object because of the sorting.</source>
          <target state="translated">Operacje na <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu często wykonywane wolniej niż operacje na <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> obiektu z powodu sortowania.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>However, the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</source>
          <target state="translated">Jednak <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> zapewnia większą elastyczność zezwalania na dostęp do wartości za pośrednictwem skojarzonych kluczy lub indeksy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Elementy w tej kolekcji jest możliwy przy użyciu indeksu liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">Indeksy w tej kolekcji jest liczony od zera.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w języku Visual Basic) zwraca obiekt typu elementów w kolekcji.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Ponieważ każdy element <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu jest parę klucz/wartość, nie jest typu elementu typu klucza lub typ wartości.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Rather, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">Typ elementu jest raczej, <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For example:</source>
          <target state="translated">Na przykład:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcja jest otokę moduł wyliczający, który umożliwia odczyt tylko z bez zapisywania do kolekcji.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The following code example shows how to create and initialize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to print out its keys and values.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt i jak wydrukować jej kluczy i wartości.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Publiczne statyczne (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu może obsługiwać wielu czytników jednocześnie, jak długo kolekcji nie jest modyfikowany.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /&gt;</ph> method.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>, wszystkie operacje muszą być wykonywane przez otoki zwrócony przez <ph id="ph2">&lt;see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Collections.SortedList">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the default initial capacity, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key added to the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> klasy, która jest pusta, ma domyślne początkowa pojemność i jest sortowana według <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu implementowanego przez każdy klucz dodane do <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Każdy klucz musi implementować <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Elementy są sortowane według <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> wdrożenia każdego klucza dodane do <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ten konstruktor jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> Implementacji do używania przy porównywaniu kluczy.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> Aby użyć <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> stosowania dla każdego klucza.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the default initial capacity, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> klasy, która jest pusta, ma domyślne początkowa pojemność i jest sortowana według określonego <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Elementy są sortowane według określonego <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli <ph id="ph1">`comparer`</ph> parametr jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> stosowania dla każdego klucza jest używany; w związku z tym każdy klucz musi implementować <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ten konstruktor jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> implementation to copy to a new <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> Implementacji, aby skopiować do nowego <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> klasę, która zawiera elementów kopiowanych z określonego słownika ma tego samego początkowej pojemności niż liczba elementów kopiowanych i jest sortowana według <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu implementowanego przez każdy klucz.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Każdy klucz musi implementować <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Elementy są sortowane według <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> wdrożenia każdego klucza dodane do <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> object is an example of an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation that can be passed to this constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> obiekt jest przykładem <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementacji, które mogą zostać przekazane do tego konstruktora.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a copy of the keys and values stored in the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu zawiera kopię klucze i wartości przechowywane w <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">Ten konstruktor jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest liczba elementów w <ph id="ph3">`d`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>One or more elements in <ph id="ph1">&lt;paramref name="d" /&gt;</ph> do not implement the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated">Co najmniej jeden element w <ph id="ph1">&lt;paramref name="d" /&gt;</ph> nie implementują <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Początkowa liczba elementów który <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiekt może zawierać.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the specified initial capacity, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key added to the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> klasy, która jest pusta, ma określony początkowa pojemność i jest sortowana według <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu implementowanego przez każdy klucz dodane do <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Każdy klucz musi implementować <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Elementy są sortowane według <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> wdrożenia każdego klucza dodane do <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">Ten konstruktor jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`initialCapacity`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>There is not enough available memory to create a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object with the specified <ph id="ph2">&lt;paramref name="initialCapacity" /&gt;</ph>.</source>
          <target state="translated">Nie ma dostatecznej ilości dostępnej pamięci, aby utworzyć <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu z określonym <ph id="ph2">&lt;paramref name="initialCapacity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> Implementacji do używania przy porównywaniu kluczy.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> Aby użyć <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> stosowania dla każdego klucza.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Początkowa liczba elementów który <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiekt może zawierać.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the specified initial capacity, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> klasy, która jest pusta, ma określony początkowa pojemność i jest sortowana według określonego <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Elementy są sortowane według określonego <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli <ph id="ph1">`comparer`</ph> parametr jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> stosowania dla każdego klucza jest używany; w związku z tym każdy klucz musi implementować <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Ten konstruktor jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>There is not enough available memory to create a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object with the specified <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>.</source>
          <target state="translated">Nie ma dostatecznej ilości dostępnej pamięci, aby utworzyć <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu z określonym <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> implementation to copy to a new <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> Implementacji, aby skopiować do nowego <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> Implementacji do używania przy porównywaniu kluczy.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> Aby użyć <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> stosowania dla każdego klucza.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> klasę, która zawiera elementów kopiowanych z określonego słownika ma tego samego początkowej pojemności niż liczba elementów kopiowanych i jest sortowana według określonego <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Elementy są sortowane według określonego <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli <ph id="ph1">`comparer`</ph> parametr jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> stosowania dla każdego klucza jest używany; w związku z tym każdy klucz musi implementować <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> object is an example of an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation that can be passed to this constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> obiekt jest przykładem <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementacji, które mogą zostać przekazane do tego konstruktora.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a copy of the keys and values stored in the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu zawiera kopię klucze i wartości przechowywane w <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">Ten konstruktor jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest liczba elementów w <ph id="ph3">`d`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and one or more elements in <ph id="ph3">&lt;paramref name="d" /&gt;</ph> do not implement the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>i co najmniej jeden element w <ph id="ph3">&lt;paramref name="d" /&gt;</ph> nie implementują <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The key of the element to add.</source>
          <target state="translated">Klucz elementu do dodania.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The value of the element to add.</source>
          <target state="translated">Wartość elementu do dodania.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>Adds an element with the specified key and value to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Dodaje element z określonym kluczem i wartością do <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The insertion point is determined based on the comparer selected, either explicitly or by default, when the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object was created.</source>
          <target state="translated">Punkt wstawiania jest określana oparte na porównania zaznaczone, jawnie lub domyślnie, gdy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt został utworzony.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> jest już równa <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>, pojemność <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object (for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">Można również użyć <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> właściwości, aby dodać nowe elementy za pomocą ustawienia wartości klucza, który nie istnieje w <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu (na przykład <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Jednak jeśli określony klucz już istnieje w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, ustawienie <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> stara wartość jest zastąpienie właściwości.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Z kolei <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> — metoda nie modyfikuje istniejące elementy.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu są sortowane według kluczy albo zgodnie z określonym <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji określić, kiedy <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> został utworzony lub zgodnie z do <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementacji pochodzącymi z samych kluczy.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Klucz nie może być <ph id="ph1">`null`</ph>, ale może być wartością.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operacji nieposortowane danych, gdzie <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">Jest O (dziennika <ph id="ph1">`n`</ph>) operacji, jeśli nowy element zostanie dodany na końcu listy.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">Jeśli wstawiania powoduje, że zmiany rozmiaru, operacja jest O (<ph id="ph1">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The following code example shows how to add elements to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie przedstawiono sposób dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>An element with the specified <ph id="ph1">&lt;paramref name="key" /&gt;</ph> already exists in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Element z określonym <ph id="ph1">&lt;paramref name="key" /&gt;</ph> już istnieje w <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is set to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface, and <ph id="ph3">&lt;paramref name="key" /&gt;</ph> does not implement the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Jest skonfigurowany do używania <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu i <ph id="ph3">&lt;paramref name="key" /&gt;</ph> nie implementuje <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>There is not enough available memory to add the element to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Nie ma dostatecznej ilości dostępnej pamięci, aby dodać element do <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Moduł porównujący zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>Gets or sets the capacity of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera lub ustawia pojemność <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Liczba elementów który <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiekt może zawierać.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> Liczba elementów jest który <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> mogą być przechowywane przez obiekt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> jest to liczba elementów, które są rzeczywiście w <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> zawsze jest większa niż lub równa <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> przekracza <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> podczas dodawania elementów, pojemność jest automatycznie zwiększany o ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">Można zmniejszyć pojemność przez wywołanie metody <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> lub przez ustawienie <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> właściwości jawnie.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">Jeśli wartość <ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> jest ustawiony jawnie, aby zmieścił się w określonej pojemności także alokowaniu tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest nowego miejsca.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>The value assigned is less than the current number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Wartość przypisana jest mniejsza niż bieżąca liczba elementów w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">Nie istnieje wystarczająca ilość pamięci dostępna w systemie.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>Removes all elements from a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Usuwa wszystkie elementy z <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> zostaje ustawiony na zero, a ponadto są również zwalniane odwołania do innych obiektów z elementów kolekcji.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, call <ph id="ph2">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or set the <ph id="ph3">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property directly.</source>
          <target state="translated">Aby zresetować pojemność <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt, należy wywołać <ph id="ph2">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> lub ustaw <ph id="ph3">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> właściwości bezpośrednio.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> to the default capacity.</source>
          <target state="translated">Przycinanie pustą <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> ustawia pojemność <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> do wydajności domyślnej.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>The following code example shows how to trim the unused portions of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to clear the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób przycięcia nieużywane części <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt i czyszczenie wartości <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Obiekt jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clone">
          <source>Creates a shallow copy of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Tworzy kopię pobieżną <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Kopia pobieżna <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</source>
          <target state="translated">Kopię pobieżną kolekcji kopiuje elementy kolekcji, czy są one typy odwołań lub wartość typów, ale nie kopiuje obiektów, które dotyczą odwołania.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Odwołania do nowej kolekcji wskazują te same obiekty, które wskazują odwołania w oryginalnej kolekcji.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Z kolei głęboką kopię kolekcji kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Klucz do zlokalizowania w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific key.</source>
          <target state="translated">Określa, czy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu zawiera określony klucz.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> zawiera element z określonym <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu są sortowane według kluczy albo zgodnie z określonym <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji określić, kiedy <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> został utworzony lub zgodnie z do <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementacji pochodzącymi z samych kluczy.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> implements <ph id="ph2">&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> implementuje <ph id="ph2">&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>It behaves exactly as <ph id="ph1">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>.</source>
          <target state="translated">Zachowuje się dokładnie jako <ph id="ph1">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda używa algorytmu wyszukiwania binarne; w związku z tym ta metoda jest O (dziennika <ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób określić, czy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt zawiera określony element.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Moduł porównujący zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Klucz do zlokalizowania w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific key.</source>
          <target state="translated">Określa, czy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu zawiera określony klucz.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> zawiera element z określonym <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu są sortowane według kluczy albo zgodnie z określonym <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji określić, kiedy <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> został utworzony lub zgodnie z do <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementacji pochodzącymi z samych kluczy.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>This method behaves exactly as the <ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> method.</source>
          <target state="translated">Ta metoda działa dokładnie jako <ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda używa algorytmu wyszukiwania binarne; w związku z tym ta metoda jest O (dziennika <ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób określić, czy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt zawiera określony element.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Moduł porównujący zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Wartość do zlokalizowania w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific value.</source>
          <target state="translated">Określa, czy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu zawiera określoną wartość.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> zawiera element z określonym <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The values of the elements of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are compared to the specified value using the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Wartości elementów <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu są porównywane przy użyciu określonej wartości <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym Średni czas wykonania jest proporcjonalny do <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób określić, czy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt zawiera określony element.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> object that is the destination of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Jednowymiarowa <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> obiekt, który jest miejscem docelowym <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> obiektów kopiowanych ze <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> Musi mieć indeksowania liczony od zera.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Liczony od zera indeks w <bpt id="p1">&lt;c&gt;</bpt>tablicy<ept id="p1">&lt;/c&gt;</ept> od rozpoczyna się kopiowanie które.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>Copies <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> elements to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> object, starting at the specified index in the array.</source>
          <target state="translated">Kopie <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> elementów na jednowymiarowe <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> obiektu, zaczynając od określonego indeksu tablicy.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The key/value pairs are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> object in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Pary klucz wartość są kopiowane do <ph id="ph1">&lt;xref:System.Array&gt;</ph> obiektu w tej samej kolejności, w której moduł wyliczający iteruje <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>To copy only the keys in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, use <ph id="ph2">`SortedList.Keys.CopyTo`</ph>.</source>
          <target state="translated">Aby skopiować tylko klucze w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, użyj <ph id="ph2">`SortedList.Keys.CopyTo`</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>To copy only the values in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, use <ph id="ph2">`SortedList.Values.CopyTo`</ph>.</source>
          <target state="translated">Aby skopiować tylko wartości w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, użyj <ph id="ph2">`SortedList.Values.CopyTo`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The following code example shows how to copy the values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object into a one-dimensional <ph id="ph2">&lt;xref:System.Array&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób kopiowania wartości w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu do jednowymiarowego <ph id="ph2">&lt;xref:System.Array&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest wielowymiarowy.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Liczba elementów w źródle <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu jest większa niż dostępne miejsce od <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> do końca tablicy docelowej <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Typ źródła <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> nie można automatycznie rzutować na typ docelowy <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Count">
          <source>Gets the number of elements contained in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera liczbę elementów zawartych w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Liczba elementów zawartych w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>Each element is a key/value pair that can be accessed as a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">Każdy element jest para klucza i wartości, które są dostępne <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> Liczba elementów jest który <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> mogą być przechowywane przez obiekt.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> jest to liczba elementów, które są rzeczywiście w <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> zawsze jest większa niż lub równa <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> przekracza <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> podczas dodawania elementów, pojemność jest automatycznie zwiększany o ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">Liczony od zera indeks wartości do pobrania.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>Gets the value at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera wartość w określonym indeksie <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The value at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Wartość w określonym indeksie <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Sekwencja indeks jest oparty na kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Po dodaniu elementu wstawieniu do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak pobrać jednego lub wszystkich kluczy i wartości w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> znajduje się poza zakresem indeksów prawidłowy dla <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object that iterates through a <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> obiektu, który iteruje po <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> Obiekt do <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w języku Visual Basic) ukrywa złożoność wyliczenia.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">W związku z tym przy użyciu <ph id="ph1">`foreach`</ph> jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> również wprowadzono moduł wyliczający wróć do tej pozycji.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">W tym miejscu <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">W związku z tym należy wywołać <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca ten sam obiekt do momentu <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> do następnego elementu.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwraca <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwracają również <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Jeśli przez ostatnie wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Aby ustawić <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> aby pierwszym elementem kolekcji ponownie, należy wywołać <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> następuje <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">Liczony od zera indeks klucz do uzyskania.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>Gets the key at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera klucz w określonym indeksie <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The key at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Klucz w określonym indeksie <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Sekwencja indeks jest oparty na kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Po dodaniu elementu wstawieniu do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak pobrać jednego lub wszystkich kluczy i wartości w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> znajduje się poza zakresem indeksów prawidłowy dla <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKeyList">
          <source>Gets the keys in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera klucze w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKeyList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Obiekt zawierający klucze z <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> object is a read-only view of the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> obiekt jest tylko do odczytu widoku kluczy <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">Modyfikacje podstawowych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> zostaną natychmiast odzwierciedlone w <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The elements of the returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> are sorted in the same order as the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Elementy zwracana <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> są sortowane w takiej samej kolejności jak klucze <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> property, but returns an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> object.</source>
          <target state="translated">Ta metoda jest podobna do <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> właściwości, ale zwraca <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> obiekt zamiast <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak pobrać jednego lub wszystkich kluczy i wartości w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetValueList">
          <source>Gets the values in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera wartości <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetValueList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> Obiekt zawierający wartości w <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> object is a read-only view of the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> obiekt jest tylko do odczytu widoku wartości <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">Modyfikacje podstawowych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> zostaną natychmiast odzwierciedlone w <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The elements of the returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> are sorted in the same order as the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Elementy zwracana <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> są sortowane w takiej samej kolejności jak wartości <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.Values%2A&gt;</ph> property, but returns an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> object.</source>
          <target state="translated">Ta metoda jest podobna do <ph id="ph1">&lt;xref:System.Collections.SortedList.Values%2A&gt;</ph> właściwości, ale zwraca <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> obiekt zamiast <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak pobrać jednego lub wszystkich kluczy i wartości w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Klucz do zlokalizowania w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Returns the zero-based index of the specified key in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Zwraca liczony od zera indeks z określonym kluczem w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The zero-based index of the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter, if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object; otherwise, -1.</source>
          <target state="translated">Liczony od zera indeks <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parametru, jeśli <ph id="ph2">&lt;paramref name="key" /&gt;</ph> znajduje się w <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu; w przeciwnym razie wartość -1.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created, or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu są sortowane według kluczy albo zgodnie z określonym <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji określić, kiedy <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> został utworzony lub zgodnie z do <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementacji pochodzącymi z samych kluczy.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Sekwencja indeks jest oparty na kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Po dodaniu elementu wstawieniu do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda używa algorytmu wyszukiwania binarne; w związku z tym ta metoda jest O (dziennika <ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The following code example shows how to determine the index of a key or a value in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można określić indeksu klucz lub wartość w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Moduł porównujący zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Wartość do zlokalizowania w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Returns the zero-based index of the first occurrence of the specified value in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Zwraca liczony od zera indeks pierwszego wystąpienia określoną wartość <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The zero-based index of the first occurrence of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter, if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object; otherwise, -1.</source>
          <target state="translated">Liczony od zera indeks pierwszego wystąpienia <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru, jeśli <ph id="ph2">&lt;paramref name="value" /&gt;</ph> znajduje się w <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu; w przeciwnym razie wartość -1.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Sekwencja indeks jest oparty na kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Po dodaniu elementu wstawieniu do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The values of the elements of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are compared to the specified value using the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Wartości elementów <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> są porównywane przy użyciu określonej wartości <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>This method uses a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda używa wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> ustalenie, czy element istnieje.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The following code example shows how to determine the index of a key or a value in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można określić indeksu klucz lub wartość w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object has a fixed size.</source>
          <target state="translated">Pobiera wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiekt ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiekt ma ustalony rozmiar; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">Kolekcja o stałym rozmiarze nie zezwala dodawania lub usuwania elementów po kolekcji zostało utworzone, ale zezwalaj na modyfikowanie istniejących elementów.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Kolekcja o stałym rozmiarze jest po prostu kolekcji z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym zmian w źródłowej kolekcji, włączając Dodawanie lub usuwanie elementów z kolekcji o stałym rozmiarze odzwierciedla te zmiany.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">Pobiera wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiekt jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiekt jest tylko do odczytu; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Gets a value indicating whether access to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is synchronized (thread safe).</source>
          <target state="translated">Pobiera wartość wskazującą czy uzyskują dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> jest synchronizowany obiekt (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dostęp do <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> jest synchronizowany obiekt (wielowątkowość); w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>To guarantee the thread safety of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektów, wszystkie operacje muszą być wykonywane przez otoki zwrócony przez <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The following code example shows how to lock a collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> właściwości podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The following code example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, determine whether a <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób synchronizacji <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt Sprawdź, czy <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> jest synchronizowane i użyj zsynchronizowany <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The key associated with the value to get or set.</source>
          <target state="translated">Klucz skojarzony z wartości do pobrania lub ustawienia.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Gets and sets the value associated with a specific key in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera i ustawia wartość skojarzoną z określonym kluczem w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The value associated with the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object, if <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is found; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość skojarzoną z <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parametru w <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu, jeśli <ph id="ph3">&lt;paramref name="key" /&gt;</ph> zostanie odnaleziony; w przeciwnym razie <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property to access a specific element in a collection by specifying the following syntax: <ph id="ph2">`myCollection[key]`</ph>.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> właściwość, aby można było uzyskać dostępu do określonego elementu w kolekcji, określając następującej składni: <ph id="ph2">`myCollection[key]`</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>You can also use this property to add new elements by setting the value of a key that does not exist in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue)`</ph>.</source>
          <target state="translated">Umożliwia także tej właściwości można dodawać nowe elementy za pomocą ustawienia wartości klucza, który nie istnieje w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu (na przykład <ph id="ph2">`myCollection["myNonexistentKey"] = myValue)`</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Jednak jeśli określony klucz już istnieje w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, ustawienie <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> stara wartość jest zastąpienie właściwości.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Z kolei <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> — metoda nie modyfikuje istniejące elementy.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Klucz nie może być <ph id="ph1">`null`</ph>, ale może być wartością.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the <ph id="ph4">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> method or the <ph id="ph5">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph> method to determine if the key exists in the list.</source>
          <target state="translated">Aby odróżnić <ph id="ph1">`null`</ph> który jest zwracany, ponieważ nie odnaleziono określonego klucza i <ph id="ph2">`null`</ph> który jest zwracany, ponieważ wartość określony klucz jest <ph id="ph3">`null`</ph>, użyj <ph id="ph4">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> — metoda lub <ph id="ph5">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph> metodę, aby określić, czy Ten klucz istnieje na liście.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> są sortowane według kluczy albo zgodnie z określonym <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementacji określić, kiedy <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> został utworzony lub zgodnie z do <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementacji pochodzącymi z samych kluczy.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Używa języka C# do definiowania indeksatory zamiast implementacja słowa kluczowego <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Implementuje Visual Basic <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> jako domyślna właściwość, która zapewnia te same funkcje indeksowania.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest O (dziennika <ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Ustawienie właściwości jest O (dziennika <ph id="ph1">`n`</ph>) operacji, jeśli klucz jest już <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">Jeśli klucz nie jest na liście, ustawienie właściwości jest O (<ph id="ph1">`n`</ph>) operacji nieposortowane danych lub O (dziennika <ph id="ph2">`n`</ph>) Jeśli nowy element zostanie dodany na końcu listy.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">Jeśli wstawiania powoduje, że zmiany rozmiaru, operacja jest O (<ph id="ph1">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">Właściwość jest ustawiona i <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiekt jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Ta właściwość jest ustawiona, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> nie istnieje w kolekcji i <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>There is not enough available memory to add the element to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Nie ma dostatecznej ilości dostępnej pamięci, aby dodać element do <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Moduł porównujący zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Keys">
          <source>Gets the keys in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera klucze w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Obiekt zawierający klucze z <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is a read-only view of the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> Obiekt jest tylko do odczytu widoku kluczy <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Modyfikacje podstawowych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> zostaną natychmiast odzwierciedlone w <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted in the same order as the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> są sortowane w takiej samej kolejności jak klucze <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>This property is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;</ph> method, but returns an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> object.</source>
          <target state="translated">Ta właściwość jest podobny do <ph id="ph1">&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;</ph> metody, ale zwraca <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> obiekt zamiast <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">Klucz elementu do usunięcia.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>Removes the element with the specified key from a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Usuwa element z określonym kluczem z <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> remains unchanged.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt nie zawiera element z określonym kluczem <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">Nie wyjątek.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The following code example shows how to remove elements from a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób usuwania elementów z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Obiekt jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Liczony od zera indeks elementu do usunięcia.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Usuwa element o określonym indeksie <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Sekwencja indeks jest oparty na kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Po dodaniu elementu wstawieniu do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The following code example shows how to remove elements from a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób usuwania elementów z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> znajduje się poza zakresem indeksów prawidłowy dla <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The zero-based index at which to save <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Liczony od zera indeks, w którym chcesz zapisać <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to save into the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Można zapisać do <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>Replaces the value at a specific index in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Zamienia wartości w określonym indeksie w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Sekwencja indeks jest oparty na kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Po dodaniu elementu wstawieniu do <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The following code example shows how to replace the value of an existing element in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak zastąpić wartość istniejącego elementu w <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> znajduje się poza zakresem indeksów prawidłowy dla <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object to synchronize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Obiektu do synchronizacji.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Returns a synchronized (thread-safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Zwraca zsynchronizowane otoki (wątkowo) dla <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>A synchronized (thread-safe) wrapper for the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">A zsynchronizowane (wątkowo) otoki dla <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>To guarantee the thread safety of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, all operations must be done through this wrapper only.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektów, wszystkie operacje musi odbywać się za pomocą tylko tej otoki.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> właściwości podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The following code example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, determine whether a <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób synchronizacji <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt Sprawdź, czy <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> jest synchronizowane i użyj zsynchronizowany <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Gets an object that can be used to synchronize access to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera obiekt, który może służyć do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obiekt, który może służyć do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Aby utworzyć zsynchronizowaną wersję <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektów, użyj <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Jednak klasy pochodne zapewniają własne zsynchronizowanej wersji <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> przy użyciu <ph id="ph2">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Synchronizowanie kodu musi wykonywać operacje <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> z <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>, nie są bezpośrednio w <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> właściwości podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> który iteruje <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> Dla <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, C#]</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w języku Visual Basic) ukrywa złożoność wyliczenia.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">W związku z tym przy użyciu <ph id="ph1">`foreach`</ph> jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> również wprowadzono moduł wyliczający wróć do tej pozycji.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">At to pozycja, wywoływania <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">W związku z tym należy wywołać <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca ten sam obiekt do momentu <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> do następnego elementu.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwraca <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwracają również <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Jeśli przez ostatnie wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, wywoływania <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Aby ustawić <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> aby pierwszym elementem kolekcji ponownie, należy wywołać <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> następuje <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> zgłasza <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Jeśli kolekcja jest zmodyfikowany między <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>Sets the capacity to the actual number of elements in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ustawia pojemność na rzeczywistą liczbę elementów w <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">Ta metoda może służyć do narzut zminimalizować pamięci kolekcji, jeśli żadne nowe elementy, które zostaną dodane do kolekcji.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.SortedList.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">Aby zresetować <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu do stanu początkowego wywołania <ph id="ph2">&lt;xref:System.Collections.SortedList.Clear%2A&gt;</ph> metoda przed wywołaniem <ph id="ph3">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> to the default capacity.</source>
          <target state="translated">Przycinanie pustą <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> ustawia pojemność <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> do wydajności domyślnej.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The following code example shows how to trim the unused portions of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to clear its values.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób przycięcia nieużywane części <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt i czyszczenie jego wartości.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Obiekt jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Values">
          <source>Gets the values in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Pobiera wartości <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Obiekt zawierający wartości w <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is a read-only view of the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> Obiekt jest tylko do odczytu widoku wartości <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Modyfikacje podstawowych <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> zostaną natychmiast odzwierciedlone w <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted in the same order as the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Elementy <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> są sortowane w takiej samej kolejności jak wartości <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>This property is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;</ph> method, but returns an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> object.</source>
          <target state="translated">Ta właściwość jest podobny do <ph id="ph1">&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;</ph> metody, ale zwraca <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> obiekt zamiast <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>