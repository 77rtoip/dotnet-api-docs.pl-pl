<Type Name="SortedList" FullName="System.Collections.SortedList">
  <TypeSignature Language="C#" Value="public class SortedList : ICloneable, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.SortedList" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList&#xA;Implements ICloneable, IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortedList : ICloneable, System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.SortedList/SortedListDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c98b6-101">Reprezentuje kolekcję par klucz/wartość, są sortowane według kluczy, które są dostępne za pomocą klucza i indeksu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-101">Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-102">Ogólny wersję tej kolekcji, zobacz <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-102">For the generic version of this collection, see <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c98b6-103">A <xref:System.Collections.SortedList> element jest możliwy za pomocą klucza, takich jak element w dowolnym <xref:System.Collections.IDictionary> implementacji lub jej indeks, takich jak element w dowolnym <xref:System.Collections.IList> implementacji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-103">A <xref:System.Collections.SortedList> element can be accessed by its key, like an element in any <xref:System.Collections.IDictionary> implementation, or by its index, like an element in any <xref:System.Collections.IList> implementation.</span></span>  
  
 <span data-ttu-id="c98b6-104">A <xref:System.Collections.SortedList> obiektu wewnętrznie obsługuje dwie tablice do przechowywania elementów listy; oznacza to, co tablica kluczy i innej tablicy dla skojarzone wartości.</span><span class="sxs-lookup"><span data-stu-id="c98b6-104">A <xref:System.Collections.SortedList> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</span></span> <span data-ttu-id="c98b6-105">Każdy element jest para klucza i wartości, które są dostępne <xref:System.Collections.DictionaryEntry> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-105">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="c98b6-106">Klucz nie może być `null`, ale może być wartością.</span><span class="sxs-lookup"><span data-stu-id="c98b6-106">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="c98b6-107">Pojemność <xref:System.Collections.SortedList> obiekt jest liczba elementów <xref:System.Collections.SortedList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-107">The capacity of a <xref:System.Collections.SortedList> object is the number of elements the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="c98b6-108">Po dodaniu elementów do <xref:System.Collections.SortedList>, automatycznie zostaje zwiększona wydajność co jest wymagane przez; Ponowna alokacja.</span><span class="sxs-lookup"><span data-stu-id="c98b6-108">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="c98b6-109">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.SortedList.TrimToSize%2A> lub przez ustawienie <xref:System.Collections.SortedList.Capacity%2A> właściwości jawnie.</span><span class="sxs-lookup"><span data-stu-id="c98b6-109">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="c98b6-110">Dla bardzo dużych <xref:System.Collections.SortedList> obiekty, można zwiększyć maksymalną pojemność do 2 miliardów elementów w 64-bitowym systemie ustawiając `enabled` atrybutu elementu konfiguracji, aby `true` w środowisku czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-110">For very large <xref:System.Collections.SortedList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="c98b6-111">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy albo zgodnie z określonym <xref:System.Collections.IComparer> implementacji określić, kiedy <xref:System.Collections.SortedList> został utworzony lub zgodnie z do <xref:System.IComparable> implementacji pochodzącymi z samych kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-111">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span> <span data-ttu-id="c98b6-112">W obu przypadkach <xref:System.Collections.SortedList> nie zezwala na zduplikowane klucze.</span><span class="sxs-lookup"><span data-stu-id="c98b6-112">In either case, a <xref:System.Collections.SortedList> does not allow duplicate keys.</span></span>  
  
 <span data-ttu-id="c98b6-113">Sekwencja indeks jest oparty na kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-113">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="c98b6-114">Po dodaniu elementu wstawieniu do <xref:System.Collections.SortedList> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-114">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="c98b6-115">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-115">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="c98b6-116">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-116">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-117">Operacje na <xref:System.Collections.SortedList> obiektu często wykonywane wolniej niż operacje na <xref:System.Collections.Hashtable> obiektu z powodu sortowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-117">Operations on a <xref:System.Collections.SortedList> object tend to be slower than operations on a <xref:System.Collections.Hashtable> object because of the sorting.</span></span> <span data-ttu-id="c98b6-118">Jednak <xref:System.Collections.SortedList> zapewnia większą elastyczność zezwalania na dostęp do wartości za pośrednictwem skojarzonych kluczy lub indeksy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-118">However, the <xref:System.Collections.SortedList> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</span></span>  
  
 <span data-ttu-id="c98b6-119">Elementy w tej kolekcji jest możliwy przy użyciu indeksu liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-119">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="c98b6-120">Indeksy w tej kolekcji jest liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="c98b6-120">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="c98b6-121">`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) zwraca obiekt typu elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-121">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="c98b6-122">Ponieważ każdy element <xref:System.Collections.SortedList> obiektu jest parę klucz/wartość, nie jest typu elementu typu klucza lub typ wartości.</span><span class="sxs-lookup"><span data-stu-id="c98b6-122">Since each element of the <xref:System.Collections.SortedList> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="c98b6-123">Typ elementu jest raczej, <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-123">Rather, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="c98b6-124">Na przykład:</span><span class="sxs-lookup"><span data-stu-id="c98b6-124">For example:</span></span>  
  
 [!code-cpp[Classic SortedList Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic SortedList Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/remarks.cs#2)]
 [!code-vb[Classic SortedList Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="c98b6-125">`foreach` Instrukcja jest otokę moduł wyliczający, który umożliwia odczyt tylko z bez zapisywania do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-125">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-126">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania <xref:System.Collections.SortedList> obiekt i jak wydrukować jej kluczy i wartości.</span><span class="sxs-lookup"><span data-stu-id="c98b6-126">The following code example shows how to create and initialize a <xref:System.Collections.SortedList> object and how to print out its keys and values.</span></span>  
  
 [!code-cpp[Classic SortedList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c98b6-127">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span><span class="sxs-lookup"><span data-stu-id="c98b6-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="c98b6-128">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="c98b6-128">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="c98b6-129">A <see cref="T:System.Collections.SortedList" /> obiektu może obsługiwać wielu czytników jednocześnie, jak długo kolekcji nie jest modyfikowany.</span><span class="sxs-lookup"><span data-stu-id="c98b6-129">A <see cref="T:System.Collections.SortedList" /> object can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="c98b6-130">W celu zagwarantowania bezpieczeństwa wątków <see cref="T:System.Collections.SortedList" />, wszystkie operacje muszą być wykonywane przez otoki zwrócony przez <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="c98b6-130">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span></span>  
  
 <span data-ttu-id="c98b6-131">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c98b6-131">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c98b6-132">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="c98b6-132">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c98b6-133">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="c98b6-133">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c98b6-134">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.SortedList" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-134">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98b6-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.SortedList" /> klasy, która jest pusta, ma domyślne początkowa pojemność i jest sortowana według <see cref="T:System.IComparable" /> interfejsu implementowanego przez każdy klucz dodane do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-135">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-136">Każdy klucz musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-136">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="c98b6-137">Elementy są sortowane według <xref:System.IComparable> wdrożenia każdego klucza dodane do <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-137">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-138">Pojemność <xref:System.Collections.SortedList> obiekt jest liczba elementów który <xref:System.Collections.SortedList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-138">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="c98b6-139">Po dodaniu elementów do <xref:System.Collections.SortedList>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-139">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c98b6-140">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-140">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-141">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-141">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-142">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <xref:System.Collections.SortedList> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-142">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="c98b6-143"><see cref="T:System.Collections.IComparer" /> Implementacji do używania przy porównywaniu kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-143">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
 <span data-ttu-id="c98b6-144">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-144">-or-</span></span>  
  
 <span data-ttu-id="c98b6-145"><see langword="null" /> Aby użyć <see cref="T:System.IComparable" /> stosowania dla każdego klucza.</span><span class="sxs-lookup"><span data-stu-id="c98b6-145"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="c98b6-146">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.SortedList" /> klasy, która jest pusta, ma domyślne początkowa pojemność i jest sortowana według określonego <see cref="T:System.Collections.IComparer" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-146">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-147">Elementy są sortowane według określonego <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-147">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="c98b6-148">Jeśli `comparer` parametr jest `null`, <xref:System.IComparable> stosowania dla każdego klucza jest używany; w związku z tym każdy klucz musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-148">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-149">Pojemność <xref:System.Collections.SortedList> obiekt jest liczba elementów który <xref:System.Collections.SortedList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-149">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="c98b6-150">Po dodaniu elementów do <xref:System.Collections.SortedList>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-150">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c98b6-151">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-151">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-152">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-153">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <xref:System.Collections.SortedList> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-153">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="c98b6-154"><see cref="T:System.Collections.IDictionary" /> Implementacji, aby skopiować do nowego <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-154">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="c98b6-155">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.SortedList" /> klasę, która zawiera elementów kopiowanych z określonego słownika ma tego samego początkowej pojemności niż liczba elementów kopiowanych i jest sortowana według <see cref="T:System.IComparable" /> interfejsu implementowanego przez każdy klucz.</span><span class="sxs-lookup"><span data-stu-id="c98b6-155">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-156">Każdy klucz musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-156">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="c98b6-157">Elementy są sortowane według <xref:System.IComparable> wdrożenia każdego klucza dodane do <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-157">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-158">A <xref:System.Collections.Hashtable> obiekt jest przykładem <xref:System.Collections.IDictionary> implementacji, które mogą zostać przekazane do tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c98b6-158">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="c98b6-159">Nowy <xref:System.Collections.SortedList> obiektu zawiera kopię klucze i wartości przechowywane w <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-159">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="c98b6-160">Pojemność <xref:System.Collections.SortedList> obiekt jest liczba elementów który <xref:System.Collections.SortedList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-160">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="c98b6-161">Po dodaniu elementów do <xref:System.Collections.SortedList>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-161">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c98b6-162">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-162">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-163">Ten konstruktor jest O (`n`) operację, której `n` jest liczba elementów w `d`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-163">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-164">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <xref:System.Collections.SortedList> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-164">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-165"><paramref name="d" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-165"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c98b6-166">Co najmniej jeden element w <paramref name="d" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-166">One or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int initialCapacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity"><span data-ttu-id="c98b6-167">Początkowa liczba elementów który <see cref="T:System.Collections.SortedList" /> obiekt może zawierać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-167">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="c98b6-168">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.SortedList" /> klasy, która jest pusta, ma określony początkowa pojemność i jest sortowana według <see cref="T:System.IComparable" /> interfejsu implementowanego przez każdy klucz dodane do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-168">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-169">Każdy klucz musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-169">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="c98b6-170">Elementy są sortowane według <xref:System.IComparable> wdrożenia każdego klucza dodane do <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-170">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-171">Pojemność <xref:System.Collections.SortedList> obiekt jest liczba elementów który <xref:System.Collections.SortedList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-171">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="c98b6-172">Po dodaniu elementów do <xref:System.Collections.SortedList>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-172">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c98b6-173">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-173">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-174">Ten konstruktor jest O (`n`) operację, której `n` jest `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-174">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-175">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <xref:System.Collections.SortedList> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-175">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c98b6-176"><paramref name="initialCapacity" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="c98b6-176"><paramref name="initialCapacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="c98b6-177">Nie ma dostatecznej ilości dostępnej pamięci, aby utworzyć <see cref="T:System.Collections.SortedList" /> obiektu z określonym <paramref name="initialCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-177">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="initialCapacity" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer, int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="c98b6-178"><see cref="T:System.Collections.IComparer" /> Implementacji do używania przy porównywaniu kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-178">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
 <span data-ttu-id="c98b6-179">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-179">-or-</span></span>  
  
 <span data-ttu-id="c98b6-180"><see langword="null" /> Aby użyć <see cref="T:System.IComparable" /> stosowania dla każdego klucza.</span><span class="sxs-lookup"><span data-stu-id="c98b6-180"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <param name="capacity"><span data-ttu-id="c98b6-181">Początkowa liczba elementów który <see cref="T:System.Collections.SortedList" /> obiekt może zawierać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-181">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="c98b6-182">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.SortedList" /> klasy, która jest pusta, ma określony początkowa pojemność i jest sortowana według określonego <see cref="T:System.Collections.IComparer" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-182">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-183">Elementy są sortowane według określonego <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-183">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="c98b6-184">Jeśli `comparer` parametr jest `null`, <xref:System.IComparable> stosowania dla każdego klucza jest używany; w związku z tym każdy klucz musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-184">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-185">Pojemność <xref:System.Collections.SortedList> obiekt jest liczba elementów który <xref:System.Collections.SortedList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-185">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="c98b6-186">Po dodaniu elementów do <xref:System.Collections.SortedList>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-186">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c98b6-187">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-187">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-188">Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-188">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-189">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <xref:System.Collections.SortedList> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-189">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c98b6-190"><paramref name="capacity" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="c98b6-190"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="c98b6-191">Nie ma dostatecznej ilości dostępnej pamięci, aby utworzyć <see cref="T:System.Collections.SortedList" /> obiektu z określonym <paramref name="capacity" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-191">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="capacity" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="c98b6-192"><see cref="T:System.Collections.IDictionary" /> Implementacji, aby skopiować do nowego <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-192">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <param name="comparer"><span data-ttu-id="c98b6-193"><see cref="T:System.Collections.IComparer" /> Implementacji do używania przy porównywaniu kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-193">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
 <span data-ttu-id="c98b6-194">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-194">-or-</span></span>  
  
 <span data-ttu-id="c98b6-195"><see langword="null" /> Aby użyć <see cref="T:System.IComparable" /> stosowania dla każdego klucza.</span><span class="sxs-lookup"><span data-stu-id="c98b6-195"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="c98b6-196">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.SortedList" /> klasę, która zawiera elementów kopiowanych z określonego słownika ma tego samego początkowej pojemności niż liczba elementów kopiowanych i jest sortowana według określonego <see cref="T:System.Collections.IComparer" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-196">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-197">Elementy są sortowane według określonego <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-197">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="c98b6-198">Jeśli `comparer` parametr jest `null`, <xref:System.IComparable> stosowania dla każdego klucza jest używany; w związku z tym każdy klucz musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-198">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-199">A <xref:System.Collections.Hashtable> obiekt jest przykładem <xref:System.Collections.IDictionary> implementacji, które mogą zostać przekazane do tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c98b6-199">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="c98b6-200">Nowy <xref:System.Collections.SortedList> obiektu zawiera kopię klucze i wartości przechowywane w <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-200">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="c98b6-201">Pojemność <xref:System.Collections.SortedList> obiekt jest liczba elementów który <xref:System.Collections.SortedList> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-201">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="c98b6-202">Po dodaniu elementów do <xref:System.Collections.SortedList>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-202">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c98b6-203">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-203">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-204">Ten konstruktor jest O (`n`) operację, której `n` jest liczba elementów w `d`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-204">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-205">Poniższy przykład kodu tworzy kolekcji przy użyciu różnych <xref:System.Collections.SortedList> konstruktory i przedstawiono różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-205">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-206"><paramref name="d" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-206"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c98b6-207"><paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="d" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-207"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c98b6-208">Klucz elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-208">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="c98b6-209">Wartość elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-209">The value of the element to add.</span></span> <span data-ttu-id="c98b6-210">Wartość może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-210">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c98b6-211">Dodaje element z określonym kluczem i wartością do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-211">Adds an element with the specified key and value to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-212">Punkt wstawiania jest określana oparte na porównania zaznaczone, jawnie lub domyślnie, gdy <xref:System.Collections.SortedList> obiekt został utworzony.</span><span class="sxs-lookup"><span data-stu-id="c98b6-212">The insertion point is determined based on the comparer selected, either explicitly or by default, when the <xref:System.Collections.SortedList> object was created.</span></span>  
  
 <span data-ttu-id="c98b6-213">Jeśli <xref:System.Collections.SortedList.Count%2A> jest już równa <xref:System.Collections.SortedList.Capacity%2A>, pojemność <xref:System.Collections.SortedList> obiektu zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-213">If <xref:System.Collections.SortedList.Count%2A> already equals <xref:System.Collections.SortedList.Capacity%2A>, the capacity of the <xref:System.Collections.SortedList> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="c98b6-214">Można również użyć <xref:System.Collections.SortedList.Item%2A> właściwości, aby dodać nowe elementy za pomocą ustawienia wartości klucza, który nie istnieje w <xref:System.Collections.SortedList> obiektu (na przykład `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="c98b6-214">You can also use the <xref:System.Collections.SortedList.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="c98b6-215">Jednak jeśli określony klucz już istnieje w <xref:System.Collections.SortedList>, ustawienie <xref:System.Collections.SortedList.Item%2A> stara wartość jest zastąpienie właściwości.</span><span class="sxs-lookup"><span data-stu-id="c98b6-215">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="c98b6-216">Z kolei <xref:System.Collections.SortedList.Add%2A> — metoda nie modyfikuje istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-216">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="c98b6-217">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy albo zgodnie z określonym <xref:System.Collections.IComparer> implementacji określić, kiedy <xref:System.Collections.SortedList> został utworzony lub zgodnie z do <xref:System.IComparable> implementacji pochodzącymi z samych kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-217">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="c98b6-218">Klucz nie może być `null`, ale może być wartością.</span><span class="sxs-lookup"><span data-stu-id="c98b6-218">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="c98b6-219">Ta metoda jest O (`n`) operacji nieposortowane danych, gdzie `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-219">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="c98b6-220">Jest O (dziennika `n`) operacji, jeśli nowy element zostanie dodany na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-220">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="c98b6-221">Jeśli wstawiania powoduje, że zmiany rozmiaru, operacja jest O (`n`).</span><span class="sxs-lookup"><span data-stu-id="c98b6-221">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-222">W poniższym przykładzie przedstawiono sposób dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-222">The following code example shows how to add elements to a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-223"><paramref name="key" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-223"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c98b6-224">Element z określonym <paramref name="key" /> już istnieje w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-224">An element with the specified <paramref name="key" /> already exists in the <see cref="T:System.Collections.SortedList" /> object.</span></span>  
  
 <span data-ttu-id="c98b6-225">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-225">-or-</span></span>  
  
 <span data-ttu-id="c98b6-226"><see cref="T:System.Collections.SortedList" /> Jest skonfigurowany do używania <see cref="T:System.IComparable" /> interfejsu i <paramref name="key" /> nie implementuje <see cref="T:System.IComparable" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-226">The <see cref="T:System.Collections.SortedList" /> is set to use the <see cref="T:System.IComparable" /> interface, and <paramref name="key" /> does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c98b6-227"><see cref="T:System.Collections.SortedList" /> Jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-227">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
 <span data-ttu-id="c98b6-228">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-228">-or-</span></span>  
  
 <span data-ttu-id="c98b6-229"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="c98b6-229">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="c98b6-230">Nie ma dostatecznej ilości dostępnej pamięci, aby dodać element do <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-230">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c98b6-231">Moduł porównujący zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c98b6-231">The comparer throws an exception.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.Item(System.Object)" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98b6-232">Pobiera lub ustawia pojemność <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-232">Gets or sets the capacity of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="c98b6-233">Liczba elementów który <see cref="T:System.Collections.SortedList" /> obiekt może zawierać.</span><span class="sxs-lookup"><span data-stu-id="c98b6-233">The number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-234"><xref:System.Collections.SortedList.Capacity%2A> Liczba elementów jest który <xref:System.Collections.SortedList> mogą być przechowywane przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="c98b6-234"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="c98b6-235"><xref:System.Collections.SortedList.Count%2A> jest to liczba elementów, które są rzeczywiście w <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-235"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-236"><xref:System.Collections.SortedList.Capacity%2A> zawsze jest większa niż lub równa <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-236"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="c98b6-237">Jeśli <xref:System.Collections.SortedList.Count%2A> przekracza <xref:System.Collections.SortedList.Capacity%2A> podczas dodawania elementów, pojemność jest automatycznie zwiększany o ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="c98b6-237">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="c98b6-238">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.SortedList.TrimToSize%2A> lub przez ustawienie <xref:System.Collections.SortedList.Capacity%2A> właściwości jawnie.</span><span class="sxs-lookup"><span data-stu-id="c98b6-238">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="c98b6-239">Jeśli wartość <xref:System.Collections.SortedList.Capacity%2A> jest ustawiony jawnie, aby zmieścił się w określonej pojemności także alokowaniu tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-239">When the value of <xref:System.Collections.SortedList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="c98b6-240">Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest O (`n`) operację, której `n` jest nowego miejsca.</span><span class="sxs-lookup"><span data-stu-id="c98b6-240">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c98b6-241">Wartość przypisana jest mniejsza niż bieżąca liczba elementów w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-241">The value assigned is less than the current number of elements in the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="c98b6-242">Nie istnieje wystarczająca ilość pamięci dostępna w systemie.</span><span class="sxs-lookup"><span data-stu-id="c98b6-242">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98b6-243">Usuwa wszystkie elementy z <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-243">Removes all elements from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-244"><xref:System.Collections.SortedList.Count%2A> zostaje ustawiony na zero, a ponadto są również zwalniane odwołania do innych obiektów z elementów kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-244"><xref:System.Collections.SortedList.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="c98b6-245"><xref:System.Collections.SortedList.Capacity%2A> pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="c98b6-245"><xref:System.Collections.SortedList.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="c98b6-246">Aby zresetować pojemność <xref:System.Collections.SortedList> obiekt, należy wywołać <xref:System.Collections.SortedList.TrimToSize%2A> lub ustaw <xref:System.Collections.SortedList.Capacity%2A> właściwości bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-246">To reset the capacity of the <xref:System.Collections.SortedList> object, call <xref:System.Collections.SortedList.TrimToSize%2A> or set the <xref:System.Collections.SortedList.Capacity%2A> property directly.</span></span> <span data-ttu-id="c98b6-247">Przycinanie pustą <xref:System.Collections.SortedList> ustawia pojemność <xref:System.Collections.SortedList> do wydajności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-247">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="c98b6-248">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-248">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-249">Poniższy przykładowy kod przedstawia sposób przycięcia nieużywane części <xref:System.Collections.SortedList> obiekt i czyszczenie wartości <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-249">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c98b6-250"><see cref="T:System.Collections.SortedList" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-250">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
 <span data-ttu-id="c98b6-251">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-251">-or-</span></span>  
  
 <span data-ttu-id="c98b6-252"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="c98b6-252">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98b6-253">Tworzy kopię pobieżną <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-253">Creates a shallow copy of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-254">Kopia pobieżna <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-254">A shallow copy of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-255">Kopię pobieżną kolekcji kopiuje elementy kolekcji, czy są one typy odwołań lub wartość typów, ale nie kopiuje obiektów, które dotyczą odwołania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-255">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</span></span> <span data-ttu-id="c98b6-256">Odwołania do nowej kolekcji wskazują te same obiekty, które wskazują odwołania w oryginalnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-256">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="c98b6-257">Z kolei głęboką kopię kolekcji kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="c98b6-257">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="c98b6-258">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c98b6-259">Klucz do zlokalizowania w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-259">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="c98b6-260">Określa, czy <see cref="T:System.Collections.SortedList" /> obiektu zawiera określony klucz.</span><span class="sxs-lookup"><span data-stu-id="c98b6-260">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns>
          <span data-ttu-id="c98b6-261"><see langword="true" /> Jeśli <see cref="T:System.Collections.SortedList" /> zawiera element z określonym <paramref name="key" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-261"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-262">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy albo zgodnie z określonym <xref:System.Collections.IComparer> implementacji określić, kiedy <xref:System.Collections.SortedList> został utworzony lub zgodnie z do <xref:System.IComparable> implementacji pochodzącymi z samych kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-262">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="c98b6-263"><xref:System.Collections.SortedList.Contains%2A> implementuje <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-263"><xref:System.Collections.SortedList.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c98b6-264">Zachowuje się dokładnie jako <xref:System.Collections.SortedList.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-264">It behaves exactly as <xref:System.Collections.SortedList.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-265">Ta metoda używa algorytmu wyszukiwania binarne; w związku z tym ta metoda jest O (dziennika `n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-265">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-266">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` ustalenie, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="c98b6-266">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="c98b6-267">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametrów dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-267">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-268">Poniższy przykładowy kod przedstawia sposób określić, czy <xref:System.Collections.SortedList> obiekt zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="c98b6-268">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-269"><paramref name="key" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-269"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c98b6-270">Moduł porównujący zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c98b6-270">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c98b6-271">Klucz do zlokalizowania w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-271">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="c98b6-272">Określa, czy <see cref="T:System.Collections.SortedList" /> obiektu zawiera określony klucz.</span><span class="sxs-lookup"><span data-stu-id="c98b6-272">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns>
          <span data-ttu-id="c98b6-273"><see langword="true" /> Jeśli <see cref="T:System.Collections.SortedList" /> zawiera element z określonym <paramref name="key" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-273"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-274">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy albo zgodnie z określonym <xref:System.Collections.IComparer> implementacji określić, kiedy <xref:System.Collections.SortedList> został utworzony lub zgodnie z do <xref:System.IComparable> implementacji pochodzącymi z samych kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-274">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="c98b6-275">Ta metoda działa dokładnie jako <xref:System.Collections.SortedList.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c98b6-275">This method behaves exactly as the <xref:System.Collections.SortedList.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="c98b6-276">Ta metoda używa algorytmu wyszukiwania binarne; w związku z tym ta metoda jest O (dziennika `n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-276">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-277">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` ustalenie, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="c98b6-277">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="c98b6-278">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametrów dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-278">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-279">Poniższy przykładowy kod przedstawia sposób określić, czy <xref:System.Collections.SortedList> obiekt zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="c98b6-279">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-280"><paramref name="key" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-280"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c98b6-281">Moduł porównujący zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c98b6-281">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c98b6-282">Wartość do zlokalizowania w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-282">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="c98b6-283">Wartość może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-283">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c98b6-284">Określa, czy <see cref="T:System.Collections.SortedList" /> obiektu zawiera określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="c98b6-284">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="c98b6-285"><see langword="true" /> Jeśli <see cref="T:System.Collections.SortedList" /> zawiera element z określonym <paramref name="value" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-285"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-286">Wartości elementów <xref:System.Collections.SortedList> obiektu są porównywane przy użyciu określonej wartości <xref:System.Object.Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c98b6-286">The values of the elements of the <xref:System.Collections.SortedList> object are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="c98b6-287">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym Średni czas wykonania jest proporcjonalny do <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-287">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="c98b6-288">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-288">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-289">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` ustalenie, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="c98b6-289">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="c98b6-290">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametrów dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-290">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-291">Poniższy przykładowy kod przedstawia sposób określić, czy <xref:System.Collections.SortedList> obiekt zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="c98b6-291">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c98b6-292">Jednowymiarowa <see cref="T:System.Array" /> obiekt, który jest miejscem docelowym <see cref="T:System.Collections.DictionaryEntry" /> obiektów kopiowanych ze <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-292">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.SortedList" />.</span></span> <span data-ttu-id="c98b6-293"><see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="c98b6-293">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="c98b6-294">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span><span class="sxs-lookup"><span data-stu-id="c98b6-294">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c98b6-295">Kopie <see cref="T:System.Collections.SortedList" /> elementów na jednowymiarowe <see cref="T:System.Array" /> obiektu, zaczynając od określonego indeksu tablicy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-295">Copies <see cref="T:System.Collections.SortedList" /> elements to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-296">Pary klucz wartość są kopiowane do <xref:System.Array> obiektu w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-296">The key/value pairs are copied to the <xref:System.Array> object in the same order in which the enumerator iterates through the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-297">Aby skopiować tylko klucze w <xref:System.Collections.SortedList>, użyj `SortedList.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-297">To copy only the keys in the <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="c98b6-298">Aby skopiować tylko wartości w <xref:System.Collections.SortedList>, użyj `SortedList.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-298">To copy only the values in the <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="c98b6-299">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-300">Poniższy przykład kodu pokazuje sposób kopiowania wartości w <xref:System.Collections.SortedList> obiektu do jednowymiarowego <xref:System.Array> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-300">The following code example shows how to copy the values in a <xref:System.Collections.SortedList> object into a one-dimensional <xref:System.Array> object.</span></span>  
  
 [!code-cpp[Classic SortedList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-301"><paramref name="array" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-301"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c98b6-302"><paramref name="arrayIndex" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="c98b6-302"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c98b6-303"><paramref name="array" /> jest wielowymiarowy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-303"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="c98b6-304">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-304">-or-</span></span>  
  
 <span data-ttu-id="c98b6-305">Liczba elementów w źródle <see cref="T:System.Collections.SortedList" /> obiektu jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca tablicy docelowej <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-305">The number of elements in the source <see cref="T:System.Collections.SortedList" /> object is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c98b6-306">Typ źródła <see cref="T:System.Collections.SortedList" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-306">The type of the source <see cref="T:System.Collections.SortedList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.SortedList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98b6-307">Pobiera liczbę elementów zawartych w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-307">Gets the number of elements contained in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="c98b6-308">Liczba elementów zawartych w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-308">The number of elements contained in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-309">Każdy element jest para klucza i wartości, które są dostępne <xref:System.Collections.DictionaryEntry> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-309">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="c98b6-310"><xref:System.Collections.SortedList.Capacity%2A> Liczba elementów jest który <xref:System.Collections.SortedList> mogą być przechowywane przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="c98b6-310"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="c98b6-311"><xref:System.Collections.SortedList.Count%2A> jest to liczba elementów, które są rzeczywiście w <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-311"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-312"><xref:System.Collections.SortedList.Capacity%2A> zawsze jest większa niż lub równa <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-312"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="c98b6-313">Jeśli <xref:System.Collections.SortedList.Count%2A> przekracza <xref:System.Collections.SortedList.Capacity%2A> podczas dodawania elementów, pojemność jest automatycznie zwiększany o ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="c98b6-313">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="c98b6-314">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-314">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public virtual object GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetByIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetByIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIndex (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetByIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c98b6-315">Liczony od zera indeks wartości do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-315">The zero-based index of the value to get.</span></span></param>
        <summary><span data-ttu-id="c98b6-316">Pobiera wartość w określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-316">Gets the value at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-317">Wartość w określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-317">The value at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-318">Sekwencja indeks jest oparty na kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-318">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="c98b6-319">Po dodaniu elementu wstawieniu do <xref:System.Collections.SortedList> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-319">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="c98b6-320">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-320">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="c98b6-321">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-321">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-322">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-322">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-323">Poniższy przykład kodu pokazuje, jak pobrać jednego lub wszystkich kluczy i wartości w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-323">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c98b6-324"><paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-324"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98b6-325">Zwraca <see cref="T:System.Collections.IDictionaryEnumerator" /> obiektu, który iteruje po <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-325">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object that iterates through a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-326"><see cref="T:System.Collections.IDictionaryEnumerator" /> Obiekt do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-326">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-327">`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c98b6-327">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="c98b6-328">W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="c98b6-328">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c98b6-329">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-329">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c98b6-330">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-330">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c98b6-331"><xref:System.Collections.IEnumerator.Reset%2A> również wprowadzono moduł wyliczający wróć do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-331"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="c98b6-332">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="c98b6-332">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c98b6-333">W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-333">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-334"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c98b6-334"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c98b6-335"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-335"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c98b6-336">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-336">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c98b6-337">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-337">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c98b6-338">Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="c98b6-338">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c98b6-339">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> aby pierwszym elementem kolekcji ponownie, należy wywołać <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-339">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-340">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="c98b6-340">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c98b6-341">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="c98b6-341">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="c98b6-342">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c98b6-342">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c98b6-343">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-343">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c98b6-344">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-344">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c98b6-345">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-345">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual object GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c98b6-346">Liczony od zera indeks klucz do uzyskania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-346">The zero-based index of the key to get.</span></span></param>
        <summary><span data-ttu-id="c98b6-347">Pobiera klucz w określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-347">Gets the key at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-348">Klucz w określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-348">The key at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-349">Sekwencja indeks jest oparty na kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-349">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="c98b6-350">Po dodaniu elementu wstawieniu do <xref:System.Collections.SortedList> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-350">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="c98b6-351">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-351">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="c98b6-352">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-352">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-353">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-353">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-354">Poniższy przykład kodu pokazuje, jak pobrać jednego lub wszystkich kluczy i wartości w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-354">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c98b6-355"><paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-355"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetKeyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetKeyList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKeyList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetKeyList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98b6-356">Pobiera klucze w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-356">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-357"><see cref="T:System.Collections.IList" /> Obiekt zawierający klucze z <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-357">An <see cref="T:System.Collections.IList" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-358">Zwrócona <xref:System.Collections.IList> obiekt jest tylko do odczytu widoku kluczy <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-358">The returned <xref:System.Collections.IList> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="c98b6-359">Modyfikacje podstawowych <xref:System.Collections.SortedList> zostaną natychmiast odzwierciedlone w <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-359">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="c98b6-360">Elementy zwracana <xref:System.Collections.IList> są sortowane w takiej samej kolejności jak klucze <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-360">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-361">Ta metoda jest podobna do <xref:System.Collections.SortedList.Keys%2A> właściwości, ale zwraca <xref:System.Collections.IList> obiekt zamiast <xref:System.Collections.ICollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-361">This method is similar to the <xref:System.Collections.SortedList.Keys%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="c98b6-362">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-362">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-363">Poniższy przykład kodu pokazuje, jak pobrać jednego lub wszystkich kluczy i wartości w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-363">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
      </Docs>
    </Member>
    <Member MemberName="GetValueList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetValueList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetValueList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetValueList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetValueList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98b6-364">Pobiera wartości <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-364">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-365"><see cref="T:System.Collections.IList" /> Obiekt zawierający wartości w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-365">An <see cref="T:System.Collections.IList" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-366">Zwrócona <xref:System.Collections.IList> obiekt jest tylko do odczytu widoku wartości <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-366">The returned <xref:System.Collections.IList> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="c98b6-367">Modyfikacje podstawowych <xref:System.Collections.SortedList> zostaną natychmiast odzwierciedlone w <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-367">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="c98b6-368">Elementy zwracana <xref:System.Collections.IList> są sortowane w takiej samej kolejności jak wartości <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-368">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-369">Ta metoda jest podobna do <xref:System.Collections.SortedList.Values%2A> właściwości, ale zwraca <xref:System.Collections.IList> obiekt zamiast <xref:System.Collections.ICollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-369">This method is similar to the <xref:System.Collections.SortedList.Values%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="c98b6-370">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-370">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-371">Poniższy przykład kodu pokazuje, jak pobrać jednego lub wszystkich kluczy i wartości w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-371">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <altmember cref="P:System.Collections.SortedList.Values" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c98b6-372">Klucz do zlokalizowania w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-372">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="c98b6-373">Zwraca liczony od zera indeks z określonym kluczem w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-373">Returns the zero-based index of the specified key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-374">Liczony od zera indeks <paramref name="key" /> parametru, jeśli <paramref name="key" /> znajduje się w <see cref="T:System.Collections.SortedList" /> obiektu; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="c98b6-374">The zero-based index of the <paramref name="key" /> parameter, if <paramref name="key" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-375">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy albo zgodnie z określonym <xref:System.Collections.IComparer> implementacji określić, kiedy <xref:System.Collections.SortedList> został utworzony lub zgodnie z do <xref:System.IComparable> implementacji pochodzącymi z samych kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-375">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created, or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="c98b6-376">Sekwencja indeks jest oparty na kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-376">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="c98b6-377">Po dodaniu elementu wstawieniu do <xref:System.Collections.SortedList> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-377">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="c98b6-378">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-378">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="c98b6-379">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-379">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-380">Ta metoda używa algorytmu wyszukiwania binarne; w związku z tym ta metoda jest O (dziennika `n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-380">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-381">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` ustalenie, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="c98b6-381">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="c98b6-382">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametrów dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-382">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-383">W poniższym przykładzie pokazano, jak można określić indeksu klucz lub wartość w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-383">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-384"><paramref name="key" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-384"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c98b6-385">Moduł porównujący zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c98b6-385">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public virtual int IndexOfValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfValue (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c98b6-386">Wartość do zlokalizowania w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-386">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="c98b6-387">Wartość może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-387">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c98b6-388">Zwraca liczony od zera indeks pierwszego wystąpienia określoną wartość <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-388">Returns the zero-based index of the first occurrence of the specified value in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-389">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> parametru, jeśli <paramref name="value" /> znajduje się w <see cref="T:System.Collections.SortedList" /> obiektu; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="c98b6-389">The zero-based index of the first occurrence of the <paramref name="value" /> parameter, if <paramref name="value" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-390">Sekwencja indeks jest oparty na kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-390">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="c98b6-391">Po dodaniu elementu wstawieniu do <xref:System.Collections.SortedList> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-391">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="c98b6-392">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-392">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="c98b6-393">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-393">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-394">Wartości elementów <xref:System.Collections.SortedList> są porównywane przy użyciu określonej wartości <xref:System.Object.Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c98b6-394">The values of the elements of the <xref:System.Collections.SortedList> are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="c98b6-395">Ta metoda używa wyszukiwanie liniowe; w związku z tym ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-395">This method uses a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-396">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` ustalenie, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="c98b6-396">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="c98b6-397">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `item` parametrów dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-397">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-398">W poniższym przykładzie pokazano, jak można określić indeksu klucz lub wartość w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-398">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98b6-399">Pobiera wartość wskazującą czy <see cref="T:System.Collections.SortedList" /> obiekt ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="c98b6-399">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="c98b6-400"><see langword="true" /> Jeśli <see cref="T:System.Collections.SortedList" /> obiekt ma ustalony rozmiar; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-400"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c98b6-401">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-401">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-402">Kolekcja o stałym rozmiarze nie zezwala dodawania lub usuwania elementów po kolekcji zostało utworzone, ale zezwalaj na modyfikowanie istniejących elementów.</span><span class="sxs-lookup"><span data-stu-id="c98b6-402">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="c98b6-403">Kolekcja o stałym rozmiarze jest po prostu kolekcji z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym zmian w źródłowej kolekcji, włączając Dodawanie lub usuwanie elementów z kolekcji o stałym rozmiarze odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="c98b6-403">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="c98b6-404">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-404">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98b6-405">Pobiera wartość wskazującą czy <see cref="T:System.Collections.SortedList" /> obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-405">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="c98b6-406"><see langword="true" /> Jeśli <see cref="T:System.Collections.SortedList" /> obiekt jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-406"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c98b6-407">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-407">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-408">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="c98b6-408">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="c98b6-409">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="c98b6-409">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="c98b6-410">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-410">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98b6-411">Pobiera wartość wskazującą czy uzyskują dostęp do <see cref="T:System.Collections.SortedList" /> jest synchronizowany obiekt (wielowątkowość).</span><span class="sxs-lookup"><span data-stu-id="c98b6-411">Gets a value indicating whether access to a <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="c98b6-412"><see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.SortedList" /> jest synchronizowany obiekt (wielowątkowość); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-412"><see langword="true" /> if access to the <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c98b6-413">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-413">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-414">W celu zagwarantowania bezpieczeństwa wątków <xref:System.Collections.SortedList> obiektów, wszystkie operacje muszą być wykonywane przez otoki zwrócony przez <xref:System.Collections.SortedList.Synchronized%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c98b6-414">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through the wrapper returned by the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="c98b6-415">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c98b6-415">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c98b6-416">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="c98b6-416">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c98b6-417">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="c98b6-417">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-418">Poniższy przykład kodu pokazuje, jak można zablokować za pomocą kolekcji <xref:System.Collections.SortedList.SyncRoot%2A> właściwości podczas całej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c98b6-418">The following code example shows how to lock a collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="c98b6-419">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-419">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="c98b6-420">Poniższy przykład kodu pokazuje sposób synchronizacji <xref:System.Collections.SortedList> obiekt Sprawdź, czy <xref:System.Collections.SortedList> jest synchronizowane i użyj zsynchronizowany <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-420">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c98b6-421">Klucz skojarzony z wartości do pobrania lub ustawienia.</span><span class="sxs-lookup"><span data-stu-id="c98b6-421">The key associated with the value to get or set.</span></span></param>
        <summary><span data-ttu-id="c98b6-422">Pobiera i ustawia wartość skojarzoną z określonym kluczem w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-422">Gets and sets the value associated with a specific key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="c98b6-423">Wartość skojarzoną z <paramref name="key" /> parametru w <see cref="T:System.Collections.SortedList" /> obiektu, jeśli <paramref name="key" /> zostanie odnaleziony; w przeciwnym razie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-423">The value associated with the <paramref name="key" /> parameter in the <see cref="T:System.Collections.SortedList" /> object, if <paramref name="key" /> is found; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-424">Można użyć <xref:System.Collections.SortedList.Item%2A> właściwość, aby można było uzyskać dostępu do określonego elementu w kolekcji, określając następującej składni: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-424">You can use the <xref:System.Collections.SortedList.Item%2A> property to access a specific element in a collection by specifying the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="c98b6-425">Umożliwia także tej właściwości można dodawać nowe elementy za pomocą ustawienia wartości klucza, który nie istnieje w <xref:System.Collections.SortedList> obiektu (na przykład `myCollection["myNonexistentKey"] = myValue)`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-425">You can also use this property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue)`.</span></span> <span data-ttu-id="c98b6-426">Jednak jeśli określony klucz już istnieje w <xref:System.Collections.SortedList>, ustawienie <xref:System.Collections.SortedList.Item%2A> stara wartość jest zastąpienie właściwości.</span><span class="sxs-lookup"><span data-stu-id="c98b6-426">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="c98b6-427">Z kolei <xref:System.Collections.SortedList.Add%2A> — metoda nie modyfikuje istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-427">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="c98b6-428">Klucz nie może być `null`, ale może być wartością.</span><span class="sxs-lookup"><span data-stu-id="c98b6-428">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="c98b6-429">Aby odróżnić `null` który jest zwracany, ponieważ nie odnaleziono określonego klucza i `null` który jest zwracany, ponieważ wartość określony klucz jest `null`, użyj <xref:System.Collections.SortedList.Contains%2A> — metoda lub <xref:System.Collections.SortedList.ContainsKey%2A> metodę, aby określić, czy Ten klucz istnieje na liście.</span><span class="sxs-lookup"><span data-stu-id="c98b6-429">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.SortedList.Contains%2A> method or the <xref:System.Collections.SortedList.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="c98b6-430">Elementy <xref:System.Collections.SortedList> są sortowane według kluczy albo zgodnie z określonym <xref:System.Collections.IComparer> implementacji określić, kiedy <xref:System.Collections.SortedList> został utworzony lub zgodnie z do <xref:System.IComparable> implementacji pochodzącymi z samych kluczy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-430">The elements of a <xref:System.Collections.SortedList> are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="c98b6-431">Używa języka C# do definiowania indeksatory zamiast implementacja słowa kluczowego <xref:System.Collections.SortedList.Keys%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c98b6-431">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.SortedList.Keys%2A> property.</span></span> <span data-ttu-id="c98b6-432">Implementuje Visual Basic <xref:System.Collections.SortedList.Item%2A> jako domyślna właściwość, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-432">Visual Basic implements <xref:System.Collections.SortedList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="c98b6-433">Pobieranie wartości tej właściwości jest O (dziennika `n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-433">Retrieving the value of this property is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="c98b6-434">Ustawienie właściwości jest O (dziennika `n`) operacji, jeśli klucz jest już <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-434">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="c98b6-435">Jeśli klucz nie jest na liście, ustawienie właściwości jest O (`n`) operacji nieposortowane danych lub O (dziennika `n`) Jeśli nowy element zostanie dodany na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="c98b6-435">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="c98b6-436">Jeśli wstawiania powoduje, że zmiany rozmiaru, operacja jest O (`n`).</span><span class="sxs-lookup"><span data-stu-id="c98b6-436">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-437"><paramref name="key" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-437"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c98b6-438">Właściwość jest ustawiona i <see cref="T:System.Collections.SortedList" /> obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-438">The property is set and the <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
 <span data-ttu-id="c98b6-439">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-439">-or-</span></span>  
  
 <span data-ttu-id="c98b6-440">Ta właściwość jest ustawiona, <paramref name="key" /> nie istnieje w kolekcji i <see cref="T:System.Collections.SortedList" /> ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="c98b6-440">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="c98b6-441">Nie ma dostatecznej ilości dostępnej pamięci, aby dodać element do <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-441">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c98b6-442">Moduł porównujący zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c98b6-442">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98b6-443">Pobiera klucze w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-443">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="c98b6-444"><see cref="T:System.Collections.ICollection" /> Obiekt zawierający klucze z <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-444">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-445"><xref:System.Collections.ICollection> Obiekt jest tylko do odczytu widoku kluczy <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-445">The <xref:System.Collections.ICollection> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="c98b6-446">Modyfikacje podstawowych <xref:System.Collections.SortedList> zostaną natychmiast odzwierciedlone w <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-446">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="c98b6-447">Elementy <xref:System.Collections.ICollection> są sortowane w takiej samej kolejności jak klucze <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-447">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-448">Ta właściwość jest podobny do <xref:System.Collections.SortedList.GetKeyList%2A> metody, ale zwraca <xref:System.Collections.ICollection> obiekt zamiast <xref:System.Collections.IList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-448">This property is similar to the <xref:System.Collections.SortedList.GetKeyList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="c98b6-449">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-449">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Values" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c98b6-450">Klucz elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="c98b6-450">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="c98b6-451">Usuwa element z określonym kluczem z <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-451">Removes the element with the specified key from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-452">Jeśli <xref:System.Collections.SortedList> obiekt nie zawiera element z określonym kluczem <xref:System.Collections.SortedList> pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="c98b6-452">If the <xref:System.Collections.SortedList> object does not contain an element with the specified key, the <xref:System.Collections.SortedList> remains unchanged.</span></span> <span data-ttu-id="c98b6-453">Nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c98b6-453">No exception is thrown.</span></span>  
  
 <span data-ttu-id="c98b6-454">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="c98b6-454">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c98b6-455">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="c98b6-455">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c98b6-456">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="c98b6-456">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="c98b6-457">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-457">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-458">Poniższy przykład kodu pokazuje sposób usuwania elementów z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-458">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-459"><paramref name="key" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-459"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c98b6-460"><see cref="T:System.Collections.SortedList" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-460">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
 <span data-ttu-id="c98b6-461">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-461">-or-</span></span>  
  
 <span data-ttu-id="c98b6-462"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="c98b6-462">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c98b6-463">Liczony od zera indeks elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="c98b6-463">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="c98b6-464">Usuwa element o określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-464">Removes the element at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-465">Sekwencja indeks jest oparty na kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-465">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="c98b6-466">Po dodaniu elementu wstawieniu do <xref:System.Collections.SortedList> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-466">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="c98b6-467">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-467">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="c98b6-468">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-468">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-469">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="c98b6-469">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c98b6-470">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="c98b6-470">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c98b6-471">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="c98b6-471">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="c98b6-472">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-472">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-473">Poniższy przykład kodu pokazuje sposób usuwania elementów z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-473">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c98b6-474"><paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-474"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c98b6-475"><see cref="T:System.Collections.SortedList" /> Jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-475">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
 <span data-ttu-id="c98b6-476">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-476">-or-</span></span>  
  
 <span data-ttu-id="c98b6-477"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="c98b6-477">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetByIndex">
      <MemberSignature Language="C#" Value="public virtual void SetByIndex (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByIndex(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetByIndex (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetByIndex(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c98b6-478">Liczony od zera indeks, w którym chcesz zapisać <c>wartość</c>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-478">The zero-based index at which to save <c>value</c>.</span></span></param>
        <param name="value"><span data-ttu-id="c98b6-479"><see cref="T:System.Object" /> Można zapisać do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-479">The <see cref="T:System.Object" /> to save into the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="c98b6-480">Wartość może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-480">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c98b6-481">Zamienia wartości w określonym indeksie w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-481">Replaces the value at a specific index in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-482">Sekwencja indeks jest oparty na kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="c98b6-482">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="c98b6-483">Po dodaniu elementu wstawieniu do <xref:System.Collections.SortedList> poprawne sortowania kolejności i indeksowanie dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-483">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="c98b6-484">Po usunięciu elementu indeksowanie również dostosowuje odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c98b6-484">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="c98b6-485">W związku z tym indeks parę klucza i wartości określonych może ulec zmianie, elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-485">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-486">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-486">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-487">W poniższym przykładzie pokazano, jak zastąpić wartość istniejącego elementu w <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-487">The following code example shows how to replace the value of an existing element in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.SetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c98b6-488"><paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-488"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList Synchronized (System.Collections.SortedList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList Synchronized(class System.Collections.SortedList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As SortedList) As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ Synchronized(System::Collections::SortedList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.SortedList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="c98b6-489"><see cref="T:System.Collections.SortedList" /> Obiektu do synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-489">The <see cref="T:System.Collections.SortedList" /> object to synchronize.</span></span></param>
        <summary><span data-ttu-id="c98b6-490">Zwraca zsynchronizowane otoki (wątkowo) dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-490">Returns a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="c98b6-491">A zsynchronizowane (wątkowo) otoki dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-491">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-492">W celu zagwarantowania bezpieczeństwa wątków <xref:System.Collections.SortedList> obiektów, wszystkie operacje musi odbywać się za pomocą tylko tej otoki.</span><span class="sxs-lookup"><span data-stu-id="c98b6-492">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="c98b6-493">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c98b6-493">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c98b6-494">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="c98b6-494">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c98b6-495">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="c98b6-495">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-496">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.SortedList.SyncRoot%2A> właściwości podczas całej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c98b6-496">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="c98b6-497">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-497">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="c98b6-498">Poniższy przykład kodu pokazuje sposób synchronizacji <xref:System.Collections.SortedList> obiekt Sprawdź, czy <xref:System.Collections.SortedList> jest synchronizowane i użyj zsynchronizowany <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-498">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c98b6-499"><paramref name="list" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-499"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98b6-500">Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-500">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="c98b6-501">Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-501">An object that can be used to synchronize access to the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-502">Aby utworzyć zsynchronizowaną wersję <xref:System.Collections.SortedList> obiektów, użyj <xref:System.Collections.SortedList.Synchronized%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c98b6-502">To create a synchronized version of the <xref:System.Collections.SortedList> object, use the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span> <span data-ttu-id="c98b6-503">Jednak klasy pochodne zapewniają własne zsynchronizowanej wersji <xref:System.Collections.SortedList> przy użyciu <xref:System.Collections.SortedList.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c98b6-503">However, derived classes can provide their own synchronized version of the <xref:System.Collections.SortedList> using the <xref:System.Collections.SortedList.SyncRoot%2A> property.</span></span> <span data-ttu-id="c98b6-504">Synchronizowanie kodu musi wykonywać operacje <xref:System.Collections.SortedList.SyncRoot%2A> z <xref:System.Collections.SortedList>, nie są bezpośrednio w <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-504">The synchronizing code must perform operations on the <xref:System.Collections.SortedList.SyncRoot%2A> of the <xref:System.Collections.SortedList>, not directly on the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="c98b6-505">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="c98b6-505">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="c98b6-506">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-506">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="c98b6-507">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c98b6-507">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c98b6-508">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="c98b6-508">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c98b6-509">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="c98b6-509">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-510">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.SortedList.SyncRoot%2A> właściwości podczas całej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c98b6-510">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="c98b6-511">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-511">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98b6-512">Zwraca <see cref="T:System.Collections.IEnumerator" /> który iteruje <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-512">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.SortedList" />.</span></span></summary>
        <returns><span data-ttu-id="c98b6-513"><see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="c98b6-513">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.SortedList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-514">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="c98b6-514">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="c98b6-515">`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c98b6-515">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="c98b6-516">W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="c98b6-516">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c98b6-517">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-517">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c98b6-518">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-518">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c98b6-519"><xref:System.Collections.IEnumerator.Reset%2A> również wprowadzono moduł wyliczający wróć do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-519"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="c98b6-520">At to pozycja, wywoływania <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c98b6-520">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="c98b6-521">W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-521">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-522"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c98b6-522"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c98b6-523"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-523"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c98b6-524">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-524">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c98b6-525">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="c98b6-525">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c98b6-526">Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, wywoływania <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c98b6-526">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="c98b6-527">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> aby pierwszym elementem kolekcji ponownie, należy wywołać <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-527">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c98b6-528">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="c98b6-528">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c98b6-529">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-529">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="c98b6-530">Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</span><span class="sxs-lookup"><span data-stu-id="c98b6-530">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="c98b6-531">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="c98b6-531">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c98b6-532">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="c98b6-532">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c98b6-533">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="c98b6-533">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="c98b6-534">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-534">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c98b6-535">Ustawia pojemność na rzeczywistą liczbę elementów w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-535">Sets the capacity to the actual number of elements in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-536">Ta metoda może służyć do narzut zminimalizować pamięci kolekcji, jeśli żadne nowe elementy, które zostaną dodane do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c98b6-536">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="c98b6-537">Aby zresetować <xref:System.Collections.SortedList> obiektu do stanu początkowego wywołania <xref:System.Collections.SortedList.Clear%2A> metoda przed wywołaniem <xref:System.Collections.SortedList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-537">To reset a <xref:System.Collections.SortedList> object to its initial state, call the <xref:System.Collections.SortedList.Clear%2A> method before calling <xref:System.Collections.SortedList.TrimToSize%2A>.</span></span> <span data-ttu-id="c98b6-538">Przycinanie pustą <xref:System.Collections.SortedList> ustawia pojemność <xref:System.Collections.SortedList> do wydajności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="c98b6-538">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="c98b6-539">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-539">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c98b6-540">Poniższy przykładowy kod przedstawia sposób przycięcia nieużywane części <xref:System.Collections.SortedList> obiekt i czyszczenie jego wartości.</span><span class="sxs-lookup"><span data-stu-id="c98b6-540">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear its values.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c98b6-541"><see cref="T:System.Collections.SortedList" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-541">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
 <span data-ttu-id="c98b6-542">—lub—</span><span class="sxs-lookup"><span data-stu-id="c98b6-542">-or-</span></span>  
  
 <span data-ttu-id="c98b6-543"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="c98b6-543">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Clear" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c98b6-544">Pobiera wartości <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-544">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="c98b6-545"><see cref="T:System.Collections.ICollection" /> Obiekt zawierający wartości w <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-545">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c98b6-546"><xref:System.Collections.ICollection> Obiekt jest tylko do odczytu widoku wartości <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-546">The <xref:System.Collections.ICollection> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="c98b6-547">Modyfikacje podstawowych <xref:System.Collections.SortedList> zostaną natychmiast odzwierciedlone w <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-547">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="c98b6-548">Elementy <xref:System.Collections.ICollection> są sortowane w takiej samej kolejności jak wartości <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="c98b6-548">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="c98b6-549">Ta właściwość jest podobny do <xref:System.Collections.SortedList.GetValueList%2A> metody, ale zwraca <xref:System.Collections.ICollection> obiekt zamiast <xref:System.Collections.IList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c98b6-549">This property is similar to the <xref:System.Collections.SortedList.GetValueList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="c98b6-550">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="c98b6-550">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
      </Docs>
    </Member>
  </Members>
</Type>